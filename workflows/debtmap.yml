# Sequential debt elimination workflow
# For parallel processing, use debtmap-mapreduce.yml instead

name: debtmap-sequential
mode: sequential  # Process items one at a time

# Generate coverage report
- shell: "cargo tarpaulin --config .tarpaulin.toml --out Lcov --output-dir target/coverage --timeout 120"

# Analyze and fix technical debt
- claude: "/debtmap"
  commit_required: true

# Run tests after debt fixes
- shell: "just test"
  on_failure:
    claude: "/mmm-debug-test-failure --output ${shell.output}"
    max_attempts: 3
    fail_workflow: false  # Continue workflow even if tests can't be fixed

# Run linting and formatting after implementation
- shell: "just fmt-check && just lint"
  on_failure:
    claude: "/mmm-lint ${shell.output}"
    max_attempts: 3
    fail_workflow: false

# Note: This workflow processes debt items sequentially.
# For parallel processing of multiple debt items, use:
#   mmm cook workflows/debtmap-mapreduce.yml --worktree
# This will process debt items in parallel using MapReduce mode.