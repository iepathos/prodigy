# Test coverage improvement workflow with automatic test debugging
# Identifies coverage gaps, implements tests, and automatically fixes failing tests
- claude: "/prodigy-coverage"
  id: coverage
  outputs:
    spec:
      file_pattern: "*-coverage-improvements.md"
  analysis:
    max_cache_age: 300

- claude: "/prodigy-implement-spec ${coverage.spec}"

- shell: "cargo test"
  on_failure:
    claude: "/prodigy-debug-test-failure --spec ${coverage.spec} --output ${shell.output}"
    max_attempts: 3
    fail_workflow: false  # Continue workflow even if tests can't be fixed

- shell: "cargo test --doc"
  on_failure:
    claude: "/prodigy-fix-doc-tests --output ${shell.output}"
    max_attempts: 2
    fail_workflow: false  # Doc test failures shouldn't stop the workflow

- claude: "/prodigy-lint"
  commit_required: false  # OK if no linting issues found