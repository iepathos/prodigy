# Product Enhancement Workflow
# Target user value and feature improvements rather than code quality

# This workflow uses the new prodigy-product-enhance command
# to identify and implement product improvements

# Step 1: Analyze from product management perspective
- claude: "/prodigy-product-enhance --area cli-ux --max-enhancements 8"
  options:
    area: "cli-ux"  # Optional: target specific area
    max-enhancements: 8
    
# Step 2: Implement the enhancements
- claude: "/prodigy-implement-spec $SPEC_ID"
  args: ["$SPEC_ID"]  # Auto-extracted from previous command
    
# Step 3: Clean up and ensure quality
- claude: "/prodigy-lint --fix"
  options:
    fix: true
  metadata:
    continue_on_error: true

# Example usage:
# prodigy improve --config examples/product-enhancement-workflow.yml

# Target areas for prodigy-product-enhance:
# - "onboarding": First-run experience, tutorials
# - "api": Developer experience, API design
# - "cli-ux": Command ergonomics, help text
# - "documentation": User guides, examples
# - "features": Missing functionality
