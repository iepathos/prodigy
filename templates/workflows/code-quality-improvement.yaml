name: code-quality-improvement
description: Iterative code quality improvement workflow
version: "1.0"

triggers:
  - type: manual

parameters:
  target_score:
    type: float
    default: 8.5
    description: Target quality score to achieve
  max_iterations:
    type: integer  
    default: 3
    description: Maximum number of improvement iterations
  scope:
    type: string
    default: "src/"
    description: Code scope to analyze and improve
  severity_filter:
    type: string
    default: "critical,high"
    description: Comma-separated severity levels to address

stages:
  - name: initialization
    steps:
      - name: setup-session
        type: command
        command: loop-session-init
        outputs: [session_id, baseline_metrics]
        
      - name: create-git-stash
        type: command
        command: git-safety-stash
        condition: "git_has_changes()"
        outputs: [stash_id]

  - name: iteration-loop
    condition: "!termination_conditions_met()"
    for_each: "range(1, {{ max_iterations + 1 }})"
    steps:
      - name: review-phase
        type: command
        command: claude-review
        message: "Running code review (iteration {{ iteration }})"
        outputs: [review_results, quality_score, actionable_items]
        timeout: "10m"
        
      - name: evaluate-termination
        type: command
        command: check-termination-conditions
        outputs: [should_terminate, termination_reason]
        
      - name: improvement-phase
        type: command
        command: claude-improve
        condition: "!should_terminate"
        message: "Applying automated improvements (iteration {{ iteration }})"
        outputs: [improvement_results, changes_applied]
        timeout: "15m"
        
      - name: validation-phase
        type: command
        command: validate-changes
        condition: "changes_applied > 0"
        message: "Validating improvements"
        outputs: [validation_results, tests_passed]
        
      - name: iteration-checkpoint
        type: checkpoint
        condition: "validation_results.has_issues"
        message: "Iteration {{ iteration }} completed with issues. Continue?"
        options: [continue, stop, rollback]
        timeout: "30m"
        
      - name: update-metrics
        type: command
        command: update-iteration-metrics
        outputs: [iteration_metrics]

  - name: finalization
    steps:
      - name: generate-report
        type: command
        command: generate-improvement-report
        outputs: [final_report, summary_metrics]
        
      - name: create-commit
        type: command
        command: git-commit-improvements
        condition: "summary_metrics.total_improvements > 0"
        outputs: [commit_hash]
        
      - name: cleanup-session
        type: command
        command: loop-session-cleanup

on_success:
  - type: notification
    message: "Iterative improvement completed successfully. Final score: {{ final_score }}"
    
on_failure:
  - type: notification
    message: "Iterative improvement failed: {{ error_message }}"
  - type: custom
    command: rollback-changes
    condition: "safety_settings.rollback_on_failure"