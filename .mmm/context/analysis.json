{
  "dependency_graph": {
    "nodes": {
      "src/worktree/manager.rs": {
        "path": "src/worktree/manager.rs",
        "module_type": "Library",
        "imports": [
          "crate::subprocess::{ProcessCommandBuilder, SubprocessManager}",
          "anyhow::{anyhow, Context, Result}",
          "chrono::Utc",
          "std::fs",
          "std::path::PathBuf",
          "uuid::Uuid",
          "super::{IterationInfo, WorktreeSession, WorktreeState, WorktreeStats, WorktreeStatus}",
          "mod::tests {",
          "super::*",
          "tempfile::TempDir"
        ],
        "exports": [
          "WorktreeManager",
          "new",
          "update_session_state",
          "get_session_state",
          "create_checkpoint",
          "update_checkpoint",
          "load_session_state",
          "restore_session",
          "list_interrupted_sessions",
          "mark_session_abandoned",
          "get_last_successful_command"
        ],
        "external_deps": []
      },
      "src/simple_state/mod.rs": {
        "path": "src/simple_state/mod.rs",
        "module_type": "Library",
        "imports": [
          "mod::tests",
          "anyhow::Result",
          "std::path::PathBuf"
        ],
        "exports": [
          "init",
          "CacheManager",
          "StateManager",
          "*"
        ],
        "external_deps": []
      },
      "src/cook/execution/claude.rs": {
        "path": "src/cook/execution/claude.rs",
        "module_type": "Library",
        "imports": [
          "super::{CommandExecutor, CommandRunner, ExecutionContext, ExecutionResult}",
          "anyhow::Result",
          "async_trait::async_trait",
          "std::collections::HashMap",
          "std::path::Path",
          "mod::tests {",
          "super::*",
          "crate::cook::execution::runner::tests::MockCommandRunner"
        ],
        "exports": [
          "ClaudeExecutor",
          "ClaudeExecutorImpl",
          "new"
        ],
        "external_deps": []
      },
      "src/metrics/storage.rs": {
        "path": "src/metrics/storage.rs",
        "module_type": "Library",
        "imports": [
          "super::{ImprovementMetrics, MetricsHistory}",
          "anyhow::{Context, Result}",
          "std::path::{Path, PathBuf}",
          "tracing::debug",
          "mod::tests {",
          "super::*",
          "std::time::Duration",
          "tempfile::TempDir"
        ],
        "exports": [
          "MetricsStorage",
          "new",
          "ensure_directory",
          "save_current",
          "load_current",
          "save_history",
          "load_history",
          "generate_report",
          "save_report"
        ],
        "external_deps": []
      },
      "src/metrics/backends.rs": {
        "path": "src/metrics/backends.rs",
        "module_type": "Library",
        "imports": [
          "super::events::{",
          "anyhow::{Context, Result}",
          "async_trait::async_trait",
          "chrono::Utc",
          "serde::{Deserialize, Serialize}",
          "std::path::PathBuf",
          "std::sync::Arc",
          "std::time::Duration",
          "tokio::fs",
          "tokio::io::AsyncWriteExt",
          "tokio::sync::{Mutex, RwLock}",
          "mod::tests {",
          "super::*",
          "crate::metrics::Tags",
          "tempfile::TempDir"
        ],
        "exports": [
          "CollectorConfig",
          "FileMetricsCollector",
          "new",
          "with_config",
          "MemoryMetricsCollector",
          "new",
          "with_config",
          "CompositeMetricsCollector",
          "new"
        ],
        "external_deps": []
      },
      "src/init/mod.rs": {
        "path": "src/init/mod.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::{Context, Result}",
          "std::fs",
          "std::path::{Path, PathBuf}",
          "crate::init::command::InitCommand",
          "crate::subprocess::SubprocessManager",
          "crate::subprocess::ProcessCommandBuilder",
          "std::io::{self, Write}",
          "mod::tests {",
          "super::*",
          "crate::init::command::InitCommand",
          "tempfile::TempDir",
          "crate::subprocess::ProcessCommandBuilder",
          "crate::subprocess::ProcessCommandBuilder",
          "crate::subprocess::ProcessCommandBuilder",
          "crate::subprocess::ProcessCommandBuilder",
          "crate::subprocess::ProcessCommandBuilder",
          "crate::subprocess::ProcessCommandBuilder"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/lib.rs": {
        "path": "src/lib.rs",
        "module_type": "Library",
        "imports": [],
        "exports": [],
        "external_deps": []
      },
      "src/cook/execution/runner.rs": {
        "path": "src/cook/execution/runner.rs",
        "module_type": "Library",
        "imports": [
          "super::{CommandExecutor, ExecutionContext, ExecutionResult}",
          "crate::abstractions::exit_status::ExitStatusExt",
          "crate::subprocess::{ProcessCommandBuilder, SubprocessManager}",
          "anyhow::{Context, Result}",
          "async_trait::async_trait",
          "super::*"
        ],
        "exports": [
          "CommandRunner",
          "RealCommandRunner",
          "new",
          "with_subprocess",
          "MockCommandRunner",
          "new",
          "add_response"
        ],
        "external_deps": []
      },
      "src/git/types.rs": {
        "path": "src/git/types.rs",
        "module_type": "Library",
        "imports": [
          "std::path::PathBuf"
        ],
        "exports": [
          "GitStatus",
          "new",
          "is_clean",
          "has_staged_changes",
          "has_unstaged_changes",
          "has_conflicts",
          "all_changed_files",
          "GitDiff",
          "new",
          "files_count",
          "is_empty",
          "FileDiff",
          "FileChangeType",
          "WorktreeInfo",
          "CommitId",
          "new",
          "hash",
          "short_hash",
          "is_valid",
          "GitRepoState"
        ],
        "external_deps": []
      },
      "src/subprocess/builder.rs": {
        "path": "src/subprocess/builder.rs",
        "module_type": "Library",
        "imports": [
          "std::collections::HashMap",
          "std::path::Path",
          "std::time::Duration",
          "crate::subprocess::ProcessCommand"
        ],
        "exports": [
          "ProcessCommandBuilder",
          "new",
          "arg",
          "args",
          "env",
          "envs",
          "current_dir",
          "timeout",
          "stdin",
          "build"
        ],
        "external_deps": []
      },
      "src/config/workflow.rs": {
        "path": "src/config/workflow.rs",
        "module_type": "Library",
        "imports": [
          "super::command::WorkflowCommand",
          "serde::{Deserialize, Serialize}"
        ],
        "exports": [
          "WorkflowConfig"
        ],
        "external_deps": []
      },
      "src/context/summary.rs": {
        "path": "src/context/summary.rs",
        "module_type": "Library",
        "imports": [
          "super::{AnalysisMetadata, AnalysisResult}",
          "serde::{Deserialize, Serialize}",
          "std::collections::HashMap",
          "std::path::PathBuf"
        ],
        "exports": [
          "AnalysisSummary",
          "ComponentReferences",
          "AnalysisStatistics",
          "TestCoverageSummary",
          "FileCoverageSummary",
          "UntestedFunctionSummary",
          "FileUntestedSummary",
          "CriticalGap",
          "TechnicalDebtSummary",
          "DebtStatistics",
          "HotspotSummary",
          "DuplicationSummary",
          "DependencyGraphSummary",
          "NodeSummary",
          "CouplingAnalysis",
          "from_analysis",
          "from_coverage",
          "from_debt_map",
          "from_graph"
        ],
        "external_deps": []
      },
      "src/metrics/registry.rs": {
        "path": "src/metrics/registry.rs",
        "module_type": "Library",
        "imports": [
          "super::events::{",
          "anyhow::Result",
          "std::future::Future",
          "std::sync::Arc",
          "std::time::Duration",
          "tokio::sync::RwLock",
          "rand::Rng",
          "mod::tests {",
          "super::*",
          "crate::metrics::backends::MemoryMetricsCollector"
        ],
        "exports": [
          "MetricsConfig",
          "MetricsRegistry",
          "new",
          "config",
          "is_enabled"
        ],
        "external_deps": []
      },
      "src/subprocess/error.rs": {
        "path": "src/subprocess/error.rs",
        "module_type": "Library",
        "imports": [
          "std::time::Duration"
        ],
        "exports": [
          "ProcessError"
        ],
        "external_deps": []
      },
      "src/cook/analysis/runner.rs": {
        "path": "src/cook/analysis/runner.rs",
        "module_type": "Library",
        "imports": [
          "super::AnalysisCoordinator",
          "crate::context::{AnalysisMetadata, AnalysisResult}",
          "crate::context::{ContextAnalyzer, ProjectAnalyzer}",
          "crate::cook::execution::CommandRunner",
          "anyhow::{Context, Result}",
          "async_trait::async_trait",
          "chrono::Utc",
          "std::path::Path",
          "std::time::Instant",
          "mod::tests {",
          "super::*",
          "crate::cook::execution::runner::tests::MockCommandRunner",
          "crate::cook::execution::ExecutionResult",
          "tempfile::TempDir"
        ],
        "exports": [
          "AnalysisRunner",
          "AnalysisRunnerImpl",
          "new"
        ],
        "external_deps": []
      },
      "src/session/mod.rs": {
        "path": "src/session/mod.rs",
        "module_type": "Library",
        "imports": [
          "serde::{Deserialize, Serialize}",
          "std::fmt",
          "uuid::Uuid",
          "mod::tests"
        ],
        "exports": [
          "SessionId",
          "new",
          "from_string",
          "as_str",
          "SessionInfo",
          "IterationChanges",
          "CommitInfo",
          "ExecutedCommand",
          "ExecutionMode",
          "SessionConfig",
          "SessionOptions",
          "SessionEvent",
          "SessionObserver",
          "TimestampedEvent",
          "InMemorySessionManager",
          "SessionManager",
          "PersistedSession",
          "SessionCheckpoint",
          "StateSnapshot",
          "SessionProgress",
          "SessionState",
          "SessionSummary",
          "FileSessionStorage",
          "SessionStorage"
        ],
        "external_deps": []
      },
      "src/testing/mod.rs": {
        "path": "src/testing/mod.rs",
        "module_type": "Library",
        "imports": [
          "crate::abstractions::{ClaudeClient, GitOperations, MockClaudeClient, MockGitOperations}",
          "anyhow::Result",
          "std::path::PathBuf",
          "tempfile::TempDir",
          "std::fs",
          "super::*",
          "std::fs",
          "std::path::Path",
          "mod::tests {",
          "super::*"
        ],
        "exports": [
          "TestContext",
          "new",
          "with_mocks",
          "temp_path",
          "create_test_file",
          "MockGitBuilder",
          "new",
          "is_repo",
          "build",
          "MockClaudeBuilder",
          "new",
          "is_available",
          "build",
          "TestFixtures",
          "unavailable_claude",
          "setup_test_project",
          "create_test_file",
          "create_test_files",
          "TempDir"
        ],
        "external_deps": []
      },
      "src/cook/analysis/mod.rs": {
        "path": "src/cook/analysis/mod.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "async_trait::async_trait",
          "std::path::Path"
        ],
        "exports": [
          "AnalysisCoordinator",
          "AnalysisCache",
          "AnalysisCacheImpl",
          "AnalysisRunner",
          "AnalysisRunnerImpl",
          "AnalysisMetadata",
          "AnalysisResult"
        ],
        "external_deps": []
      },
      "src/simple_state/cache.rs": {
        "path": "src/simple_state/cache.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::{Context, Result}",
          "serde::{de::DeserializeOwned, Serialize}",
          "std::fs",
          "std::path::PathBuf",
          "std::time::{Duration, SystemTime}"
        ],
        "exports": [
          "CacheManager",
          "new",
          "with_config",
          "get",
          "set",
          "remove",
          "clear",
          "cleanup",
          "exists"
        ],
        "external_deps": []
      },
      "src/subprocess/mock.rs": {
        "path": "src/subprocess/mock.rs",
        "module_type": "Library",
        "imports": [
          "async_trait::async_trait",
          "std::sync::{Arc, Mutex}",
          "std::time::Duration",
          "super::error::ProcessError",
          "super::runner::{ExitStatus, ProcessCommand, ProcessOutput, ProcessRunner, ProcessStream}"
        ],
        "exports": [
          "MockProcessRunner",
          "MockCommandConfig",
          "new",
          "expect_command",
          "verify_called",
          "get_call_history",
          "reset",
          "with_args",
          "returns_stdout",
          "returns_stderr",
          "returns_exit_code",
          "returns_success",
          "times",
          "finish"
        ],
        "external_deps": []
      },
      "src/config/command.rs": {
        "path": "src/config/command.rs",
        "module_type": "Library",
        "imports": [
          "serde::{Deserialize, Serialize}",
          "std::collections::HashMap",
          "mod::tests {",
          "super::*"
        ],
        "exports": [
          "CommandArg",
          "is_variable",
          "resolve",
          "parse",
          "Command",
          "CommandMetadata",
          "OutputDeclaration",
          "InputReference",
          "InputMethod",
          "WorkflowCommand",
          "SimpleCommand",
          "to_command",
          "new",
          "from_string",
          "with_arg",
          "with_option",
          "with_retries",
          "with_timeout",
          "with_continue_on_error",
          "with_env"
        ],
        "external_deps": []
      },
      "src/cook/session/adapter.rs": {
        "path": "src/cook/session/adapter.rs",
        "module_type": "Library",
        "imports": [
          "crate::session::{",
          "anyhow::Result",
          "async_trait::async_trait",
          "std::path::Path",
          "std::sync::Arc",
          "tokio::sync::Mutex",
          "super::{"
        ],
        "exports": [
          "SessionManagerAdapter",
          "new",
          "inner"
        ],
        "external_deps": []
      },
      "src/abstractions/mod.rs": {
        "path": "src/abstractions/mod.rs",
        "module_type": "Library",
        "imports": [],
        "exports": [
          "ClaudeClient",
          "MockClaudeClient",
          "RealClaudeClient",
          "ExitStatusExt",
          "GitOperations",
          "MockGitOperations",
          "RealGitOperations"
        ],
        "external_deps": []
      },
      "src/cook/metrics/collector.rs": {
        "path": "src/cook/metrics/collector.rs",
        "module_type": "Library",
        "imports": [
          "super::{MetricsCoordinator, ProjectMetrics}",
          "crate::cook::execution::CommandRunner",
          "crate::cook::metrics::reporter::MetricsReporter",
          "crate::metrics::MetricsCollector",
          "anyhow::Result",
          "async_trait::async_trait",
          "std::path::Path",
          "mod::tests {",
          "super::*",
          "crate::cook::execution::runner::tests::MockCommandRunner",
          "tempfile::TempDir"
        ],
        "exports": [
          "MetricsCollectorTrait",
          "MetricsCollectorImpl",
          "new"
        ],
        "external_deps": []
      },
      "src/cook/interaction/display.rs": {
        "path": "src/cook/interaction/display.rs",
        "module_type": "Library",
        "imports": [
          "super::SpinnerHandle",
          "std::sync::{Arc, Mutex}",
          "mod::tests {",
          "super::*"
        ],
        "exports": [
          "ProgressDisplay",
          "ProgressDisplayImpl",
          "new",
          "MockProgressDisplay",
          "new",
          "get_messages"
        ],
        "external_deps": []
      },
      "src/abstractions/exit_status.rs": {
        "path": "src/abstractions/exit_status.rs",
        "module_type": "Library",
        "imports": [],
        "exports": [
          "ExitStatusExt",
          "ExitStatusExt"
        ],
        "external_deps": []
      },
      "src/subprocess/claude.rs": {
        "path": "src/subprocess/claude.rs",
        "module_type": "Library",
        "imports": [
          "async_trait::async_trait",
          "std::collections::HashMap",
          "std::sync::Arc",
          "super::builder::ProcessCommandBuilder",
          "super::error::ProcessError",
          "super::runner::ProcessRunner"
        ],
        "exports": [
          "ClaudeRunner",
          "ClaudeRunnerImpl",
          "new"
        ],
        "external_deps": []
      },
      "src/cook/tests.rs": {
        "path": "src/cook/tests.rs",
        "module_type": "Library",
        "imports": [
          "mod::cook_tests {",
          "crate::abstractions::{ClaudeClient, GitOperations, MockClaudeClient, MockGitOperations}",
          "crate::cook::command::CookCommand",
          "crate::testing::{TestContext, TestFixtures}",
          "std::path::PathBuf",
          "mod::workflow_parsing_tests {",
          "crate::config::command::{InputMethod, WorkflowCommand}",
          "crate::config::workflow::WorkflowConfig",
          "mod::retry_tests {",
          "crate::cook::retry::{format_subprocess_error, is_transient_error}",
          "mod::git_ops_tests {",
          "crate::abstractions::{GitOperations, MockGitOperations}"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/config/command_validator.rs": {
        "path": "src/config/command_validator.rs",
        "module_type": "Library",
        "imports": [
          "super::command::{Command, CommandMetadata}",
          "anyhow::{anyhow, Result}",
          "once_cell::sync::Lazy",
          "std::collections::HashMap",
          "mod::tests {",
          "super::*"
        ],
        "exports": [
          "CommandDefinition",
          "ArgumentDef",
          "OptionDef",
          "ArgumentType",
          "CommandRegistry",
          "new",
          "register",
          "get",
          "validate_command",
          "apply_defaults",
          "list_commands",
          "COMMAND_REGISTRY",
          "validate_command",
          "apply_command_defaults"
        ],
        "external_deps": []
      },
      "src/context/conventions.rs": {
        "path": "src/context/conventions.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "serde::{Deserialize, Serialize}",
          "std::collections::HashMap",
          "std::path::{Path, PathBuf}",
          "walkdir::WalkDir",
          "mod::tests {",
          "super::*",
          "mod::tests {",
          "super::*",
          "std::fs",
          "tempfile::TempDir",
          "std::error::Error"
        ],
        "exports": [
          "ConventionDetector",
          "ProjectConventions",
          "NamingRules",
          "NamingStyle",
          "Pattern",
          "TestingConventions",
          "Idiom",
          "FileConventionInfo",
          "get_file_conventions",
          "get_naming_violations",
          "BasicConventionDetector",
          "new",
          "detect_naming_style",
          "detect_patterns",
          "extract_function_names",
          "extract_variable_names",
          "extract_type_names",
          "extract_constant_names",
          "or",
          "if",
          "detect_test_conventions",
          "get_user",
          "API_VERSION"
        ],
        "external_deps": []
      },
      "src/subprocess/mod.rs": {
        "path": "src/subprocess/mod.rs",
        "module_type": "Library",
        "imports": [
          "mod::tests",
          "std::sync::Arc"
        ],
        "exports": [
          "SubprocessManager",
          "new",
          "production",
          "mock",
          "runner",
          "git",
          "claude",
          "ProcessCommandBuilder",
          "ClaudeRunner",
          "ProcessError",
          "GitRunner",
          "MockCommandConfig",
          "MockProcessRunner",
          "ProcessCommand",
          "ExitStatusHelper",
          "ProcessOutput",
          "ProcessRunner",
          "ProcessStream"
        ],
        "external_deps": []
      },
      "src/cook/mod_old.rs": {
        "path": "src/cook/mod_old.rs",
        "module_type": "Library",
        "imports": [
          "mod::tests",
          "mod::mod_tests",
          "crate::config::{workflow::WorkflowConfig, Config, ConfigLoader}",
          "crate::context::{save_analysis, ContextAnalyzer, ProjectAnalyzer}",
          "crate::metrics::{MetricsCollector, MetricsHistory, MetricsStorage}",
          "crate::simple_state::StateManager",
          "crate::worktree::WorktreeManager",
          "anyhow::{anyhow, Context as _, Result}",
          "chrono::Utc",
          "git_ops::get_last_commit_message",
          "retry::check_claude_cli",
          "std::io::{self, Write}",
          "std::path::{Path, PathBuf}",
          "std::sync::Arc",
          "tokio::process::Command",
          "workflow::WorkflowExecutor",
          "glob::glob",
          "glob::glob",
          "std::collections::HashMap",
          "mod::cook_inline_tests {",
          "super::*",
          "std::path::PathBuf",
          "tempfile::TempDir"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/metrics/collector.rs": {
        "path": "src/metrics/collector.rs",
        "module_type": "Library",
        "imports": [
          "super::{ComplexityCalculator, ImprovementMetrics, PerformanceProfiler, QualityAnalyzer}",
          "crate::subprocess::SubprocessManager",
          "anyhow::Result",
          "std::path::Path",
          "tokio::task",
          "mod::tests {",
          "super::*",
          "std::fs",
          "tempfile::TempDir"
        ],
        "exports": [
          "MetricsCollector",
          "new"
        ],
        "external_deps": []
      },
      "src/init/command.rs": {
        "path": "src/init/command.rs",
        "module_type": "Library",
        "imports": [
          "clap::Parser",
          "std::path::PathBuf"
        ],
        "exports": [
          "InitCommand"
        ],
        "external_deps": []
      },
      "src/worktree/tests.rs": {
        "path": "src/worktree/tests.rs",
        "module_type": "Library",
        "imports": [
          "super::*",
          "crate::subprocess::SubprocessManager",
          "std::process::Command",
          "tempfile::TempDir"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/metrics/complexity.rs": {
        "path": "src/metrics/complexity.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::{Context, Result}",
          "serde::{Deserialize, Serialize}",
          "std::collections::HashMap",
          "std::path::Path",
          "syn::{visit::Visit, Block, Expr}",
          "tracing::debug"
        ],
        "exports": [
          "ComplexityMetrics",
          "ComplexityCalculator",
          "new",
          "calculate"
        ],
        "external_deps": []
      },
      "src/git/error.rs": {
        "path": "src/git/error.rs",
        "module_type": "Library",
        "imports": [
          "std::path::PathBuf",
          "thiserror::Error"
        ],
        "exports": [
          "GitError",
          "is_recoverable",
          "is_transient"
        ],
        "external_deps": []
      },
      "src/session/storage.rs": {
        "path": "src/session/storage.rs",
        "module_type": "Library",
        "imports": [
          "super::{PersistedSession, SessionId}",
          "anyhow::Result",
          "async_trait::async_trait",
          "std::path::PathBuf",
          "tokio::fs",
          "mod::tests {",
          "super::*",
          "tempfile::TempDir"
        ],
        "exports": [
          "SessionStorage",
          "FileSessionStorage",
          "new",
          "InMemoryStorage",
          "new"
        ],
        "external_deps": []
      },
      "src/cook/session/migration.rs": {
        "path": "src/cook/session/migration.rs",
        "module_type": "Library",
        "imports": [
          "crate::session::{",
          "std::path::PathBuf",
          "std::sync::Arc",
          "mod::tests {",
          "super::*",
          "tempfile::TempDir"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/metrics/events.rs": {
        "path": "src/metrics/events.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "async_trait::async_trait",
          "chrono::{DateTime, Utc}",
          "serde::{Deserialize, Serialize}",
          "std::collections::HashMap",
          "std::time::Duration"
        ],
        "exports": [
          "Tags",
          "MetricEvent",
          "counter",
          "gauge",
          "timer",
          "custom",
          "name",
          "timestamp",
          "tags",
          "MetricsCollector",
          "TimeRange",
          "Aggregation",
          "MetricsQuery",
          "MetricsResult",
          "AggregateResult",
          "MetricsReader"
        ],
        "external_deps": []
      },
      "src/cook/interaction/prompts.rs": {
        "path": "src/cook/interaction/prompts.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "async_trait::async_trait",
          "std::io::{self, Write}",
          "mod::tests {",
          "super::*"
        ],
        "exports": [
          "UserPrompter",
          "UserPrompterImpl",
          "new",
          "MockPrompter",
          "new"
        ],
        "external_deps": []
      },
      "src/main.rs": {
        "path": "src/main.rs",
        "module_type": "Binary",
        "imports": [
          "clap::{CommandFactory, Parser, Subcommand}",
          "std::path::PathBuf",
          "tracing::{debug, error, trace}",
          "mmm::subprocess::SubprocessManager",
          "mmm::worktree::WorktreeManager"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/cook/session/mod.rs": {
        "path": "src/cook/session/mod.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "async_trait::async_trait",
          "std::path::Path"
        ],
        "exports": [
          "SessionManager",
          "SessionUpdate",
          "SessionManagerAdapter",
          "SessionState",
          "SessionStatus",
          "SessionSummary",
          "SessionTracker",
          "SessionTrackerImpl"
        ],
        "external_deps": []
      },
      "src/context/debt.rs": {
        "path": "src/context/debt.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "serde::{Deserialize, Serialize}",
          "std::cmp::Ordering",
          "std::collections::{BinaryHeap, HashMap}",
          "std::path::{Path, PathBuf}",
          "walkdir::WalkDir",
          "mod::tests {",
          "super::*",
          "crate::testing::test_helpers::*"
        ],
        "exports": [
          "TechnicalDebtMapper",
          "TechnicalDebtMap",
          "DebtItem",
          "DebtType",
          "ComplexityHotspot",
          "CodeBlock",
          "get_file_debt",
          "get_file_complexity",
          "get_priority_items",
          "DebtAggregationConfig",
          "DebtSummary",
          "BasicTechnicalDebtMapper",
          "new",
          "with_config",
          "find_debt_comments",
          "calculate_complexity",
          "find_duplication"
        ],
        "external_deps": []
      },
      "src/git/parsers.rs": {
        "path": "src/git/parsers.rs",
        "module_type": "Library",
        "imports": [
          "super::types::*",
          "anyhow::Result",
          "std::path::PathBuf",
          "mod::tests {",
          "super::*"
        ],
        "exports": [
          "parse_status_output",
          "parse_diff_output",
          "parse_worktree_list"
        ],
        "external_deps": []
      },
      "src/session/persistence.rs": {
        "path": "src/session/persistence.rs",
        "module_type": "Library",
        "imports": [
          "super::{SessionConfig, SessionId, SessionState, TimestampedEvent}",
          "chrono::{DateTime, Utc}",
          "serde::{Deserialize, Serialize}",
          "std::collections::HashSet",
          "std::path::PathBuf",
          "mod::tests {",
          "super::*"
        ],
        "exports": [
          "PersistedSession",
          "SessionCheckpoint",
          "StateSnapshot",
          "latest_checkpoint",
          "is_resumable",
          "last_iteration"
        ],
        "external_deps": []
      },
      "src/session/events.rs": {
        "path": "src/session/events.rs",
        "module_type": "Library",
        "imports": [
          "super::{IterationChanges, SessionConfig, SessionId}",
          "async_trait::async_trait",
          "chrono::{DateTime, Utc}",
          "serde::{Deserialize, Serialize}",
          "mod::tests {",
          "super::*",
          "std::path::PathBuf"
        ],
        "exports": [
          "SessionEvent",
          "description",
          "is_terminal",
          "TimestampedEvent",
          "new",
          "SessionObserver",
          "NoOpObserver",
          "LoggingObserver",
          "new"
        ],
        "external_deps": []
      },
      "tests/cook_tests.rs": {
        "path": "tests/cook_tests.rs",
        "module_type": "Library",
        "imports": [
          "std::process::Command",
          "tempfile::TempDir",
          "mod::improve_command_tests {",
          "mmm::cook::command::CookCommand",
          "std::path::PathBuf",
          "mod::session_tests {",
          "mmm::cook::session::SessionSummary"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/analyze/mod.rs": {
        "path": "src/analyze/mod.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "command::AnalyzeCommand",
          "mod::tests"
        ],
        "exports": [],
        "external_deps": []
      },
      "tests/workflow_commit_verification_tests.rs": {
        "path": "tests/workflow_commit_verification_tests.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "assert_cmd::Command",
          "predicates::prelude::*",
          "std::fs",
          "std::path::Path",
          "tempfile::TempDir"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/session/config.rs": {
        "path": "src/session/config.rs",
        "module_type": "Library",
        "imports": [
          "crate::config::workflow::WorkflowConfig",
          "serde::{Deserialize, Serialize}",
          "std::path::PathBuf",
          "mod::tests {",
          "super::*"
        ],
        "exports": [
          "SessionConfig",
          "ExecutionMode",
          "is_worktree",
          "worktree_name",
          "SessionOptions",
          "from_flags"
        ],
        "external_deps": []
      },
      "src/metrics/testing.rs": {
        "path": "src/metrics/testing.rs",
        "module_type": "Library",
        "imports": [
          "super::backends::MemoryMetricsCollector",
          "super::events::{MetricEvent, Tags}",
          "super::registry::{MetricsConfig, MetricsRegistry}",
          "std::sync::Arc",
          "std::time::Duration",
          "mod::tests {",
          "super::*",
          "std::time::Duration",
          "tokio::time::sleep"
        ],
        "exports": [
          "MetricsAssert",
          "new",
          "with_collector",
          "collector",
          "create_disabled_registry"
        ],
        "external_deps": []
      },
      "src/cook/metrics/mod.rs": {
        "path": "src/cook/metrics/mod.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "async_trait::async_trait",
          "serde::{Deserialize, Serialize}",
          "std::path::Path"
        ],
        "exports": [
          "ProjectMetrics",
          "MetricsCoordinator",
          "MetricsCollectorImpl",
          "MetricsCollectorTrait",
          "MetricsReporter",
          "MetricsReporterImpl"
        ],
        "external_deps": []
      },
      "src/config/command_parser.rs": {
        "path": "src/config/command_parser.rs",
        "module_type": "Library",
        "imports": [
          "super::command::{Command, CommandArg}",
          "anyhow::{anyhow, Result}",
          "once_cell::sync::Lazy",
          "mod::tests {",
          "super::*",
          "std::collections::HashMap"
        ],
        "exports": [
          "parse_command_string",
          "expand_variables"
        ],
        "external_deps": []
      },
      "src/cook/analysis/cache.rs": {
        "path": "src/cook/analysis/cache.rs",
        "module_type": "Library",
        "imports": [
          "crate::context::AnalysisResult",
          "anyhow::Result",
          "async_trait::async_trait",
          "chrono::{DateTime, Duration, Utc}",
          "std::path::{Path, PathBuf}",
          "tokio::fs",
          "mod::tests {",
          "super::*",
          "crate::context::AnalysisMetadata",
          "tempfile::TempDir",
          "crate::context::{",
          "std::collections::{BinaryHeap, HashMap}"
        ],
        "exports": [
          "AnalysisCache",
          "AnalysisCacheImpl",
          "new"
        ],
        "external_deps": []
      },
      "tests/subprocess_tests.rs": {
        "path": "tests/subprocess_tests.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "std::process::Command",
          "tokio::time::{timeout, Duration}"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/config/dynamic_registry.rs": {
        "path": "src/config/dynamic_registry.rs",
        "module_type": "Library",
        "imports": [
          "super::command::Command",
          "super::command_discovery::CommandDiscovery",
          "super::command_validator::{CommandDefinition, CommandRegistry as StaticCommandRegistry}",
          "super::metadata_parser::MetadataParser",
          "anyhow::{anyhow, Result}",
          "std::collections::HashMap",
          "std::path::PathBuf",
          "super::command_validator::ArgumentType",
          "super::command_validator::ArgumentType",
          "mod::tests {",
          "super::*",
          "crate::config::{Command, CommandArg}",
          "tempfile::TempDir",
          "tokio::fs"
        ],
        "exports": [
          "DynamicCommandRegistry",
          "get",
          "validate_command",
          "apply_defaults",
          "list_commands"
        ],
        "external_deps": []
      },
      "src/metrics/history.rs": {
        "path": "src/metrics/history.rs",
        "module_type": "Library",
        "imports": [
          "super::ImprovementMetrics",
          "serde::{Deserialize, Serialize}"
        ],
        "exports": [
          "MetricsHistory",
          "new",
          "add_snapshot",
          "latest",
          "get_previous",
          "calculate_velocity",
          "MetricsSnapshot",
          "MetricsTrends",
          "Trend",
          "MetricsBaselines"
        ],
        "external_deps": []
      },
      "tests/cli_tests.rs": {
        "path": "tests/cli_tests.rs",
        "module_type": "Library",
        "imports": [
          "assert_cmd::Command",
          "predicates::prelude::*",
          "tempfile::TempDir",
          "mod::cook_dry_run_tests {",
          "super::*",
          "std::env",
          "mod::arg_parsing_tests {",
          "super::*"
        ],
        "exports": [],
        "external_deps": []
      },
      "tests/config_integration_tests.rs": {
        "path": "tests/config_integration_tests.rs",
        "module_type": "Library",
        "imports": [
          "std::fs",
          "std::process::Command",
          "tempfile::TempDir"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/simple_state/state.rs": {
        "path": "src/simple_state/state.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::{Context, Result}",
          "chrono::Utc",
          "std::fs",
          "std::path::{Path, PathBuf}",
          "super::types::{SessionRecord, State}"
        ],
        "exports": [
          "StateManager",
          "new",
          "with_root",
          "state",
          "state_mut",
          "save",
          "record_session",
          "get_history"
        ],
        "external_deps": []
      },
      "src/worktree/test_state.rs": {
        "path": "src/worktree/test_state.rs",
        "module_type": "Library",
        "imports": [
          "super::*",
          "crate::subprocess::SubprocessManager",
          "crate::worktree::{WorktreeState, WorktreeStatus}",
          "std::process::Command",
          "tempfile::TempDir"
        ],
        "exports": [],
        "external_deps": []
      },
      "Cargo.toml": {
        "path": "Cargo.toml",
        "module_type": "Config",
        "imports": [],
        "exports": [],
        "external_deps": [
          "clap",
          "serde",
          "serde_json",
          "serde_yaml",
          "tokio",
          "anyhow",
          "thiserror",
          "tracing",
          "log",
          "tracing-subscriber",
          "walkdir",
          "regex",
          "chrono",
          "toml",
          "directories",
          "notify",
          "tempfile",
          "gray_matter",
          "shell-words",
          "async-trait",
          "reqwest",
          "tera",
          "sha2",
          "petgraph",
          "uuid",
          "futures",
          "pest",
          "pest_derive",
          "glob",
          "whoami",
          "sys-info",
          "axum",
          "tower-http",
          "once_cell",
          "semver",
          "dirs",
          "rand",
          "atty",
          "md5",
          "syn",
          "signal-hook",
          "assert_cmd",
          "predicates"
        ]
      },
      "src/session/tests.rs": {
        "path": "src/session/tests.rs",
        "module_type": "Library",
        "imports": [
          "super::*",
          "async_trait::async_trait",
          "std::sync::atomic::{AtomicUsize, Ordering}",
          "std::sync::Arc",
          "tempfile::TempDir"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/cook/session/tracker.rs": {
        "path": "src/cook/session/tracker.rs",
        "module_type": "Library",
        "imports": [
          "super::{SessionManager, SessionState, SessionStatus, SessionSummary, SessionUpdate}",
          "anyhow::Result",
          "async_trait::async_trait",
          "std::path::Path",
          "std::sync::Mutex",
          "tokio::fs",
          "mod::tests {",
          "super::*",
          "std::path::PathBuf",
          "tempfile::TempDir"
        ],
        "exports": [
          "SessionTrackerImpl",
          "new",
          "set_worktree",
          "set_focus",
          "SessionTracker"
        ],
        "external_deps": []
      },
      "src/metrics/mod.rs": {
        "path": "src/metrics/mod.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "chrono::{DateTime, Utc}",
          "serde::{Deserialize, Serialize}",
          "std::collections::HashMap",
          "std::path::Path",
          "std::time::Duration",
          "super::*",
          "std::path::PathBuf",
          "std::sync::Arc"
        ],
        "exports": [
          "ImprovementMetrics",
          "new",
          "overall_score",
          "MetricsComparison",
          "MetricsAnalyzer",
          "MetricsData",
          "MetricsReporter",
          "create_disabled_registry",
          "create_context",
          "CollectorConfig",
          "CompositeMetricsCollector",
          "FileMetricsCollector",
          "MemoryMetricsCollector",
          "MetricsContext",
          "MetricsContextBuilder",
          "AggregateResult",
          "Aggregation",
          "MetricEvent",
          "MetricsCollector as MetricsCollectorTrait",
          "MetricsQuery",
          "MetricsReader",
          "MetricsResult",
          "Tags",
          "TimeRange",
          "MetricsConfig",
          "MetricsRegistry",
          "create_disabled_registry",
          "create_test_registry",
          "MetricsAssert",
          "MetricsCollector",
          "ComplexityCalculator",
          "MetricsHistory",
          "MetricsSnapshot",
          "MetricsTrends",
          "Trend",
          "PerformanceProfiler",
          "QualityAnalyzer",
          "MetricsStorage"
        ],
        "external_deps": []
      },
      "src/cook/session/summary.rs": {
        "path": "src/cook/session/summary.rs",
        "module_type": "Library",
        "imports": [
          "serde::{Deserialize, Serialize}"
        ],
        "exports": [
          "SessionSummary"
        ],
        "external_deps": []
      },
      "src/context/mod.rs": {
        "path": "src/context/mod.rs",
        "module_type": "Library",
        "imports": [
          "self::dependencies::ArchitecturalLayer",
          "anyhow::Result",
          "serde::{Deserialize, Serialize}",
          "std::collections::HashMap",
          "std::path::{Path, PathBuf}",
          "mod::tests {",
          "super::*"
        ],
        "exports": [
          "AnalysisResult",
          "ArchitectureInfo",
          "ComponentInfo",
          "ArchitectureViolation",
          "ViolationSeverity",
          "AnalysisMetadata",
          "FileContext",
          "FileConventions",
          "Suggestion",
          "SuggestionPriority",
          "SuggestionCategory",
          "ImpactLevel",
          "ContextAnalyzer",
          "load_analysis",
          "save_analysis",
          "ProjectAnalyzer",
          "ArchitectureExtractor",
          "ConventionDetector",
          "ProjectConventions",
          "DebtItem",
          "TechnicalDebtMap",
          "TechnicalDebtMapper",
          "DependencyAnalyzer",
          "DependencyGraph",
          "HybridCoverageAnalyzer",
          "HybridCoverageReport",
          "TestCoverageAnalyzer",
          "TestCoverageMap"
        ],
        "external_deps": []
      },
      "src/context/dependencies.rs": {
        "path": "src/context/dependencies.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "serde::{Deserialize, Serialize}",
          "std::collections::{HashMap, HashSet}",
          "std::path::{Path, PathBuf}",
          "walkdir::WalkDir",
          "mod::tests {",
          "super::*",
          "std::path::Path",
          "std::collections::{HashMap, HashSet}",
          "crate::context::AnalysisResult",
          "super::*",
          "mod::submodule"
        ],
        "exports": [
          "DependencyAnalyzer",
          "DependencyGraph",
          "ModuleNode",
          "ModuleType",
          "DependencyEdge",
          "DependencyType",
          "ArchitecturalLayer",
          "get_file_dependencies",
          "get_coupling_hotspots",
          "BasicDependencyAnalyzer",
          "new",
          "new(r\"pub\\s+use\\s+[^"
        ],
        "external_deps": []
      },
      "src/session/manager.rs": {
        "path": "src/session/manager.rs",
        "module_type": "Library",
        "imports": [
          "super::{",
          "anyhow::{anyhow, Result}",
          "async_trait::async_trait",
          "std::collections::HashMap",
          "std::sync::Arc",
          "std::time::Instant",
          "tokio::sync::RwLock",
          "mod::tests {",
          "super::*",
          "crate::session::IterationChanges",
          "std::path::PathBuf"
        ],
        "exports": [
          "SessionManager",
          "InMemorySessionManager",
          "new"
        ],
        "external_deps": []
      },
      "src/abstractions/git.rs": {
        "path": "src/abstractions/git.rs",
        "module_type": "Library",
        "imports": [
          "crate::subprocess::{ProcessCommandBuilder, SubprocessManager}",
          "anyhow::Result",
          "async_trait::async_trait",
          "std::path::Path",
          "std::sync::Arc",
          "tokio::sync::Mutex",
          "crate::abstractions::exit_status::ExitStatusExt",
          "mod::tests {",
          "super::*",
          "mod::real_git_tests {",
          "super::*",
          "tempfile::TempDir"
        ],
        "exports": [
          "GitOperations",
          "RealGitOperations",
          "new",
          "with_subprocess",
          "MockGitOperations",
          "new"
        ],
        "external_deps": []
      },
      "src/git/scenario.rs": {
        "path": "src/git/scenario.rs",
        "module_type": "Library",
        "imports": [
          "super::{error::GitError, types::*, GitOperations, GitReader, GitWorktree, GitWriter}",
          "anyhow::Result",
          "async_trait::async_trait",
          "std::collections::HashMap",
          "std::path::{Path, PathBuf}",
          "std::sync::Arc",
          "tokio::sync::Mutex",
          "mod::tests {",
          "super::*",
          "tempfile::TempDir"
        ],
        "exports": [
          "GitScenarioMock",
          "GitScenario",
          "ScenarioResponse",
          "GitCommand",
          "new"
        ],
        "external_deps": []
      },
      "tests/cook_iteration_tests.rs": {
        "path": "tests/cook_iteration_tests.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "std::fs",
          "std::path::Path",
          "std::process::Command",
          "tempfile::TempDir"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/context/hybrid_coverage.rs": {
        "path": "src/context/hybrid_coverage.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "serde::{Deserialize, Serialize}",
          "std::collections::HashMap",
          "std::path::{Path, PathBuf}",
          "super::test_coverage::TestCoverageMap",
          "crate::metrics::MetricsSnapshot",
          "mod::tests {",
          "super::*",
          "crate::context::test_coverage::FileCoverage"
        ],
        "exports": [
          "CoverageGap",
          "HybridCoverageAnalyzer",
          "HybridCoverageReport",
          "PriorityCoverageGap",
          "FileQualityMetrics",
          "TrendDirection",
          "QualityCorrelation",
          "CorrelationEntry",
          "CriticalFile",
          "BasicHybridCoverageAnalyzer",
          "new",
          "get_recommendations",
          "to_compact_summary"
        ],
        "external_deps": []
      },
      "src/metrics/quality.rs": {
        "path": "src/metrics/quality.rs",
        "module_type": "Library",
        "imports": [
          "crate::subprocess::{ProcessCommandBuilder, SubprocessManager}",
          "anyhow::{Context, Result}",
          "serde::{Deserialize, Serialize}",
          "std::path::Path",
          "tracing::debug"
        ],
        "exports": [
          "QualityMetrics",
          "QualityAnalyzer"
        ],
        "external_deps": []
      },
      "src/cook/execution/mod.rs": {
        "path": "src/cook/execution/mod.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "async_trait::async_trait",
          "std::collections::HashMap"
        ],
        "exports": [
          "ExecutionContext",
          "ExecutionResult",
          "CommandExecutor",
          "ClaudeExecutor",
          "ClaudeExecutorImpl",
          "CommandRunner",
          "RealCommandRunner"
        ],
        "external_deps": []
      },
      "src/cook/signal_handler.rs": {
        "path": "src/cook/signal_handler.rs",
        "module_type": "Library",
        "imports": [
          "crate::worktree::{InterruptionType, WorktreeManager}",
          "anyhow::Result",
          "chrono::Utc",
          "signal_hook::consts::{SIGINT, SIGTERM}",
          "signal_hook::iterator::Signals",
          "std::sync::Arc",
          "std::thread"
        ],
        "exports": [
          "setup_interrupt_handlers"
        ],
        "external_deps": []
      },
      "src/git/mod.rs": {
        "path": "src/git/mod.rs",
        "module_type": "Library",
        "imports": [
          "crate::subprocess::{ProcessCommandBuilder, ProcessRunner}",
          "anyhow::Result",
          "async_trait::async_trait",
          "std::path::{Path, PathBuf}",
          "std::sync::Arc",
          "mod::tests {",
          "super::*",
          "crate::subprocess::MockProcessRunner",
          "std::sync::Arc",
          "tempfile::TempDir"
        ],
        "exports": [
          "GitReader",
          "GitWriter",
          "GitWorktree",
          "GitOperations",
          "GitCommandRunner",
          "new",
          "GitError",
          "*",
          "*",
          "*"
        ],
        "external_deps": []
      },
      "src/subprocess/git.rs": {
        "path": "src/subprocess/git.rs",
        "module_type": "Library",
        "imports": [
          "async_trait::async_trait",
          "std::path::Path",
          "std::sync::Arc",
          "super::builder::ProcessCommandBuilder",
          "super::error::ProcessError",
          "super::runner::ProcessRunner",
          "crate::abstractions::exit_status::ExitStatusExt"
        ],
        "exports": [
          "GitStatus",
          "GitRunner",
          "GitRunnerImpl",
          "new"
        ],
        "external_deps": []
      },
      "src/metrics/context.rs": {
        "path": "src/metrics/context.rs",
        "module_type": "Library",
        "imports": [
          "super::events::{MetricEvent, Tags}",
          "super::registry::MetricsRegistry",
          "anyhow::Result",
          "std::sync::Arc",
          "mod::tests {",
          "super::*",
          "crate::metrics::{backends::MemoryMetricsCollector, registry::MetricsConfig}"
        ],
        "exports": [
          "MetricsContext",
          "new",
          "child",
          "registry",
          "tags",
          "MetricsContextBuilder",
          "new",
          "tag",
          "tags",
          "build"
        ],
        "external_deps": []
      },
      "src/context/tarpaulin_coverage.rs": {
        "path": "src/context/tarpaulin_coverage.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::{Context, Result}",
          "serde::Deserialize",
          "std::collections::HashMap",
          "std::path::{Path, PathBuf}",
          "super::test_coverage::{",
          "crate::subprocess::SubprocessManager",
          "crate::subprocess::ProcessCommandBuilder",
          "mod::tests {",
          "super::*",
          "std::fs",
          "tempfile::TempDir"
        ],
        "exports": [
          "TarpaulinCoverageAnalyzer",
          "new",
          "example",
          "add"
        ],
        "external_deps": []
      },
      "src/simple_state/tests.rs": {
        "path": "src/simple_state/tests.rs",
        "module_type": "Library",
        "imports": [
          "mod::test {",
          "super::super::*",
          "tempfile::TempDir",
          "std::sync::{Arc, Mutex}",
          "std::thread"
        ],
        "exports": [],
        "external_deps": []
      },
      "tests/workflow_tests.rs": {
        "path": "tests/workflow_tests.rs",
        "module_type": "Library",
        "imports": [
          "mmm::config::{command::WorkflowCommand, workflow::WorkflowConfig}"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/cook/orchestrator.rs": {
        "path": "src/cook/orchestrator.rs",
        "module_type": "Library",
        "imports": [
          "crate::abstractions::git::GitOperations",
          "crate::config::workflow::WorkflowConfig",
          "crate::simple_state::StateManager",
          "crate::worktree::WorktreeManager",
          "anyhow::{anyhow, Result}",
          "async_trait::async_trait",
          "std::path::PathBuf",
          "std::sync::Arc",
          "super::analysis::AnalysisCoordinator",
          "super::command::CookCommand",
          "super::execution::{ClaudeExecutor, CommandExecutor}",
          "super::interaction::UserInteraction",
          "super::metrics::MetricsCoordinator",
          "super::session::{SessionManager, SessionStatus, SessionUpdate}",
          "super::workflow::{ExtendedWorkflowConfig, WorkflowExecutor, WorkflowStep}",
          "crate::config::command::WorkflowCommand",
          "std::collections::HashMap",
          "crate::config::command::InputMethod",
          "glob::glob",
          "mod::tests {",
          "super::*",
          "crate::cook::analysis::runner::AnalysisRunnerImpl",
          "crate::cook::execution::claude::ClaudeExecutorImpl",
          "crate::cook::execution::runner::tests::MockCommandRunner",
          "crate::cook::interaction::mocks::MockUserInteraction",
          "crate::cook::metrics::collector::MetricsCollectorImpl",
          "crate::cook::session::tracker::SessionTrackerImpl",
          "std::os::unix::process::ExitStatusExt",
          "std::path::Path",
          "tempfile::TempDir"
        ],
        "exports": [
          "CookConfig",
          "CookOrchestrator",
          "ExecutionEnvironment",
          "DefaultCookOrchestrator",
          "new"
        ],
        "external_deps": []
      },
      "tests/edge_case_tests.rs": {
        "path": "tests/edge_case_tests.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "std::fs",
          "std::path::PathBuf",
          "std::process::Command",
          "tempfile::TempDir",
          "std::sync::{Arc, Mutex}",
          "std::thread",
          "std::thread",
          "std::time::Duration"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/cook/workflow/executor.rs": {
        "path": "src/cook/workflow/executor.rs",
        "module_type": "Library",
        "imports": [
          "crate::cook::analysis::AnalysisCoordinator",
          "crate::cook::execution::ClaudeExecutor",
          "crate::cook::git_ops::git_command",
          "crate::cook::interaction::UserInteraction",
          "crate::cook::metrics::MetricsCoordinator",
          "crate::cook::orchestrator::ExecutionEnvironment",
          "crate::cook::session::{SessionManager, SessionUpdate}",
          "anyhow::{anyhow, Context, Result}",
          "serde::{Deserialize, Serialize}",
          "std::collections::HashMap",
          "std::sync::Arc",
          "std::io::Write"
        ],
        "exports": [
          "WorkflowStep",
          "ExtendedWorkflowConfig",
          "WorkflowExecutor",
          "new"
        ],
        "external_deps": []
      },
      "src/worktree/state.rs": {
        "path": "src/worktree/state.rs",
        "module_type": "Library",
        "imports": [
          "chrono::{DateTime, Utc}",
          "serde::{Deserialize, Serialize}"
        ],
        "exports": [
          "WorktreeState",
          "WorktreeStatus",
          "IterationInfo",
          "WorktreeStats",
          "InterruptionType",
          "Checkpoint",
          "CommandType"
        ],
        "external_deps": []
      },
      "src/context/size_manager.rs": {
        "path": "src/context/size_manager.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::{Context, Result}",
          "serde::{Deserialize, Serialize}",
          "std::path::Path",
          "mod::tests {",
          "super::*"
        ],
        "exports": [
          "ContextSizeConfig",
          "ContextSizeMetadata",
          "FileSizeInfo",
          "ContextSizeManager",
          "new",
          "with_config",
          "check_size",
          "optimize_for_size",
          "analyze_context_sizes",
          "print_warnings",
          "SizeCheckResult",
          "OptimizedValue",
          "OptimizableForSize"
        ],
        "external_deps": []
      },
      "src/subprocess/runner.rs": {
        "path": "src/subprocess/runner.rs",
        "module_type": "Library",
        "imports": [
          "async_trait::async_trait",
          "futures::stream::Stream",
          "std::collections::HashMap",
          "std::path::PathBuf",
          "std::pin::Pin",
          "std::time::Duration",
          "super::error::ProcessError",
          "tokio::io::AsyncWriteExt",
          "std::os::unix::process::ExitStatusExt"
        ],
        "exports": [
          "ProcessCommand",
          "ProcessOutput",
          "ExitStatus",
          "success",
          "code",
          "ExitStatusHelper",
          "success",
          "failure",
          "ProcessStreamItem",
          "ProcessStreamFut",
          "ProcessStream",
          "ProcessRunner",
          "TokioProcessRunner"
        ],
        "external_deps": []
      },
      "src/cook/git_ops.rs": {
        "path": "src/cook/git_ops.rs",
        "module_type": "Library",
        "imports": [
          "crate::abstractions::{GitOperations, RealGitOperations}",
          "anyhow::Result",
          "once_cell::sync::Lazy",
          "std::sync::Arc",
          "tokio::sync::Mutex",
          "mod::tests {",
          "super::*",
          "tempfile::TempDir",
          "tokio::process::Command"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/abstractions/claude.rs": {
        "path": "src/abstractions/claude.rs",
        "module_type": "Library",
        "imports": [
          "crate::abstractions::exit_status::ExitStatusExt",
          "crate::subprocess::{",
          "anyhow::Result",
          "async_trait::async_trait",
          "std::collections::HashMap",
          "std::sync::Arc",
          "tokio::sync::Mutex",
          "std::time::Duration",
          "tokio::time::sleep",
          "mod::tests {",
          "super::*"
        ],
        "exports": [
          "ClaudeClient",
          "RealClaudeClient",
          "new",
          "with_subprocess",
          "MockClaudeClient",
          "new"
        ],
        "external_deps": []
      },
      "src/simple_state/types.rs": {
        "path": "src/simple_state/types.rs",
        "module_type": "Library",
        "imports": [
          "chrono::{DateTime, Utc}",
          "serde::{Deserialize, Serialize}"
        ],
        "exports": [
          "State",
          "SessionRecord",
          "new",
          "new",
          "complete"
        ],
        "external_deps": []
      },
      "src/cook/retry.rs": {
        "path": "src/cook/retry.rs",
        "module_type": "Library",
        "imports": [
          "crate::abstractions::{ClaudeClient, RealClaudeClient}",
          "anyhow::{Context, Result}",
          "once_cell::sync::Lazy",
          "std::sync::Arc",
          "std::time::Duration",
          "tokio::process::Command",
          "tokio::time::sleep",
          "mod::tests {",
          "super::*",
          "std::time::Instant",
          "mod::additional_tests {",
          "super::*"
        ],
        "exports": [
          "is_transient_error",
          "format_subprocess_error"
        ],
        "external_deps": []
      },
      "src/cook/session/state.rs": {
        "path": "src/cook/session/state.rs",
        "module_type": "Library",
        "imports": [
          "chrono::{DateTime, Utc}",
          "serde::{Deserialize, Serialize}",
          "std::path::PathBuf"
        ],
        "exports": [
          "SessionStatus",
          "SessionState",
          "new",
          "complete",
          "fail",
          "interrupt",
          "add_files_changed",
          "increment_iteration",
          "duration"
        ],
        "external_deps": []
      },
      "src/cook/workflow/mod.rs": {
        "path": "src/cook/workflow/mod.rs",
        "module_type": "Library",
        "imports": [
          "mod::executor"
        ],
        "exports": [
          "ExtendedWorkflowConfig",
          "WorkflowExecutor",
          "WorkflowStep"
        ],
        "external_deps": []
      },
      "tests/worktree_integration_tests.rs": {
        "path": "tests/worktree_integration_tests.rs",
        "module_type": "Library",
        "imports": [
          "mmm::subprocess::SubprocessManager",
          "mmm::worktree::WorktreeManager",
          "std::fs",
          "std::process::Command",
          "tempfile::TempDir"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/context/architecture.rs": {
        "path": "src/context/architecture.rs",
        "module_type": "Library",
        "imports": [
          "super::*",
          "crate::context::dependencies::ArchitecturalLayer",
          "anyhow::Result",
          "std::collections::HashMap",
          "std::path::{Path, PathBuf}",
          "walkdir::WalkDir",
          "mod::tests {",
          "super::*",
          "crate::testing::test_helpers::*"
        ],
        "exports": [
          "ArchitectureExtractor",
          "BasicArchitectureExtractor",
          "new",
          "detect_components",
          "check_violations_graph",
          "authenticate"
        ],
        "external_deps": []
      },
      "src/subprocess/tests.rs": {
        "path": "src/subprocess/tests.rs",
        "module_type": "Library",
        "imports": [
          "mod::tests {",
          "super::super::*",
          "std::time::Duration"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/context/optimized_hybrid.rs": {
        "path": "src/context/optimized_hybrid.rs",
        "module_type": "Library",
        "imports": [
          "super::hybrid_coverage::{",
          "serde::{Deserialize, Serialize}"
        ],
        "exports": [
          "OptimizedHybridCoverage",
          "QualityCorrelationSummary",
          "from_report"
        ],
        "external_deps": []
      },
      "tests/integration_test_cook_path.rs": {
        "path": "tests/integration_test_cook_path.rs",
        "module_type": "Library",
        "imports": [
          "assert_cmd::prelude::*",
          "predicates::prelude::*",
          "std::fs",
          "std::process::Command",
          "tempfile::TempDir",
          "std::env"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/init/templates.rs": {
        "path": "src/init/templates.rs",
        "module_type": "Library",
        "imports": [
          "std::collections::HashMap"
        ],
        "exports": [
          "CommandTemplate",
          "MMM_CODE_REVIEW",
          "MMM_IMPLEMENT_SPEC",
          "MMM_LINT",
          "MMM_PRODUCT_ENHANCE",
          "MMM_MERGE_WORKTREE",
          "MMM_CLEANUP_TECH_DEBT",
          "get_all_templates",
          "get_templates_by_names"
        ],
        "external_deps": []
      },
      "src/metrics/performance.rs": {
        "path": "src/metrics/performance.rs",
        "module_type": "Library",
        "imports": [
          "crate::subprocess::{ProcessCommandBuilder, SubprocessManager}",
          "anyhow::{Context, Result}",
          "serde::{Deserialize, Serialize}",
          "std::collections::HashMap",
          "std::path::Path",
          "std::time::{Duration, Instant}",
          "tracing::debug",
          "std::os::unix::fs::PermissionsExt"
        ],
        "exports": [
          "PerformanceMetrics",
          "PerformanceProfiler",
          "new"
        ],
        "external_deps": []
      },
      "src/cook/mod.rs": {
        "path": "src/cook/mod.rs",
        "module_type": "Library",
        "imports": [
          "mod::tests",
          "mod::mod_tests",
          "crate::abstractions::git::RealGitOperations",
          "crate::config::{workflow::WorkflowConfig, ConfigLoader}",
          "crate::simple_state::StateManager",
          "anyhow::{anyhow, Context as _, Result}",
          "std::path::Path",
          "std::sync::Arc",
          "mod::cook_tests {",
          "super::*",
          "tempfile::TempDir"
        ],
        "exports": [
          "CookCommand",
          "CookConfig",
          "CookOrchestrator",
          "DefaultCookOrchestrator"
        ],
        "external_deps": []
      },
      "src/context/test_coverage.rs": {
        "path": "src/context/test_coverage.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "serde::{Deserialize, Serialize}",
          "std::collections::HashMap",
          "std::path::{Path, PathBuf}",
          "walkdir::WalkDir",
          "mod::tests {",
          "super::*",
          "crate::testing::test_helpers::*",
          "mod::tests {",
          "super::*"
        ],
        "exports": [
          "TestCoverageAnalyzer",
          "TestCoverageMap",
          "FileCoverage",
          "UntestedFunction",
          "CriticalPath",
          "Criticality",
          "RiskLevel",
          "get_file_coverage",
          "get_critical_gaps",
          "BasicTestCoverageAnalyzer",
          "new",
          "extract_functions",
          "find_tested_functions",
          "calculate_overall_coverage",
          "identify_critical_paths",
          "is_test_file",
          "add",
          "multiply",
          "divide"
        ],
        "external_deps": []
      },
      "src/analyze/tests.rs": {
        "path": "src/analyze/tests.rs",
        "module_type": "Library",
        "imports": [
          "super::*",
          "tempfile::TempDir",
          "mod::command_tests {",
          "super::*",
          "crate::analyze::command",
          "anyhow::Result",
          "std::fs",
          "mod::tests {"
        ],
        "exports": [],
        "external_deps": []
      },
      "tests/context_optimization_tests.rs": {
        "path": "tests/context_optimization_tests.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "mmm::context::{",
          "std::collections::HashMap",
          "std::path::PathBuf",
          "tempfile::TempDir",
          "mmm::context::size_manager::OptimizableForSize",
          "mmm::context::{"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/cook/command.rs": {
        "path": "src/cook/command.rs",
        "module_type": "Library",
        "imports": [
          "clap::Args",
          "std::path::PathBuf"
        ],
        "exports": [
          "CookCommand"
        ],
        "external_deps": []
      },
      "src/config/command_discovery.rs": {
        "path": "src/config/command_discovery.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::{Context, Result}",
          "std::collections::HashMap",
          "std::path::PathBuf",
          "std::time::SystemTime",
          "tokio::fs",
          "mod::tests {",
          "super::*",
          "tempfile::TempDir",
          "tokio::fs"
        ],
        "exports": [
          "CommandDiscovery",
          "new",
          "needs_refresh",
          "clear_cache",
          "CommandFile"
        ],
        "external_deps": []
      },
      "tests/context_integration.rs": {
        "path": "tests/context_integration.rs",
        "module_type": "Library",
        "imports": [
          "tempfile::TempDir",
          "mmm::metrics::storage::MetricsStorage",
          "mmm::metrics::ImprovementMetrics",
          "std::time::Duration"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/config/mod.rs": {
        "path": "src/config/mod.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::{anyhow, Result}",
          "directories::ProjectDirs",
          "serde::{Deserialize, Serialize}",
          "std::path::PathBuf",
          "mod::tests {",
          "super::*",
          "crate::config::command::{Command, WorkflowCommand}",
          "crate::config::command_parser::parse_command_string",
          "std::sync::Mutex",
          "crate::config::command_validator::CommandRegistry",
          "crate::config::command_parser::expand_variables",
          "std::collections::HashMap",
          "crate::config::command_validator::apply_command_defaults"
        ],
        "exports": [
          "get_global_mmm_dir",
          "Config",
          "GlobalConfig",
          "ProjectConfig",
          "PluginConfig",
          "new",
          "merge_env_vars",
          "get_claude_api_key",
          "get_auto_commit",
          "get_spec_dir",
          "Command",
          "CommandArg",
          "CommandMetadata",
          "InputMethod",
          "InputReference",
          "OutputDeclaration",
          "SimpleCommand",
          "WorkflowCommand",
          "expand_variables",
          "parse_command_string",
          "apply_command_defaults",
          "validate_command",
          "CommandRegistry",
          "DynamicCommandRegistry",
          "ConfigLoader",
          "WorkflowConfig"
        ],
        "external_deps": []
      },
      "tests/command_parsing_tests.rs": {
        "path": "tests/command_parsing_tests.rs",
        "module_type": "Library",
        "imports": [
          "std::collections::HashMap"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/analyze/command.rs": {
        "path": "src/analyze/command.rs",
        "module_type": "Library",
        "imports": [
          "crate::context::{save_analysis, ContextAnalyzer, ProjectAnalyzer}",
          "anyhow::{Context, Result}",
          "std::path::PathBuf"
        ],
        "exports": [
          "AnalyzeCommand"
        ],
        "external_deps": []
      },
      "tests/error_handling_tests.rs": {
        "path": "tests/error_handling_tests.rs",
        "module_type": "Library",
        "imports": [
          "std::process::Command",
          "tempfile::TempDir",
          "std::sync::{Arc, Mutex}",
          "std::thread",
          "mod::cook_error_recovery {",
          "anyhow::{anyhow, Result}"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/cook/mod_tests.rs": {
        "path": "src/cook/mod_tests.rs",
        "module_type": "Library",
        "imports": [
          "super::*",
          "crate::abstractions::{ClaudeClient, GitOperations, MockClaudeClient, MockGitOperations}",
          "anyhow::Result",
          "tempfile::TempDir",
          "mod::core_tests {",
          "super::*",
          "crate::worktree::WorktreeManager",
          "crate::context::ContextAnalyzer"
        ],
        "exports": [],
        "external_deps": []
      },
      "src/config/loader.rs": {
        "path": "src/config/loader.rs",
        "module_type": "Library",
        "imports": [
          "super::{Config, ProjectConfig, WorkflowConfig}",
          "anyhow::{anyhow, Context, Result}",
          "std::path::Path",
          "std::sync::{Arc, RwLock}",
          "tokio::fs",
          "mod::tests {",
          "super::*",
          "std::path::PathBuf",
          "tempfile::TempDir",
          "tokio::fs"
        ],
        "exports": [
          "ConfigLoader",
          "get_config"
        ],
        "external_deps": []
      },
      "src/cook/metrics/reporter.rs": {
        "path": "src/cook/metrics/reporter.rs",
        "module_type": "Library",
        "imports": [
          "super::ProjectMetrics",
          "anyhow::Result",
          "async_trait::async_trait",
          "mod::tests {",
          "super::*",
          "chrono::Utc"
        ],
        "exports": [
          "MetricsReporter",
          "MetricsTrends",
          "TrendDirection",
          "MetricsReporterImpl",
          "new"
        ],
        "external_deps": []
      },
      "src/config/metadata_parser.rs": {
        "path": "src/config/metadata_parser.rs",
        "module_type": "Library",
        "imports": [
          "super::command::CommandMetadata",
          "super::command_discovery::CommandFile",
          "super::command_validator::{ArgumentDef, ArgumentType, CommandDefinition, OptionDef}",
          "anyhow::{anyhow, Result}",
          "regex::Regex",
          "serde::{Deserialize, Serialize}",
          "mod::tests {",
          "super::*",
          "std::path::PathBuf",
          "std::time::SystemTime"
        ],
        "exports": [
          "MetadataParser",
          "new",
          "parse_command_file",
          "create_minimal_definition"
        ],
        "external_deps": []
      },
      "src/cook/interaction/mod.rs": {
        "path": "src/cook/interaction/mod.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "async_trait::async_trait",
          "super::*",
          "std::sync::Mutex"
        ],
        "exports": [
          "UserInteraction",
          "SpinnerHandle",
          "DefaultUserInteraction",
          "new",
          "MockUserInteraction",
          "new",
          "add_yes_no_response",
          "add_text_response",
          "get_messages",
          "MockSpinnerHandle",
          "ProgressDisplay",
          "ProgressDisplayImpl",
          "UserPrompter",
          "UserPrompterImpl"
        ],
        "external_deps": []
      },
      "src/session/state.rs": {
        "path": "src/session/state.rs",
        "module_type": "Library",
        "imports": [
          "super::{CommitInfo, ExecutedCommand, IterationChanges}",
          "serde::{Deserialize, Serialize}",
          "std::collections::HashSet",
          "std::path::PathBuf",
          "std::time::Duration",
          "mod::tests {",
          "super::*"
        ],
        "exports": [
          "SessionState",
          "is_terminal",
          "is_active",
          "current_iteration",
          "SessionSummary",
          "SessionProgress",
          "new",
          "completion_percentage",
          "total_lines_changed",
          "success_rate",
          "all_commits"
        ],
        "external_deps": []
      },
      "src/worktree/mod.rs": {
        "path": "src/worktree/mod.rs",
        "module_type": "Library",
        "imports": [
          "chrono::{DateTime, Utc}",
          "std::path::PathBuf",
          "mod::test_state",
          "mod::tests"
        ],
        "exports": [
          "WorktreeSession",
          "new",
          "WorktreeManager",
          "Checkpoint",
          "CommandType",
          "InterruptionType",
          "IterationInfo",
          "WorktreeState",
          "WorktreeStats",
          "WorktreeStatus"
        ],
        "external_deps": []
      },
      "tests/metrics_integration.rs": {
        "path": "tests/metrics_integration.rs",
        "module_type": "Library",
        "imports": [
          "mmm::context::{ContextAnalyzer, ProjectAnalyzer}",
          "mmm::metrics::{MetricsCollector, MetricsHistory}",
          "mmm::subprocess::SubprocessManager",
          "std::fs",
          "tempfile::TempDir"
        ],
        "exports": [],
        "external_deps": []
      },
      "tests/common/mod.rs": {
        "path": "tests/common/mod.rs",
        "module_type": "Library",
        "imports": [
          "anyhow::Result",
          "std::fs",
          "std::path::{Path, PathBuf}",
          "std::process::Command",
          "tempfile::TempDir",
          "std::path::Path"
        ],
        "exports": [
          "TestContextBuilder",
          "new",
          "with_git",
          "with_git_user",
          "with_mmm_dirs",
          "with_file",
          "build",
          "TestContext",
          "path",
          "create_file",
          "read_file",
          "file_exists",
          "git_command",
          "init_git_repo",
          "configure_git_user",
          "create_mmm_directories",
          "create_test_playbook",
          "assert_file_contains",
          "assert_file_not_contains",
          "assert_command_success",
          "parse_command_string"
        ],
        "external_deps": []
      },
      "src/context/analyzer.rs": {
        "path": "src/context/analyzer.rs",
        "module_type": "Library",
        "imports": [
          "super::*",
          "crate::subprocess::SubprocessManager",
          "anyhow::Result",
          "std::path::Path",
          "std::time::Instant",
          "walkdir::WalkDir"
        ],
        "exports": [
          "ProjectAnalyzer",
          "new",
          "with_components",
          "get_cached"
        ],
        "external_deps": []
      }
    },
    "edges": [
      {
        "from": "tests/cook_iteration_tests.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "tests/cook_iteration_tests.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "tests/cook_iteration_tests.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "tests/cook_iteration_tests.rs",
        "to": "std::process::Command",
        "dep_type": "Import"
      },
      {
        "from": "tests/cook_iteration_tests.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "tests/workflow_commit_verification_tests.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "tests/workflow_commit_verification_tests.rs",
        "to": "assert_cmd::Command",
        "dep_type": "Import"
      },
      {
        "from": "tests/workflow_commit_verification_tests.rs",
        "to": "predicates::prelude::*",
        "dep_type": "Import"
      },
      {
        "from": "tests/workflow_commit_verification_tests.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "tests/workflow_commit_verification_tests.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "tests/workflow_commit_verification_tests.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "tests/cli_tests.rs",
        "to": "assert_cmd::Command",
        "dep_type": "Import"
      },
      {
        "from": "tests/cli_tests.rs",
        "to": "predicates::prelude::*",
        "dep_type": "Import"
      },
      {
        "from": "tests/cli_tests.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "tests/cli_tests.rs",
        "to": "mod::cook_dry_run_tests {",
        "dep_type": "Import"
      },
      {
        "from": "tests/cli_tests.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "tests/cli_tests.rs",
        "to": "std::env",
        "dep_type": "Import"
      },
      {
        "from": "tests/cli_tests.rs",
        "to": "mod::arg_parsing_tests {",
        "dep_type": "Import"
      },
      {
        "from": "tests/cli_tests.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "tests/metrics_integration.rs",
        "to": "mmm::context::{ContextAnalyzer, ProjectAnalyzer}",
        "dep_type": "Import"
      },
      {
        "from": "tests/metrics_integration.rs",
        "to": "mmm::metrics::{MetricsCollector, MetricsHistory}",
        "dep_type": "Import"
      },
      {
        "from": "tests/metrics_integration.rs",
        "to": "mmm::subprocess::SubprocessManager",
        "dep_type": "Import"
      },
      {
        "from": "tests/metrics_integration.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "tests/metrics_integration.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "tests/config_integration_tests.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "tests/config_integration_tests.rs",
        "to": "std::process::Command",
        "dep_type": "Import"
      },
      {
        "from": "tests/config_integration_tests.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "tests/cook_tests.rs",
        "to": "std::process::Command",
        "dep_type": "Import"
      },
      {
        "from": "tests/cook_tests.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "tests/cook_tests.rs",
        "to": "mod::improve_command_tests {",
        "dep_type": "Import"
      },
      {
        "from": "tests/cook_tests.rs",
        "to": "mmm::cook::command::CookCommand",
        "dep_type": "Import"
      },
      {
        "from": "tests/cook_tests.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "tests/cook_tests.rs",
        "to": "mod::session_tests {",
        "dep_type": "Import"
      },
      {
        "from": "tests/cook_tests.rs",
        "to": "mmm::cook::session::SessionSummary",
        "dep_type": "Import"
      },
      {
        "from": "tests/error_handling_tests.rs",
        "to": "std::process::Command",
        "dep_type": "Import"
      },
      {
        "from": "tests/error_handling_tests.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "tests/error_handling_tests.rs",
        "to": "std::sync::{Arc, Mutex}",
        "dep_type": "Import"
      },
      {
        "from": "tests/error_handling_tests.rs",
        "to": "std::thread",
        "dep_type": "Import"
      },
      {
        "from": "tests/error_handling_tests.rs",
        "to": "mod::cook_error_recovery {",
        "dep_type": "Import"
      },
      {
        "from": "tests/error_handling_tests.rs",
        "to": "anyhow::{anyhow, Result}",
        "dep_type": "Import"
      },
      {
        "from": "tests/common/mod.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "tests/common/mod.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "tests/common/mod.rs",
        "to": "std::path::{Path, PathBuf}",
        "dep_type": "Import"
      },
      {
        "from": "tests/common/mod.rs",
        "to": "std::process::Command",
        "dep_type": "Import"
      },
      {
        "from": "tests/common/mod.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "tests/common/mod.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "tests/context_integration.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "tests/context_integration.rs",
        "to": "mmm::metrics::storage::MetricsStorage",
        "dep_type": "Import"
      },
      {
        "from": "tests/context_integration.rs",
        "to": "mmm::metrics::ImprovementMetrics",
        "dep_type": "Import"
      },
      {
        "from": "tests/context_integration.rs",
        "to": "std::time::Duration",
        "dep_type": "Import"
      },
      {
        "from": "tests/command_parsing_tests.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "tests/worktree_integration_tests.rs",
        "to": "mmm::subprocess::SubprocessManager",
        "dep_type": "Import"
      },
      {
        "from": "tests/worktree_integration_tests.rs",
        "to": "mmm::worktree::WorktreeManager",
        "dep_type": "Import"
      },
      {
        "from": "tests/worktree_integration_tests.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "tests/worktree_integration_tests.rs",
        "to": "std::process::Command",
        "dep_type": "Import"
      },
      {
        "from": "tests/worktree_integration_tests.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "tests/edge_case_tests.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "tests/edge_case_tests.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "tests/edge_case_tests.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "tests/edge_case_tests.rs",
        "to": "std::process::Command",
        "dep_type": "Import"
      },
      {
        "from": "tests/edge_case_tests.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "tests/edge_case_tests.rs",
        "to": "std::sync::{Arc, Mutex}",
        "dep_type": "Import"
      },
      {
        "from": "tests/edge_case_tests.rs",
        "to": "std::thread",
        "dep_type": "Import"
      },
      {
        "from": "tests/edge_case_tests.rs",
        "to": "std::thread",
        "dep_type": "Import"
      },
      {
        "from": "tests/edge_case_tests.rs",
        "to": "std::time::Duration",
        "dep_type": "Import"
      },
      {
        "from": "tests/workflow_tests.rs",
        "to": "mmm::config::{command::WorkflowCommand, workflow::WorkflowConfig}",
        "dep_type": "Import"
      },
      {
        "from": "tests/context_optimization_tests.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "tests/context_optimization_tests.rs",
        "to": "mmm::context::{",
        "dep_type": "Import"
      },
      {
        "from": "tests/context_optimization_tests.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "tests/context_optimization_tests.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "tests/context_optimization_tests.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "tests/context_optimization_tests.rs",
        "to": "mmm::context::size_manager::OptimizableForSize",
        "dep_type": "Import"
      },
      {
        "from": "tests/context_optimization_tests.rs",
        "to": "mmm::context::{",
        "dep_type": "Import"
      },
      {
        "from": "tests/integration_test_cook_path.rs",
        "to": "assert_cmd::prelude::*",
        "dep_type": "Import"
      },
      {
        "from": "tests/integration_test_cook_path.rs",
        "to": "predicates::prelude::*",
        "dep_type": "Import"
      },
      {
        "from": "tests/integration_test_cook_path.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "tests/integration_test_cook_path.rs",
        "to": "std::process::Command",
        "dep_type": "Import"
      },
      {
        "from": "tests/integration_test_cook_path.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "tests/integration_test_cook_path.rs",
        "to": "std::env",
        "dep_type": "Import"
      },
      {
        "from": "tests/subprocess_tests.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "tests/subprocess_tests.rs",
        "to": "std::process::Command",
        "dep_type": "Import"
      },
      {
        "from": "tests/subprocess_tests.rs",
        "to": "tokio::time::{timeout, Duration}",
        "dep_type": "Import"
      },
      {
        "from": "src/init/command.rs",
        "to": "clap::Parser",
        "dep_type": "Import"
      },
      {
        "from": "src/init/command.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/init/mod.rs",
        "to": "anyhow::{Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/init/mod.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/init/mod.rs",
        "to": "std::path::{Path, PathBuf}",
        "dep_type": "Import"
      },
      {
        "from": "src/init/mod.rs",
        "to": "crate::init::command::InitCommand",
        "dep_type": "Import"
      },
      {
        "from": "src/init/mod.rs",
        "to": "crate::subprocess::SubprocessManager",
        "dep_type": "Import"
      },
      {
        "from": "src/init/mod.rs",
        "to": "crate::subprocess::ProcessCommandBuilder",
        "dep_type": "Import"
      },
      {
        "from": "src/init/mod.rs",
        "to": "std::io::{self, Write}",
        "dep_type": "Import"
      },
      {
        "from": "src/init/mod.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/init/mod.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/init/mod.rs",
        "to": "crate::init::command::InitCommand",
        "dep_type": "Import"
      },
      {
        "from": "src/init/mod.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/init/mod.rs",
        "to": "crate::subprocess::ProcessCommandBuilder",
        "dep_type": "Import"
      },
      {
        "from": "src/init/mod.rs",
        "to": "crate::subprocess::ProcessCommandBuilder",
        "dep_type": "Import"
      },
      {
        "from": "src/init/mod.rs",
        "to": "crate::subprocess::ProcessCommandBuilder",
        "dep_type": "Import"
      },
      {
        "from": "src/init/mod.rs",
        "to": "crate::subprocess::ProcessCommandBuilder",
        "dep_type": "Import"
      },
      {
        "from": "src/init/mod.rs",
        "to": "crate::subprocess::ProcessCommandBuilder",
        "dep_type": "Import"
      },
      {
        "from": "src/init/mod.rs",
        "to": "crate::subprocess::ProcessCommandBuilder",
        "dep_type": "Import"
      },
      {
        "from": "src/init/templates.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/collector.rs",
        "to": "super::{ComplexityCalculator, ImprovementMetrics, PerformanceProfiler, QualityAnalyzer}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/collector.rs",
        "to": "crate::subprocess::SubprocessManager",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/collector.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/collector.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/collector.rs",
        "to": "tokio::task",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/collector.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/collector.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/collector.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/collector.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/events.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/events.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/events.rs",
        "to": "chrono::{DateTime, Utc}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/events.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/events.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/events.rs",
        "to": "std::time::Duration",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/registry.rs",
        "to": "super::events::{",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/registry.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/registry.rs",
        "to": "std::future::Future",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/registry.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/registry.rs",
        "to": "std::time::Duration",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/registry.rs",
        "to": "tokio::sync::RwLock",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/registry.rs",
        "to": "rand::Rng",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/registry.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/registry.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/registry.rs",
        "to": "crate::metrics::backends::MemoryMetricsCollector",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/complexity.rs",
        "to": "anyhow::{Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/complexity.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/complexity.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/complexity.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/complexity.rs",
        "to": "syn::{visit::Visit, Block, Expr}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/complexity.rs",
        "to": "tracing::debug",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/mod.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/mod.rs",
        "to": "chrono::{DateTime, Utc}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/mod.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/mod.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/mod.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/mod.rs",
        "to": "std::time::Duration",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/mod.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/mod.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/mod.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/history.rs",
        "to": "super::ImprovementMetrics",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/history.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/quality.rs",
        "to": "crate::subprocess::{ProcessCommandBuilder, SubprocessManager}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/quality.rs",
        "to": "anyhow::{Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/quality.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/quality.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/quality.rs",
        "to": "tracing::debug",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/testing.rs",
        "to": "super::backends::MemoryMetricsCollector",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/testing.rs",
        "to": "super::events::{MetricEvent, Tags}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/testing.rs",
        "to": "super::registry::{MetricsConfig, MetricsRegistry}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/testing.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/testing.rs",
        "to": "std::time::Duration",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/testing.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/testing.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/testing.rs",
        "to": "std::time::Duration",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/testing.rs",
        "to": "tokio::time::sleep",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/performance.rs",
        "to": "crate::subprocess::{ProcessCommandBuilder, SubprocessManager}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/performance.rs",
        "to": "anyhow::{Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/performance.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/performance.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/performance.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/performance.rs",
        "to": "std::time::{Duration, Instant}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/performance.rs",
        "to": "tracing::debug",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/performance.rs",
        "to": "std::os::unix::fs::PermissionsExt",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/storage.rs",
        "to": "super::{ImprovementMetrics, MetricsHistory}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/storage.rs",
        "to": "anyhow::{Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/storage.rs",
        "to": "std::path::{Path, PathBuf}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/storage.rs",
        "to": "tracing::debug",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/storage.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/storage.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/storage.rs",
        "to": "std::time::Duration",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/storage.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/backends.rs",
        "to": "super::events::{",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/backends.rs",
        "to": "anyhow::{Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/backends.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/backends.rs",
        "to": "chrono::Utc",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/backends.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/backends.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/backends.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/backends.rs",
        "to": "std::time::Duration",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/backends.rs",
        "to": "tokio::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/backends.rs",
        "to": "tokio::io::AsyncWriteExt",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/backends.rs",
        "to": "tokio::sync::{Mutex, RwLock}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/backends.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/backends.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/backends.rs",
        "to": "crate::metrics::Tags",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/backends.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/context.rs",
        "to": "super::events::{MetricEvent, Tags}",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/context.rs",
        "to": "super::registry::MetricsRegistry",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/context.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/context.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/context.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/context.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/metrics/context.rs",
        "to": "crate::metrics::{backends::MemoryMetricsCollector, registry::MetricsConfig}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/analyzer.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/context/analyzer.rs",
        "to": "crate::subprocess::SubprocessManager",
        "dep_type": "Import"
      },
      {
        "from": "src/context/analyzer.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/context/analyzer.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/context/analyzer.rs",
        "to": "std::time::Instant",
        "dep_type": "Import"
      },
      {
        "from": "src/context/analyzer.rs",
        "to": "walkdir::WalkDir",
        "dep_type": "Import"
      },
      {
        "from": "src/context/test_coverage.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/context/test_coverage.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/test_coverage.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/context/test_coverage.rs",
        "to": "std::path::{Path, PathBuf}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/test_coverage.rs",
        "to": "walkdir::WalkDir",
        "dep_type": "Import"
      },
      {
        "from": "src/context/test_coverage.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/context/test_coverage.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/context/test_coverage.rs",
        "to": "crate::testing::test_helpers::*",
        "dep_type": "Import"
      },
      {
        "from": "src/context/test_coverage.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/context/test_coverage.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/context/hybrid_coverage.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/context/hybrid_coverage.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/hybrid_coverage.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/context/hybrid_coverage.rs",
        "to": "std::path::{Path, PathBuf}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/hybrid_coverage.rs",
        "to": "super::test_coverage::TestCoverageMap",
        "dep_type": "Import"
      },
      {
        "from": "src/context/hybrid_coverage.rs",
        "to": "crate::metrics::MetricsSnapshot",
        "dep_type": "Import"
      },
      {
        "from": "src/context/hybrid_coverage.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/context/hybrid_coverage.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/context/hybrid_coverage.rs",
        "to": "crate::context::test_coverage::FileCoverage",
        "dep_type": "Import"
      },
      {
        "from": "src/context/size_manager.rs",
        "to": "anyhow::{Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/size_manager.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/size_manager.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/context/size_manager.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/context/size_manager.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/context/mod.rs",
        "to": "self::dependencies::ArchitecturalLayer",
        "dep_type": "Import"
      },
      {
        "from": "src/context/mod.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/context/mod.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/mod.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/context/mod.rs",
        "to": "std::path::{Path, PathBuf}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/mod.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/context/mod.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/context/dependencies.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/context/dependencies.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/dependencies.rs",
        "to": "std::collections::{HashMap, HashSet}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/dependencies.rs",
        "to": "std::path::{Path, PathBuf}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/dependencies.rs",
        "to": "walkdir::WalkDir",
        "dep_type": "Import"
      },
      {
        "from": "src/context/dependencies.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/context/dependencies.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/context/dependencies.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/context/dependencies.rs",
        "to": "std::collections::{HashMap, HashSet}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/dependencies.rs",
        "to": "crate::context::AnalysisResult",
        "dep_type": "Import"
      },
      {
        "from": "src/context/dependencies.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/context/dependencies.rs",
        "to": "mod::submodule",
        "dep_type": "Import"
      },
      {
        "from": "src/context/optimized_hybrid.rs",
        "to": "super::hybrid_coverage::{",
        "dep_type": "Import"
      },
      {
        "from": "src/context/optimized_hybrid.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/debt.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/context/debt.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/debt.rs",
        "to": "std::cmp::Ordering",
        "dep_type": "Import"
      },
      {
        "from": "src/context/debt.rs",
        "to": "std::collections::{BinaryHeap, HashMap}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/debt.rs",
        "to": "std::path::{Path, PathBuf}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/debt.rs",
        "to": "walkdir::WalkDir",
        "dep_type": "Import"
      },
      {
        "from": "src/context/debt.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/context/debt.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/context/debt.rs",
        "to": "crate::testing::test_helpers::*",
        "dep_type": "Import"
      },
      {
        "from": "src/context/tarpaulin_coverage.rs",
        "to": "anyhow::{Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/tarpaulin_coverage.rs",
        "to": "serde::Deserialize",
        "dep_type": "Import"
      },
      {
        "from": "src/context/tarpaulin_coverage.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/context/tarpaulin_coverage.rs",
        "to": "std::path::{Path, PathBuf}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/tarpaulin_coverage.rs",
        "to": "super::test_coverage::{",
        "dep_type": "Import"
      },
      {
        "from": "src/context/tarpaulin_coverage.rs",
        "to": "crate::subprocess::SubprocessManager",
        "dep_type": "Import"
      },
      {
        "from": "src/context/tarpaulin_coverage.rs",
        "to": "crate::subprocess::ProcessCommandBuilder",
        "dep_type": "Import"
      },
      {
        "from": "src/context/tarpaulin_coverage.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/context/tarpaulin_coverage.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/context/tarpaulin_coverage.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/context/tarpaulin_coverage.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/context/architecture.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/context/architecture.rs",
        "to": "crate::context::dependencies::ArchitecturalLayer",
        "dep_type": "Import"
      },
      {
        "from": "src/context/architecture.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/context/architecture.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/context/architecture.rs",
        "to": "std::path::{Path, PathBuf}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/architecture.rs",
        "to": "walkdir::WalkDir",
        "dep_type": "Import"
      },
      {
        "from": "src/context/architecture.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/context/architecture.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/context/architecture.rs",
        "to": "crate::testing::test_helpers::*",
        "dep_type": "Import"
      },
      {
        "from": "src/context/conventions.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/context/conventions.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/conventions.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/context/conventions.rs",
        "to": "std::path::{Path, PathBuf}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/conventions.rs",
        "to": "walkdir::WalkDir",
        "dep_type": "Import"
      },
      {
        "from": "src/context/conventions.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/context/conventions.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/context/conventions.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/context/conventions.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/context/conventions.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/context/conventions.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/context/conventions.rs",
        "to": "std::error::Error",
        "dep_type": "Import"
      },
      {
        "from": "src/context/summary.rs",
        "to": "super::{AnalysisMetadata, AnalysisResult}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/summary.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/context/summary.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/context/summary.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/config/metadata_parser.rs",
        "to": "super::command::CommandMetadata",
        "dep_type": "Import"
      },
      {
        "from": "src/config/metadata_parser.rs",
        "to": "super::command_discovery::CommandFile",
        "dep_type": "Import"
      },
      {
        "from": "src/config/metadata_parser.rs",
        "to": "super::command_validator::{ArgumentDef, ArgumentType, CommandDefinition, OptionDef}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/metadata_parser.rs",
        "to": "anyhow::{anyhow, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/metadata_parser.rs",
        "to": "regex::Regex",
        "dep_type": "Import"
      },
      {
        "from": "src/config/metadata_parser.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/metadata_parser.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/config/metadata_parser.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/config/metadata_parser.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/config/metadata_parser.rs",
        "to": "std::time::SystemTime",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/config/mod.rs",
        "to": "anyhow::{anyhow, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/mod.rs",
        "to": "directories::ProjectDirs",
        "dep_type": "Import"
      },
      {
        "from": "src/config/mod.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/mod.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/config/mod.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/config/mod.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/config/mod.rs",
        "to": "crate::config::command::{Command, WorkflowCommand}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/mod.rs",
        "to": "crate::config::command_parser::parse_command_string",
        "dep_type": "Import"
      },
      {
        "from": "src/config/mod.rs",
        "to": "std::sync::Mutex",
        "dep_type": "Import"
      },
      {
        "from": "src/config/mod.rs",
        "to": "crate::config::command_validator::CommandRegistry",
        "dep_type": "Import"
      },
      {
        "from": "src/config/mod.rs",
        "to": "crate::config::command_parser::expand_variables",
        "dep_type": "Import"
      },
      {
        "from": "src/config/mod.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/config/mod.rs",
        "to": "crate::config::command_validator::apply_command_defaults",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_parser.rs",
        "to": "super::command::{Command, CommandArg}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_parser.rs",
        "to": "anyhow::{anyhow, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_parser.rs",
        "to": "once_cell::sync::Lazy",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_parser.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_parser.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_parser.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_discovery.rs",
        "to": "anyhow::{Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_discovery.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_discovery.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_discovery.rs",
        "to": "std::time::SystemTime",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_discovery.rs",
        "to": "tokio::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_discovery.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_discovery.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_discovery.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_discovery.rs",
        "to": "tokio::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_validator.rs",
        "to": "super::command::{Command, CommandMetadata}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_validator.rs",
        "to": "anyhow::{anyhow, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_validator.rs",
        "to": "once_cell::sync::Lazy",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_validator.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_validator.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/config/command_validator.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/config/workflow.rs",
        "to": "super::command::WorkflowCommand",
        "dep_type": "Import"
      },
      {
        "from": "src/config/workflow.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/loader.rs",
        "to": "super::{Config, ProjectConfig, WorkflowConfig}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/loader.rs",
        "to": "anyhow::{anyhow, Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/loader.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/config/loader.rs",
        "to": "std::sync::{Arc, RwLock}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/loader.rs",
        "to": "tokio::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/config/loader.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/config/loader.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/config/loader.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/config/loader.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/config/loader.rs",
        "to": "tokio::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/config/dynamic_registry.rs",
        "to": "super::command::Command",
        "dep_type": "Import"
      },
      {
        "from": "src/config/dynamic_registry.rs",
        "to": "super::command_discovery::CommandDiscovery",
        "dep_type": "Import"
      },
      {
        "from": "src/config/dynamic_registry.rs",
        "to": "super::command_validator::{CommandDefinition, CommandRegistry as StaticCommandRegistry}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/dynamic_registry.rs",
        "to": "super::metadata_parser::MetadataParser",
        "dep_type": "Import"
      },
      {
        "from": "src/config/dynamic_registry.rs",
        "to": "anyhow::{anyhow, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/dynamic_registry.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/config/dynamic_registry.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/config/dynamic_registry.rs",
        "to": "super::command_validator::ArgumentType",
        "dep_type": "Import"
      },
      {
        "from": "src/config/dynamic_registry.rs",
        "to": "super::command_validator::ArgumentType",
        "dep_type": "Import"
      },
      {
        "from": "src/config/dynamic_registry.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/config/dynamic_registry.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/config/dynamic_registry.rs",
        "to": "crate::config::{Command, CommandArg}",
        "dep_type": "Import"
      },
      {
        "from": "src/config/dynamic_registry.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/config/dynamic_registry.rs",
        "to": "tokio::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/test_state.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/test_state.rs",
        "to": "crate::subprocess::SubprocessManager",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/test_state.rs",
        "to": "crate::worktree::{WorktreeState, WorktreeStatus}",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/test_state.rs",
        "to": "std::process::Command",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/test_state.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/manager.rs",
        "to": "crate::subprocess::{ProcessCommandBuilder, SubprocessManager}",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/manager.rs",
        "to": "anyhow::{anyhow, Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/manager.rs",
        "to": "chrono::Utc",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/manager.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/manager.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/manager.rs",
        "to": "uuid::Uuid",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/manager.rs",
        "to": "super::{IterationInfo, WorktreeSession, WorktreeState, WorktreeStats, WorktreeStatus}",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/manager.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/manager.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/manager.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/mod.rs",
        "to": "chrono::{DateTime, Utc}",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/mod.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/mod.rs",
        "to": "mod::test_state",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/mod.rs",
        "to": "mod::tests",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/state.rs",
        "to": "chrono::{DateTime, Utc}",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/state.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/tests.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/tests.rs",
        "to": "crate::subprocess::SubprocessManager",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/tests.rs",
        "to": "std::process::Command",
        "dep_type": "Import"
      },
      {
        "from": "src/worktree/tests.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/testing/mod.rs",
        "to": "crate::abstractions::{ClaudeClient, GitOperations, MockClaudeClient, MockGitOperations}",
        "dep_type": "Import"
      },
      {
        "from": "src/testing/mod.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/testing/mod.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/testing/mod.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/testing/mod.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/testing/mod.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/testing/mod.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/testing/mod.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/testing/mod.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/testing/mod.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/claude.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/claude.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/claude.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/claude.rs",
        "to": "super::builder::ProcessCommandBuilder",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/claude.rs",
        "to": "super::error::ProcessError",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/claude.rs",
        "to": "super::runner::ProcessRunner",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/error.rs",
        "to": "std::time::Duration",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/git.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/git.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/git.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/git.rs",
        "to": "super::builder::ProcessCommandBuilder",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/git.rs",
        "to": "super::error::ProcessError",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/git.rs",
        "to": "super::runner::ProcessRunner",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/git.rs",
        "to": "crate::abstractions::exit_status::ExitStatusExt",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/runner.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/runner.rs",
        "to": "futures::stream::Stream",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/runner.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/runner.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/runner.rs",
        "to": "std::pin::Pin",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/runner.rs",
        "to": "std::time::Duration",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/runner.rs",
        "to": "super::error::ProcessError",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/runner.rs",
        "to": "tokio::io::AsyncWriteExt",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/runner.rs",
        "to": "std::os::unix::process::ExitStatusExt",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/mod.rs",
        "to": "mod::tests",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/mod.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/mock.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/mock.rs",
        "to": "std::sync::{Arc, Mutex}",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/mock.rs",
        "to": "std::time::Duration",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/mock.rs",
        "to": "super::error::ProcessError",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/mock.rs",
        "to": "super::runner::{ExitStatus, ProcessCommand, ProcessOutput, ProcessRunner, ProcessStream}",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/tests.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/tests.rs",
        "to": "super::super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/tests.rs",
        "to": "std::time::Duration",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/builder.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/builder.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/builder.rs",
        "to": "std::time::Duration",
        "dep_type": "Import"
      },
      {
        "from": "src/subprocess/builder.rs",
        "to": "crate::subprocess::ProcessCommand",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/collector.rs",
        "to": "super::{MetricsCoordinator, ProjectMetrics}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/collector.rs",
        "to": "crate::cook::execution::CommandRunner",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/collector.rs",
        "to": "crate::cook::metrics::reporter::MetricsReporter",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/collector.rs",
        "to": "crate::metrics::MetricsCollector",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/collector.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/collector.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/collector.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/collector.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/collector.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/collector.rs",
        "to": "crate::cook::execution::runner::tests::MockCommandRunner",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/collector.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/reporter.rs",
        "to": "super::ProjectMetrics",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/reporter.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/reporter.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/reporter.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/reporter.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/reporter.rs",
        "to": "chrono::Utc",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/mod.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/mod.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/mod.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/metrics/mod.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/cache.rs",
        "to": "crate::context::AnalysisResult",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/cache.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/cache.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/cache.rs",
        "to": "chrono::{DateTime, Duration, Utc}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/cache.rs",
        "to": "std::path::{Path, PathBuf}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/cache.rs",
        "to": "tokio::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/cache.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/cache.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/cache.rs",
        "to": "crate::context::AnalysisMetadata",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/cache.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/cache.rs",
        "to": "crate::context::{",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/cache.rs",
        "to": "std::collections::{BinaryHeap, HashMap}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/runner.rs",
        "to": "super::AnalysisCoordinator",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/runner.rs",
        "to": "crate::context::{AnalysisMetadata, AnalysisResult}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/runner.rs",
        "to": "crate::context::{ContextAnalyzer, ProjectAnalyzer}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/runner.rs",
        "to": "crate::cook::execution::CommandRunner",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/runner.rs",
        "to": "anyhow::{Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/runner.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/runner.rs",
        "to": "chrono::Utc",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/runner.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/runner.rs",
        "to": "std::time::Instant",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/runner.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/runner.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/runner.rs",
        "to": "crate::cook::execution::runner::tests::MockCommandRunner",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/runner.rs",
        "to": "crate::cook::execution::ExecutionResult",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/runner.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/mod.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/mod.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/analysis/mod.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "mod::tests",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "mod::mod_tests",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "crate::config::{workflow::WorkflowConfig, Config, ConfigLoader}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "crate::context::{save_analysis, ContextAnalyzer, ProjectAnalyzer}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "crate::metrics::{MetricsCollector, MetricsHistory, MetricsStorage}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "crate::simple_state::StateManager",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "crate::worktree::WorktreeManager",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "anyhow::{anyhow, Context as _, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "chrono::Utc",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "git_ops::get_last_commit_message",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "retry::check_claude_cli",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "std::io::{self, Write}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "std::path::{Path, PathBuf}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "tokio::process::Command",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "workflow::WorkflowExecutor",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "glob::glob",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "glob::glob",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "mod::cook_inline_tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_old.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/command.rs",
        "to": "clap::Args",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/command.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/git_ops.rs",
        "to": "crate::abstractions::{GitOperations, RealGitOperations}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/git_ops.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/git_ops.rs",
        "to": "once_cell::sync::Lazy",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/git_ops.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/git_ops.rs",
        "to": "tokio::sync::Mutex",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/git_ops.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/git_ops.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/git_ops.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/git_ops.rs",
        "to": "tokio::process::Command",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_tests.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_tests.rs",
        "to": "crate::abstractions::{ClaudeClient, GitOperations, MockClaudeClient, MockGitOperations}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_tests.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_tests.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_tests.rs",
        "to": "mod::core_tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_tests.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_tests.rs",
        "to": "crate::worktree::WorktreeManager",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod_tests.rs",
        "to": "crate::context::ContextAnalyzer",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod.rs",
        "to": "mod::tests",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod.rs",
        "to": "mod::mod_tests",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod.rs",
        "to": "crate::abstractions::git::RealGitOperations",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod.rs",
        "to": "crate::config::{workflow::WorkflowConfig, ConfigLoader}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod.rs",
        "to": "crate::simple_state::StateManager",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod.rs",
        "to": "anyhow::{anyhow, Context as _, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod.rs",
        "to": "mod::cook_tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/mod.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/execution/claude.rs",
        "to": "super::{CommandExecutor, CommandRunner, ExecutionContext, ExecutionResult}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/execution/claude.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/execution/claude.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/execution/claude.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/execution/claude.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/execution/claude.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/execution/claude.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/execution/claude.rs",
        "to": "crate::cook::execution::runner::tests::MockCommandRunner",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/execution/runner.rs",
        "to": "super::{CommandExecutor, ExecutionContext, ExecutionResult}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/execution/runner.rs",
        "to": "crate::abstractions::exit_status::ExitStatusExt",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/execution/runner.rs",
        "to": "crate::subprocess::{ProcessCommandBuilder, SubprocessManager}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/execution/runner.rs",
        "to": "anyhow::{Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/execution/runner.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/execution/runner.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/execution/mod.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/execution/mod.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/execution/mod.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/workflow/mod.rs",
        "to": "mod::executor",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/workflow/executor.rs",
        "to": "crate::cook::analysis::AnalysisCoordinator",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/workflow/executor.rs",
        "to": "crate::cook::execution::ClaudeExecutor",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/workflow/executor.rs",
        "to": "crate::cook::git_ops::git_command",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/workflow/executor.rs",
        "to": "crate::cook::interaction::UserInteraction",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/workflow/executor.rs",
        "to": "crate::cook::metrics::MetricsCoordinator",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/workflow/executor.rs",
        "to": "crate::cook::orchestrator::ExecutionEnvironment",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/workflow/executor.rs",
        "to": "crate::cook::session::{SessionManager, SessionUpdate}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/workflow/executor.rs",
        "to": "anyhow::{anyhow, Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/workflow/executor.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/workflow/executor.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/workflow/executor.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/workflow/executor.rs",
        "to": "std::io::Write",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/tests.rs",
        "to": "mod::cook_tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/tests.rs",
        "to": "crate::abstractions::{ClaudeClient, GitOperations, MockClaudeClient, MockGitOperations}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/tests.rs",
        "to": "crate::cook::command::CookCommand",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/tests.rs",
        "to": "crate::testing::{TestContext, TestFixtures}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/tests.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/tests.rs",
        "to": "mod::workflow_parsing_tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/tests.rs",
        "to": "crate::config::command::{InputMethod, WorkflowCommand}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/tests.rs",
        "to": "crate::config::workflow::WorkflowConfig",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/tests.rs",
        "to": "mod::retry_tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/tests.rs",
        "to": "crate::cook::retry::{format_subprocess_error, is_transient_error}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/tests.rs",
        "to": "mod::git_ops_tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/tests.rs",
        "to": "crate::abstractions::{GitOperations, MockGitOperations}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "crate::abstractions::git::GitOperations",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "crate::config::workflow::WorkflowConfig",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "crate::simple_state::StateManager",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "crate::worktree::WorktreeManager",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "anyhow::{anyhow, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "super::analysis::AnalysisCoordinator",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "super::command::CookCommand",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "super::execution::{ClaudeExecutor, CommandExecutor}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "super::interaction::UserInteraction",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "super::metrics::MetricsCoordinator",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "super::session::{SessionManager, SessionStatus, SessionUpdate}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "super::workflow::{ExtendedWorkflowConfig, WorkflowExecutor, WorkflowStep}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "crate::config::command::WorkflowCommand",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "crate::config::command::InputMethod",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "glob::glob",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "crate::cook::analysis::runner::AnalysisRunnerImpl",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "crate::cook::execution::claude::ClaudeExecutorImpl",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "crate::cook::execution::runner::tests::MockCommandRunner",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "crate::cook::interaction::mocks::MockUserInteraction",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "crate::cook::metrics::collector::MetricsCollectorImpl",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "crate::cook::session::tracker::SessionTrackerImpl",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "std::os::unix::process::ExitStatusExt",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/orchestrator.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/signal_handler.rs",
        "to": "crate::worktree::{InterruptionType, WorktreeManager}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/signal_handler.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/signal_handler.rs",
        "to": "chrono::Utc",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/signal_handler.rs",
        "to": "signal_hook::consts::{SIGINT, SIGTERM}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/signal_handler.rs",
        "to": "signal_hook::iterator::Signals",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/signal_handler.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/signal_handler.rs",
        "to": "std::thread",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/interaction/display.rs",
        "to": "super::SpinnerHandle",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/interaction/display.rs",
        "to": "std::sync::{Arc, Mutex}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/interaction/display.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/interaction/display.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/interaction/prompts.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/interaction/prompts.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/interaction/prompts.rs",
        "to": "std::io::{self, Write}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/interaction/prompts.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/interaction/prompts.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/interaction/mod.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/interaction/mod.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/interaction/mod.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/interaction/mod.rs",
        "to": "std::sync::Mutex",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/retry.rs",
        "to": "crate::abstractions::{ClaudeClient, RealClaudeClient}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/retry.rs",
        "to": "anyhow::{Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/retry.rs",
        "to": "once_cell::sync::Lazy",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/retry.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/retry.rs",
        "to": "std::time::Duration",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/retry.rs",
        "to": "tokio::process::Command",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/retry.rs",
        "to": "tokio::time::sleep",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/retry.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/retry.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/retry.rs",
        "to": "std::time::Instant",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/retry.rs",
        "to": "mod::additional_tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/retry.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/adapter.rs",
        "to": "crate::session::{",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/adapter.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/adapter.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/adapter.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/adapter.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/adapter.rs",
        "to": "tokio::sync::Mutex",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/adapter.rs",
        "to": "super::{",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/mod.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/mod.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/mod.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/state.rs",
        "to": "chrono::{DateTime, Utc}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/state.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/state.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/migration.rs",
        "to": "crate::session::{",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/migration.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/migration.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/migration.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/migration.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/migration.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/tracker.rs",
        "to": "super::{SessionManager, SessionState, SessionStatus, SessionSummary, SessionUpdate}",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/tracker.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/tracker.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/tracker.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/tracker.rs",
        "to": "std::sync::Mutex",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/tracker.rs",
        "to": "tokio::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/tracker.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/tracker.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/tracker.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/tracker.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/cook/session/summary.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/main.rs",
        "to": "clap::{CommandFactory, Parser, Subcommand}",
        "dep_type": "Import"
      },
      {
        "from": "src/main.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/main.rs",
        "to": "tracing::{debug, error, trace}",
        "dep_type": "Import"
      },
      {
        "from": "src/main.rs",
        "to": "mmm::subprocess::SubprocessManager",
        "dep_type": "Import"
      },
      {
        "from": "src/main.rs",
        "to": "mmm::worktree::WorktreeManager",
        "dep_type": "Import"
      },
      {
        "from": "src/analyze/command.rs",
        "to": "crate::context::{save_analysis, ContextAnalyzer, ProjectAnalyzer}",
        "dep_type": "Import"
      },
      {
        "from": "src/analyze/command.rs",
        "to": "anyhow::{Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/analyze/command.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/analyze/mod.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/analyze/mod.rs",
        "to": "command::AnalyzeCommand",
        "dep_type": "Import"
      },
      {
        "from": "src/analyze/mod.rs",
        "to": "mod::tests",
        "dep_type": "Import"
      },
      {
        "from": "src/analyze/tests.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/analyze/tests.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/analyze/tests.rs",
        "to": "mod::command_tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/analyze/tests.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/analyze/tests.rs",
        "to": "crate::analyze::command",
        "dep_type": "Import"
      },
      {
        "from": "src/analyze/tests.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/analyze/tests.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/analyze/tests.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/claude.rs",
        "to": "crate::abstractions::exit_status::ExitStatusExt",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/claude.rs",
        "to": "crate::subprocess::{",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/claude.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/claude.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/claude.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/claude.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/claude.rs",
        "to": "tokio::sync::Mutex",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/claude.rs",
        "to": "std::time::Duration",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/claude.rs",
        "to": "tokio::time::sleep",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/claude.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/claude.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/git.rs",
        "to": "crate::subprocess::{ProcessCommandBuilder, SubprocessManager}",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/git.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/git.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/git.rs",
        "to": "std::path::Path",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/git.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/git.rs",
        "to": "tokio::sync::Mutex",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/git.rs",
        "to": "crate::abstractions::exit_status::ExitStatusExt",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/git.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/git.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/git.rs",
        "to": "mod::real_git_tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/git.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/abstractions/git.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/cache.rs",
        "to": "anyhow::{Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/cache.rs",
        "to": "serde::{de::DeserializeOwned, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/cache.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/cache.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/cache.rs",
        "to": "std::time::{Duration, SystemTime}",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/types.rs",
        "to": "chrono::{DateTime, Utc}",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/types.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/mod.rs",
        "to": "mod::tests",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/mod.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/mod.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/state.rs",
        "to": "anyhow::{Context, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/state.rs",
        "to": "chrono::Utc",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/state.rs",
        "to": "std::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/state.rs",
        "to": "std::path::{Path, PathBuf}",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/state.rs",
        "to": "super::types::{SessionRecord, State}",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/tests.rs",
        "to": "mod::test {",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/tests.rs",
        "to": "super::super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/tests.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/tests.rs",
        "to": "std::sync::{Arc, Mutex}",
        "dep_type": "Import"
      },
      {
        "from": "src/simple_state/tests.rs",
        "to": "std::thread",
        "dep_type": "Import"
      },
      {
        "from": "src/git/parsers.rs",
        "to": "super::types::*",
        "dep_type": "Import"
      },
      {
        "from": "src/git/parsers.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/git/parsers.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/git/parsers.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/git/parsers.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/git/types.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/git/error.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/git/error.rs",
        "to": "thiserror::Error",
        "dep_type": "Import"
      },
      {
        "from": "src/git/mod.rs",
        "to": "crate::subprocess::{ProcessCommandBuilder, ProcessRunner}",
        "dep_type": "Import"
      },
      {
        "from": "src/git/mod.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/git/mod.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/git/mod.rs",
        "to": "std::path::{Path, PathBuf}",
        "dep_type": "Import"
      },
      {
        "from": "src/git/mod.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/git/mod.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/git/mod.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/git/mod.rs",
        "to": "crate::subprocess::MockProcessRunner",
        "dep_type": "Import"
      },
      {
        "from": "src/git/mod.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/git/mod.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/git/scenario.rs",
        "to": "super::{error::GitError, types::*, GitOperations, GitReader, GitWorktree, GitWriter}",
        "dep_type": "Import"
      },
      {
        "from": "src/git/scenario.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/git/scenario.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/git/scenario.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/git/scenario.rs",
        "to": "std::path::{Path, PathBuf}",
        "dep_type": "Import"
      },
      {
        "from": "src/git/scenario.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/git/scenario.rs",
        "to": "tokio::sync::Mutex",
        "dep_type": "Import"
      },
      {
        "from": "src/git/scenario.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/git/scenario.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/git/scenario.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/session/events.rs",
        "to": "super::{IterationChanges, SessionConfig, SessionId}",
        "dep_type": "Import"
      },
      {
        "from": "src/session/events.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/session/events.rs",
        "to": "chrono::{DateTime, Utc}",
        "dep_type": "Import"
      },
      {
        "from": "src/session/events.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/session/events.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/session/events.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/session/events.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/session/config.rs",
        "to": "crate::config::workflow::WorkflowConfig",
        "dep_type": "Import"
      },
      {
        "from": "src/session/config.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/session/config.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/session/config.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/session/config.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/session/persistence.rs",
        "to": "super::{SessionConfig, SessionId, SessionState, TimestampedEvent}",
        "dep_type": "Import"
      },
      {
        "from": "src/session/persistence.rs",
        "to": "chrono::{DateTime, Utc}",
        "dep_type": "Import"
      },
      {
        "from": "src/session/persistence.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/session/persistence.rs",
        "to": "std::collections::HashSet",
        "dep_type": "Import"
      },
      {
        "from": "src/session/persistence.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/session/persistence.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/session/persistence.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/session/manager.rs",
        "to": "super::{",
        "dep_type": "Import"
      },
      {
        "from": "src/session/manager.rs",
        "to": "anyhow::{anyhow, Result}",
        "dep_type": "Import"
      },
      {
        "from": "src/session/manager.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/session/manager.rs",
        "to": "std::collections::HashMap",
        "dep_type": "Import"
      },
      {
        "from": "src/session/manager.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/session/manager.rs",
        "to": "std::time::Instant",
        "dep_type": "Import"
      },
      {
        "from": "src/session/manager.rs",
        "to": "tokio::sync::RwLock",
        "dep_type": "Import"
      },
      {
        "from": "src/session/manager.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/session/manager.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/session/manager.rs",
        "to": "crate::session::IterationChanges",
        "dep_type": "Import"
      },
      {
        "from": "src/session/manager.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/session/mod.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/session/mod.rs",
        "to": "std::fmt",
        "dep_type": "Import"
      },
      {
        "from": "src/session/mod.rs",
        "to": "uuid::Uuid",
        "dep_type": "Import"
      },
      {
        "from": "src/session/mod.rs",
        "to": "mod::tests",
        "dep_type": "Import"
      },
      {
        "from": "src/session/state.rs",
        "to": "super::{CommitInfo, ExecutedCommand, IterationChanges}",
        "dep_type": "Import"
      },
      {
        "from": "src/session/state.rs",
        "to": "serde::{Deserialize, Serialize}",
        "dep_type": "Import"
      },
      {
        "from": "src/session/state.rs",
        "to": "std::collections::HashSet",
        "dep_type": "Import"
      },
      {
        "from": "src/session/state.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/session/state.rs",
        "to": "std::time::Duration",
        "dep_type": "Import"
      },
      {
        "from": "src/session/state.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/session/state.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/session/tests.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/session/tests.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/session/tests.rs",
        "to": "std::sync::atomic::{AtomicUsize, Ordering}",
        "dep_type": "Import"
      },
      {
        "from": "src/session/tests.rs",
        "to": "std::sync::Arc",
        "dep_type": "Import"
      },
      {
        "from": "src/session/tests.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      },
      {
        "from": "src/session/storage.rs",
        "to": "super::{PersistedSession, SessionId}",
        "dep_type": "Import"
      },
      {
        "from": "src/session/storage.rs",
        "to": "anyhow::Result",
        "dep_type": "Import"
      },
      {
        "from": "src/session/storage.rs",
        "to": "async_trait::async_trait",
        "dep_type": "Import"
      },
      {
        "from": "src/session/storage.rs",
        "to": "std::path::PathBuf",
        "dep_type": "Import"
      },
      {
        "from": "src/session/storage.rs",
        "to": "tokio::fs",
        "dep_type": "Import"
      },
      {
        "from": "src/session/storage.rs",
        "to": "mod::tests {",
        "dep_type": "Import"
      },
      {
        "from": "src/session/storage.rs",
        "to": "super::*",
        "dep_type": "Import"
      },
      {
        "from": "src/session/storage.rs",
        "to": "tempfile::TempDir",
        "dep_type": "Import"
      }
    ],
    "cycles": [],
    "layers": [
      {
        "name": "root",
        "level": 0,
        "modules": [
          "Cargo.toml"
        ]
      },
      {
        "name": "top-level",
        "level": 1,
        "modules": [
          "src/lib.rs",
          "src/main.rs",
          "tests/cook_tests.rs",
          "tests/workflow_commit_verification_tests.rs",
          "tests/subprocess_tests.rs",
          "tests/cli_tests.rs",
          "tests/config_integration_tests.rs",
          "tests/cook_iteration_tests.rs",
          "tests/workflow_tests.rs",
          "tests/edge_case_tests.rs",
          "tests/worktree_integration_tests.rs",
          "tests/integration_test_cook_path.rs",
          "tests/context_optimization_tests.rs",
          "tests/context_integration.rs",
          "tests/command_parsing_tests.rs",
          "tests/error_handling_tests.rs",
          "tests/metrics_integration.rs"
        ]
      },
      {
        "name": "module",
        "level": 2,
        "modules": [
          "src/worktree/manager.rs",
          "src/simple_state/mod.rs",
          "src/metrics/storage.rs",
          "src/metrics/backends.rs",
          "src/init/mod.rs",
          "src/git/types.rs",
          "src/subprocess/builder.rs",
          "src/config/workflow.rs",
          "src/context/summary.rs",
          "src/metrics/registry.rs",
          "src/subprocess/error.rs",
          "src/session/mod.rs",
          "src/testing/mod.rs",
          "src/simple_state/cache.rs",
          "src/subprocess/mock.rs",
          "src/config/command.rs",
          "src/abstractions/mod.rs",
          "src/abstractions/exit_status.rs",
          "src/subprocess/claude.rs",
          "src/cook/tests.rs",
          "src/config/command_validator.rs",
          "src/context/conventions.rs",
          "src/subprocess/mod.rs",
          "src/cook/mod_old.rs",
          "src/metrics/collector.rs",
          "src/init/command.rs",
          "src/worktree/tests.rs",
          "src/metrics/complexity.rs",
          "src/git/error.rs",
          "src/session/storage.rs",
          "src/metrics/events.rs",
          "src/context/debt.rs",
          "src/git/parsers.rs",
          "src/session/persistence.rs",
          "src/session/events.rs",
          "src/analyze/mod.rs",
          "src/session/config.rs",
          "src/metrics/testing.rs",
          "src/config/command_parser.rs",
          "src/config/dynamic_registry.rs",
          "src/metrics/history.rs",
          "src/simple_state/state.rs",
          "src/worktree/test_state.rs",
          "src/session/tests.rs",
          "src/metrics/mod.rs",
          "src/context/mod.rs",
          "src/context/dependencies.rs",
          "src/session/manager.rs",
          "src/abstractions/git.rs",
          "src/git/scenario.rs",
          "src/context/hybrid_coverage.rs",
          "src/metrics/quality.rs",
          "src/cook/signal_handler.rs",
          "src/git/mod.rs",
          "src/subprocess/git.rs",
          "src/metrics/context.rs",
          "src/context/tarpaulin_coverage.rs",
          "src/simple_state/tests.rs",
          "src/cook/orchestrator.rs",
          "src/worktree/state.rs",
          "src/context/size_manager.rs",
          "src/subprocess/runner.rs",
          "src/cook/git_ops.rs",
          "src/abstractions/claude.rs",
          "src/simple_state/types.rs",
          "src/cook/retry.rs",
          "src/context/architecture.rs",
          "src/subprocess/tests.rs",
          "src/context/optimized_hybrid.rs",
          "src/init/templates.rs",
          "src/metrics/performance.rs",
          "src/cook/mod.rs",
          "src/context/test_coverage.rs",
          "src/analyze/tests.rs",
          "src/cook/command.rs",
          "src/config/command_discovery.rs",
          "src/config/mod.rs",
          "src/analyze/command.rs",
          "src/cook/mod_tests.rs",
          "src/config/loader.rs",
          "src/config/metadata_parser.rs",
          "src/session/state.rs",
          "src/worktree/mod.rs",
          "tests/common/mod.rs",
          "src/context/analyzer.rs"
        ]
      },
      {
        "name": "deep",
        "level": 3,
        "modules": [
          "src/cook/execution/claude.rs",
          "src/cook/execution/runner.rs",
          "src/cook/analysis/runner.rs",
          "src/cook/analysis/mod.rs",
          "src/cook/session/adapter.rs",
          "src/cook/metrics/collector.rs",
          "src/cook/interaction/display.rs",
          "src/cook/session/migration.rs",
          "src/cook/interaction/prompts.rs",
          "src/cook/session/mod.rs",
          "src/cook/metrics/mod.rs",
          "src/cook/analysis/cache.rs",
          "src/cook/session/tracker.rs",
          "src/cook/session/summary.rs",
          "src/cook/execution/mod.rs",
          "src/cook/workflow/executor.rs",
          "src/cook/session/state.rs",
          "src/cook/workflow/mod.rs",
          "src/cook/metrics/reporter.rs",
          "src/cook/interaction/mod.rs"
        ]
      }
    ]
  },
  "architecture": {
    "patterns": [
      "Modular"
    ],
    "layers": [],
    "components": {
      "metrics": {
        "name": "metrics",
        "responsibility": "Module functionality",
        "interfaces": [
          "struct ImprovementMetrics",
          "fn new(iteration_id:",
          "fn overall_score(&self)",
          "struct MetricsComparison",
          "trait MetricsAnalyzer",
          "struct MetricsData",
          "trait MetricsReporter",
          "fn fn",
          "fn fn",
          "fn create_disabled_registry()",
          "fn create_context"
        ],
        "dependencies": [
          "anyhow",
          "tokio",
          "tempfile",
          "async_trait",
          "chrono",
          "serde",
          "rand",
          "syn",
          "tracing"
        ]
      },
      "context": {
        "name": "context",
        "responsibility": "Module functionality",
        "interfaces": [
          "struct AnalysisResult",
          "struct ArchitectureInfo",
          "struct ComponentInfo",
          "struct ArchitectureViolation",
          "struct AnalysisMetadata",
          "struct FileContext",
          "struct FileConventions",
          "struct Suggestion",
          "trait ContextAnalyzer:",
          "fn load_analysis(project_path:",
          "fn save_analysis(project_path:"
        ],
        "dependencies": [
          "anyhow",
          "walkdir",
          "serde",
          "tempfile"
        ]
      },
      "analyze": {
        "name": "analyze",
        "responsibility": "Module functionality",
        "interfaces": [
          "fn fn"
        ],
        "dependencies": [
          "anyhow",
          "command",
          "tempfile"
        ]
      },
      "init": {
        "name": "init",
        "responsibility": "Module functionality",
        "interfaces": [
          "fn fn"
        ],
        "dependencies": [
          "clap",
          "anyhow",
          "tempfile"
        ]
      },
      "testing": {
        "name": "testing",
        "responsibility": "Module functionality",
        "interfaces": [
          "struct TestContext",
          "fn new()",
          "fn with_mocks",
          "fn temp_path(&self)",
          "fn create_test_file(&self,",
          "struct MockGitBuilder",
          "fn new()",
          "fn is_repo(mut",
          "fn fn",
          "fn fn",
          "fn build(self)",
          "struct MockClaudeBuilder",
          "fn new()",
          "fn is_available(mut",
          "fn fn",
          "fn fn",
          "fn build(self)",
          "struct TestFixtures",
          "fn fn",
          "fn fn",
          "fn fn",
          "fn fn",
          "fn unavailable_claude()",
          "fn setup_test_project(temp_dir:",
          "fn create_test_file(dir:",
          "fn create_test_files(dir:"
        ],
        "dependencies": [
          "anyhow",
          "tempfile"
        ]
      },
      "abstractions": {
        "name": "abstractions",
        "responsibility": "Module functionality",
        "interfaces": [],
        "dependencies": [
          "anyhow",
          "async_trait",
          "tokio",
          "tempfile"
        ]
      },
      "simple_state": {
        "name": "simple_state",
        "responsibility": "Module functionality",
        "interfaces": [
          "fn init()"
        ],
        "dependencies": [
          "anyhow",
          "serde",
          "chrono",
          "tempfile"
        ]
      },
      "worktree": {
        "name": "worktree",
        "responsibility": "Module functionality",
        "interfaces": [
          "struct WorktreeSession",
          "fn new(name:"
        ],
        "dependencies": [
          "tempfile",
          "anyhow",
          "chrono",
          "uuid",
          "serde"
        ]
      },
      "subprocess": {
        "name": "subprocess",
        "responsibility": "Module functionality",
        "interfaces": [
          "struct SubprocessManager",
          "fn new(runner:",
          "fn production()",
          "fn mock()",
          "fn runner(&self)",
          "fn git(&self)",
          "fn claude(&self)"
        ],
        "dependencies": [
          "async_trait",
          "futures",
          "tokio"
        ]
      },
      "git": {
        "name": "git",
        "responsibility": "Module functionality",
        "interfaces": [
          "trait GitReader:",
          "trait GitWriter:",
          "trait GitWorktree:",
          "trait GitOperations:",
          "struct GitCommandRunner",
          "fn new(process_runner:"
        ],
        "dependencies": [
          "anyhow",
          "thiserror",
          "async_trait",
          "tempfile",
          "tokio"
        ]
      },
      "session": {
        "name": "session",
        "responsibility": "Module functionality",
        "interfaces": [
          "struct SessionId(String)",
          "fn new()",
          "fn from_string(id:",
          "fn as_str(&self)",
          "struct SessionInfo",
          "struct IterationChanges",
          "struct CommitInfo",
          "struct ExecutedCommand"
        ],
        "dependencies": [
          "async_trait",
          "chrono",
          "serde",
          "anyhow",
          "tokio",
          "uuid",
          "tempfile"
        ]
      },
      "cook": {
        "name": "cook",
        "responsibility": "Module functionality",
        "interfaces": [
          "fn fn",
          "fn fn"
        ],
        "dependencies": [
          "anyhow",
          "async_trait",
          "tempfile",
          "chrono",
          "serde",
          "tokio",
          "git_ops",
          "retry",
          "workflow",
          "glob",
          "clap",
          "once_cell",
          "signal_hook"
        ]
      },
      "config": {
        "name": "config",
        "responsibility": "Configuration management",
        "interfaces": [
          "fn get_global_mmm_dir()",
          "struct Config",
          "struct GlobalConfig",
          "struct ProjectConfig",
          "struct PluginConfig",
          "fn new()",
          "fn merge_env_vars(&mut",
          "fn get_claude_api_key(&self)",
          "fn get_auto_commit(&self)",
          "fn get_spec_dir(&self)"
        ],
        "dependencies": [
          "anyhow",
          "regex",
          "serde",
          "directories",
          "once_cell",
          "tokio",
          "tempfile"
        ]
      }
    },
    "violations": [
      {
        "rule": "Components should expose interfaces",
        "location": "abstractions",
        "severity": "Low",
        "description": "abstractions has no public interfaces"
      },
      {
        "rule": "Avoid god components",
        "location": "cook",
        "severity": "Medium",
        "description": "cook has 13 dependencies, consider splitting"
      }
    ]
  },
  "conventions": {
    "naming_patterns": {
      "file_naming": "SnakeCase",
      "function_naming": "SnakeCase",
      "variable_naming": "SnakeCase",
      "type_naming": "PascalCase",
      "constant_naming": "ScreamingSnakeCase"
    },
    "code_patterns": {
      "logging": {
        "name": "Logging pattern",
        "description": "Uses logging for debugging and monitoring",
        "examples": [
          "println!",
          "log::info!"
        ],
        "frequency": 1
      },
      "builder": {
        "name": "Builder pattern",
        "description": "Uses builder pattern for object construction",
        "examples": [
          "RequestBuilder::new()"
        ],
        "frequency": 2
      },
      "error_handling": {
        "name": "Result-based error handling",
        "description": "Uses Result<T, E> for error handling",
        "examples": [
          "Result<String, Error>"
        ],
        "frequency": 30
      },
      "async": {
        "name": "Async/await pattern",
        "description": "Uses async/await for asynchronous code",
        "examples": [
          "async fn process()"
        ],
        "frequency": 13
      }
    },
    "test_patterns": {
      "test_file_pattern": "tests/",
      "test_function_prefix": "test_",
      "test_module_pattern": "#[cfg(test)]",
      "assertion_style": "assert!"
    },
    "project_idioms": [
      {
        "name": "Option matching",
        "pattern": "match option { Some(x) => ..., None => ... }",
        "usage_count": 0
      },
      {
        "name": "Result propagation",
        "pattern": "function()?",
        "usage_count": 0
      }
    ]
  },
  "technical_debt": {
    "debt_items": [
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/tests/context_optimization_tests.rs_L155",
        "title": "Todo comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/tests/context_optimization_tests.rs",
        "line_number": 155,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/src/metrics/backends.rs_L139",
        "title": "Todo comment",
        "description": "Implement compression",
        "location": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
        "line_number": 139,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/src/context/debt.rs_L54",
        "title": "Todo comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 54,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Fixme_/Users/glen/memento-mori/mmm/src/context/debt.rs_L55",
        "title": "Fixme comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 55,
        "debt_type": "Fixme",
        "impact": 7,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Hack_/Users/glen/memento-mori/mmm/src/context/debt.rs_L56",
        "title": "Hack comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 56,
        "debt_type": "Hack",
        "impact": 6,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Deprecated_/Users/glen/memento-mori/mmm/src/context/debt.rs_L57",
        "title": "Deprecated comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 57,
        "debt_type": "Deprecated",
        "impact": 8,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/src/context/debt.rs_L203",
        "title": "Todo comment",
        "description": "/FIXME/HACK comments",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 203,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/src/context/debt.rs_L211",
        "title": "Todo comment",
        "description": "\") {",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 211,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/src/context/debt.rs_L212",
        "title": "Todo comment",
        "description": "\")",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 212,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Fixme_/Users/glen/memento-mori/mmm/src/context/debt.rs_L213",
        "title": "Fixme comment",
        "description": "\") {",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 213,
        "debt_type": "Fixme",
        "impact": 7,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Fixme_/Users/glen/memento-mori/mmm/src/context/debt.rs_L214",
        "title": "Fixme comment",
        "description": "\")",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 214,
        "debt_type": "Fixme",
        "impact": 7,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Hack_/Users/glen/memento-mori/mmm/src/context/debt.rs_L215",
        "title": "Hack comment",
        "description": "\") {",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 215,
        "debt_type": "Hack",
        "impact": 6,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Hack_/Users/glen/memento-mori/mmm/src/context/debt.rs_L216",
        "title": "Hack comment",
        "description": "\")",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 216,
        "debt_type": "Hack",
        "impact": 6,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Fixme_/Users/glen/memento-mori/mmm/src/context/debt.rs_L217",
        "title": "Fixme comment",
        "description": "\") {",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 217,
        "debt_type": "Fixme",
        "impact": 7,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Fixme_/Users/glen/memento-mori/mmm/src/context/debt.rs_L218",
        "title": "Fixme comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 218,
        "debt_type": "Fixme",
        "impact": 7,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Deprecated_/Users/glen/memento-mori/mmm/src/context/debt.rs_L219",
        "title": "Deprecated comment",
        "description": "\") || line_upper.contains(\"@DEPRECATED\") {",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 219,
        "debt_type": "Deprecated",
        "impact": 8,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Deprecated_/Users/glen/memento-mori/mmm/src/context/debt.rs_L220",
        "title": "Deprecated comment",
        "description": "\")",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 220,
        "debt_type": "Deprecated",
        "impact": 8,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Fixme_/Users/glen/memento-mori/mmm/src/context/debt.rs_L236",
        "title": "Fixme comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 236,
        "debt_type": "Fixme",
        "impact": 7,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Hack_/Users/glen/memento-mori/mmm/src/context/debt.rs_L237",
        "title": "Hack comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 237,
        "debt_type": "Hack",
        "impact": 6,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Deprecated_/Users/glen/memento-mori/mmm/src/context/debt.rs_L238",
        "title": "Deprecated comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 238,
        "debt_type": "Deprecated",
        "impact": 8,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/src/context/debt.rs_L239",
        "title": "Todo comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 239,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/src/context/debt.rs_L829",
        "title": "Todo comment",
        "description": "Refactor this function",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 829,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Fixme_/Users/glen/memento-mori/mmm/src/context/debt.rs_L831",
        "title": "Fixme comment",
        "description": "This is a hack",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 831,
        "debt_type": "Fixme",
        "impact": 7,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Hack_/Users/glen/memento-mori/mmm/src/context/debt.rs_L832",
        "title": "Hack comment",
        "description": "Magic number",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 832,
        "debt_type": "Hack",
        "impact": 6,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/src/context/debt.rs_L834",
        "title": "Todo comment",
        "description": "(high): Critical security issue",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 834,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Fixme_/Users/glen/memento-mori/mmm/src/context/debt.rs_L836",
        "title": "Fixme comment",
        "description": "This needs review",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 836,
        "debt_type": "Fixme",
        "impact": 7,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/src/context/debt.rs_L847",
        "title": "Todo comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 847,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Fixme_/Users/glen/memento-mori/mmm/src/context/debt.rs_L850",
        "title": "Fixme comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 850,
        "debt_type": "Fixme",
        "impact": 7,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Hack_/Users/glen/memento-mori/mmm/src/context/debt.rs_L853",
        "title": "Hack comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 853,
        "debt_type": "Hack",
        "impact": 6,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Fixme_/Users/glen/memento-mori/mmm/src/context/debt.rs_L956",
        "title": "Fixme comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 956,
        "debt_type": "Fixme",
        "impact": 7,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/src/context/debt.rs_L968",
        "title": "Todo comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 968,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/src/context/debt.rs_L988",
        "title": "Todo comment",
        "description": "Add error handling",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 988,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Fixme_/Users/glen/memento-mori/mmm/src/context/debt.rs_L990",
        "title": "Fixme comment",
        "description": "This can panic",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 990,
        "debt_type": "Fixme",
        "impact": 7,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/src/context/debt.rs_L1055",
        "title": "Todo comment",
        "description": "and FIXME comments",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 1055,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/src/subprocess/runner.rs_L167",
        "title": "Todo comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/subprocess/runner.rs",
        "line_number": 167,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/src/subprocess/mock.rs_L136",
        "title": "Todo comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/subprocess/mock.rs",
        "line_number": 136,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/src/cook/metrics/collector.rs_L130",
        "title": "Todo comment",
        "description": "Implement complexity analysis",
        "location": "/Users/glen/memento-mori/mmm/src/cook/metrics/collector.rs",
        "line_number": 130,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/src/cook/metrics/reporter.rs_L210",
        "title": "Todo comment",
        "description": "Implement when complexity is available",
        "location": "/Users/glen/memento-mori/mmm/src/cook/metrics/reporter.rs",
        "line_number": 210,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Todo_/Users/glen/memento-mori/mmm/src/cook/analysis/runner.rs_L174",
        "title": "Todo comment",
        "description": "Implement incremental analysis",
        "location": "/Users/glen/memento-mori/mmm/src/cook/analysis/runner.rs",
        "line_number": 174,
        "debt_type": "Todo",
        "impact": 4,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Hack_/Users/glen/memento-mori/mmm/src/cook/session/adapter.rs_L88",
        "title": "Hack comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/cook/session/adapter.rs",
        "line_number": 88,
        "debt_type": "Hack",
        "impact": 6,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "Deprecated_/Users/glen/memento-mori/mmm/src/main.rs_L179",
        "title": "Deprecated comment",
        "description": "No description provided",
        "location": "/Users/glen/memento-mori/mmm/src/main.rs",
        "line_number": 179,
        "debt_type": "Deprecated",
        "impact": 8,
        "effort": 3,
        "tags": [
          "comment"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs_test_cook_stops_early_when_no_changes",
        "title": "High complexity in test_cook_stops_early_when_no_changes",
        "description": "Function has cyclomatic complexity of 12",
        "location": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs_test_focus_applied_every_iteration",
        "title": "High complexity in test_focus_applied_every_iteration",
        "description": "Function has cyclomatic complexity of 17",
        "location": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs_test_cook_worktree_multiple_iterations",
        "title": "High complexity in test_cook_worktree_multiple_iterations",
        "description": "Function has cyclomatic complexity of 12",
        "location": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/tests/workflow_commit_verification_tests.rs_setup_test_repo",
        "title": "High complexity in setup_test_repo",
        "description": "Function has cyclomatic complexity of 11",
        "location": "/Users/glen/memento-mori/mmm/tests/workflow_commit_verification_tests.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/tests/common/mod.rs_build",
        "title": "High complexity in build",
        "description": "Function has cyclomatic complexity of 12",
        "location": "/Users/glen/memento-mori/mmm/tests/common/mod.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/tests/command_parsing_tests.rs_parse_command_string",
        "title": "High complexity in parse_command_string",
        "description": "Function has cyclomatic complexity of 17",
        "location": "/Users/glen/memento-mori/mmm/tests/command_parsing_tests.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/init/mod.rs_handle_existing_commands",
        "title": "High complexity in handle_existing_commands",
        "description": "Function has cyclomatic complexity of 11",
        "location": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/metrics/performance.rs_find_binary_size",
        "title": "High complexity in find_binary_size",
        "description": "Function has cyclomatic complexity of 12",
        "location": "/Users/glen/memento-mori/mmm/src/metrics/performance.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/metrics/backends.rs_write_events",
        "title": "High complexity in write_events",
        "description": "Function has cyclomatic complexity of 15",
        "location": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/context/analyzer.rs_analyze",
        "title": "High complexity in analyze",
        "description": "Function has cyclomatic complexity of 12",
        "location": "/Users/glen/memento-mori/mmm/src/context/analyzer.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/context/analyzer.rs_update",
        "title": "High complexity in update",
        "description": "Function has cyclomatic complexity of 14",
        "location": "/Users/glen/memento-mori/mmm/src/context/analyzer.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/context/test_coverage.rs_find_tested_functions",
        "title": "High complexity in find_tested_functions",
        "description": "Function has cyclomatic complexity of 11",
        "location": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/context/test_coverage.rs_analyze_coverage",
        "title": "High complexity in analyze_coverage",
        "description": "Function has cyclomatic complexity of 11",
        "location": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/context/mod.rs_save_analysis",
        "title": "High complexity in save_analysis",
        "description": "Function has cyclomatic complexity of 21",
        "location": "/Users/glen/memento-mori/mmm/src/context/mod.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 8,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/context/debt.rs_count_match_arms",
        "title": "High complexity in count_match_arms",
        "description": "Function has cyclomatic complexity of 49",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 8,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/context/debt.rs_detect_duplicates",
        "title": "High complexity in detect_duplicates",
        "description": "Function has cyclomatic complexity of 17",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/context/debt.rs_test_full_debt_mapping",
        "title": "High complexity in test_full_debt_mapping",
        "description": "Function has cyclomatic complexity of 16",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/context/debt.rs_complex_function",
        "title": "High complexity in complex_function",
        "description": "Function has cyclomatic complexity of 16",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs_run_tarpaulin",
        "title": "High complexity in run_tarpaulin",
        "description": "Function has cyclomatic complexity of 19",
        "location": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs_convert_tarpaulin_data",
        "title": "High complexity in convert_tarpaulin_data",
        "description": "Function has cyclomatic complexity of 12",
        "location": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs_identify_critical_paths_with_coverage",
        "title": "High complexity in identify_critical_paths_with_coverage",
        "description": "Function has cyclomatic complexity of 11",
        "location": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/context/conventions.rs_extract_type_names_internal",
        "title": "High complexity in extract_type_names_internal",
        "description": "Function has cyclomatic complexity of 21",
        "location": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 8,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/context/conventions.rs_process",
        "title": "High complexity in process",
        "description": "Function has cyclomatic complexity of 15",
        "location": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/context/conventions.rs_detect_test_patterns",
        "title": "High complexity in detect_test_patterns",
        "description": "Function has cyclomatic complexity of 13",
        "location": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/context/summary.rs_from_debt_map",
        "title": "High complexity in from_debt_map",
        "description": "Function has cyclomatic complexity of 12",
        "location": "/Users/glen/memento-mori/mmm/src/context/summary.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/config/command_parser.rs_parse_command_string",
        "title": "High complexity in parse_command_string",
        "description": "Function has cyclomatic complexity of 12",
        "location": "/Users/glen/memento-mori/mmm/src/config/command_parser.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/config/command_discovery.rs_scan_commands",
        "title": "High complexity in scan_commands",
        "description": "Function has cyclomatic complexity of 13",
        "location": "/Users/glen/memento-mori/mmm/src/config/command_discovery.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/config/command_validator.rs_validate_command",
        "title": "High complexity in validate_command",
        "description": "Function has cyclomatic complexity of 13",
        "location": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/config/command_validator.rs_validate_argument_type",
        "title": "High complexity in validate_argument_type",
        "description": "Function has cyclomatic complexity of 11",
        "location": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/config/command_validator.rs_validate_option_value",
        "title": "High complexity in validate_option_value",
        "description": "Function has cyclomatic complexity of 17",
        "location": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/config/loader.rs_load_from_path",
        "title": "High complexity in load_from_path",
        "description": "Function has cyclomatic complexity of 13",
        "location": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs_validate_strict",
        "title": "High complexity in validate_strict",
        "description": "Function has cyclomatic complexity of 12",
        "location": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs_validate_argument_type",
        "title": "High complexity in validate_argument_type",
        "description": "Function has cyclomatic complexity of 11",
        "location": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs_validate_option_value",
        "title": "High complexity in validate_option_value",
        "description": "Function has cyclomatic complexity of 17",
        "location": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/worktree/test_state.rs_test_merge_updates_state",
        "title": "High complexity in test_merge_updates_state",
        "description": "Function has cyclomatic complexity of 11",
        "location": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/worktree/manager.rs_list_sessions",
        "title": "High complexity in list_sessions",
        "description": "Function has cyclomatic complexity of 14",
        "location": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/worktree/manager.rs_merge_session",
        "title": "High complexity in merge_session",
        "description": "Function has cyclomatic complexity of 15",
        "location": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/subprocess/git.rs_status",
        "title": "High complexity in status",
        "description": "Function has cyclomatic complexity of 12",
        "location": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/subprocess/runner.rs_run",
        "title": "High complexity in run",
        "description": "Function has cyclomatic complexity of 18",
        "location": "/Users/glen/memento-mori/mmm/src/subprocess/runner.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/subprocess/runner.rs_run_streaming",
        "title": "High complexity in run_streaming",
        "description": "Function has cyclomatic complexity of 18",
        "location": "/Users/glen/memento-mori/mmm/src/subprocess/runner.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/subprocess/runner.rs_run",
        "title": "High complexity in run",
        "description": "Function has cyclomatic complexity of 18",
        "location": "/Users/glen/memento-mori/mmm/src/subprocess/runner.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/metrics/collector.rs_collect_compile_metrics",
        "title": "High complexity in collect_compile_metrics",
        "description": "Function has cyclomatic complexity of 11",
        "location": "/Users/glen/memento-mori/mmm/src/cook/metrics/collector.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/analysis/runner.rs_is_supported_project",
        "title": "High complexity in is_supported_project",
        "description": "Function has cyclomatic complexity of 11",
        "location": "/Users/glen/memento-mori/mmm/src/cook/analysis/runner.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/mod_old.rs_analyze_project_comprehensive",
        "title": "High complexity in analyze_project_comprehensive",
        "description": "Function has cyclomatic complexity of 12",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/mod_old.rs_run_internal",
        "title": "High complexity in run_internal",
        "description": "Function has cyclomatic complexity of 22",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 8,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/mod_old.rs_run_improvement_loop",
        "title": "High complexity in run_improvement_loop",
        "description": "Function has cyclomatic complexity of 15",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/mod_old.rs_setup_improvement_environment",
        "title": "High complexity in setup_improvement_environment",
        "description": "Function has cyclomatic complexity of 11",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/mod_old.rs_run_improvement_iterations",
        "title": "High complexity in run_improvement_iterations",
        "description": "Function has cyclomatic complexity of 12",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/mod_old.rs_run_with_mapping_in_worktree",
        "title": "High complexity in run_with_mapping_in_worktree",
        "description": "Function has cyclomatic complexity of 11",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/mod_old.rs_run_improvement_loop_with_variables",
        "title": "High complexity in run_improvement_loop_with_variables",
        "description": "Function has cyclomatic complexity of 22",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 8,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/mod_old.rs_resume_session",
        "title": "High complexity in resume_session",
        "description": "Function has cyclomatic complexity of 20",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/mod.rs_cook",
        "title": "High complexity in cook",
        "description": "Function has cyclomatic complexity of 22",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 8,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/workflow/executor.rs_execute",
        "title": "High complexity in execute",
        "description": "Function has cyclomatic complexity of 32",
        "location": "/Users/glen/memento-mori/mmm/src/cook/workflow/executor.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 8,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs_run",
        "title": "High complexity in run",
        "description": "Function has cyclomatic complexity of 12",
        "location": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs_execute_workflow",
        "title": "High complexity in execute_workflow",
        "description": "Function has cyclomatic complexity of 13",
        "location": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs_cleanup",
        "title": "High complexity in cleanup",
        "description": "Function has cyclomatic complexity of 11",
        "location": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs_execute_structured_workflow",
        "title": "High complexity in execute_structured_workflow",
        "description": "Function has cyclomatic complexity of 31",
        "location": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 8,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/retry.rs_execute_with_retry",
        "title": "High complexity in execute_with_retry",
        "description": "Function has cyclomatic complexity of 17",
        "location": "/Users/glen/memento-mori/mmm/src/cook/retry.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/cook/session/adapter.rs_update_session",
        "title": "High complexity in update_session",
        "description": "Function has cyclomatic complexity of 14",
        "location": "/Users/glen/memento-mori/mmm/src/cook/session/adapter.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/main.rs_handle_merge_command",
        "title": "High complexity in handle_merge_command",
        "description": "Function has cyclomatic complexity of 15",
        "location": "/Users/glen/memento-mori/mmm/src/main.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/analyze/command.rs_run_context_analysis",
        "title": "High complexity in run_context_analysis",
        "description": "Function has cyclomatic complexity of 12",
        "location": "/Users/glen/memento-mori/mmm/src/analyze/command.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/analyze/command.rs_run_metrics_analysis",
        "title": "High complexity in run_metrics_analysis",
        "description": "Function has cyclomatic complexity of 12",
        "location": "/Users/glen/memento-mori/mmm/src/analyze/command.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/analyze/command.rs_display_pretty_analysis",
        "title": "High complexity in display_pretty_analysis",
        "description": "Function has cyclomatic complexity of 15",
        "location": "/Users/glen/memento-mori/mmm/src/analyze/command.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/abstractions/claude.rs_execute_command",
        "title": "High complexity in execute_command",
        "description": "Function has cyclomatic complexity of 20",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/git/parsers.rs_parse_status_output",
        "title": "High complexity in parse_status_output",
        "description": "Function has cyclomatic complexity of 20",
        "location": "/Users/glen/memento-mori/mmm/src/git/parsers.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/git/parsers.rs_parse_worktree_list",
        "title": "High complexity in parse_worktree_list",
        "description": "Function has cyclomatic complexity of 14",
        "location": "/Users/glen/memento-mori/mmm/src/git/parsers.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/git/scenario.rs_default_response",
        "title": "High complexity in default_response",
        "description": "Function has cyclomatic complexity of 11",
        "location": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/git/scenario.rs_format_status_output",
        "title": "High complexity in format_status_output",
        "description": "Function has cyclomatic complexity of 11",
        "location": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "COMPLEX_/Users/glen/memento-mori/mmm/src/session/manager.rs_apply_event",
        "title": "High complexity in apply_event",
        "description": "Function has cyclomatic complexity of 13",
        "location": "/Users/glen/memento-mori/mmm/src/session/manager.rs",
        "line_number": null,
        "debt_type": "Complexity",
        "impact": 6,
        "effort": 5,
        "tags": [
          "complexity"
        ]
      },
      {
        "id": "DUP_e61f1e35d89680c5a7353812467581fe",
        "title": "Code duplication detected",
        "description": "Found 5 instances of duplicated code (6 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 280,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_9e44af87befb39b7a1996846baf6ac5b",
        "title": "Code duplication detected",
        "description": "Found 9 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
        "line_number": 184,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_babfb774475e14a438ef9a37a19cad21",
        "title": "Code duplication detected",
        "description": "Found 4 instances of duplicated code (6 lines)",
        "location": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
        "line_number": 81,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_6032a5c5e15325f2d05b5fe17426cb66",
        "title": "Code duplication detected",
        "description": "Found 3 instances of duplicated code (8 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
        "line_number": 7,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_01a7754d88aec3e69a5499d2bfaca36c",
        "title": "Code duplication detected",
        "description": "Found 11 instances of duplicated code (4 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
        "line_number": 131,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_014d2d5df23c1aa864835c1cadb808d4",
        "title": "Code duplication detected",
        "description": "Found 19 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
        "line_number": 167,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_20f880ae4d0aaff29c8b8b32207a3119",
        "title": "Code duplication detected",
        "description": "Found 5 instances of duplicated code (7 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
        "line_number": 298,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_8db41c0376c1c026f3d21d256576e635",
        "title": "Code duplication detected",
        "description": "Found 16 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
        "line_number": 110,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_b3fe5e887368eddf6d99abc4e996fc88",
        "title": "Code duplication detected",
        "description": "Found 10 instances of duplicated code (4 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
        "line_number": 33,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_aa059b59f916f5ddceecf04cf3e35dee",
        "title": "Code duplication detected",
        "description": "Found 4 instances of duplicated code (8 lines)",
        "location": "/Users/glen/memento-mori/mmm/tests/cook_tests.rs",
        "line_number": 8,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_4ec3c95e04cc3f5fd2dcbfc27e033073",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (39 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod.rs",
        "line_number": 43,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_f7de02e99be8fc439adf4d9642dd5d66",
        "title": "Code duplication detected",
        "description": "Found 6 instances of duplicated code (4 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/context/optimized_hybrid.rs",
        "line_number": 111,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_3bb35e6f138fa7b88ce36b046091c4e5",
        "title": "Code duplication detected",
        "description": "Found 8 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/context/architecture.rs",
        "line_number": 487,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_b8ed8eb0b51aa0fede3776cb22249351",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (12 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
        "line_number": 135,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_2fbbcdb2209b3e77135108aa9d784461",
        "title": "Code duplication detected",
        "description": "Found 6 instances of duplicated code (4 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
        "line_number": 130,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_bdb7049db7ab502fa3d6282e8b959f18",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (15 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
        "line_number": 234,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_fb4ebe3218b84cc568d4300f338b244f",
        "title": "Code duplication detected",
        "description": "Found 3 instances of duplicated code (10 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
        "line_number": 98,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_3b055212868422c0aaa46491977656de",
        "title": "Code duplication detected",
        "description": "Found 15 instances of duplicated code (4 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/analyze/command.rs",
        "line_number": 223,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_8bcfe4a51fe46cc3dcbb73b643f935a1",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (34 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
        "line_number": 279,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_3f9af406da8aa92f4e822dcde7897629",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (13 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
        "line_number": 222,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_ad33247a487aaa845b2ac74351fb74fa",
        "title": "Code duplication detected",
        "description": "Found 11 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
        "line_number": 279,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_97841339d360745054cce077fda9ec60",
        "title": "Code duplication detected",
        "description": "Found 41 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/config/command_discovery.rs",
        "line_number": 154,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_9ff154e69568699467ba40570231c576",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (34 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/cook/analysis/cache.rs",
        "line_number": 142,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_9abb1e81e54a4ec8186e95caaa9dbbeb",
        "title": "Code duplication detected",
        "description": "Found 14 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/config/command.rs",
        "line_number": 352,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_1d80706162b011cb6f9fcd50cb46788d",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (16 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
        "line_number": 13,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_8931185fefb6735d960e4b76c70190c6",
        "title": "Code duplication detected",
        "description": "Found 9 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
        "line_number": 135,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_01a36a25ccd8ed41adf9eba652d0e56d",
        "title": "Code duplication detected",
        "description": "Found 32 instances of duplicated code (4 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
        "line_number": 84,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_e9beadb73ba9c32ea66ccd5a087041fe",
        "title": "Code duplication detected",
        "description": "Found 5 instances of duplicated code (5 lines)",
        "location": "/Users/glen/memento-mori/mmm/tests/integration_test_cook_path.rs",
        "line_number": 66,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_b4bbd74a116212bd19f049097f1fa430",
        "title": "Code duplication detected",
        "description": "Found 9 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/metrics/storage.rs",
        "line_number": 188,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_5cbe904a807c1d2fa37127f5ef0d5880",
        "title": "Code duplication detected",
        "description": "Found 16 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/cook/interaction/display.rs",
        "line_number": 124,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_f4e0a41f04cd2da923e1f93e4dff47ba",
        "title": "Code duplication detected",
        "description": "Found 8 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
        "line_number": 24,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_19fe2fdf6b88df5a239327f8fca9452b",
        "title": "Code duplication detected",
        "description": "Found 3 instances of duplicated code (10 lines)",
        "location": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
        "line_number": 219,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_7d0065ace6d07888b345ce971af1b5ac",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (30 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "line_number": 716,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_23ca5a554baf49ba2cdf94861d4dacbc",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (12 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
        "line_number": 143,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_c4e1b7c6a1302a5e6408b980c71f1ac8",
        "title": "Code duplication detected",
        "description": "Found 3 instances of duplicated code (15 lines)",
        "location": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
        "line_number": 189,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_4a47acec2721fbc6e95061acdd6a4702",
        "title": "Code duplication detected",
        "description": "Found 7 instances of duplicated code (4 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/config/command_discovery.rs",
        "line_number": 127,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_b6d34027cb0ffef4b4706ef659d9b5e7",
        "title": "Code duplication detected",
        "description": "Found 9 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
        "line_number": 308,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_1e5a3c5cd9e88da9b656b08d461bc093",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (14 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
        "line_number": 95,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_154e71603a1abebe15c12ec8652e2acf",
        "title": "Code duplication detected",
        "description": "Found 30 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/config/command.rs",
        "line_number": 271,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_bb08715f4e9677a117e650a1b14a22fc",
        "title": "Code duplication detected",
        "description": "Found 7 instances of duplicated code (4 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
        "line_number": 53,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_b68a0603730d0ac436623ff9f280f7c8",
        "title": "Code duplication detected",
        "description": "Found 13 instances of duplicated code (4 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/context/analyzer.rs",
        "line_number": 362,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_21208f0bfa0f6708fa9e924d59b95cd7",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (20 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "line_number": 1167,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_1c5487c2e223bc4e8d3053ef8c703869",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (12 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
        "line_number": 142,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_2f9f68d6da6643695edce77249fb7562",
        "title": "Code duplication detected",
        "description": "Found 12 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/tests/common/mod.rs",
        "line_number": 148,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_f523f83c21252b4722e61ec20f50fbd0",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (12 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/main.rs",
        "line_number": 166,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_1571fbc3ed2892cb1327c8ca18e22ea8",
        "title": "Code duplication detected",
        "description": "Found 8 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
        "line_number": 85,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_7108994d0102c32e7f806717e4804d0b",
        "title": "Code duplication detected",
        "description": "Found 3 instances of duplicated code (12 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
        "line_number": 18,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_e00df7f797d4ccf8e6f3273e50c1dda4",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (18 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/cook/tests.rs",
        "line_number": 332,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_027184a7db9f0af755c2ab5e8d237a75",
        "title": "Code duplication detected",
        "description": "Found 4 instances of duplicated code (9 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
        "line_number": 76,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_9e165f9ea86bebac6668d5224bea834f",
        "title": "Code duplication detected",
        "description": "Found 7 instances of duplicated code (4 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/subprocess/claude.rs",
        "line_number": 67,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_33622c094bdaaf40860c43d9c407cb31",
        "title": "Code duplication detected",
        "description": "Found 51 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
        "line_number": 454,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_ba963c2fd299ef17efc4d3118914a816",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (12 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
        "line_number": 79,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_acdbf9319eb8f3f7192d4875fbfac869",
        "title": "Code duplication detected",
        "description": "Found 8 instances of duplicated code (4 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/context/architecture.rs",
        "line_number": 34,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_493288a4c8549f03d1f0b1840e272d4d",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (13 lines)",
        "location": "/Users/glen/memento-mori/mmm/tests/cook_tests.rs",
        "line_number": 99,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_75386df54eb1f550e1a7528200343a80",
        "title": "Code duplication detected",
        "description": "Found 3 instances of duplicated code (16 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
        "line_number": 295,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_567ac5cc1260f6e24a8a6ae190a8e14d",
        "title": "Code duplication detected",
        "description": "Found 9 instances of duplicated code (4 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
        "line_number": 415,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_2e0026bf1d9c95427d79d32e5b5d9c7c",
        "title": "Code duplication detected",
        "description": "Found 3 instances of duplicated code (9 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/simple_state/tests.rs",
        "line_number": 169,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_e8e1f65a05bcc00a8e0ad95b6bd23c72",
        "title": "Code duplication detected",
        "description": "Found 5 instances of duplicated code (5 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
        "line_number": 424,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_af6ac087ab569cfd467fe04a1fa5e385",
        "title": "Code duplication detected",
        "description": "Found 10 instances of duplicated code (5 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
        "line_number": 71,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_43a9735e198c420eaa59e9cad9e7b80f",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (24 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
        "line_number": 317,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_4ba55e28a0c9450a9cd22ff487b0b5d7",
        "title": "Code duplication detected",
        "description": "Found 4 instances of duplicated code (9 lines)",
        "location": "/Users/glen/memento-mori/mmm/tests/integration_test_cook_path.rs",
        "line_number": 21,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_e73d66e57a104d3b0e7948b5fa66660a",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (42 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
        "line_number": 318,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_6209f537257c44b0eb256964e03f111e",
        "title": "Code duplication detected",
        "description": "Found 5 instances of duplicated code (5 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
        "line_number": 430,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_55dfaf1ce9b6baef178a2c38610b2f1a",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (18 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod.rs",
        "line_number": 176,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_e4974555c9d5cb3d0d29e47bfe6e2d34",
        "title": "Code duplication detected",
        "description": "Found 4 instances of duplicated code (6 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/metrics/complexity.rs",
        "line_number": 43,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_b2862dabd98eb0402cbfff9ec9b8b624",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (26 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
        "line_number": 109,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_304977dc98199bc75b2aa9f9befbea17",
        "title": "Code duplication detected",
        "description": "Found 9 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
        "line_number": 143,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_7d0371b614987a1b467b34ad8f32ecff",
        "title": "Code duplication detected",
        "description": "Found 154 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
        "line_number": 208,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_992741bb072cee482b3eb2b08b04f61b",
        "title": "Code duplication detected",
        "description": "Found 14 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "line_number": 624,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_c763292f1a31040d0903832134bc8dfe",
        "title": "Code duplication detected",
        "description": "Found 6 instances of duplicated code (4 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
        "line_number": 371,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_8be3152f0cbd81353601f442ee485fc1",
        "title": "Code duplication detected",
        "description": "Found 3 instances of duplicated code (10 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
        "line_number": 75,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_e9bc88e0db2241bf24b82f0bf9174e17",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (12 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "line_number": 1255,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_d5ce15ab47b9a3465c71ab1f7ebea351",
        "title": "Code duplication detected",
        "description": "Found 30 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
        "line_number": 106,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_cce06cbde652d6edceca09c90f4eaf90",
        "title": "Code duplication detected",
        "description": "Found 15 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
        "line_number": 348,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_2a829b8c7f2fe9f3e8b05eac47a14172",
        "title": "Code duplication detected",
        "description": "Found 5 instances of duplicated code (5 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
        "line_number": 80,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_0287baa8ba1b80c797af0330e704fd94",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (18 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
        "line_number": 295,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_5f10896f5226868c2780b6d8b03f310c",
        "title": "Code duplication detected",
        "description": "Found 25 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
        "line_number": 99,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_746cac2082cc493af330ca5cb31f836e",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (15 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "line_number": 697,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_306052d3c40b94471588ce7986eaa5d8",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (24 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
        "line_number": 652,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_3ccaaccbf510897dce417131a06407f7",
        "title": "Code duplication detected",
        "description": "Found 42 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/config/command.rs",
        "line_number": 397,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_f16fdea1634b35b1d419615234471fa3",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (13 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
        "line_number": 96,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_5085251a1dccb0a9d7792c12f5f5e68f",
        "title": "Code duplication detected",
        "description": "Found 8 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/config/metadata_parser.rs",
        "line_number": 464,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_f972289d399966122540c6098a6cdf9c",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (14 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "line_number": 602,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_486fcd692166a271e1f6a15c05a20756",
        "title": "Code duplication detected",
        "description": "Found 8 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/tests/workflow_commit_verification_tests.rs",
        "line_number": 41,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_b8bae42f33a3a98ed8a5f099150834fc",
        "title": "Code duplication detected",
        "description": "Found 6 instances of duplicated code (4 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/cook/analysis/runner.rs",
        "line_number": 58,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_007d67c94b65844373c3c297f8302eab",
        "title": "Code duplication detected",
        "description": "Found 9 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "line_number": 1686,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_3f92c983beb0a4ea5797945b06732db1",
        "title": "Code duplication detected",
        "description": "Found 17 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
        "line_number": 264,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_c4f51ee5b5585f8787d642d6154e432d",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (21 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
        "line_number": 364,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_d85dff91ffafcd662141bffe0daa6f3b",
        "title": "Code duplication detected",
        "description": "Found 4 instances of duplicated code (6 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
        "line_number": 70,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_5757d8ef7c3118eb8bfab661af3e0d55",
        "title": "Code duplication detected",
        "description": "Found 7 instances of duplicated code (6 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
        "line_number": 61,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_f33ede8257fceb643a114f883855771c",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (50 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
        "line_number": 228,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_37ca2eb2ce7b6bf86c2c28dbcb896d24",
        "title": "Code duplication detected",
        "description": "Found 23 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
        "line_number": 210,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_9846a0d64e50c1aab7a4128200d0d33a",
        "title": "Code duplication detected",
        "description": "Found 22 instances of duplicated code (4 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
        "line_number": 165,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_d2ef0365d68999925c0c286e73a9ae22",
        "title": "Code duplication detected",
        "description": "Found 12 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "line_number": 621,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_f6816e30c8b5e7ccf57d85f8329d38c7",
        "title": "Code duplication detected",
        "description": "Found 4 instances of duplicated code (7 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
        "line_number": 389,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_dd65d6cd6b17169b84dbbe3a1efaf13b",
        "title": "Code duplication detected",
        "description": "Found 5 instances of duplicated code (5 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/cook/tests.rs",
        "line_number": 287,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_016d2b794a04250908792f3e0248033b",
        "title": "Code duplication detected",
        "description": "Found 9 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
        "line_number": 44,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_aabc465b980710fe7b393738175f496f",
        "title": "Code duplication detected",
        "description": "Found 10 instances of duplicated code (3 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
        "line_number": 4,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_ff317687a03ee962c2e958a899c79a07",
        "title": "Code duplication detected",
        "description": "Found 14 instances of duplicated code (4 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
        "line_number": 39,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      },
      {
        "id": "DUP_8d1335071a93657b1b53f52ce2420778",
        "title": "Code duplication detected",
        "description": "Found 2 instances of duplicated code (22 lines)",
        "location": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
        "line_number": 147,
        "debt_type": "Duplication",
        "impact": 5,
        "effort": 4,
        "tags": [
          "duplication"
        ]
      }
    ],
    "hotspots": [
      {
        "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
        "function": "test_cook_stops_early_when_no_changes",
        "complexity": 12,
        "lines": 92
      },
      {
        "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
        "function": "test_focus_applied_every_iteration",
        "complexity": 17,
        "lines": 109
      },
      {
        "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
        "function": "test_cook_worktree_multiple_iterations",
        "complexity": 12,
        "lines": 83
      },
      {
        "file": "/Users/glen/memento-mori/mmm/tests/workflow_commit_verification_tests.rs",
        "function": "setup_test_repo",
        "complexity": 11,
        "lines": 83
      },
      {
        "file": "/Users/glen/memento-mori/mmm/tests/common/mod.rs",
        "function": "build",
        "complexity": 12,
        "lines": 31
      },
      {
        "file": "/Users/glen/memento-mori/mmm/tests/command_parsing_tests.rs",
        "function": "parse_command_string",
        "complexity": 17,
        "lines": 50
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
        "function": "handle_existing_commands",
        "complexity": 11,
        "lines": 46
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/metrics/performance.rs",
        "function": "find_binary_size",
        "complexity": 12,
        "lines": 34
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
        "function": "write_events",
        "complexity": 15,
        "lines": 40
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/context/analyzer.rs",
        "function": "analyze",
        "complexity": 12,
        "lines": 67
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/context/analyzer.rs",
        "function": "update",
        "complexity": 14,
        "lines": 73
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
        "function": "find_tested_functions",
        "complexity": 11,
        "lines": 81
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
        "function": "analyze_coverage",
        "complexity": 11,
        "lines": 114
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/context/mod.rs",
        "function": "save_analysis",
        "complexity": 21,
        "lines": 92
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "function": "count_match_arms",
        "complexity": 49,
        "lines": 382
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "function": "detect_duplicates",
        "complexity": 17,
        "lines": 131
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "function": "test_full_debt_mapping",
        "complexity": 16,
        "lines": 89
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
        "function": "complex_function",
        "complexity": 16,
        "lines": 47
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
        "function": "run_tarpaulin",
        "complexity": 19,
        "lines": 114
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
        "function": "convert_tarpaulin_data",
        "complexity": 12,
        "lines": 95
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
        "function": "identify_critical_paths_with_coverage",
        "complexity": 11,
        "lines": 87
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
        "function": "extract_type_names_internal",
        "complexity": 21,
        "lines": 171
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
        "function": "process",
        "complexity": 15,
        "lines": 94
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
        "function": "detect_test_patterns",
        "complexity": 13,
        "lines": 76
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/context/summary.rs",
        "function": "from_debt_map",
        "complexity": 12,
        "lines": 111
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/config/command_parser.rs",
        "function": "parse_command_string",
        "complexity": 12,
        "lines": 60
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/config/command_discovery.rs",
        "function": "scan_commands",
        "complexity": 13,
        "lines": 63
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
        "function": "validate_command",
        "complexity": 13,
        "lines": 56
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
        "function": "validate_argument_type",
        "complexity": 11,
        "lines": 34
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
        "function": "validate_option_value",
        "complexity": 17,
        "lines": 42
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
        "function": "load_from_path",
        "complexity": 13,
        "lines": 60
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
        "function": "validate_strict",
        "complexity": 12,
        "lines": 51
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
        "function": "validate_argument_type",
        "complexity": 11,
        "lines": 36
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
        "function": "validate_option_value",
        "complexity": 17,
        "lines": 44
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
        "function": "test_merge_updates_state",
        "complexity": 11,
        "lines": 41
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
        "function": "list_sessions",
        "complexity": 14,
        "lines": 89
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
        "function": "merge_session",
        "complexity": 15,
        "lines": 115
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
        "function": "status",
        "complexity": 12,
        "lines": 41
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/subprocess/runner.rs",
        "function": "run",
        "complexity": 18,
        "lines": 82
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/subprocess/runner.rs",
        "function": "run_streaming",
        "complexity": 18,
        "lines": 82
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/subprocess/runner.rs",
        "function": "run",
        "complexity": 18,
        "lines": 81
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/metrics/collector.rs",
        "function": "collect_compile_metrics",
        "complexity": 11,
        "lines": 39
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/analysis/runner.rs",
        "function": "is_supported_project",
        "complexity": 11,
        "lines": 40
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "function": "analyze_project_comprehensive",
        "complexity": 12,
        "lines": 76
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "function": "run_internal",
        "complexity": 22,
        "lines": 70
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "function": "run_improvement_loop",
        "complexity": 15,
        "lines": 72
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "function": "setup_improvement_environment",
        "complexity": 11,
        "lines": 32
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "function": "run_improvement_iterations",
        "complexity": 12,
        "lines": 54
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "function": "run_with_mapping_in_worktree",
        "complexity": 11,
        "lines": 66
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "function": "run_improvement_loop_with_variables",
        "complexity": 22,
        "lines": 86
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
        "function": "resume_session",
        "complexity": 20,
        "lines": 82
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/mod.rs",
        "function": "cook",
        "complexity": 22,
        "lines": 79
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/workflow/executor.rs",
        "function": "execute",
        "complexity": 32,
        "lines": 122
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
        "function": "run",
        "complexity": 12,
        "lines": 47
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
        "function": "execute_workflow",
        "complexity": 13,
        "lines": 81
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
        "function": "cleanup",
        "complexity": 11,
        "lines": 30
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
        "function": "execute_structured_workflow",
        "complexity": 31,
        "lines": 173
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/retry.rs",
        "function": "execute_with_retry",
        "complexity": 17,
        "lines": 65
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/cook/session/adapter.rs",
        "function": "update_session",
        "complexity": 14,
        "lines": 73
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/main.rs",
        "function": "handle_merge_command",
        "complexity": 15,
        "lines": 49
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/analyze/command.rs",
        "function": "run_context_analysis",
        "complexity": 12,
        "lines": 41
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/analyze/command.rs",
        "function": "run_metrics_analysis",
        "complexity": 12,
        "lines": 44
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/analyze/command.rs",
        "function": "display_pretty_analysis",
        "complexity": 15,
        "lines": 144
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
        "function": "execute_command",
        "complexity": 20,
        "lines": 84
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/git/parsers.rs",
        "function": "parse_status_output",
        "complexity": 20,
        "lines": 42
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/git/parsers.rs",
        "function": "parse_worktree_list",
        "complexity": 14,
        "lines": 61
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
        "function": "default_response",
        "complexity": 11,
        "lines": 46
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
        "function": "format_status_output",
        "complexity": 11,
        "lines": 56
      },
      {
        "file": "/Users/glen/memento-mori/mmm/src/session/manager.rs",
        "function": "apply_event",
        "complexity": 13,
        "lines": 73
      }
    ],
    "duplication_map": {
      "e61f1e35d89680c5a7353812467581fe": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 280,
          "end_line": 285,
          "content_hash": "e61f1e35d89680c5a7353812467581fe"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 289,
          "end_line": 294,
          "content_hash": "e61f1e35d89680c5a7353812467581fe"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 299,
          "end_line": 304,
          "content_hash": "e61f1e35d89680c5a7353812467581fe"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 308,
          "end_line": 313,
          "content_hash": "e61f1e35d89680c5a7353812467581fe"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 317,
          "end_line": 322,
          "content_hash": "e61f1e35d89680c5a7353812467581fe"
        }
      ],
      "9e44af87befb39b7a1996846baf6ac5b": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
          "start_line": 184,
          "end_line": 186,
          "content_hash": "9e44af87befb39b7a1996846baf6ac5b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 86,
          "end_line": 88,
          "content_hash": "9e44af87befb39b7a1996846baf6ac5b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/execution/runner.rs",
          "start_line": 55,
          "end_line": 57,
          "content_hash": "9e44af87befb39b7a1996846baf6ac5b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/execution/runner.rs",
          "start_line": 89,
          "end_line": 91,
          "content_hash": "9e44af87befb39b7a1996846baf6ac5b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/performance.rs",
          "start_line": 80,
          "end_line": 82,
          "content_hash": "9e44af87befb39b7a1996846baf6ac5b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/quality.rs",
          "start_line": 156,
          "end_line": 158,
          "content_hash": "9e44af87befb39b7a1996846baf6ac5b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 95,
          "end_line": 97,
          "content_hash": "9e44af87befb39b7a1996846baf6ac5b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 202,
          "end_line": 204,
          "content_hash": "9e44af87befb39b7a1996846baf6ac5b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 340,
          "end_line": 342,
          "content_hash": "9e44af87befb39b7a1996846baf6ac5b"
        }
      ],
      "babfb774475e14a438ef9a37a19cad21": [
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 81,
          "end_line": 86,
          "content_hash": "babfb774475e14a438ef9a37a19cad21"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 209,
          "end_line": 214,
          "content_hash": "babfb774475e14a438ef9a37a19cad21"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 306,
          "end_line": 311,
          "content_hash": "babfb774475e14a438ef9a37a19cad21"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 442,
          "end_line": 447,
          "content_hash": "babfb774475e14a438ef9a37a19cad21"
        }
      ],
      "6032a5c5e15325f2d05b5fe17426cb66": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 7,
          "end_line": 14,
          "content_hash": "6032a5c5e15325f2d05b5fe17426cb66"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/config_integration_tests.rs",
          "start_line": 7,
          "end_line": 14,
          "content_hash": "6032a5c5e15325f2d05b5fe17426cb66"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/worktree_integration_tests.rs",
          "start_line": 8,
          "end_line": 15,
          "content_hash": "6032a5c5e15325f2d05b5fe17426cb66"
        }
      ],
      "01a7754d88aec3e69a5499d2bfaca36c": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 131,
          "end_line": 134,
          "content_hash": "01a7754d88aec3e69a5499d2bfaca36c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 150,
          "end_line": 153,
          "content_hash": "01a7754d88aec3e69a5499d2bfaca36c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 204,
          "end_line": 207,
          "content_hash": "01a7754d88aec3e69a5499d2bfaca36c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 268,
          "end_line": 271,
          "content_hash": "01a7754d88aec3e69a5499d2bfaca36c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 292,
          "end_line": 295,
          "content_hash": "01a7754d88aec3e69a5499d2bfaca36c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 309,
          "end_line": 312,
          "content_hash": "01a7754d88aec3e69a5499d2bfaca36c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_tests.rs",
          "start_line": 237,
          "end_line": 240,
          "content_hash": "01a7754d88aec3e69a5499d2bfaca36c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_tests.rs",
          "start_line": 255,
          "end_line": 258,
          "content_hash": "01a7754d88aec3e69a5499d2bfaca36c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 472,
          "end_line": 475,
          "content_hash": "01a7754d88aec3e69a5499d2bfaca36c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/registry.rs",
          "start_line": 236,
          "end_line": 239,
          "content_hash": "01a7754d88aec3e69a5499d2bfaca36c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/registry.rs",
          "start_line": 249,
          "end_line": 252,
          "content_hash": "01a7754d88aec3e69a5499d2bfaca36c"
        }
      ],
      "014d2d5df23c1aa864835c1cadb808d4": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
          "start_line": 167,
          "end_line": 169,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_discovery.rs",
          "start_line": 63,
          "end_line": 65,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/metadata_parser.rs",
          "start_line": 104,
          "end_line": 106,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/metadata_parser.rs",
          "start_line": 112,
          "end_line": 114,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/metadata_parser.rs",
          "start_line": 147,
          "end_line": 149,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/metadata_parser.rs",
          "start_line": 178,
          "end_line": 180,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 435,
          "end_line": 437,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 456,
          "end_line": 458,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 461,
          "end_line": 463,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
          "start_line": 200,
          "end_line": 202,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 153,
          "end_line": 155,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 471,
          "end_line": 473,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/retry.rs",
          "start_line": 85,
          "end_line": 87,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/parsers.rs",
          "start_line": 13,
          "end_line": 15,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/parsers.rs",
          "start_line": 132,
          "end_line": 134,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/parsers.rs",
          "start_line": 137,
          "end_line": 139,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/parsers.rs",
          "start_line": 176,
          "end_line": 178,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 266,
          "end_line": 268,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/mock.rs",
          "start_line": 106,
          "end_line": 108,
          "content_hash": "014d2d5df23c1aa864835c1cadb808d4"
        }
      ],
      "20f880ae4d0aaff29c8b8b32207a3119": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 298,
          "end_line": 304,
          "content_hash": "20f880ae4d0aaff29c8b8b32207a3119"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 332,
          "end_line": 338,
          "content_hash": "20f880ae4d0aaff29c8b8b32207a3119"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 370,
          "end_line": 376,
          "content_hash": "20f880ae4d0aaff29c8b8b32207a3119"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 408,
          "end_line": 414,
          "content_hash": "20f880ae4d0aaff29c8b8b32207a3119"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 501,
          "end_line": 507,
          "content_hash": "20f880ae4d0aaff29c8b8b32207a3119"
        }
      ],
      "8db41c0376c1c026f3d21d256576e635": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 110,
          "end_line": 112,
          "content_hash": "8db41c0376c1c026f3d21d256576e635"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 180,
          "end_line": 182,
          "content_hash": "8db41c0376c1c026f3d21d256576e635"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 186,
          "end_line": 188,
          "content_hash": "8db41c0376c1c026f3d21d256576e635"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 274,
          "end_line": 276,
          "content_hash": "8db41c0376c1c026f3d21d256576e635"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 863,
          "end_line": 865,
          "content_hash": "8db41c0376c1c026f3d21d256576e635"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 178,
          "end_line": 180,
          "content_hash": "8db41c0376c1c026f3d21d256576e635"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 224,
          "end_line": 226,
          "content_hash": "8db41c0376c1c026f3d21d256576e635"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/parsers.rs",
          "start_line": 54,
          "end_line": 56,
          "content_hash": "8db41c0376c1c026f3d21d256576e635"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/parsers.rs",
          "start_line": 99,
          "end_line": 101,
          "content_hash": "8db41c0376c1c026f3d21d256576e635"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/parsers.rs",
          "start_line": 117,
          "end_line": 119,
          "content_hash": "8db41c0376c1c026f3d21d256576e635"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 435,
          "end_line": 437,
          "content_hash": "8db41c0376c1c026f3d21d256576e635"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 160,
          "end_line": 162,
          "content_hash": "8db41c0376c1c026f3d21d256576e635"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 221,
          "end_line": 223,
          "content_hash": "8db41c0376c1c026f3d21d256576e635"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 89,
          "end_line": 91,
          "content_hash": "8db41c0376c1c026f3d21d256576e635"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 166,
          "end_line": 168,
          "content_hash": "8db41c0376c1c026f3d21d256576e635"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/registry.rs",
          "start_line": 69,
          "end_line": 71,
          "content_hash": "8db41c0376c1c026f3d21d256576e635"
        }
      ],
      "b3fe5e887368eddf6d99abc4e996fc88": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 33,
          "end_line": 36,
          "content_hash": "b3fe5e887368eddf6d99abc4e996fc88"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 126,
          "end_line": 129,
          "content_hash": "b3fe5e887368eddf6d99abc4e996fc88"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 145,
          "end_line": 148,
          "content_hash": "b3fe5e887368eddf6d99abc4e996fc88"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 164,
          "end_line": 167,
          "content_hash": "b3fe5e887368eddf6d99abc4e996fc88"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 186,
          "end_line": 189,
          "content_hash": "b3fe5e887368eddf6d99abc4e996fc88"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 199,
          "end_line": 202,
          "content_hash": "b3fe5e887368eddf6d99abc4e996fc88"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 220,
          "end_line": 223,
          "content_hash": "b3fe5e887368eddf6d99abc4e996fc88"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 239,
          "end_line": 242,
          "content_hash": "b3fe5e887368eddf6d99abc4e996fc88"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 262,
          "end_line": 265,
          "content_hash": "b3fe5e887368eddf6d99abc4e996fc88"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 287,
          "end_line": 290,
          "content_hash": "b3fe5e887368eddf6d99abc4e996fc88"
        }
      ],
      "aa059b59f916f5ddceecf04cf3e35dee": [
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_tests.rs",
          "start_line": 8,
          "end_line": 15,
          "content_hash": "aa059b59f916f5ddceecf04cf3e35dee"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/integration_test_cook_path.rs",
          "start_line": 13,
          "end_line": 20,
          "content_hash": "aa059b59f916f5ddceecf04cf3e35dee"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/integration_test_cook_path.rs",
          "start_line": 48,
          "end_line": 55,
          "content_hash": "aa059b59f916f5ddceecf04cf3e35dee"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/integration_test_cook_path.rs",
          "start_line": 193,
          "end_line": 200,
          "content_hash": "aa059b59f916f5ddceecf04cf3e35dee"
        }
      ],
      "4ec3c95e04cc3f5fd2dcbfc27e033073": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod.rs",
          "start_line": 43,
          "end_line": 81,
          "content_hash": "4ec3c95e04cc3f5fd2dcbfc27e033073"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 536,
          "end_line": 574,
          "content_hash": "4ec3c95e04cc3f5fd2dcbfc27e033073"
        }
      ],
      "f7de02e99be8fc439adf4d9642dd5d66": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/optimized_hybrid.rs",
          "start_line": 111,
          "end_line": 114,
          "content_hash": "f7de02e99be8fc439adf4d9642dd5d66"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/summary.rs",
          "start_line": 511,
          "end_line": 514,
          "content_hash": "f7de02e99be8fc439adf4d9642dd5d66"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
          "start_line": 205,
          "end_line": 208,
          "content_hash": "f7de02e99be8fc439adf4d9642dd5d66"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 526,
          "end_line": 529,
          "content_hash": "f7de02e99be8fc439adf4d9642dd5d66"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 596,
          "end_line": 599,
          "content_hash": "f7de02e99be8fc439adf4d9642dd5d66"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/history.rs",
          "start_line": 174,
          "end_line": 177,
          "content_hash": "f7de02e99be8fc439adf4d9642dd5d66"
        }
      ],
      "3bb35e6f138fa7b88ce36b046091c4e5": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/architecture.rs",
          "start_line": 487,
          "end_line": 489,
          "content_hash": "3bb35e6f138fa7b88ce36b046091c4e5"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/dependencies.rs",
          "start_line": 731,
          "end_line": 733,
          "content_hash": "3bb35e6f138fa7b88ce36b046091c4e5"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/dependencies.rs",
          "start_line": 782,
          "end_line": 784,
          "content_hash": "3bb35e6f138fa7b88ce36b046091c4e5"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/hybrid_coverage.rs",
          "start_line": 479,
          "end_line": 481,
          "content_hash": "3bb35e6f138fa7b88ce36b046091c4e5"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
          "start_line": 247,
          "end_line": 249,
          "content_hash": "3bb35e6f138fa7b88ce36b046091c4e5"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 516,
          "end_line": 518,
          "content_hash": "3bb35e6f138fa7b88ce36b046091c4e5"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 698,
          "end_line": 700,
          "content_hash": "3bb35e6f138fa7b88ce36b046091c4e5"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/context_optimization_tests.rs",
          "start_line": 88,
          "end_line": 90,
          "content_hash": "3bb35e6f138fa7b88ce36b046091c4e5"
        }
      ],
      "b8ed8eb0b51aa0fede3776cb22249351": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
          "start_line": 135,
          "end_line": 146,
          "content_hash": "b8ed8eb0b51aa0fede3776cb22249351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/retry.rs",
          "start_line": 58,
          "end_line": 69,
          "content_hash": "b8ed8eb0b51aa0fede3776cb22249351"
        }
      ],
      "2fbbcdb2209b3e77135108aa9d784461": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 130,
          "end_line": 133,
          "content_hash": "2fbbcdb2209b3e77135108aa9d784461"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 152,
          "end_line": 155,
          "content_hash": "2fbbcdb2209b3e77135108aa9d784461"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 261,
          "end_line": 264,
          "content_hash": "2fbbcdb2209b3e77135108aa9d784461"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 274,
          "end_line": 277,
          "content_hash": "2fbbcdb2209b3e77135108aa9d784461"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 490,
          "end_line": 493,
          "content_hash": "2fbbcdb2209b3e77135108aa9d784461"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 496,
          "end_line": 499,
          "content_hash": "2fbbcdb2209b3e77135108aa9d784461"
        }
      ],
      "bdb7049db7ab502fa3d6282e8b959f18": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 234,
          "end_line": 248,
          "content_hash": "bdb7049db7ab502fa3d6282e8b959f18"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 267,
          "end_line": 281,
          "content_hash": "bdb7049db7ab502fa3d6282e8b959f18"
        }
      ],
      "fb4ebe3218b84cc568d4300f338b244f": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 98,
          "end_line": 107,
          "content_hash": "fb4ebe3218b84cc568d4300f338b244f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 169,
          "end_line": 178,
          "content_hash": "fb4ebe3218b84cc568d4300f338b244f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 201,
          "end_line": 210,
          "content_hash": "fb4ebe3218b84cc568d4300f338b244f"
        }
      ],
      "3b055212868422c0aaa46491977656de": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/command.rs",
          "start_line": 223,
          "end_line": 226,
          "content_hash": "3b055212868422c0aaa46491977656de"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/command.rs",
          "start_line": 271,
          "end_line": 274,
          "content_hash": "3b055212868422c0aaa46491977656de"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 271,
          "end_line": 274,
          "content_hash": "3b055212868422c0aaa46491977656de"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 163,
          "end_line": 166,
          "content_hash": "3b055212868422c0aaa46491977656de"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/architecture.rs",
          "start_line": 162,
          "end_line": 165,
          "content_hash": "3b055212868422c0aaa46491977656de"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 680,
          "end_line": 683,
          "content_hash": "3b055212868422c0aaa46491977656de"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1673,
          "end_line": 1676,
          "content_hash": "3b055212868422c0aaa46491977656de"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/retry.rs",
          "start_line": 418,
          "end_line": 421,
          "content_hash": "3b055212868422c0aaa46491977656de"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/tests.rs",
          "start_line": 206,
          "end_line": 209,
          "content_hash": "3b055212868422c0aaa46491977656de"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/tests.rs",
          "start_line": 585,
          "end_line": 588,
          "content_hash": "3b055212868422c0aaa46491977656de"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/testing.rs",
          "start_line": 137,
          "end_line": 140,
          "content_hash": "3b055212868422c0aaa46491977656de"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/testing.rs",
          "start_line": 201,
          "end_line": 204,
          "content_hash": "3b055212868422c0aaa46491977656de"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 396,
          "end_line": 399,
          "content_hash": "3b055212868422c0aaa46491977656de"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/common/mod.rs",
          "start_line": 211,
          "end_line": 214,
          "content_hash": "3b055212868422c0aaa46491977656de"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 219,
          "end_line": 222,
          "content_hash": "3b055212868422c0aaa46491977656de"
        }
      ],
      "8bcfe4a51fe46cc3dcbb73b643f935a1": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 279,
          "end_line": 312,
          "content_hash": "8bcfe4a51fe46cc3dcbb73b643f935a1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 178,
          "end_line": 211,
          "content_hash": "8bcfe4a51fe46cc3dcbb73b643f935a1"
        }
      ],
      "3f9af406da8aa92f4e822dcde7897629": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 222,
          "end_line": 234,
          "content_hash": "3f9af406da8aa92f4e822dcde7897629"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 433,
          "end_line": 445,
          "content_hash": "3f9af406da8aa92f4e822dcde7897629"
        }
      ],
      "ad33247a487aaa845b2ac74351fb74fa": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 279,
          "end_line": 281,
          "content_hash": "ad33247a487aaa845b2ac74351fb74fa"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_parser.rs",
          "start_line": 188,
          "end_line": 190,
          "content_hash": "ad33247a487aaa845b2ac74351fb74fa"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
          "start_line": 783,
          "end_line": 785,
          "content_hash": "ad33247a487aaa845b2ac74351fb74fa"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
          "start_line": 537,
          "end_line": 539,
          "content_hash": "ad33247a487aaa845b2ac74351fb74fa"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
          "start_line": 567,
          "end_line": 569,
          "content_hash": "ad33247a487aaa845b2ac74351fb74fa"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_tests.rs",
          "start_line": 233,
          "end_line": 235,
          "content_hash": "ad33247a487aaa845b2ac74351fb74fa"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_tests.rs",
          "start_line": 250,
          "end_line": 252,
          "content_hash": "ad33247a487aaa845b2ac74351fb74fa"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/simple_state/tests.rs",
          "start_line": 55,
          "end_line": 57,
          "content_hash": "ad33247a487aaa845b2ac74351fb74fa"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/simple_state/tests.rs",
          "start_line": 91,
          "end_line": 93,
          "content_hash": "ad33247a487aaa845b2ac74351fb74fa"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/integration_test_cook_path.rs",
          "start_line": 258,
          "end_line": 260,
          "content_hash": "ad33247a487aaa845b2ac74351fb74fa"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/metrics_integration.rs",
          "start_line": 23,
          "end_line": 25,
          "content_hash": "ad33247a487aaa845b2ac74351fb74fa"
        }
      ],
      "97841339d360745054cce077fda9ec60": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_discovery.rs",
          "start_line": 154,
          "end_line": 156,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 329,
          "end_line": 331,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 358,
          "end_line": 360,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 362,
          "end_line": 364,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 388,
          "end_line": 390,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 392,
          "end_line": 394,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 416,
          "end_line": 418,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/hybrid_coverage.rs",
          "start_line": 494,
          "end_line": 496,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/execution/claude.rs",
          "start_line": 200,
          "end_line": 202,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/execution/runner.rs",
          "start_line": 149,
          "end_line": 151,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/execution/runner.rs",
          "start_line": 219,
          "end_line": 221,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/git_ops.rs",
          "start_line": 124,
          "end_line": 126,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/metrics/collector.rs",
          "start_line": 245,
          "end_line": 247,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/metrics/collector.rs",
          "start_line": 262,
          "end_line": 264,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/metrics/reporter.rs",
          "start_line": 283,
          "end_line": 285,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod.rs",
          "start_line": 232,
          "end_line": 234,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_tests.rs",
          "start_line": 163,
          "end_line": 165,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_tests.rs",
          "start_line": 183,
          "end_line": 185,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_tests.rs",
          "start_line": 200,
          "end_line": 202,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 258,
          "end_line": 260,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 308,
          "end_line": 310,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 342,
          "end_line": 344,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 380,
          "end_line": 382,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 418,
          "end_line": 420,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 511,
          "end_line": 513,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 452,
          "end_line": 454,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 500,
          "end_line": 502,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 537,
          "end_line": 539,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/context.rs",
          "start_line": 148,
          "end_line": 150,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/testing.rs",
          "start_line": 299,
          "end_line": 301,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/testing.rs",
          "start_line": 316,
          "end_line": 318,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/testing.rs",
          "start_line": 332,
          "end_line": 334,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/testing.rs",
          "start_line": 356,
          "end_line": 358,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/manager.rs",
          "start_line": 358,
          "end_line": 360,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/manager.rs",
          "start_line": 371,
          "end_line": 373,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/tests.rs",
          "start_line": 75,
          "end_line": 77,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/tests.rs",
          "start_line": 125,
          "end_line": 127,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/tests.rs",
          "start_line": 229,
          "end_line": 231,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/tests.rs",
          "start_line": 67,
          "end_line": 69,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/tests.rs",
          "start_line": 116,
          "end_line": 118,
          "content_hash": "97841339d360745054cce077fda9ec60"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/metrics_integration.rs",
          "start_line": 35,
          "end_line": 37,
          "content_hash": "97841339d360745054cce077fda9ec60"
        }
      ],
      "9ff154e69568699467ba40570231c576": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/analysis/cache.rs",
          "start_line": 142,
          "end_line": 175,
          "content_hash": "9ff154e69568699467ba40570231c576"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/context_optimization_tests.rs",
          "start_line": 187,
          "end_line": 220,
          "content_hash": "9ff154e69568699467ba40570231c576"
        }
      ],
      "9abb1e81e54a4ec8186e95caaa9dbbeb": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command.rs",
          "start_line": 352,
          "end_line": 354,
          "content_hash": "9abb1e81e54a4ec8186e95caaa9dbbeb"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 408,
          "end_line": 410,
          "content_hash": "9abb1e81e54a4ec8186e95caaa9dbbeb"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
          "start_line": 579,
          "end_line": 581,
          "content_hash": "9abb1e81e54a4ec8186e95caaa9dbbeb"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
          "start_line": 733,
          "end_line": 735,
          "content_hash": "9abb1e81e54a4ec8186e95caaa9dbbeb"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/dependencies.rs",
          "start_line": 582,
          "end_line": 584,
          "content_hash": "9abb1e81e54a4ec8186e95caaa9dbbeb"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/mod.rs",
          "start_line": 282,
          "end_line": 284,
          "content_hash": "9abb1e81e54a4ec8186e95caaa9dbbeb"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/size_manager.rs",
          "start_line": 313,
          "end_line": 315,
          "content_hash": "9abb1e81e54a4ec8186e95caaa9dbbeb"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 644,
          "end_line": 646,
          "content_hash": "9abb1e81e54a4ec8186e95caaa9dbbeb"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/retry.rs",
          "start_line": 187,
          "end_line": 189,
          "content_hash": "9abb1e81e54a4ec8186e95caaa9dbbeb"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/parsers.rs",
          "start_line": 231,
          "end_line": 233,
          "content_hash": "9abb1e81e54a4ec8186e95caaa9dbbeb"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/config.rs",
          "start_line": 78,
          "end_line": 80,
          "content_hash": "9abb1e81e54a4ec8186e95caaa9dbbeb"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/persistence.rs",
          "start_line": 59,
          "end_line": 61,
          "content_hash": "9abb1e81e54a4ec8186e95caaa9dbbeb"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/state.rs",
          "start_line": 121,
          "end_line": 123,
          "content_hash": "9abb1e81e54a4ec8186e95caaa9dbbeb"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cli_tests.rs",
          "start_line": 191,
          "end_line": 193,
          "content_hash": "9abb1e81e54a4ec8186e95caaa9dbbeb"
        }
      ],
      "1d80706162b011cb6f9fcd50cb46788d": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 13,
          "end_line": 28,
          "content_hash": "1d80706162b011cb6f9fcd50cb46788d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/worktree_integration_tests.rs",
          "start_line": 24,
          "end_line": 39,
          "content_hash": "1d80706162b011cb6f9fcd50cb46788d"
        }
      ],
      "8931185fefb6735d960e4b76c70190c6": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 135,
          "end_line": 137,
          "content_hash": "8931185fefb6735d960e4b76c70190c6"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 147,
          "end_line": 149,
          "content_hash": "8931185fefb6735d960e4b76c70190c6"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 164,
          "end_line": 166,
          "content_hash": "8931185fefb6735d960e4b76c70190c6"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 191,
          "end_line": 193,
          "content_hash": "8931185fefb6735d960e4b76c70190c6"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 257,
          "end_line": 259,
          "content_hash": "8931185fefb6735d960e4b76c70190c6"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 322,
          "end_line": 324,
          "content_hash": "8931185fefb6735d960e4b76c70190c6"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 337,
          "end_line": 339,
          "content_hash": "8931185fefb6735d960e4b76c70190c6"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 352,
          "end_line": 354,
          "content_hash": "8931185fefb6735d960e4b76c70190c6"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 61,
          "end_line": 63,
          "content_hash": "8931185fefb6735d960e4b76c70190c6"
        }
      ],
      "01a36a25ccd8ed41adf9eba652d0e56d": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
          "start_line": 84,
          "end_line": 87,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
          "start_line": 358,
          "end_line": 361,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 73,
          "end_line": 76,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 220,
          "end_line": 223,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 64,
          "end_line": 67,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/metadata_parser.rs",
          "start_line": 269,
          "end_line": 272,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/analyzer.rs",
          "start_line": 23,
          "end_line": 26,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/architecture.rs",
          "start_line": 28,
          "end_line": 31,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
          "start_line": 108,
          "end_line": 111,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 159,
          "end_line": 162,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/dependencies.rs",
          "start_line": 158,
          "end_line": 161,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/hybrid_coverage.rs",
          "start_line": 267,
          "end_line": 270,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/size_manager.rs",
          "start_line": 56,
          "end_line": 59,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 112,
          "end_line": 115,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/execution/runner.rs",
          "start_line": 45,
          "end_line": 48,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/execution/runner.rs",
          "start_line": 162,
          "end_line": 165,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/display.rs",
          "start_line": 31,
          "end_line": 34,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/mod.rs",
          "start_line": 61,
          "end_line": 64,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/mod.rs",
          "start_line": 122,
          "end_line": 125,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/prompts.rs",
          "start_line": 24,
          "end_line": 27,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/metrics/reporter.rs",
          "start_line": 49,
          "end_line": 52,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 273,
          "end_line": 276,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/types.rs",
          "start_line": 83,
          "end_line": 86,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/types.rs",
          "start_line": 121,
          "end_line": 124,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/complexity.rs",
          "start_line": 193,
          "end_line": 196,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/history.rs",
          "start_line": 128,
          "end_line": 131,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/mod.rs",
          "start_line": 46,
          "end_line": 49,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/storage.rs",
          "start_line": 109,
          "end_line": 112,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/simple_state/types.rs",
          "start_line": 60,
          "end_line": 63,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/mock.rs",
          "start_line": 188,
          "end_line": 191,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/testing/mod.rs",
          "start_line": 69,
          "end_line": 72,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/testing/mod.rs",
          "start_line": 112,
          "end_line": 115,
          "content_hash": "01a36a25ccd8ed41adf9eba652d0e56d"
        }
      ],
      "e9beadb73ba9c32ea66ccd5a087041fe": [
        {
          "file": "/Users/glen/memento-mori/mmm/tests/integration_test_cook_path.rs",
          "start_line": 66,
          "end_line": 70,
          "content_hash": "e9beadb73ba9c32ea66ccd5a087041fe"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/integration_test_cook_path.rs",
          "start_line": 127,
          "end_line": 131,
          "content_hash": "e9beadb73ba9c32ea66ccd5a087041fe"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/integration_test_cook_path.rs",
          "start_line": 152,
          "end_line": 156,
          "content_hash": "e9beadb73ba9c32ea66ccd5a087041fe"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/integration_test_cook_path.rs",
          "start_line": 176,
          "end_line": 180,
          "content_hash": "e9beadb73ba9c32ea66ccd5a087041fe"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/integration_test_cook_path.rs",
          "start_line": 264,
          "end_line": 268,
          "content_hash": "e9beadb73ba9c32ea66ccd5a087041fe"
        }
      ],
      "b4bbd74a116212bd19f049097f1fa430": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/storage.rs",
          "start_line": 188,
          "end_line": 190,
          "content_hash": "b4bbd74a116212bd19f049097f1fa430"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/storage.rs",
          "start_line": 199,
          "end_line": 201,
          "content_hash": "b4bbd74a116212bd19f049097f1fa430"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/storage.rs",
          "start_line": 208,
          "end_line": 210,
          "content_hash": "b4bbd74a116212bd19f049097f1fa430"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/storage.rs",
          "start_line": 246,
          "end_line": 248,
          "content_hash": "b4bbd74a116212bd19f049097f1fa430"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/storage.rs",
          "start_line": 255,
          "end_line": 257,
          "content_hash": "b4bbd74a116212bd19f049097f1fa430"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/storage.rs",
          "start_line": 296,
          "end_line": 298,
          "content_hash": "b4bbd74a116212bd19f049097f1fa430"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/storage.rs",
          "start_line": 336,
          "end_line": 338,
          "content_hash": "b4bbd74a116212bd19f049097f1fa430"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/storage.rs",
          "start_line": 356,
          "end_line": 358,
          "content_hash": "b4bbd74a116212bd19f049097f1fa430"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/context_integration.rs",
          "start_line": 9,
          "end_line": 11,
          "content_hash": "b4bbd74a116212bd19f049097f1fa430"
        }
      ],
      "5cbe904a807c1d2fa37127f5ef0d5880": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/display.rs",
          "start_line": 124,
          "end_line": 126,
          "content_hash": "5cbe904a807c1d2fa37127f5ef0d5880"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/display.rs",
          "start_line": 131,
          "end_line": 133,
          "content_hash": "5cbe904a807c1d2fa37127f5ef0d5880"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/display.rs",
          "start_line": 138,
          "end_line": 140,
          "content_hash": "5cbe904a807c1d2fa37127f5ef0d5880"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/display.rs",
          "start_line": 145,
          "end_line": 147,
          "content_hash": "5cbe904a807c1d2fa37127f5ef0d5880"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/display.rs",
          "start_line": 152,
          "end_line": 154,
          "content_hash": "5cbe904a807c1d2fa37127f5ef0d5880"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/display.rs",
          "start_line": 159,
          "end_line": 161,
          "content_hash": "5cbe904a807c1d2fa37127f5ef0d5880"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/display.rs",
          "start_line": 179,
          "end_line": 181,
          "content_hash": "5cbe904a807c1d2fa37127f5ef0d5880"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/display.rs",
          "start_line": 186,
          "end_line": 188,
          "content_hash": "5cbe904a807c1d2fa37127f5ef0d5880"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/display.rs",
          "start_line": 193,
          "end_line": 195,
          "content_hash": "5cbe904a807c1d2fa37127f5ef0d5880"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/mod.rs",
          "start_line": 152,
          "end_line": 154,
          "content_hash": "5cbe904a807c1d2fa37127f5ef0d5880"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/mod.rs",
          "start_line": 164,
          "end_line": 166,
          "content_hash": "5cbe904a807c1d2fa37127f5ef0d5880"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/mod.rs",
          "start_line": 183,
          "end_line": 185,
          "content_hash": "5cbe904a807c1d2fa37127f5ef0d5880"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/mod.rs",
          "start_line": 190,
          "end_line": 192,
          "content_hash": "5cbe904a807c1d2fa37127f5ef0d5880"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/mod.rs",
          "start_line": 197,
          "end_line": 199,
          "content_hash": "5cbe904a807c1d2fa37127f5ef0d5880"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/mod.rs",
          "start_line": 204,
          "end_line": 206,
          "content_hash": "5cbe904a807c1d2fa37127f5ef0d5880"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/mod.rs",
          "start_line": 212,
          "end_line": 214,
          "content_hash": "5cbe904a807c1d2fa37127f5ef0d5880"
        }
      ],
      "f4e0a41f04cd2da923e1f93e4dff47ba": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 24,
          "end_line": 26,
          "content_hash": "f4e0a41f04cd2da923e1f93e4dff47ba"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 23,
          "end_line": 25,
          "content_hash": "f4e0a41f04cd2da923e1f93e4dff47ba"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 99,
          "end_line": 101,
          "content_hash": "f4e0a41f04cd2da923e1f93e4dff47ba"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 226,
          "end_line": 228,
          "content_hash": "f4e0a41f04cd2da923e1f93e4dff47ba"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 327,
          "end_line": 329,
          "content_hash": "f4e0a41f04cd2da923e1f93e4dff47ba"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 455,
          "end_line": 457,
          "content_hash": "f4e0a41f04cd2da923e1f93e4dff47ba"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 42,
          "end_line": 44,
          "content_hash": "f4e0a41f04cd2da923e1f93e4dff47ba"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/worktree_integration_tests.rs",
          "start_line": 34,
          "end_line": 36,
          "content_hash": "f4e0a41f04cd2da923e1f93e4dff47ba"
        }
      ],
      "19fe2fdf6b88df5a239327f8fca9452b": [
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 219,
          "end_line": 228,
          "content_hash": "19fe2fdf6b88df5a239327f8fca9452b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 320,
          "end_line": 329,
          "content_hash": "19fe2fdf6b88df5a239327f8fca9452b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 448,
          "end_line": 457,
          "content_hash": "19fe2fdf6b88df5a239327f8fca9452b"
        }
      ],
      "7d0065ace6d07888b345ce971af1b5ac": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 716,
          "end_line": 745,
          "content_hash": "7d0065ace6d07888b345ce971af1b5ac"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1500,
          "end_line": 1529,
          "content_hash": "7d0065ace6d07888b345ce971af1b5ac"
        }
      ],
      "23ca5a554baf49ba2cdf94861d4dacbc": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 143,
          "end_line": 154,
          "content_hash": "23ca5a554baf49ba2cdf94861d4dacbc"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 197,
          "end_line": 208,
          "content_hash": "23ca5a554baf49ba2cdf94861d4dacbc"
        }
      ],
      "c4e1b7c6a1302a5e6408b980c71f1ac8": [
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 189,
          "end_line": 203,
          "content_hash": "c4e1b7c6a1302a5e6408b980c71f1ac8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 287,
          "end_line": 301,
          "content_hash": "c4e1b7c6a1302a5e6408b980c71f1ac8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 415,
          "end_line": 429,
          "content_hash": "c4e1b7c6a1302a5e6408b980c71f1ac8"
        }
      ],
      "4a47acec2721fbc6e95061acdd6a4702": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_discovery.rs",
          "start_line": 127,
          "end_line": 130,
          "content_hash": "4a47acec2721fbc6e95061acdd6a4702"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_discovery.rs",
          "start_line": 139,
          "end_line": 142,
          "content_hash": "4a47acec2721fbc6e95061acdd6a4702"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_discovery.rs",
          "start_line": 166,
          "end_line": 169,
          "content_hash": "4a47acec2721fbc6e95061acdd6a4702"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 324,
          "end_line": 327,
          "content_hash": "4a47acec2721fbc6e95061acdd6a4702"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 339,
          "end_line": 342,
          "content_hash": "4a47acec2721fbc6e95061acdd6a4702"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 377,
          "end_line": 380,
          "content_hash": "4a47acec2721fbc6e95061acdd6a4702"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 407,
          "end_line": 410,
          "content_hash": "4a47acec2721fbc6e95061acdd6a4702"
        }
      ],
      "b6d34027cb0ffef4b4706ef659d9b5e7": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 308,
          "end_line": 310,
          "content_hash": "b6d34027cb0ffef4b4706ef659d9b5e7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 207,
          "end_line": 209,
          "content_hash": "b6d34027cb0ffef4b4706ef659d9b5e7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 355,
          "end_line": 357,
          "content_hash": "b6d34027cb0ffef4b4706ef659d9b5e7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 283,
          "end_line": 285,
          "content_hash": "b6d34027cb0ffef4b4706ef659d9b5e7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 308,
          "end_line": 310,
          "content_hash": "b6d34027cb0ffef4b4706ef659d9b5e7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 840,
          "end_line": 842,
          "content_hash": "b6d34027cb0ffef4b4706ef659d9b5e7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 934,
          "end_line": 936,
          "content_hash": "b6d34027cb0ffef4b4706ef659d9b5e7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/adapter.rs",
          "start_line": 247,
          "end_line": 249,
          "content_hash": "b6d34027cb0ffef4b4706ef659d9b5e7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/performance.rs",
          "start_line": 221,
          "end_line": 223,
          "content_hash": "b6d34027cb0ffef4b4706ef659d9b5e7"
        }
      ],
      "1e5a3c5cd9e88da9b656b08d461bc093": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
          "start_line": 95,
          "end_line": 108,
          "content_hash": "1e5a3c5cd9e88da9b656b08d461bc093"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
          "start_line": 128,
          "end_line": 141,
          "content_hash": "1e5a3c5cd9e88da9b656b08d461bc093"
        }
      ],
      "154e71603a1abebe15c12ec8652e2acf": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command.rs",
          "start_line": 271,
          "end_line": 273,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command.rs",
          "start_line": 277,
          "end_line": 279,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command.rs",
          "start_line": 284,
          "end_line": 286,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command.rs",
          "start_line": 291,
          "end_line": 293,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command.rs",
          "start_line": 298,
          "end_line": 300,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/context.rs",
          "start_line": 112,
          "end_line": 114,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/context.rs",
          "start_line": 118,
          "end_line": 120,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/builder.rs",
          "start_line": 27,
          "end_line": 29,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/builder.rs",
          "start_line": 38,
          "end_line": 40,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/builder.rs",
          "start_line": 43,
          "end_line": 45,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/builder.rs",
          "start_line": 57,
          "end_line": 59,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/builder.rs",
          "start_line": 62,
          "end_line": 64,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/builder.rs",
          "start_line": 67,
          "end_line": 69,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/builder.rs",
          "start_line": 72,
          "end_line": 74,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/mock.rs",
          "start_line": 146,
          "end_line": 148,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/mock.rs",
          "start_line": 151,
          "end_line": 153,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/mock.rs",
          "start_line": 156,
          "end_line": 158,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/mock.rs",
          "start_line": 165,
          "end_line": 167,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/mock.rs",
          "start_line": 170,
          "end_line": 172,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/mock.rs",
          "start_line": 175,
          "end_line": 177,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/testing/mod.rs",
          "start_line": 85,
          "end_line": 87,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/testing/mod.rs",
          "start_line": 91,
          "end_line": 93,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/testing/mod.rs",
          "start_line": 97,
          "end_line": 99,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/testing/mod.rs",
          "start_line": 128,
          "end_line": 130,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/testing/mod.rs",
          "start_line": 134,
          "end_line": 136,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/testing/mod.rs",
          "start_line": 140,
          "end_line": 142,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/common/mod.rs",
          "start_line": 35,
          "end_line": 37,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/common/mod.rs",
          "start_line": 43,
          "end_line": 45,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/common/mod.rs",
          "start_line": 49,
          "end_line": 51,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/common/mod.rs",
          "start_line": 56,
          "end_line": 58,
          "content_hash": "154e71603a1abebe15c12ec8652e2acf"
        }
      ],
      "bb08715f4e9677a117e650a1b14a22fc": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 53,
          "end_line": 56,
          "content_hash": "bb08715f4e9677a117e650a1b14a22fc"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 95,
          "end_line": 98,
          "content_hash": "bb08715f4e9677a117e650a1b14a22fc"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 125,
          "end_line": 128,
          "content_hash": "bb08715f4e9677a117e650a1b14a22fc"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 148,
          "end_line": 151,
          "content_hash": "bb08715f4e9677a117e650a1b14a22fc"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 167,
          "end_line": 170,
          "content_hash": "bb08715f4e9677a117e650a1b14a22fc"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 185,
          "end_line": 188,
          "content_hash": "bb08715f4e9677a117e650a1b14a22fc"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 208,
          "end_line": 211,
          "content_hash": "bb08715f4e9677a117e650a1b14a22fc"
        }
      ],
      "b68a0603730d0ac436623ff9f280f7c8": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/analyzer.rs",
          "start_line": 362,
          "end_line": 365,
          "content_hash": "b68a0603730d0ac436623ff9f280f7c8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/architecture.rs",
          "start_line": 68,
          "end_line": 71,
          "content_hash": "b68a0603730d0ac436623ff9f280f7c8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/architecture.rs",
          "start_line": 292,
          "end_line": 295,
          "content_hash": "b68a0603730d0ac436623ff9f280f7c8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/architecture.rs",
          "start_line": 538,
          "end_line": 541,
          "content_hash": "b68a0603730d0ac436623ff9f280f7c8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 756,
          "end_line": 759,
          "content_hash": "b68a0603730d0ac436623ff9f280f7c8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/dependencies.rs",
          "start_line": 431,
          "end_line": 434,
          "content_hash": "b68a0603730d0ac436623ff9f280f7c8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/hybrid_coverage.rs",
          "start_line": 238,
          "end_line": 241,
          "content_hash": "b68a0603730d0ac436623ff9f280f7c8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/hybrid_coverage.rs",
          "start_line": 352,
          "end_line": 355,
          "content_hash": "b68a0603730d0ac436623ff9f280f7c8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/size_manager.rs",
          "start_line": 169,
          "end_line": 172,
          "content_hash": "b68a0603730d0ac436623ff9f280f7c8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
          "start_line": 309,
          "end_line": 312,
          "content_hash": "b68a0603730d0ac436623ff9f280f7c8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 502,
          "end_line": 505,
          "content_hash": "b68a0603730d0ac436623ff9f280f7c8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/execution/claude.rs",
          "start_line": 117,
          "end_line": 120,
          "content_hash": "b68a0603730d0ac436623ff9f280f7c8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/manager.rs",
          "start_line": 245,
          "end_line": 248,
          "content_hash": "b68a0603730d0ac436623ff9f280f7c8"
        }
      ],
      "21208f0bfa0f6708fa9e924d59b95cd7": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1167,
          "end_line": 1186,
          "content_hash": "21208f0bfa0f6708fa9e924d59b95cd7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1582,
          "end_line": 1601,
          "content_hash": "21208f0bfa0f6708fa9e924d59b95cd7"
        }
      ],
      "1c5487c2e223bc4e8d3053ef8c703869": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 142,
          "end_line": 153,
          "content_hash": "1c5487c2e223bc4e8d3053ef8c703869"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 284,
          "end_line": 295,
          "content_hash": "1c5487c2e223bc4e8d3053ef8c703869"
        }
      ],
      "2f9f68d6da6643695edce77249fb7562": [
        {
          "file": "/Users/glen/memento-mori/mmm/tests/common/mod.rs",
          "start_line": 148,
          "end_line": 150,
          "content_hash": "2f9f68d6da6643695edce77249fb7562"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 192,
          "end_line": 194,
          "content_hash": "2f9f68d6da6643695edce77249fb7562"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 197,
          "end_line": 199,
          "content_hash": "2f9f68d6da6643695edce77249fb7562"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 222,
          "end_line": 224,
          "content_hash": "2f9f68d6da6643695edce77249fb7562"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 290,
          "end_line": 292,
          "content_hash": "2f9f68d6da6643695edce77249fb7562"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 295,
          "end_line": 297,
          "content_hash": "2f9f68d6da6643695edce77249fb7562"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 323,
          "end_line": 325,
          "content_hash": "2f9f68d6da6643695edce77249fb7562"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 418,
          "end_line": 420,
          "content_hash": "2f9f68d6da6643695edce77249fb7562"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 423,
          "end_line": 425,
          "content_hash": "2f9f68d6da6643695edce77249fb7562"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 451,
          "end_line": 453,
          "content_hash": "2f9f68d6da6643695edce77249fb7562"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 26,
          "end_line": 28,
          "content_hash": "2f9f68d6da6643695edce77249fb7562"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 38,
          "end_line": 40,
          "content_hash": "2f9f68d6da6643695edce77249fb7562"
        }
      ],
      "f523f83c21252b4722e61ec20f50fbd0": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/main.rs",
          "start_line": 166,
          "end_line": 177,
          "content_hash": "f523f83c21252b4722e61ec20f50fbd0"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/main.rs",
          "start_line": 188,
          "end_line": 199,
          "content_hash": "f523f83c21252b4722e61ec20f50fbd0"
        }
      ],
      "1571fbc3ed2892cb1327c8ca18e22ea8": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
          "start_line": 85,
          "end_line": 87,
          "content_hash": "1571fbc3ed2892cb1327c8ca18e22ea8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
          "start_line": 106,
          "end_line": 108,
          "content_hash": "1571fbc3ed2892cb1327c8ca18e22ea8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
          "start_line": 139,
          "end_line": 141,
          "content_hash": "1571fbc3ed2892cb1327c8ca18e22ea8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/performance.rs",
          "start_line": 64,
          "end_line": 66,
          "content_hash": "1571fbc3ed2892cb1327c8ca18e22ea8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/performance.rs",
          "start_line": 77,
          "end_line": 79,
          "content_hash": "1571fbc3ed2892cb1327c8ca18e22ea8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/performance.rs",
          "start_line": 167,
          "end_line": 169,
          "content_hash": "1571fbc3ed2892cb1327c8ca18e22ea8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/quality.rs",
          "start_line": 94,
          "end_line": 96,
          "content_hash": "1571fbc3ed2892cb1327c8ca18e22ea8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/quality.rs",
          "start_line": 153,
          "end_line": 155,
          "content_hash": "1571fbc3ed2892cb1327c8ca18e22ea8"
        }
      ],
      "7108994d0102c32e7f806717e4804d0b": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 18,
          "end_line": 29,
          "content_hash": "7108994d0102c32e7f806717e4804d0b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 17,
          "end_line": 28,
          "content_hash": "7108994d0102c32e7f806717e4804d0b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/worktree_integration_tests.rs",
          "start_line": 28,
          "end_line": 39,
          "content_hash": "7108994d0102c32e7f806717e4804d0b"
        }
      ],
      "e00df7f797d4ccf8e6f3273e50c1dda4": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/tests.rs",
          "start_line": 332,
          "end_line": 349,
          "content_hash": "e00df7f797d4ccf8e6f3273e50c1dda4"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/tests.rs",
          "start_line": 513,
          "end_line": 530,
          "content_hash": "e00df7f797d4ccf8e6f3273e50c1dda4"
        }
      ],
      "027184a7db9f0af755c2ab5e8d237a75": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 76,
          "end_line": 84,
          "content_hash": "027184a7db9f0af755c2ab5e8d237a75"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 98,
          "end_line": 106,
          "content_hash": "027184a7db9f0af755c2ab5e8d237a75"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 120,
          "end_line": 128,
          "content_hash": "027184a7db9f0af755c2ab5e8d237a75"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 138,
          "end_line": 146,
          "content_hash": "027184a7db9f0af755c2ab5e8d237a75"
        }
      ],
      "9e165f9ea86bebac6668d5224bea834f": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/claude.rs",
          "start_line": 67,
          "end_line": 70,
          "content_hash": "9e165f9ea86bebac6668d5224bea834f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 63,
          "end_line": 66,
          "content_hash": "9e165f9ea86bebac6668d5224bea834f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 105,
          "end_line": 108,
          "content_hash": "9e165f9ea86bebac6668d5224bea834f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 135,
          "end_line": 138,
          "content_hash": "9e165f9ea86bebac6668d5224bea834f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 159,
          "end_line": 162,
          "content_hash": "9e165f9ea86bebac6668d5224bea834f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 177,
          "end_line": 180,
          "content_hash": "9e165f9ea86bebac6668d5224bea834f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 195,
          "end_line": 198,
          "content_hash": "9e165f9ea86bebac6668d5224bea834f"
        }
      ],
      "33622c094bdaaf40860c43d9c407cb31": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
          "start_line": 454,
          "end_line": 456,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 291,
          "end_line": 293,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command.rs",
          "start_line": 350,
          "end_line": 352,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_discovery.rs",
          "start_line": 119,
          "end_line": 121,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_parser.rs",
          "start_line": 110,
          "end_line": 112,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 406,
          "end_line": 408,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 315,
          "end_line": 317,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 139,
          "end_line": 141,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/metadata_parser.rs",
          "start_line": 335,
          "end_line": 337,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/mod.rs",
          "start_line": 155,
          "end_line": 157,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/architecture.rs",
          "start_line": 401,
          "end_line": 403,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
          "start_line": 577,
          "end_line": 579,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
          "start_line": 731,
          "end_line": 733,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 819,
          "end_line": 821,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/dependencies.rs",
          "start_line": 580,
          "end_line": 582,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/hybrid_coverage.rs",
          "start_line": 458,
          "end_line": 460,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/mod.rs",
          "start_line": 280,
          "end_line": 282,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/size_manager.rs",
          "start_line": 311,
          "end_line": 313,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
          "start_line": 519,
          "end_line": 521,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 604,
          "end_line": 606,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 642,
          "end_line": 644,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/analysis/cache.rs",
          "start_line": 129,
          "end_line": 131,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/analysis/runner.rs",
          "start_line": 203,
          "end_line": 205,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/execution/claude.rs",
          "start_line": 149,
          "end_line": 151,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/git_ops.rs",
          "start_line": 76,
          "end_line": 78,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/display.rs",
          "start_line": 102,
          "end_line": 104,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/prompts.rs",
          "start_line": 94,
          "end_line": 96,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/metrics/collector.rs",
          "start_line": 230,
          "end_line": 232,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/metrics/reporter.rs",
          "start_line": 217,
          "end_line": 219,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 561,
          "end_line": 563,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/retry.rs",
          "start_line": 185,
          "end_line": 187,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/migration.rs",
          "start_line": 148,
          "end_line": 150,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/tracker.rs",
          "start_line": 129,
          "end_line": 131,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 374,
          "end_line": 376,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/parsers.rs",
          "start_line": 229,
          "end_line": 231,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 515,
          "end_line": 517,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 233,
          "end_line": 235,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 408,
          "end_line": 410,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/collector.rs",
          "start_line": 148,
          "end_line": 150,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/context.rs",
          "start_line": 127,
          "end_line": 129,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/registry.rs",
          "start_line": 222,
          "end_line": 224,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/storage.rs",
          "start_line": 180,
          "end_line": 182,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/testing.rs",
          "start_line": 283,
          "end_line": 285,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/config.rs",
          "start_line": 76,
          "end_line": 78,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/events.rs",
          "start_line": 120,
          "end_line": 122,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/manager.rs",
          "start_line": 327,
          "end_line": 329,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/persistence.rs",
          "start_line": 57,
          "end_line": 59,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/state.rs",
          "start_line": 119,
          "end_line": 121,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/storage.rs",
          "start_line": 148,
          "end_line": 150,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/testing/mod.rs",
          "start_line": 245,
          "end_line": 247,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 613,
          "end_line": 615,
          "content_hash": "33622c094bdaaf40860c43d9c407cb31"
        }
      ],
      "ba963c2fd299ef17efc4d3118914a816": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 79,
          "end_line": 90,
          "content_hash": "ba963c2fd299ef17efc4d3118914a816"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 91,
          "end_line": 102,
          "content_hash": "ba963c2fd299ef17efc4d3118914a816"
        }
      ],
      "acdbf9319eb8f3f7192d4875fbfac869": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/architecture.rs",
          "start_line": 34,
          "end_line": 37,
          "content_hash": "acdbf9319eb8f3f7192d4875fbfac869"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
          "start_line": 114,
          "end_line": 117,
          "content_hash": "acdbf9319eb8f3f7192d4875fbfac869"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/dependencies.rs",
          "start_line": 164,
          "end_line": 167,
          "content_hash": "acdbf9319eb8f3f7192d4875fbfac869"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/hybrid_coverage.rs",
          "start_line": 136,
          "end_line": 139,
          "content_hash": "acdbf9319eb8f3f7192d4875fbfac869"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 118,
          "end_line": 121,
          "content_hash": "acdbf9319eb8f3f7192d4875fbfac869"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/prompts.rs",
          "start_line": 30,
          "end_line": 33,
          "content_hash": "acdbf9319eb8f3f7192d4875fbfac869"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/metrics/reporter.rs",
          "start_line": 55,
          "end_line": 58,
          "content_hash": "acdbf9319eb8f3f7192d4875fbfac869"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/complexity.rs",
          "start_line": 24,
          "end_line": 27,
          "content_hash": "acdbf9319eb8f3f7192d4875fbfac869"
        }
      ],
      "493288a4c8549f03d1f0b1840e272d4d": [
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_tests.rs",
          "start_line": 99,
          "end_line": 111,
          "content_hash": "493288a4c8549f03d1f0b1840e272d4d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_tests.rs",
          "start_line": 122,
          "end_line": 134,
          "content_hash": "493288a4c8549f03d1f0b1840e272d4d"
        }
      ],
      "75386df54eb1f550e1a7528200343a80": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 295,
          "end_line": 310,
          "content_hash": "75386df54eb1f550e1a7528200343a80"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 329,
          "end_line": 344,
          "content_hash": "75386df54eb1f550e1a7528200343a80"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 367,
          "end_line": 382,
          "content_hash": "75386df54eb1f550e1a7528200343a80"
        }
      ],
      "567ac5cc1260f6e24a8a6ae190a8e14d": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 415,
          "end_line": 418,
          "content_hash": "567ac5cc1260f6e24a8a6ae190a8e14d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/execution/runner.rs",
          "start_line": 148,
          "end_line": 151,
          "content_hash": "567ac5cc1260f6e24a8a6ae190a8e14d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/metrics/collector.rs",
          "start_line": 244,
          "end_line": 247,
          "content_hash": "567ac5cc1260f6e24a8a6ae190a8e14d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 257,
          "end_line": 260,
          "content_hash": "567ac5cc1260f6e24a8a6ae190a8e14d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 307,
          "end_line": 310,
          "content_hash": "567ac5cc1260f6e24a8a6ae190a8e14d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 341,
          "end_line": 344,
          "content_hash": "567ac5cc1260f6e24a8a6ae190a8e14d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 379,
          "end_line": 382,
          "content_hash": "567ac5cc1260f6e24a8a6ae190a8e14d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 417,
          "end_line": 420,
          "content_hash": "567ac5cc1260f6e24a8a6ae190a8e14d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 510,
          "end_line": 513,
          "content_hash": "567ac5cc1260f6e24a8a6ae190a8e14d"
        }
      ],
      "2e0026bf1d9c95427d79d32e5b5d9c7c": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/simple_state/tests.rs",
          "start_line": 169,
          "end_line": 177,
          "content_hash": "2e0026bf1d9c95427d79d32e5b5d9c7c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 141,
          "end_line": 149,
          "content_hash": "2e0026bf1d9c95427d79d32e5b5d9c7c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 293,
          "end_line": 301,
          "content_hash": "2e0026bf1d9c95427d79d32e5b5d9c7c"
        }
      ],
      "e8e1f65a05bcc00a8e0ad95b6bd23c72": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 424,
          "end_line": 428,
          "content_hash": "e8e1f65a05bcc00a8e0ad95b6bd23c72"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 444,
          "end_line": 448,
          "content_hash": "e8e1f65a05bcc00a8e0ad95b6bd23c72"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 464,
          "end_line": 468,
          "content_hash": "e8e1f65a05bcc00a8e0ad95b6bd23c72"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 487,
          "end_line": 491,
          "content_hash": "e8e1f65a05bcc00a8e0ad95b6bd23c72"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 541,
          "end_line": 545,
          "content_hash": "e8e1f65a05bcc00a8e0ad95b6bd23c72"
        }
      ],
      "af6ac087ab569cfd467fe04a1fa5e385": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 71,
          "end_line": 75,
          "content_hash": "af6ac087ab569cfd467fe04a1fa5e385"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 124,
          "end_line": 128,
          "content_hash": "af6ac087ab569cfd467fe04a1fa5e385"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 159,
          "end_line": 163,
          "content_hash": "af6ac087ab569cfd467fe04a1fa5e385"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 218,
          "end_line": 222,
          "content_hash": "af6ac087ab569cfd467fe04a1fa5e385"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 50,
          "end_line": 54,
          "content_hash": "af6ac087ab569cfd467fe04a1fa5e385"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 76,
          "end_line": 80,
          "content_hash": "af6ac087ab569cfd467fe04a1fa5e385"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 94,
          "end_line": 98,
          "content_hash": "af6ac087ab569cfd467fe04a1fa5e385"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 116,
          "end_line": 120,
          "content_hash": "af6ac087ab569cfd467fe04a1fa5e385"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 147,
          "end_line": 151,
          "content_hash": "af6ac087ab569cfd467fe04a1fa5e385"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 171,
          "end_line": 175,
          "content_hash": "af6ac087ab569cfd467fe04a1fa5e385"
        }
      ],
      "43a9735e198c420eaa59e9cad9e7b80f": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
          "start_line": 317,
          "end_line": 340,
          "content_hash": "43a9735e198c420eaa59e9cad9e7b80f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 284,
          "end_line": 307,
          "content_hash": "43a9735e198c420eaa59e9cad9e7b80f"
        }
      ],
      "4ba55e28a0c9450a9cd22ff487b0b5d7": [
        {
          "file": "/Users/glen/memento-mori/mmm/tests/integration_test_cook_path.rs",
          "start_line": 21,
          "end_line": 29,
          "content_hash": "4ba55e28a0c9450a9cd22ff487b0b5d7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/integration_test_cook_path.rs",
          "start_line": 56,
          "end_line": 64,
          "content_hash": "4ba55e28a0c9450a9cd22ff487b0b5d7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/integration_test_cook_path.rs",
          "start_line": 94,
          "end_line": 102,
          "content_hash": "4ba55e28a0c9450a9cd22ff487b0b5d7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/integration_test_cook_path.rs",
          "start_line": 201,
          "end_line": 209,
          "content_hash": "4ba55e28a0c9450a9cd22ff487b0b5d7"
        }
      ],
      "e73d66e57a104d3b0e7948b5fa66660a": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 318,
          "end_line": 359,
          "content_hash": "e73d66e57a104d3b0e7948b5fa66660a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 220,
          "end_line": 261,
          "content_hash": "e73d66e57a104d3b0e7948b5fa66660a"
        }
      ],
      "6209f537257c44b0eb256964e03f111e": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 430,
          "end_line": 434,
          "content_hash": "6209f537257c44b0eb256964e03f111e"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 465,
          "end_line": 469,
          "content_hash": "6209f537257c44b0eb256964e03f111e"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 519,
          "end_line": 523,
          "content_hash": "6209f537257c44b0eb256964e03f111e"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/context.rs",
          "start_line": 159,
          "end_line": 163,
          "content_hash": "6209f537257c44b0eb256964e03f111e"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/context.rs",
          "start_line": 189,
          "end_line": 193,
          "content_hash": "6209f537257c44b0eb256964e03f111e"
        }
      ],
      "55dfaf1ce9b6baef178a2c38610b2f1a": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod.rs",
          "start_line": 176,
          "end_line": 193,
          "content_hash": "55dfaf1ce9b6baef178a2c38610b2f1a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 36,
          "end_line": 53,
          "content_hash": "55dfaf1ce9b6baef178a2c38610b2f1a"
        }
      ],
      "e4974555c9d5cb3d0d29e47bfe6e2d34": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/complexity.rs",
          "start_line": 43,
          "end_line": 48,
          "content_hash": "e4974555c9d5cb3d0d29e47bfe6e2d34"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/quality.rs",
          "start_line": 121,
          "end_line": 126,
          "content_hash": "e4974555c9d5cb3d0d29e47bfe6e2d34"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/quality.rs",
          "start_line": 187,
          "end_line": 192,
          "content_hash": "e4974555c9d5cb3d0d29e47bfe6e2d34"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/quality.rs",
          "start_line": 235,
          "end_line": 240,
          "content_hash": "e4974555c9d5cb3d0d29e47bfe6e2d34"
        }
      ],
      "b2862dabd98eb0402cbfff9ec9b8b624": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 109,
          "end_line": 134,
          "content_hash": "b2862dabd98eb0402cbfff9ec9b8b624"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 240,
          "end_line": 265,
          "content_hash": "b2862dabd98eb0402cbfff9ec9b8b624"
        }
      ],
      "304977dc98199bc75b2aa9f9befbea17": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
          "start_line": 143,
          "end_line": 145,
          "content_hash": "304977dc98199bc75b2aa9f9befbea17"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_discovery.rs",
          "start_line": 73,
          "end_line": 75,
          "content_hash": "304977dc98199bc75b2aa9f9befbea17"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 598,
          "end_line": 600,
          "content_hash": "304977dc98199bc75b2aa9f9befbea17"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 878,
          "end_line": 880,
          "content_hash": "304977dc98199bc75b2aa9f9befbea17"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/retry.rs",
          "start_line": 66,
          "end_line": 68,
          "content_hash": "304977dc98199bc75b2aa9f9befbea17"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 273,
          "end_line": 275,
          "content_hash": "304977dc98199bc75b2aa9f9befbea17"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 288,
          "end_line": 290,
          "content_hash": "304977dc98199bc75b2aa9f9befbea17"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/registry.rs",
          "start_line": 131,
          "end_line": 133,
          "content_hash": "304977dc98199bc75b2aa9f9befbea17"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/mock.rs",
          "start_line": 111,
          "end_line": 113,
          "content_hash": "304977dc98199bc75b2aa9f9befbea17"
        }
      ],
      "7d0371b614987a1b467b34ad8f32ecff": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
          "start_line": 208,
          "end_line": 210,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 125,
          "end_line": 127,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 131,
          "end_line": 133,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 153,
          "end_line": 155,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 256,
          "end_line": 258,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 262,
          "end_line": 264,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 275,
          "end_line": 277,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/command.rs",
          "start_line": 41,
          "end_line": 43,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/command.rs",
          "start_line": 84,
          "end_line": 86,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/command.rs",
          "start_line": 130,
          "end_line": 132,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 113,
          "end_line": 115,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 275,
          "end_line": 277,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 67,
          "end_line": 69,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 167,
          "end_line": 169,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 50,
          "end_line": 52,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 112,
          "end_line": 114,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 157,
          "end_line": 159,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 183,
          "end_line": 185,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 211,
          "end_line": 213,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 238,
          "end_line": 240,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 253,
          "end_line": 255,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 286,
          "end_line": 288,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 303,
          "end_line": 305,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 316,
          "end_line": 318,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 332,
          "end_line": 334,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
          "start_line": 776,
          "end_line": 778,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/mod.rs",
          "start_line": 277,
          "end_line": 279,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/analysis/cache.rs",
          "start_line": 88,
          "end_line": 90,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/analysis/cache.rs",
          "start_line": 117,
          "end_line": 119,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/analysis/runner.rs",
          "start_line": 191,
          "end_line": 193,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/metrics/collector.rs",
          "start_line": 205,
          "end_line": 207,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 92,
          "end_line": 94,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 135,
          "end_line": 137,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 263,
          "end_line": 265,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 447,
          "end_line": 449,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 494,
          "end_line": 496,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 684,
          "end_line": 686,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 951,
          "end_line": 953,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1082,
          "end_line": 1084,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1121,
          "end_line": 1123,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1219,
          "end_line": 1221,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1369,
          "end_line": 1371,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1401,
          "end_line": 1403,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1448,
          "end_line": 1450,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1621,
          "end_line": 1623,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_tests.rs",
          "start_line": 35,
          "end_line": 37,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_tests.rs",
          "start_line": 64,
          "end_line": 66,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_tests.rs",
          "start_line": 108,
          "end_line": 110,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 171,
          "end_line": 173,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 191,
          "end_line": 193,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 306,
          "end_line": 308,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 518,
          "end_line": 520,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 619,
          "end_line": 621,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 623,
          "end_line": 625,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 627,
          "end_line": 629,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/adapter.rs",
          "start_line": 91,
          "end_line": 93,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/adapter.rs",
          "start_line": 165,
          "end_line": 167,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/adapter.rs",
          "start_line": 241,
          "end_line": 243,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/migration.rs",
          "start_line": 103,
          "end_line": 105,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/migration.rs",
          "start_line": 136,
          "end_line": 138,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/tracker.rs",
          "start_line": 40,
          "end_line": 42,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/tracker.rs",
          "start_line": 58,
          "end_line": 60,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/tracker.rs",
          "start_line": 77,
          "end_line": 79,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/tracker.rs",
          "start_line": 106,
          "end_line": 108,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/tracker.rs",
          "start_line": 117,
          "end_line": 119,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/signal_handler.rs",
          "start_line": 44,
          "end_line": 46,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/workflow/executor.rs",
          "start_line": 208,
          "end_line": 210,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/workflow/executor.rs",
          "start_line": 387,
          "end_line": 389,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 219,
          "end_line": 221,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 241,
          "end_line": 243,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 251,
          "end_line": 253,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 283,
          "end_line": 285,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 299,
          "end_line": 301,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 331,
          "end_line": 333,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 346,
          "end_line": 348,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/parsers.rs",
          "start_line": 93,
          "end_line": 95,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/parsers.rs",
          "start_line": 111,
          "end_line": 113,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/parsers.rs",
          "start_line": 123,
          "end_line": 125,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 430,
          "end_line": 432,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 447,
          "end_line": 449,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 452,
          "end_line": 454,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 471,
          "end_line": 473,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 476,
          "end_line": 478,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 491,
          "end_line": 493,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 497,
          "end_line": 499,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 167,
          "end_line": 169,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 230,
          "end_line": 232,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/main.rs",
          "start_line": 294,
          "end_line": 296,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/main.rs",
          "start_line": 325,
          "end_line": 327,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/main.rs",
          "start_line": 380,
          "end_line": 382,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/main.rs",
          "start_line": 401,
          "end_line": 403,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 125,
          "end_line": 127,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 160,
          "end_line": 162,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 242,
          "end_line": 244,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 247,
          "end_line": 249,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 384,
          "end_line": 386,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 400,
          "end_line": 402,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/registry.rs",
          "start_line": 96,
          "end_line": 98,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/registry.rs",
          "start_line": 114,
          "end_line": 116,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/storage.rs",
          "start_line": 29,
          "end_line": 31,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/storage.rs",
          "start_line": 43,
          "end_line": 45,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/storage.rs",
          "start_line": 76,
          "end_line": 78,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/manager.rs",
          "start_line": 201,
          "end_line": 203,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/manager.rs",
          "start_line": 280,
          "end_line": 282,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/storage.rs",
          "start_line": 53,
          "end_line": 55,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/storage.rs",
          "start_line": 131,
          "end_line": 133,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/simple_state/cache.rs",
          "start_line": 73,
          "end_line": 75,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/simple_state/cache.rs",
          "start_line": 82,
          "end_line": 84,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/simple_state/cache.rs",
          "start_line": 93,
          "end_line": 95,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/simple_state/state.rs",
          "start_line": 70,
          "end_line": 72,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/simple_state/state.rs",
          "start_line": 94,
          "end_line": 96,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 139,
          "end_line": 141,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 163,
          "end_line": 165,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 181,
          "end_line": 183,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 156,
          "end_line": 158,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 179,
          "end_line": 181,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 409,
          "end_line": 411,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 484,
          "end_line": 486,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 494,
          "end_line": 496,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 72,
          "end_line": 74,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 107,
          "end_line": 109,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 125,
          "end_line": 127,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 160,
          "end_line": 162,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 203,
          "end_line": 205,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 219,
          "end_line": 221,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 51,
          "end_line": 53,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 77,
          "end_line": 79,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 95,
          "end_line": 97,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 117,
          "end_line": 119,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 148,
          "end_line": 150,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 172,
          "end_line": 174,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/common/mod.rs",
          "start_line": 140,
          "end_line": 142,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/common/mod.rs",
          "start_line": 155,
          "end_line": 157,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/common/mod.rs",
          "start_line": 162,
          "end_line": 164,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/context_optimization_tests.rs",
          "start_line": 57,
          "end_line": 59,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/context_optimization_tests.rs",
          "start_line": 137,
          "end_line": 139,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 20,
          "end_line": 22,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 64,
          "end_line": 66,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 75,
          "end_line": 77,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 102,
          "end_line": 104,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 179,
          "end_line": 181,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 274,
          "end_line": 276,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 386,
          "end_line": 388,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 397,
          "end_line": 399,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 405,
          "end_line": 407,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/workflow_commit_verification_tests.rs",
          "start_line": 90,
          "end_line": 92,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/workflow_commit_verification_tests.rs",
          "start_line": 114,
          "end_line": 116,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/workflow_commit_verification_tests.rs",
          "start_line": 144,
          "end_line": 146,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/workflow_commit_verification_tests.rs",
          "start_line": 182,
          "end_line": 184,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/workflow_commit_verification_tests.rs",
          "start_line": 238,
          "end_line": 240,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/worktree_integration_tests.rs",
          "start_line": 80,
          "end_line": 82,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/worktree_integration_tests.rs",
          "start_line": 121,
          "end_line": 123,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/worktree_integration_tests.rs",
          "start_line": 141,
          "end_line": 143,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/worktree_integration_tests.rs",
          "start_line": 157,
          "end_line": 159,
          "content_hash": "7d0371b614987a1b467b34ad8f32ecff"
        }
      ],
      "992741bb072cee482b3eb2b08b04f61b": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 624,
          "end_line": 626,
          "content_hash": "992741bb072cee482b3eb2b08b04f61b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/summary.rs",
          "start_line": 288,
          "end_line": 290,
          "content_hash": "992741bb072cee482b3eb2b08b04f61b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/summary.rs",
          "start_line": 310,
          "end_line": 312,
          "content_hash": "992741bb072cee482b3eb2b08b04f61b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/summary.rs",
          "start_line": 337,
          "end_line": 339,
          "content_hash": "992741bb072cee482b3eb2b08b04f61b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/summary.rs",
          "start_line": 429,
          "end_line": 431,
          "content_hash": "992741bb072cee482b3eb2b08b04f61b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/summary.rs",
          "start_line": 495,
          "end_line": 497,
          "content_hash": "992741bb072cee482b3eb2b08b04f61b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/git_ops.rs",
          "start_line": 93,
          "end_line": 95,
          "content_hash": "992741bb072cee482b3eb2b08b04f61b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 265,
          "end_line": 267,
          "content_hash": "992741bb072cee482b3eb2b08b04f61b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/tests.rs",
          "start_line": 627,
          "end_line": 629,
          "content_hash": "992741bb072cee482b3eb2b08b04f61b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 326,
          "end_line": 328,
          "content_hash": "992741bb072cee482b3eb2b08b04f61b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/testing.rs",
          "start_line": 179,
          "end_line": 181,
          "content_hash": "992741bb072cee482b3eb2b08b04f61b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/simple_state/tests.rs",
          "start_line": 170,
          "end_line": 172,
          "content_hash": "992741bb072cee482b3eb2b08b04f61b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 142,
          "end_line": 144,
          "content_hash": "992741bb072cee482b3eb2b08b04f61b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 294,
          "end_line": 296,
          "content_hash": "992741bb072cee482b3eb2b08b04f61b"
        }
      ],
      "c763292f1a31040d0903832134bc8dfe": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 371,
          "end_line": 374,
          "content_hash": "c763292f1a31040d0903832134bc8dfe"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 298,
          "end_line": 301,
          "content_hash": "c763292f1a31040d0903832134bc8dfe"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 327,
          "end_line": 330,
          "content_hash": "c763292f1a31040d0903832134bc8dfe"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/analysis/runner.rs",
          "start_line": 236,
          "end_line": 239,
          "content_hash": "c763292f1a31040d0903832134bc8dfe"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 724,
          "end_line": 727,
          "content_hash": "c763292f1a31040d0903832134bc8dfe"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 286,
          "end_line": 289,
          "content_hash": "c763292f1a31040d0903832134bc8dfe"
        }
      ],
      "8be3152f0cbd81353601f442ee485fc1": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 75,
          "end_line": 84,
          "content_hash": "8be3152f0cbd81353601f442ee485fc1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 97,
          "end_line": 106,
          "content_hash": "8be3152f0cbd81353601f442ee485fc1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 119,
          "end_line": 128,
          "content_hash": "8be3152f0cbd81353601f442ee485fc1"
        }
      ],
      "e9bc88e0db2241bf24b82f0bf9174e17": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1255,
          "end_line": 1266,
          "content_hash": "e9bc88e0db2241bf24b82f0bf9174e17"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1546,
          "end_line": 1557,
          "content_hash": "e9bc88e0db2241bf24b82f0bf9174e17"
        }
      ],
      "d5ce15ab47b9a3465c71ab1f7ebea351": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 106,
          "end_line": 108,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/loader.rs",
          "start_line": 24,
          "end_line": 26,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/metadata_parser.rs",
          "start_line": 77,
          "end_line": 79,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/analyzer.rs",
          "start_line": 245,
          "end_line": 247,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/architecture.rs",
          "start_line": 376,
          "end_line": 378,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
          "start_line": 558,
          "end_line": 560,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 774,
          "end_line": 776,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/hybrid_coverage.rs",
          "start_line": 317,
          "end_line": 319,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/size_manager.rs",
          "start_line": 122,
          "end_line": 124,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/size_manager.rs",
          "start_line": 190,
          "end_line": 192,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 537,
          "end_line": 539,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/execution/runner.rs",
          "start_line": 66,
          "end_line": 68,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 483,
          "end_line": 485,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1057,
          "end_line": 1059,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 220,
          "end_line": 222,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 603,
          "end_line": 605,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/adapter.rs",
          "start_line": 181,
          "end_line": 183,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/tracker.rs",
          "start_line": 67,
          "end_line": 69,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 298,
          "end_line": 300,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/simple_state/cache.rs",
          "start_line": 23,
          "end_line": 25,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/simple_state/cache.rs",
          "start_line": 32,
          "end_line": 34,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 91,
          "end_line": 93,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/runner.rs",
          "start_line": 163,
          "end_line": 165,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/testing/mod.rs",
          "start_line": 32,
          "end_line": 34,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/testing/mod.rs",
          "start_line": 46,
          "end_line": 48,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 68,
          "end_line": 70,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 514,
          "end_line": 516,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 526,
          "end_line": 528,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 587,
          "end_line": 589,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/common/mod.rs",
          "start_line": 29,
          "end_line": 31,
          "content_hash": "d5ce15ab47b9a3465c71ab1f7ebea351"
        }
      ],
      "cce06cbde652d6edceca09c90f4eaf90": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 348,
          "end_line": 350,
          "content_hash": "cce06cbde652d6edceca09c90f4eaf90"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/analyze/tests.rs",
          "start_line": 4,
          "end_line": 6,
          "content_hash": "cce06cbde652d6edceca09c90f4eaf90"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
          "start_line": 523,
          "end_line": 525,
          "content_hash": "cce06cbde652d6edceca09c90f4eaf90"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/analysis/runner.rs",
          "start_line": 208,
          "end_line": 210,
          "content_hash": "cce06cbde652d6edceca09c90f4eaf90"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod.rs",
          "start_line": 209,
          "end_line": 211,
          "content_hash": "cce06cbde652d6edceca09c90f4eaf90"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/migration.rs",
          "start_line": 151,
          "end_line": 153,
          "content_hash": "cce06cbde652d6edceca09c90f4eaf90"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/tracker.rs",
          "start_line": 133,
          "end_line": 135,
          "content_hash": "cce06cbde652d6edceca09c90f4eaf90"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 518,
          "end_line": 520,
          "content_hash": "cce06cbde652d6edceca09c90f4eaf90"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 237,
          "end_line": 239,
          "content_hash": "cce06cbde652d6edceca09c90f4eaf90"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 412,
          "end_line": 414,
          "content_hash": "cce06cbde652d6edceca09c90f4eaf90"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/collector.rs",
          "start_line": 152,
          "end_line": 154,
          "content_hash": "cce06cbde652d6edceca09c90f4eaf90"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/storage.rs",
          "start_line": 151,
          "end_line": 153,
          "content_hash": "cce06cbde652d6edceca09c90f4eaf90"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/tests.rs",
          "start_line": 7,
          "end_line": 9,
          "content_hash": "cce06cbde652d6edceca09c90f4eaf90"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/context_integration.rs",
          "start_line": 1,
          "end_line": 3,
          "content_hash": "cce06cbde652d6edceca09c90f4eaf90"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/metrics_integration.rs",
          "start_line": 5,
          "end_line": 7,
          "content_hash": "cce06cbde652d6edceca09c90f4eaf90"
        }
      ],
      "2a829b8c7f2fe9f3e8b05eac47a14172": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 80,
          "end_line": 84,
          "content_hash": "2a829b8c7f2fe9f3e8b05eac47a14172"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 102,
          "end_line": 106,
          "content_hash": "2a829b8c7f2fe9f3e8b05eac47a14172"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 124,
          "end_line": 128,
          "content_hash": "2a829b8c7f2fe9f3e8b05eac47a14172"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 142,
          "end_line": 146,
          "content_hash": "2a829b8c7f2fe9f3e8b05eac47a14172"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 160,
          "end_line": 164,
          "content_hash": "2a829b8c7f2fe9f3e8b05eac47a14172"
        }
      ],
      "0287baa8ba1b80c797af0330e704fd94": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 295,
          "end_line": 312,
          "content_hash": "0287baa8ba1b80c797af0330e704fd94"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 405,
          "end_line": 422,
          "content_hash": "0287baa8ba1b80c797af0330e704fd94"
        }
      ],
      "5f10896f5226868c2780b6d8b03f310c": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 99,
          "end_line": 101,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 234,
          "end_line": 236,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 259,
          "end_line": 261,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 126,
          "end_line": 128,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 151,
          "end_line": 153,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/dependencies.rs",
          "start_line": 674,
          "end_line": 676,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/hybrid_coverage.rs",
          "start_line": 396,
          "end_line": 398,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/hybrid_coverage.rs",
          "start_line": 406,
          "end_line": 408,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/optimized_hybrid.rs",
          "start_line": 87,
          "end_line": 89,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/optimized_hybrid.rs",
          "start_line": 94,
          "end_line": 96,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/optimized_hybrid.rs",
          "start_line": 126,
          "end_line": 128,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/optimized_hybrid.rs",
          "start_line": 148,
          "end_line": 150,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/size_manager.rs",
          "start_line": 161,
          "end_line": 163,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/size_manager.rs",
          "start_line": 178,
          "end_line": 180,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/summary.rs",
          "start_line": 222,
          "end_line": 224,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/summary.rs",
          "start_line": 230,
          "end_line": 232,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/summary.rs",
          "start_line": 238,
          "end_line": 240,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod.rs",
          "start_line": 69,
          "end_line": 71,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 562,
          "end_line": 564,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 314,
          "end_line": 316,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 321,
          "end_line": 323,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 328,
          "end_line": 330,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 339,
          "end_line": 341,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 347,
          "end_line": 349,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/tests.rs",
          "start_line": 39,
          "end_line": 41,
          "content_hash": "5f10896f5226868c2780b6d8b03f310c"
        }
      ],
      "746cac2082cc493af330ca5cb31f836e": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 697,
          "end_line": 711,
          "content_hash": "746cac2082cc493af330ca5cb31f836e"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1474,
          "end_line": 1488,
          "content_hash": "746cac2082cc493af330ca5cb31f836e"
        }
      ],
      "306052d3c40b94471588ce7986eaa5d8": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 652,
          "end_line": 675,
          "content_hash": "306052d3c40b94471588ce7986eaa5d8"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 697,
          "end_line": 720,
          "content_hash": "306052d3c40b94471588ce7986eaa5d8"
        }
      ],
      "3ccaaccbf510897dce417131a06407f7": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command.rs",
          "start_line": 397,
          "end_line": 399,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_parser.rs",
          "start_line": 137,
          "end_line": 139,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_parser.rs",
          "start_line": 175,
          "end_line": 177,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/mod.rs",
          "start_line": 345,
          "end_line": 347,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/analyzer.rs",
          "start_line": 188,
          "end_line": 190,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
          "start_line": 356,
          "end_line": 358,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
          "start_line": 370,
          "end_line": 372,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
          "start_line": 384,
          "end_line": 386,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
          "start_line": 403,
          "end_line": 405,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/conventions.rs",
          "start_line": 619,
          "end_line": 621,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 900,
          "end_line": 902,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/mod.rs",
          "start_line": 247,
          "end_line": 249,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/mod.rs",
          "start_line": 259,
          "end_line": 261,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/optimized_hybrid.rs",
          "start_line": 80,
          "end_line": 82,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/optimized_hybrid.rs",
          "start_line": 118,
          "end_line": 120,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/optimized_hybrid.rs",
          "start_line": 140,
          "end_line": 142,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/interaction/prompts.rs",
          "start_line": 177,
          "end_line": 179,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_tests.rs",
          "start_line": 270,
          "end_line": 272,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 477,
          "end_line": 479,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/retry.rs",
          "start_line": 179,
          "end_line": 181,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/tests.rs",
          "start_line": 569,
          "end_line": 571,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/workflow/executor.rs",
          "start_line": 264,
          "end_line": 266,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/init/mod.rs",
          "start_line": 190,
          "end_line": 192,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/main.rs",
          "start_line": 309,
          "end_line": 311,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/storage.rs",
          "start_line": 194,
          "end_line": 196,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/storage.rs",
          "start_line": 291,
          "end_line": 293,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/testing.rs",
          "start_line": 72,
          "end_line": 74,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/testing.rs",
          "start_line": 96,
          "end_line": 98,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/testing.rs",
          "start_line": 164,
          "end_line": 166,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/testing.rs",
          "start_line": 185,
          "end_line": 187,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 544,
          "end_line": 546,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/command_parsing_tests.rs",
          "start_line": 31,
          "end_line": 33,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/command_parsing_tests.rs",
          "start_line": 64,
          "end_line": 66,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/command_parsing_tests.rs",
          "start_line": 91,
          "end_line": 93,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/common/mod.rs",
          "start_line": 189,
          "end_line": 191,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/common/mod.rs",
          "start_line": 201,
          "end_line": 203,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/context_optimization_tests.rs",
          "start_line": 175,
          "end_line": 177,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 160,
          "end_line": 162,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 168,
          "end_line": 170,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 113,
          "end_line": 115,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/integration_test_cook_path.rs",
          "start_line": 228,
          "end_line": 230,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/workflow_tests.rs",
          "start_line": 166,
          "end_line": 168,
          "content_hash": "3ccaaccbf510897dce417131a06407f7"
        }
      ],
      "f16fdea1634b35b1d419615234471fa3": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 96,
          "end_line": 108,
          "content_hash": "f16fdea1634b35b1d419615234471fa3"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 167,
          "end_line": 179,
          "content_hash": "f16fdea1634b35b1d419615234471fa3"
        }
      ],
      "5085251a1dccb0a9d7792c12f5f5e68f": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/metadata_parser.rs",
          "start_line": 464,
          "end_line": 466,
          "content_hash": "5085251a1dccb0a9d7792c12f5f5e68f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/mod.rs",
          "start_line": 285,
          "end_line": 287,
          "content_hash": "5085251a1dccb0a9d7792c12f5f5e68f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 581,
          "end_line": 583,
          "content_hash": "5085251a1dccb0a9d7792c12f5f5e68f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 436,
          "end_line": 438,
          "content_hash": "5085251a1dccb0a9d7792c12f5f5e68f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/main.rs",
          "start_line": 352,
          "end_line": 354,
          "content_hash": "5085251a1dccb0a9d7792c12f5f5e68f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/persistence.rs",
          "start_line": 101,
          "end_line": 103,
          "content_hash": "5085251a1dccb0a9d7792c12f5f5e68f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/common/mod.rs",
          "start_line": 211,
          "end_line": 213,
          "content_hash": "5085251a1dccb0a9d7792c12f5f5e68f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 262,
          "end_line": 264,
          "content_hash": "5085251a1dccb0a9d7792c12f5f5e68f"
        }
      ],
      "f972289d399966122540c6098a6cdf9c": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 602,
          "end_line": 615,
          "content_hash": "f972289d399966122540c6098a6cdf9c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 788,
          "end_line": 801,
          "content_hash": "f972289d399966122540c6098a6cdf9c"
        }
      ],
      "486fcd692166a271e1f6a15c05a20756": [
        {
          "file": "/Users/glen/memento-mori/mmm/tests/workflow_commit_verification_tests.rs",
          "start_line": 41,
          "end_line": 43,
          "content_hash": "486fcd692166a271e1f6a15c05a20756"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/workflow_commit_verification_tests.rs",
          "start_line": 49,
          "end_line": 51,
          "content_hash": "486fcd692166a271e1f6a15c05a20756"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/workflow_commit_verification_tests.rs",
          "start_line": 58,
          "end_line": 60,
          "content_hash": "486fcd692166a271e1f6a15c05a20756"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/workflow_commit_verification_tests.rs",
          "start_line": 67,
          "end_line": 69,
          "content_hash": "486fcd692166a271e1f6a15c05a20756"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/workflow_commit_verification_tests.rs",
          "start_line": 159,
          "end_line": 161,
          "content_hash": "486fcd692166a271e1f6a15c05a20756"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/workflow_commit_verification_tests.rs",
          "start_line": 200,
          "end_line": 202,
          "content_hash": "486fcd692166a271e1f6a15c05a20756"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/workflow_commit_verification_tests.rs",
          "start_line": 251,
          "end_line": 253,
          "content_hash": "486fcd692166a271e1f6a15c05a20756"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/worktree_integration_tests.rs",
          "start_line": 97,
          "end_line": 99,
          "content_hash": "486fcd692166a271e1f6a15c05a20756"
        }
      ],
      "b8bae42f33a3a98ed8a5f099150834fc": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/analysis/runner.rs",
          "start_line": 58,
          "end_line": 61,
          "content_hash": "b8bae42f33a3a98ed8a5f099150834fc"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/metrics/collector.rs",
          "start_line": 103,
          "end_line": 106,
          "content_hash": "b8bae42f33a3a98ed8a5f099150834fc"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/metrics/collector.rs",
          "start_line": 122,
          "end_line": 125,
          "content_hash": "b8bae42f33a3a98ed8a5f099150834fc"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 61,
          "end_line": 64,
          "content_hash": "b8bae42f33a3a98ed8a5f099150834fc"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/workflow/executor.rs",
          "start_line": 136,
          "end_line": 139,
          "content_hash": "b8bae42f33a3a98ed8a5f099150834fc"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/workflow_tests.rs",
          "start_line": 70,
          "end_line": 73,
          "content_hash": "b8bae42f33a3a98ed8a5f099150834fc"
        }
      ],
      "007d67c94b65844373c3c297f8302eab": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1686,
          "end_line": 1688,
          "content_hash": "007d67c94b65844373c3c297f8302eab"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 58,
          "end_line": 60,
          "content_hash": "007d67c94b65844373c3c297f8302eab"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 70,
          "end_line": 72,
          "content_hash": "007d67c94b65844373c3c297f8302eab"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 76,
          "end_line": 78,
          "content_hash": "007d67c94b65844373c3c297f8302eab"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 84,
          "end_line": 86,
          "content_hash": "007d67c94b65844373c3c297f8302eab"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 90,
          "end_line": 92,
          "content_hash": "007d67c94b65844373c3c297f8302eab"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 97,
          "end_line": 99,
          "content_hash": "007d67c94b65844373c3c297f8302eab"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 107,
          "end_line": 109,
          "content_hash": "007d67c94b65844373c3c297f8302eab"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 206,
          "end_line": 208,
          "content_hash": "007d67c94b65844373c3c297f8302eab"
        }
      ],
      "3f92c983beb0a4ea5797945b06732db1": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
          "start_line": 264,
          "end_line": 266,
          "content_hash": "3f92c983beb0a4ea5797945b06732db1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
          "start_line": 433,
          "end_line": 435,
          "content_hash": "3f92c983beb0a4ea5797945b06732db1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/metrics/collector.rs",
          "start_line": 68,
          "end_line": 70,
          "content_hash": "3f92c983beb0a4ea5797945b06732db1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 631,
          "end_line": 633,
          "content_hash": "3f92c983beb0a4ea5797945b06732db1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 817,
          "end_line": 819,
          "content_hash": "3f92c983beb0a4ea5797945b06732db1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1216,
          "end_line": 1218,
          "content_hash": "3f92c983beb0a4ea5797945b06732db1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1321,
          "end_line": 1323,
          "content_hash": "3f92c983beb0a4ea5797945b06732db1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1437,
          "end_line": 1439,
          "content_hash": "3f92c983beb0a4ea5797945b06732db1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/migration.rs",
          "start_line": 65,
          "end_line": 67,
          "content_hash": "3f92c983beb0a4ea5797945b06732db1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/migration.rs",
          "start_line": 76,
          "end_line": 78,
          "content_hash": "3f92c983beb0a4ea5797945b06732db1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 60,
          "end_line": 62,
          "content_hash": "3f92c983beb0a4ea5797945b06732db1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 102,
          "end_line": 104,
          "content_hash": "3f92c983beb0a4ea5797945b06732db1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 132,
          "end_line": 134,
          "content_hash": "3f92c983beb0a4ea5797945b06732db1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 156,
          "end_line": 158,
          "content_hash": "3f92c983beb0a4ea5797945b06732db1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 174,
          "end_line": 176,
          "content_hash": "3f92c983beb0a4ea5797945b06732db1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 192,
          "end_line": 194,
          "content_hash": "3f92c983beb0a4ea5797945b06732db1"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 219,
          "end_line": 221,
          "content_hash": "3f92c983beb0a4ea5797945b06732db1"
        }
      ],
      "c4f51ee5b5585f8787d642d6154e432d": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 364,
          "end_line": 384,
          "content_hash": "c4f51ee5b5585f8787d642d6154e432d"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 265,
          "end_line": 285,
          "content_hash": "c4f51ee5b5585f8787d642d6154e432d"
        }
      ],
      "d85dff91ffafcd662141bffe0daa6f3b": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 70,
          "end_line": 75,
          "content_hash": "d85dff91ffafcd662141bffe0daa6f3b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 75,
          "end_line": 80,
          "content_hash": "d85dff91ffafcd662141bffe0daa6f3b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 93,
          "end_line": 98,
          "content_hash": "d85dff91ffafcd662141bffe0daa6f3b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 170,
          "end_line": 175,
          "content_hash": "d85dff91ffafcd662141bffe0daa6f3b"
        }
      ],
      "5757d8ef7c3118eb8bfab661af3e0d55": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 61,
          "end_line": 66,
          "content_hash": "5757d8ef7c3118eb8bfab661af3e0d55"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 103,
          "end_line": 108,
          "content_hash": "5757d8ef7c3118eb8bfab661af3e0d55"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 133,
          "end_line": 138,
          "content_hash": "5757d8ef7c3118eb8bfab661af3e0d55"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 157,
          "end_line": 162,
          "content_hash": "5757d8ef7c3118eb8bfab661af3e0d55"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 175,
          "end_line": 180,
          "content_hash": "5757d8ef7c3118eb8bfab661af3e0d55"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 193,
          "end_line": 198,
          "content_hash": "5757d8ef7c3118eb8bfab661af3e0d55"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/git.rs",
          "start_line": 220,
          "end_line": 225,
          "content_hash": "5757d8ef7c3118eb8bfab661af3e0d55"
        }
      ],
      "f33ede8257fceb643a114f883855771c": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 228,
          "end_line": 277,
          "content_hash": "f33ede8257fceb643a114f883855771c"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/dynamic_registry.rs",
          "start_line": 120,
          "end_line": 169,
          "content_hash": "f33ede8257fceb643a114f883855771c"
        }
      ],
      "37ca2eb2ce7b6bf86c2c28dbcb896d24": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/config/command_validator.rs",
          "start_line": 210,
          "end_line": 212,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/analyzer.rs",
          "start_line": 303,
          "end_line": 305,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/analyzer.rs",
          "start_line": 342,
          "end_line": 344,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/analyzer.rs",
          "start_line": 389,
          "end_line": 391,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/architecture.rs",
          "start_line": 282,
          "end_line": 284,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/architecture.rs",
          "start_line": 328,
          "end_line": 330,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/architecture.rs",
          "start_line": 348,
          "end_line": 350,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/architecture.rs",
          "start_line": 368,
          "end_line": 370,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/architecture.rs",
          "start_line": 466,
          "end_line": 468,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 253,
          "end_line": 255,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/debt.rs",
          "start_line": 732,
          "end_line": 734,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/dependencies.rs",
          "start_line": 307,
          "end_line": 309,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/dependencies.rs",
          "start_line": 383,
          "end_line": 385,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/hybrid_coverage.rs",
          "start_line": 295,
          "end_line": 297,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/size_manager.rs",
          "start_line": 110,
          "end_line": 112,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 396,
          "end_line": 398,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 406,
          "end_line": 408,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/test_coverage.rs",
          "start_line": 416,
          "end_line": 418,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/metrics/reporter.rs",
          "start_line": 167,
          "end_line": 169,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/parsers.rs",
          "start_line": 160,
          "end_line": 162,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 313,
          "end_line": 315,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/mock.rs",
          "start_line": 88,
          "end_line": 90,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/context_optimization_tests.rs",
          "start_line": 159,
          "end_line": 161,
          "content_hash": "37ca2eb2ce7b6bf86c2c28dbcb896d24"
        }
      ],
      "9846a0d64e50c1aab7a4128200d0d33a": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 165,
          "end_line": 168,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 287,
          "end_line": 290,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/analysis/cache.rs",
          "start_line": 52,
          "end_line": 55,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/analysis/cache.rs",
          "start_line": 125,
          "end_line": 128,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/analysis/runner.rs",
          "start_line": 199,
          "end_line": 202,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 742,
          "end_line": 745,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 874,
          "end_line": 877,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1526,
          "end_line": 1529,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 337,
          "end_line": 340,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/orchestrator.rs",
          "start_line": 635,
          "end_line": 638,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/session/tracker.rs",
          "start_line": 83,
          "end_line": 86,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 312,
          "end_line": 315,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 368,
          "end_line": 371,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 481,
          "end_line": 484,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 509,
          "end_line": 512,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/backends.rs",
          "start_line": 143,
          "end_line": 146,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/performance.rs",
          "start_line": 221,
          "end_line": 224,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/storage.rs",
          "start_line": 176,
          "end_line": 179,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/manager.rs",
          "start_line": 156,
          "end_line": 159,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/manager.rs",
          "start_line": 323,
          "end_line": 326,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/storage.rs",
          "start_line": 97,
          "end_line": 100,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/session/storage.rs",
          "start_line": 144,
          "end_line": 147,
          "content_hash": "9846a0d64e50c1aab7a4128200d0d33a"
        }
      ],
      "d2ef0365d68999925c0c286e73a9ae22": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 621,
          "end_line": 623,
          "content_hash": "d2ef0365d68999925c0c286e73a9ae22"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 807,
          "end_line": 809,
          "content_hash": "d2ef0365d68999925c0c286e73a9ae22"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1496,
          "end_line": 1498,
          "content_hash": "d2ef0365d68999925c0c286e73a9ae22"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/mod_old.rs",
          "start_line": 1890,
          "end_line": 1892,
          "content_hash": "d2ef0365d68999925c0c286e73a9ae22"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 400,
          "end_line": 402,
          "content_hash": "d2ef0365d68999925c0c286e73a9ae22"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 426,
          "end_line": 428,
          "content_hash": "d2ef0365d68999925c0c286e73a9ae22"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 446,
          "end_line": 448,
          "content_hash": "d2ef0365d68999925c0c286e73a9ae22"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 466,
          "end_line": 468,
          "content_hash": "d2ef0365d68999925c0c286e73a9ae22"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 489,
          "end_line": 491,
          "content_hash": "d2ef0365d68999925c0c286e73a9ae22"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 543,
          "end_line": 545,
          "content_hash": "d2ef0365d68999925c0c286e73a9ae22"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/scenario.rs",
          "start_line": 599,
          "end_line": 601,
          "content_hash": "d2ef0365d68999925c0c286e73a9ae22"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/subprocess/claude.rs",
          "start_line": 39,
          "end_line": 41,
          "content_hash": "d2ef0365d68999925c0c286e73a9ae22"
        }
      ],
      "f6816e30c8b5e7ccf57d85f8329d38c7": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 389,
          "end_line": 395,
          "content_hash": "f6816e30c8b5e7ccf57d85f8329d38c7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 435,
          "end_line": 441,
          "content_hash": "f6816e30c8b5e7ccf57d85f8329d38c7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 455,
          "end_line": 461,
          "content_hash": "f6816e30c8b5e7ccf57d85f8329d38c7"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/git/mod.rs",
          "start_line": 478,
          "end_line": 484,
          "content_hash": "f6816e30c8b5e7ccf57d85f8329d38c7"
        }
      ],
      "dd65d6cd6b17169b84dbbe3a1efaf13b": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/tests.rs",
          "start_line": 287,
          "end_line": 291,
          "content_hash": "dd65d6cd6b17169b84dbbe3a1efaf13b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/tests.rs",
          "start_line": 325,
          "end_line": 329,
          "content_hash": "dd65d6cd6b17169b84dbbe3a1efaf13b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/tests.rs",
          "start_line": 409,
          "end_line": 413,
          "content_hash": "dd65d6cd6b17169b84dbbe3a1efaf13b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/tests.rs",
          "start_line": 480,
          "end_line": 484,
          "content_hash": "dd65d6cd6b17169b84dbbe3a1efaf13b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/tests.rs",
          "start_line": 504,
          "end_line": 508,
          "content_hash": "dd65d6cd6b17169b84dbbe3a1efaf13b"
        }
      ],
      "016d2b794a04250908792f3e0248033b": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/claude.rs",
          "start_line": 44,
          "end_line": 46,
          "content_hash": "016d2b794a04250908792f3e0248033b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 49,
          "end_line": 51,
          "content_hash": "016d2b794a04250908792f3e0248033b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/analyzer.rs",
          "start_line": 19,
          "end_line": 21,
          "content_hash": "016d2b794a04250908792f3e0248033b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/context/tarpaulin_coverage.rs",
          "start_line": 44,
          "end_line": 46,
          "content_hash": "016d2b794a04250908792f3e0248033b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/cook/execution/runner.rs",
          "start_line": 26,
          "end_line": 28,
          "content_hash": "016d2b794a04250908792f3e0248033b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/collector.rs",
          "start_line": 11,
          "end_line": 13,
          "content_hash": "016d2b794a04250908792f3e0248033b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/performance.rs",
          "start_line": 22,
          "end_line": 24,
          "content_hash": "016d2b794a04250908792f3e0248033b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/metrics/quality.rs",
          "start_line": 23,
          "end_line": 25,
          "content_hash": "016d2b794a04250908792f3e0248033b"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/manager.rs",
          "start_line": 13,
          "end_line": 15,
          "content_hash": "016d2b794a04250908792f3e0248033b"
        }
      ],
      "aabc465b980710fe7b393738175f496f": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 4,
          "end_line": 6,
          "content_hash": "aabc465b980710fe7b393738175f496f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 3,
          "end_line": 5,
          "content_hash": "aabc465b980710fe7b393738175f496f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/common/mod.rs",
          "start_line": 6,
          "end_line": 8,
          "content_hash": "aabc465b980710fe7b393738175f496f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/config_integration_tests.rs",
          "start_line": 2,
          "end_line": 4,
          "content_hash": "aabc465b980710fe7b393738175f496f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_iteration_tests.rs",
          "start_line": 4,
          "end_line": 6,
          "content_hash": "aabc465b980710fe7b393738175f496f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/cook_tests.rs",
          "start_line": 1,
          "end_line": 3,
          "content_hash": "aabc465b980710fe7b393738175f496f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/edge_case_tests.rs",
          "start_line": 8,
          "end_line": 10,
          "content_hash": "aabc465b980710fe7b393738175f496f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/error_handling_tests.rs",
          "start_line": 1,
          "end_line": 3,
          "content_hash": "aabc465b980710fe7b393738175f496f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/integration_test_cook_path.rs",
          "start_line": 6,
          "end_line": 8,
          "content_hash": "aabc465b980710fe7b393738175f496f"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/tests/worktree_integration_tests.rs",
          "start_line": 4,
          "end_line": 6,
          "content_hash": "aabc465b980710fe7b393738175f496f"
        }
      ],
      "ff317687a03ee962c2e958a899c79a07": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 39,
          "end_line": 42,
          "content_hash": "ff317687a03ee962c2e958a899c79a07"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 77,
          "end_line": 80,
          "content_hash": "ff317687a03ee962c2e958a899c79a07"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 112,
          "end_line": 115,
          "content_hash": "ff317687a03ee962c2e958a899c79a07"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 130,
          "end_line": 133,
          "content_hash": "ff317687a03ee962c2e958a899c79a07"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 165,
          "end_line": 168,
          "content_hash": "ff317687a03ee962c2e958a899c79a07"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 208,
          "end_line": 211,
          "content_hash": "ff317687a03ee962c2e958a899c79a07"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/test_state.rs",
          "start_line": 224,
          "end_line": 227,
          "content_hash": "ff317687a03ee962c2e958a899c79a07"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 38,
          "end_line": 41,
          "content_hash": "ff317687a03ee962c2e958a899c79a07"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 56,
          "end_line": 59,
          "content_hash": "ff317687a03ee962c2e958a899c79a07"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 82,
          "end_line": 85,
          "content_hash": "ff317687a03ee962c2e958a899c79a07"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 100,
          "end_line": 103,
          "content_hash": "ff317687a03ee962c2e958a899c79a07"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 122,
          "end_line": 125,
          "content_hash": "ff317687a03ee962c2e958a899c79a07"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 153,
          "end_line": 156,
          "content_hash": "ff317687a03ee962c2e958a899c79a07"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/worktree/tests.rs",
          "start_line": 177,
          "end_line": 180,
          "content_hash": "ff317687a03ee962c2e958a899c79a07"
        }
      ],
      "8d1335071a93657b1b53f52ce2420778": [
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 147,
          "end_line": 168,
          "content_hash": "8d1335071a93657b1b53f52ce2420778"
        },
        {
          "file": "/Users/glen/memento-mori/mmm/src/abstractions/git.rs",
          "start_line": 269,
          "end_line": 290,
          "content_hash": "8d1335071a93657b1b53f52ce2420778"
        }
      ]
    }
  },
  "test_coverage": {
    "file_coverage": {},
    "untested_functions": [],
    "critical_paths": [],
    "overall_coverage": 0.0
  },
  "hybrid_coverage": {
    "coverage_map": {
      "file_coverage": {},
      "untested_functions": [],
      "critical_paths": [],
      "overall_coverage": 0.0
    },
    "priority_gaps": [],
    "quality_correlation": {
      "positive_correlations": [],
      "negative_correlations": [],
      "correlation_coefficient": 0.0
    },
    "critical_files": [],
    "hybrid_score": 0.0
  },
  "metadata": {
    "timestamp": "2025-08-01T23:39:25.218700Z",
    "duration_ms": 97861,
    "files_analyzed": 160,
    "incremental": false,
    "version": "0.1.0"
  }
}