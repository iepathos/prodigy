{
  "nodes": {
    "tests/metrics_collector_integration.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 6
    },
    "src/session/storage.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 8
    },
    "src/testing/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 10
    },
    "tests/context_integration.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 4
    },
    "src/context/test_coverage.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 10
    },
    "src/context/size_manager.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "tests/edge_case_tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 9
    },
    "src/cook/interaction/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 6
    },
    "src/context/analyzer.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 6
    },
    "src/cook/git_ops.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 9
    },
    "src/context/conventions.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 12
    },
    "src/subprocess/tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 3
    },
    "src/session/timing.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 3
    },
    "src/context/tarpaulin_coverage.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 11
    },
    "src/worktree/state.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 2
    },
    "tests/analysis_integration.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "src/subprocess/claude.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 6
    },
    "src/cook/coordinators/environment.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 8
    },
    "src/cook/session/summary.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 1
    },
    "tests/workflow_analysis_tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 2
    },
    "tests/common/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 7
    },
    "src/cook/analysis/cache.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 12
    },
    "src/analysis/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 0
    },
    "src/subprocess/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 2
    },
    "src/metrics/quality.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "src/metrics/testing.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 9
    },
    "src/cook/session/tracker.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 10
    },
    "src/subprocess/runner.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 9
    },
    "src/metrics/context.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 7
    },
    "src/cook/metrics/reporter.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 6
    },
    "src/cook/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 11
    },
    "tests/command_parsing_tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 1
    },
    "src/cook/workflow/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 1
    },
    "src/session/tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "tests/config_integration_tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 3
    },
    "src/simple_state/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 3
    },
    "src/cook/execution/claude.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 8
    },
    "src/cook/session/migration.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 6
    },
    "src/metrics/registry.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 10
    },
    "src/cook/coordinators/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 4
    },
    "src/context/summary.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "src/config/metadata_parser.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 10
    },
    "src/git/types.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 1
    },
    "tests/context_optimization_tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 7
    },
    "src/abstractions/git.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 12
    },
    "src/cook/execution/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 3
    },
    "src/cook/session/adapter.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 13
    },
    "src/metrics/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 10
    },
    "src/cook/workflow/executor.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 15
    },
    "src/config/command_parser.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 6
    },
    "src/simple_state/types.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 2
    },
    "src/session/state.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 7
    },
    "src/abstractions/exit_status.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 0
    },
    "src/git/parsers.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "src/simple_state/state.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "src/config/loader.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 10
    },
    "src/session/manager.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 11
    },
    "src/session/config.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "src/config/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 13
    },
    "src/cook/session/state.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 4
    },
    "tests/metrics_integration.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 9
    },
    "src/simple_state/cache.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "src/scoring/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 7
    },
    "src/init/templates.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 1
    },
    "tests/signal_handling_integration.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 6
    },
    "src/analyze/command.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "src/git/scenario.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 10
    },
    "src/cook/coordinators/workflow.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 9
    },
    "tests/subprocess_tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 3
    },
    "src/cook/execution/runner.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 6
    },
    "tests/cook_orchestrator_integration.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 12
    },
    "src/abstractions/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 0
    },
    "src/worktree/test_state.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "tests/worktree_integration_tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "tests/unified_scoring_tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 2
    },
    "src/cook/analysis/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 6
    },
    "src/analysis/unified.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 13
    },
    "src/config/command_validator.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 6
    },
    "src/cook/command.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 2
    },
    "src/config/command_discovery.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 9
    },
    "src/context/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 8
    },
    "src/cook/coordinators/execution.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 7
    },
    "src/worktree/tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 4
    },
    "src/git/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 10
    },
    "src/cook/metrics/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 4
    },
    "src/main.rs": {
      "module_type": "Binary",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "tests/workflow_tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 1
    },
    "src/simple_state/tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "src/cook/mod_tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 8
    },
    "src/config/command.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 4
    },
    "src/analyze/tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 11
    },
    "src/subprocess/error.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 1
    },
    "tests/workflow_commit_verification_tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 6
    },
    "src/cook/tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 12
    },
    "src/cook/signal_handler.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 16
    },
    "tests/error_handling_tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 6
    },
    "tests/cook_tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 7
    },
    "src/session/persistence.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 7
    },
    "src/context/architecture.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 9
    },
    "src/cook/orchestrator.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 37
    },
    "src/git/error.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 2
    },
    "src/metrics/complexity.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 10
    },
    "src/metrics/backends.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 15
    },
    "src/analyze/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 3
    },
    "src/cook/analysis/runner.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 14
    },
    "src/cook/session/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 3
    },
    "src/metrics/collector.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 10
    },
    "src/context/dependencies.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 12
    },
    "src/cook/interaction/display.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 4
    },
    "src/cook/retry.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 12
    },
    "src/cook/coordinators/session.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "Cargo.toml": {
      "module_type": "Config",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 0
    },
    "tests/metrics_system_integration.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 7
    },
    "src/metrics/events.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 6
    },
    "src/session/events.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 7
    },
    "src/lib.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 0
    },
    "tests/cook_coordinators_integration.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 6
    },
    "src/config/workflow.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 2
    },
    "src/metrics/history.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 2
    },
    "src/cook/interaction/prompts.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "src/session/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 4
    },
    "tests/cli_tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 9
    },
    "src/init/command.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 2
    },
    "src/worktree/manager.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 10
    },
    "src/testing/test_mocks.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 1
    },
    "src/subprocess/mock.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "tests/integration_test_cook_path.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 6
    },
    "src/context/metrics_aware_coverage.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 4
    },
    "src/worktree/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 4
    },
    "src/subprocess/builder.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 4
    },
    "src/metrics/storage.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 8
    },
    "src/metrics/performance.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 8
    },
    "tests/cook_iteration_tests.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 5
    },
    "src/context/debt.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 9
    },
    "src/config/dynamic_registry.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 14
    },
    "src/abstractions/claude.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 11
    },
    "src/subprocess/git.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 11
    },
    "src/cook/metrics/collector.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 15
    },
    "src/init/mod.rs": {
      "module_type": "Library",
      "import_count": 0,
      "export_count": 0,
      "external_dep_count": 0,
      "coupling_score": 18
    }
  },
  "edges": [
    {
      "from": "tests/cook_iteration_tests.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_iteration_tests.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_iteration_tests.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_iteration_tests.rs",
      "to": "std::process::Command",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_iteration_tests.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/workflow_commit_verification_tests.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "tests/workflow_commit_verification_tests.rs",
      "to": "assert_cmd::Command",
      "dep_type": "Import"
    },
    {
      "from": "tests/workflow_commit_verification_tests.rs",
      "to": "predicates::prelude::*",
      "dep_type": "Import"
    },
    {
      "from": "tests/workflow_commit_verification_tests.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "tests/workflow_commit_verification_tests.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "tests/workflow_commit_verification_tests.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/cli_tests.rs",
      "to": "mod::common",
      "dep_type": "Import"
    },
    {
      "from": "tests/cli_tests.rs",
      "to": "assert_cmd::Command",
      "dep_type": "Import"
    },
    {
      "from": "tests/cli_tests.rs",
      "to": "predicates::prelude::*",
      "dep_type": "Import"
    },
    {
      "from": "tests/cli_tests.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/cli_tests.rs",
      "to": "mod::cook_dry_run_tests {",
      "dep_type": "Import"
    },
    {
      "from": "tests/cli_tests.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "tests/cli_tests.rs",
      "to": "std::env",
      "dep_type": "Import"
    },
    {
      "from": "tests/cli_tests.rs",
      "to": "mod::arg_parsing_tests {",
      "dep_type": "Import"
    },
    {
      "from": "tests/cli_tests.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_system_integration.rs",
      "to": "chrono::Utc",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_system_integration.rs",
      "to": "mmm::metrics::backends::{CollectorConfig, FileMetricsCollector, MemoryMetricsCollector}",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_system_integration.rs",
      "to": "mmm::metrics::events::{Aggregation, MetricsQuery, MetricsReader}",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_system_integration.rs",
      "to": "mmm::metrics::{MetricEvent, MetricsRegistry, Tags}",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_system_integration.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_system_integration.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_system_integration.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_orchestrator_integration.rs",
      "to": "mod::common",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_orchestrator_integration.rs",
      "to": "mmm::cook::analysis::runner::AnalysisRunnerImpl",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_orchestrator_integration.rs",
      "to": "mmm::cook::execution::claude::ClaudeExecutorImpl",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_orchestrator_integration.rs",
      "to": "mmm::cook::execution::runner::RealCommandRunner",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_orchestrator_integration.rs",
      "to": "mmm::cook::metrics::collector::MetricsCollectorImpl",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_orchestrator_integration.rs",
      "to": "mmm::cook::orchestrator::{CookOrchestrator, DefaultCookOrchestrator}",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_orchestrator_integration.rs",
      "to": "mmm::cook::session::tracker::SessionTrackerImpl",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_orchestrator_integration.rs",
      "to": "mmm::simple_state::StateManager",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_orchestrator_integration.rs",
      "to": "mmm::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_orchestrator_integration.rs",
      "to": "std::os::unix::process::ExitStatusExt",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_orchestrator_integration.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_orchestrator_integration.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_integration.rs",
      "to": "mod::common",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_integration.rs",
      "to": "mmm::context::{ContextAnalyzer, ProjectAnalyzer}",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_integration.rs",
      "to": "mmm::metrics::{MetricsCollector, MetricsHistory}",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_integration.rs",
      "to": "mmm::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_integration.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_integration.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_integration.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_integration.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_integration.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "tests/config_integration_tests.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "tests/config_integration_tests.rs",
      "to": "std::process::Command",
      "dep_type": "Import"
    },
    {
      "from": "tests/config_integration_tests.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_tests.rs",
      "to": "std::process::Command",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_tests.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_tests.rs",
      "to": "mod::improve_command_tests {",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_tests.rs",
      "to": "mmm::cook::command::CookCommand",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_tests.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_tests.rs",
      "to": "mod::session_tests {",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_tests.rs",
      "to": "mmm::cook::session::SessionSummary",
      "dep_type": "Import"
    },
    {
      "from": "tests/error_handling_tests.rs",
      "to": "std::process::Command",
      "dep_type": "Import"
    },
    {
      "from": "tests/error_handling_tests.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/error_handling_tests.rs",
      "to": "std::sync::{Arc, Mutex}",
      "dep_type": "Import"
    },
    {
      "from": "tests/error_handling_tests.rs",
      "to": "std::thread",
      "dep_type": "Import"
    },
    {
      "from": "tests/error_handling_tests.rs",
      "to": "mod::cook_error_recovery {",
      "dep_type": "Import"
    },
    {
      "from": "tests/error_handling_tests.rs",
      "to": "anyhow::{anyhow, Result}",
      "dep_type": "Import"
    },
    {
      "from": "tests/analysis_integration.rs",
      "to": "mmm::cook::analysis::cache::{AnalysisCache, AnalysisCacheImpl}",
      "dep_type": "Import"
    },
    {
      "from": "tests/analysis_integration.rs",
      "to": "mmm::cook::analysis::runner::{AnalysisRunner, AnalysisRunnerImpl}",
      "dep_type": "Import"
    },
    {
      "from": "tests/analysis_integration.rs",
      "to": "mmm::cook::execution::{CommandRunner, ExecutionContext, ExecutionResult}",
      "dep_type": "Import"
    },
    {
      "from": "tests/analysis_integration.rs",
      "to": "std::os::unix::process::ExitStatusExt",
      "dep_type": "Import"
    },
    {
      "from": "tests/analysis_integration.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/common/mod.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "tests/common/mod.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "tests/common/mod.rs",
      "to": "std::path::{Path, PathBuf}",
      "dep_type": "Import"
    },
    {
      "from": "tests/common/mod.rs",
      "to": "std::process::Command",
      "dep_type": "Import"
    },
    {
      "from": "tests/common/mod.rs",
      "to": "std::sync::Once",
      "dep_type": "Import"
    },
    {
      "from": "tests/common/mod.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/common/mod.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "tests/context_integration.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/context_integration.rs",
      "to": "mmm::metrics::storage::MetricsStorage",
      "dep_type": "Import"
    },
    {
      "from": "tests/context_integration.rs",
      "to": "mmm::metrics::ImprovementMetrics",
      "dep_type": "Import"
    },
    {
      "from": "tests/context_integration.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "tests/command_parsing_tests.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "tests/workflow_analysis_tests.rs",
      "to": "mmm::config::command::{AnalysisConfig, Command, WorkflowCommand}",
      "dep_type": "Import"
    },
    {
      "from": "tests/workflow_analysis_tests.rs",
      "to": "mmm::config::WorkflowConfig",
      "dep_type": "Import"
    },
    {
      "from": "tests/worktree_integration_tests.rs",
      "to": "mmm::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "tests/worktree_integration_tests.rs",
      "to": "mmm::worktree::WorktreeManager",
      "dep_type": "Import"
    },
    {
      "from": "tests/worktree_integration_tests.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "tests/worktree_integration_tests.rs",
      "to": "std::process::Command",
      "dep_type": "Import"
    },
    {
      "from": "tests/worktree_integration_tests.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_collector_integration.rs",
      "to": "mod::common",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_collector_integration.rs",
      "to": "mmm::cook::metrics::collector::MetricsCollectorImpl",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_collector_integration.rs",
      "to": "mmm::cook::metrics::MetricsCoordinator",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_collector_integration.rs",
      "to": "mmm::metrics::registry::{MetricsConfig, MetricsRegistry}",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_collector_integration.rs",
      "to": "std::os::unix::process::ExitStatusExt",
      "dep_type": "Import"
    },
    {
      "from": "tests/metrics_collector_integration.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/edge_case_tests.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "tests/edge_case_tests.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "tests/edge_case_tests.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "tests/edge_case_tests.rs",
      "to": "std::process::Command",
      "dep_type": "Import"
    },
    {
      "from": "tests/edge_case_tests.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/edge_case_tests.rs",
      "to": "std::sync::{Arc, Mutex}",
      "dep_type": "Import"
    },
    {
      "from": "tests/edge_case_tests.rs",
      "to": "std::thread",
      "dep_type": "Import"
    },
    {
      "from": "tests/edge_case_tests.rs",
      "to": "std::thread",
      "dep_type": "Import"
    },
    {
      "from": "tests/edge_case_tests.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "tests/workflow_tests.rs",
      "to": "mmm::config::{command::WorkflowCommand, workflow::WorkflowConfig}",
      "dep_type": "Import"
    },
    {
      "from": "tests/context_optimization_tests.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "tests/context_optimization_tests.rs",
      "to": "mmm::context::{",
      "dep_type": "Import"
    },
    {
      "from": "tests/context_optimization_tests.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "tests/context_optimization_tests.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "tests/context_optimization_tests.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/context_optimization_tests.rs",
      "to": "mmm::context::size_manager::OptimizableForSize",
      "dep_type": "Import"
    },
    {
      "from": "tests/context_optimization_tests.rs",
      "to": "mmm::context::{",
      "dep_type": "Import"
    },
    {
      "from": "tests/integration_test_cook_path.rs",
      "to": "assert_cmd::prelude::*",
      "dep_type": "Import"
    },
    {
      "from": "tests/integration_test_cook_path.rs",
      "to": "predicates::prelude::*",
      "dep_type": "Import"
    },
    {
      "from": "tests/integration_test_cook_path.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "tests/integration_test_cook_path.rs",
      "to": "std::process::Command",
      "dep_type": "Import"
    },
    {
      "from": "tests/integration_test_cook_path.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/integration_test_cook_path.rs",
      "to": "std::env",
      "dep_type": "Import"
    },
    {
      "from": "tests/signal_handling_integration.rs",
      "to": "mmm::cook::signal_handler::setup_interrupt_handlers",
      "dep_type": "Import"
    },
    {
      "from": "tests/signal_handling_integration.rs",
      "to": "mmm::subprocess::{MockProcessRunner, SubprocessManager}",
      "dep_type": "Import"
    },
    {
      "from": "tests/signal_handling_integration.rs",
      "to": "mmm::worktree::WorktreeManager",
      "dep_type": "Import"
    },
    {
      "from": "tests/signal_handling_integration.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "tests/signal_handling_integration.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "tests/signal_handling_integration.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "tests/subprocess_tests.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "tests/subprocess_tests.rs",
      "to": "std::process::Command",
      "dep_type": "Import"
    },
    {
      "from": "tests/subprocess_tests.rs",
      "to": "tokio::time::{timeout, Duration}",
      "dep_type": "Import"
    },
    {
      "from": "tests/unified_scoring_tests.rs",
      "to": "mmm::metrics::ImprovementMetrics",
      "dep_type": "Import"
    },
    {
      "from": "tests/unified_scoring_tests.rs",
      "to": "mmm::scoring::ProjectHealthScore",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_coordinators_integration.rs",
      "to": "mmm::config::WorkflowCommand",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_coordinators_integration.rs",
      "to": "mmm::cook::coordinators::WorkflowContext",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_coordinators_integration.rs",
      "to": "mmm::cook::interaction::UserInteraction",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_coordinators_integration.rs",
      "to": "mmm::cook::workflow::WorkflowStep",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_coordinators_integration.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "tests/cook_coordinators_integration.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/init/command.rs",
      "to": "clap::Parser",
      "dep_type": "Import"
    },
    {
      "from": "src/init/command.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "anyhow::{Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "std::path::{Path, PathBuf}",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "crate::init::command::InitCommand",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "crate::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "crate::subprocess::ProcessCommandBuilder",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "std::io::IsTerminal",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "std::io::{self, Write}",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "crate::init::command::InitCommand",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "crate::subprocess::ProcessCommandBuilder",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "crate::subprocess::ProcessCommandBuilder",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "crate::subprocess::ProcessCommandBuilder",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "crate::subprocess::ProcessCommandBuilder",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "crate::subprocess::ProcessCommandBuilder",
      "dep_type": "Import"
    },
    {
      "from": "src/init/mod.rs",
      "to": "crate::subprocess::ProcessCommandBuilder",
      "dep_type": "Import"
    },
    {
      "from": "src/init/templates.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/collector.rs",
      "to": "super::{ComplexityCalculator, ImprovementMetrics, PerformanceProfiler, QualityAnalyzer}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/collector.rs",
      "to": "crate::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/collector.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/collector.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/collector.rs",
      "to": "tokio::task",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/collector.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/collector.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/collector.rs",
      "to": "crate::testing::test_mocks::{CargoMocks, TestMockSetup}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/collector.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/collector.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/events.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/events.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/events.rs",
      "to": "chrono::{DateTime, Utc}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/events.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/events.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/events.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/registry.rs",
      "to": "super::events::{",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/registry.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/registry.rs",
      "to": "std::future::Future",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/registry.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/registry.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/registry.rs",
      "to": "tokio::sync::RwLock",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/registry.rs",
      "to": "rand::Rng",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/registry.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/registry.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/registry.rs",
      "to": "crate::metrics::backends::MemoryMetricsCollector",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/complexity.rs",
      "to": "anyhow::{Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/complexity.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/complexity.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/complexity.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/complexity.rs",
      "to": "syn::{visit::Visit, Block, Expr}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/complexity.rs",
      "to": "tracing::debug",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/complexity.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/complexity.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/complexity.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/complexity.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/mod.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/mod.rs",
      "to": "chrono::{DateTime, Utc}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/mod.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/mod.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/mod.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/mod.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/mod.rs",
      "to": "crate::scoring::ProjectHealthScore",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/mod.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/mod.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/mod.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/history.rs",
      "to": "super::ImprovementMetrics",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/history.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/quality.rs",
      "to": "crate::subprocess::{ProcessCommandBuilder, SubprocessManager}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/quality.rs",
      "to": "anyhow::{Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/quality.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/quality.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/quality.rs",
      "to": "tracing::debug",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/testing.rs",
      "to": "super::backends::MemoryMetricsCollector",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/testing.rs",
      "to": "super::events::{MetricEvent, Tags}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/testing.rs",
      "to": "super::registry::{MetricsConfig, MetricsRegistry}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/testing.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/testing.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/testing.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/testing.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/testing.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/testing.rs",
      "to": "tokio::time::sleep",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/performance.rs",
      "to": "crate::subprocess::{ProcessCommandBuilder, SubprocessManager}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/performance.rs",
      "to": "anyhow::{Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/performance.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/performance.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/performance.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/performance.rs",
      "to": "std::time::{Duration, Instant}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/performance.rs",
      "to": "tracing::debug",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/performance.rs",
      "to": "std::os::unix::fs::PermissionsExt",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/storage.rs",
      "to": "super::{ImprovementMetrics, MetricsHistory}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/storage.rs",
      "to": "anyhow::{Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/storage.rs",
      "to": "std::path::{Path, PathBuf}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/storage.rs",
      "to": "tracing::debug",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/storage.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/storage.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/storage.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/storage.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/backends.rs",
      "to": "super::events::{",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/backends.rs",
      "to": "anyhow::{Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/backends.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/backends.rs",
      "to": "chrono::Utc",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/backends.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/backends.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/backends.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/backends.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/backends.rs",
      "to": "tokio::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/backends.rs",
      "to": "tokio::io::AsyncWriteExt",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/backends.rs",
      "to": "tokio::sync::{Mutex, RwLock}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/backends.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/backends.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/backends.rs",
      "to": "crate::metrics::Tags",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/backends.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/context.rs",
      "to": "super::events::{MetricEvent, Tags}",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/context.rs",
      "to": "super::registry::MetricsRegistry",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/context.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/context.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/context.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/context.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/metrics/context.rs",
      "to": "crate::metrics::{backends::MemoryMetricsCollector, registry::MetricsConfig}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/metrics_aware_coverage.rs",
      "to": "super::test_coverage::{TestCoverageAnalyzer, TestCoverageMap}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/metrics_aware_coverage.rs",
      "to": "crate::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "src/context/metrics_aware_coverage.rs",
      "to": "anyhow::{Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/metrics_aware_coverage.rs",
      "to": "std::path::{Path, PathBuf}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/analyzer.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/context/analyzer.rs",
      "to": "crate::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "src/context/analyzer.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/context/analyzer.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/context/analyzer.rs",
      "to": "std::time::Instant",
      "dep_type": "Import"
    },
    {
      "from": "src/context/analyzer.rs",
      "to": "walkdir::WalkDir",
      "dep_type": "Import"
    },
    {
      "from": "src/context/test_coverage.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/context/test_coverage.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/test_coverage.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/context/test_coverage.rs",
      "to": "std::path::{Path, PathBuf}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/test_coverage.rs",
      "to": "walkdir::WalkDir",
      "dep_type": "Import"
    },
    {
      "from": "src/context/test_coverage.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/context/test_coverage.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/context/test_coverage.rs",
      "to": "crate::testing::test_helpers::*",
      "dep_type": "Import"
    },
    {
      "from": "src/context/test_coverage.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/context/test_coverage.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/context/size_manager.rs",
      "to": "anyhow::{Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/size_manager.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/size_manager.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/context/size_manager.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/context/size_manager.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/context/mod.rs",
      "to": "self::dependencies::ArchitecturalLayer",
      "dep_type": "Import"
    },
    {
      "from": "src/context/mod.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/context/mod.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/mod.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/context/mod.rs",
      "to": "std::path::{Path, PathBuf}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/mod.rs",
      "to": "crate::scoring::format_component",
      "dep_type": "Import"
    },
    {
      "from": "src/context/mod.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/context/mod.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/context/dependencies.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/context/dependencies.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/dependencies.rs",
      "to": "std::collections::{HashMap, HashSet}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/dependencies.rs",
      "to": "std::path::{Path, PathBuf}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/dependencies.rs",
      "to": "walkdir::WalkDir",
      "dep_type": "Import"
    },
    {
      "from": "src/context/dependencies.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/context/dependencies.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/context/dependencies.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/context/dependencies.rs",
      "to": "std::collections::{HashMap, HashSet}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/dependencies.rs",
      "to": "crate::context::AnalysisResult",
      "dep_type": "Import"
    },
    {
      "from": "src/context/dependencies.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/context/dependencies.rs",
      "to": "mod::submodule",
      "dep_type": "Import"
    },
    {
      "from": "src/context/debt.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/context/debt.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/debt.rs",
      "to": "std::cmp::Ordering",
      "dep_type": "Import"
    },
    {
      "from": "src/context/debt.rs",
      "to": "std::collections::{BinaryHeap, HashMap}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/debt.rs",
      "to": "std::path::{Path, PathBuf}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/debt.rs",
      "to": "walkdir::WalkDir",
      "dep_type": "Import"
    },
    {
      "from": "src/context/debt.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/context/debt.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/context/debt.rs",
      "to": "crate::testing::test_helpers::*",
      "dep_type": "Import"
    },
    {
      "from": "src/context/tarpaulin_coverage.rs",
      "to": "anyhow::{Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/tarpaulin_coverage.rs",
      "to": "serde::Deserialize",
      "dep_type": "Import"
    },
    {
      "from": "src/context/tarpaulin_coverage.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/context/tarpaulin_coverage.rs",
      "to": "std::path::{Path, PathBuf}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/tarpaulin_coverage.rs",
      "to": "super::test_coverage::{",
      "dep_type": "Import"
    },
    {
      "from": "src/context/tarpaulin_coverage.rs",
      "to": "crate::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "src/context/tarpaulin_coverage.rs",
      "to": "crate::subprocess::ProcessCommandBuilder",
      "dep_type": "Import"
    },
    {
      "from": "src/context/tarpaulin_coverage.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/context/tarpaulin_coverage.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/context/tarpaulin_coverage.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/context/tarpaulin_coverage.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/context/architecture.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/context/architecture.rs",
      "to": "crate::context::dependencies::ArchitecturalLayer",
      "dep_type": "Import"
    },
    {
      "from": "src/context/architecture.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/context/architecture.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/context/architecture.rs",
      "to": "std::path::{Path, PathBuf}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/architecture.rs",
      "to": "walkdir::WalkDir",
      "dep_type": "Import"
    },
    {
      "from": "src/context/architecture.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/context/architecture.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/context/architecture.rs",
      "to": "crate::testing::test_helpers::*",
      "dep_type": "Import"
    },
    {
      "from": "src/context/conventions.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/context/conventions.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/conventions.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/context/conventions.rs",
      "to": "std::path::{Path, PathBuf}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/conventions.rs",
      "to": "walkdir::WalkDir",
      "dep_type": "Import"
    },
    {
      "from": "src/context/conventions.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/context/conventions.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/context/conventions.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/context/conventions.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/context/conventions.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/context/conventions.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/context/conventions.rs",
      "to": "std::error::Error",
      "dep_type": "Import"
    },
    {
      "from": "src/context/summary.rs",
      "to": "super::{AnalysisMetadata, AnalysisResult}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/summary.rs",
      "to": "crate::scoring::ProjectHealthScore",
      "dep_type": "Import"
    },
    {
      "from": "src/context/summary.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/context/summary.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/context/summary.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/analysis/unified.rs",
      "to": "crate::context::{",
      "dep_type": "Import"
    },
    {
      "from": "src/analysis/unified.rs",
      "to": "crate::metrics::{ImprovementMetrics, MetricsCollector, MetricsStorage}",
      "dep_type": "Import"
    },
    {
      "from": "src/analysis/unified.rs",
      "to": "crate::scoring::ProjectHealthScore",
      "dep_type": "Import"
    },
    {
      "from": "src/analysis/unified.rs",
      "to": "crate::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "src/analysis/unified.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/analysis/unified.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/analysis/unified.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/analysis/unified.rs",
      "to": "std::str::FromStr",
      "dep_type": "Import"
    },
    {
      "from": "src/analysis/unified.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/analysis/unified.rs",
      "to": "crate::scoring",
      "dep_type": "Import"
    },
    {
      "from": "src/analysis/unified.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/analysis/unified.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/analysis/unified.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/config/metadata_parser.rs",
      "to": "super::command::CommandMetadata",
      "dep_type": "Import"
    },
    {
      "from": "src/config/metadata_parser.rs",
      "to": "super::command_discovery::CommandFile",
      "dep_type": "Import"
    },
    {
      "from": "src/config/metadata_parser.rs",
      "to": "super::command_validator::{ArgumentDef, ArgumentType, CommandDefinition, OptionDef}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/metadata_parser.rs",
      "to": "anyhow::{anyhow, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/metadata_parser.rs",
      "to": "regex::Regex",
      "dep_type": "Import"
    },
    {
      "from": "src/config/metadata_parser.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/metadata_parser.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/config/metadata_parser.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/config/metadata_parser.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/config/metadata_parser.rs",
      "to": "std::time::SystemTime",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/config/mod.rs",
      "to": "anyhow::{anyhow, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/mod.rs",
      "to": "directories::ProjectDirs",
      "dep_type": "Import"
    },
    {
      "from": "src/config/mod.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/mod.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/config/mod.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/config/mod.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/config/mod.rs",
      "to": "crate::config::command::{Command, WorkflowCommand}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/mod.rs",
      "to": "crate::config::command_parser::parse_command_string",
      "dep_type": "Import"
    },
    {
      "from": "src/config/mod.rs",
      "to": "std::sync::Mutex",
      "dep_type": "Import"
    },
    {
      "from": "src/config/mod.rs",
      "to": "crate::config::command_validator::CommandRegistry",
      "dep_type": "Import"
    },
    {
      "from": "src/config/mod.rs",
      "to": "crate::config::command_parser::expand_variables",
      "dep_type": "Import"
    },
    {
      "from": "src/config/mod.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/config/mod.rs",
      "to": "crate::config::command_validator::apply_command_defaults",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_parser.rs",
      "to": "super::command::{Command, CommandArg}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_parser.rs",
      "to": "anyhow::{anyhow, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_parser.rs",
      "to": "once_cell::sync::Lazy",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_parser.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_parser.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_parser.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_discovery.rs",
      "to": "anyhow::{Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_discovery.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_discovery.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_discovery.rs",
      "to": "std::time::SystemTime",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_discovery.rs",
      "to": "tokio::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_discovery.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_discovery.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_discovery.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_discovery.rs",
      "to": "tokio::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_validator.rs",
      "to": "super::command::{Command, CommandMetadata}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_validator.rs",
      "to": "anyhow::{anyhow, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_validator.rs",
      "to": "once_cell::sync::Lazy",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_validator.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_validator.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/config/command_validator.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/config/workflow.rs",
      "to": "super::command::WorkflowCommand",
      "dep_type": "Import"
    },
    {
      "from": "src/config/workflow.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/loader.rs",
      "to": "super::{Config, ProjectConfig, WorkflowConfig}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/loader.rs",
      "to": "anyhow::{anyhow, Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/loader.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/config/loader.rs",
      "to": "std::sync::{Arc, RwLock}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/loader.rs",
      "to": "tokio::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/config/loader.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/config/loader.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/config/loader.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/config/loader.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/config/loader.rs",
      "to": "tokio::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/config/dynamic_registry.rs",
      "to": "super::command::Command",
      "dep_type": "Import"
    },
    {
      "from": "src/config/dynamic_registry.rs",
      "to": "super::command_discovery::CommandDiscovery",
      "dep_type": "Import"
    },
    {
      "from": "src/config/dynamic_registry.rs",
      "to": "super::command_validator::{CommandDefinition, CommandRegistry as StaticCommandRegistry}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/dynamic_registry.rs",
      "to": "super::metadata_parser::MetadataParser",
      "dep_type": "Import"
    },
    {
      "from": "src/config/dynamic_registry.rs",
      "to": "anyhow::{anyhow, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/dynamic_registry.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/config/dynamic_registry.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/config/dynamic_registry.rs",
      "to": "super::command_validator::ArgumentType",
      "dep_type": "Import"
    },
    {
      "from": "src/config/dynamic_registry.rs",
      "to": "super::command_validator::ArgumentType",
      "dep_type": "Import"
    },
    {
      "from": "src/config/dynamic_registry.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/config/dynamic_registry.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/config/dynamic_registry.rs",
      "to": "crate::config::{Command, CommandArg}",
      "dep_type": "Import"
    },
    {
      "from": "src/config/dynamic_registry.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/config/dynamic_registry.rs",
      "to": "tokio::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/test_state.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/test_state.rs",
      "to": "crate::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/test_state.rs",
      "to": "crate::worktree::{WorktreeState, WorktreeStatus}",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/test_state.rs",
      "to": "std::process::Command",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/test_state.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/manager.rs",
      "to": "crate::subprocess::{ProcessCommandBuilder, SubprocessManager}",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/manager.rs",
      "to": "anyhow::{anyhow, Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/manager.rs",
      "to": "chrono::Utc",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/manager.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/manager.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/manager.rs",
      "to": "uuid::Uuid",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/manager.rs",
      "to": "super::{IterationInfo, WorktreeSession, WorktreeState, WorktreeStats, WorktreeStatus}",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/manager.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/manager.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/manager.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/mod.rs",
      "to": "chrono::{DateTime, Utc}",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/mod.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/mod.rs",
      "to": "mod::test_state",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/mod.rs",
      "to": "mod::tests",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/state.rs",
      "to": "chrono::{DateTime, Utc}",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/state.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/tests.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/tests.rs",
      "to": "crate::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/tests.rs",
      "to": "std::process::Command",
      "dep_type": "Import"
    },
    {
      "from": "src/worktree/tests.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/testing/test_mocks.rs",
      "to": "crate::subprocess::MockProcessRunner",
      "dep_type": "Import"
    },
    {
      "from": "src/testing/mod.rs",
      "to": "crate::abstractions::{ClaudeClient, GitOperations, MockClaudeClient, MockGitOperations}",
      "dep_type": "Import"
    },
    {
      "from": "src/testing/mod.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/testing/mod.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/testing/mod.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/testing/mod.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/testing/mod.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/testing/mod.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/testing/mod.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/testing/mod.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/testing/mod.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/claude.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/claude.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/claude.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/claude.rs",
      "to": "super::builder::ProcessCommandBuilder",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/claude.rs",
      "to": "super::error::ProcessError",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/claude.rs",
      "to": "super::runner::ProcessRunner",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/error.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/git.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/git.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/git.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/git.rs",
      "to": "super::builder::ProcessCommandBuilder",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/git.rs",
      "to": "super::error::ProcessError",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/git.rs",
      "to": "super::runner::ProcessRunner",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/git.rs",
      "to": "crate::abstractions::exit_status::ExitStatusExt",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/git.rs",
      "to": "mod::git_error_tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/git.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/git.rs",
      "to": "crate::subprocess::mock::MockProcessRunner",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/git.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/runner.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/runner.rs",
      "to": "futures::stream::Stream",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/runner.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/runner.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/runner.rs",
      "to": "std::pin::Pin",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/runner.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/runner.rs",
      "to": "super::error::ProcessError",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/runner.rs",
      "to": "tokio::io::AsyncWriteExt",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/runner.rs",
      "to": "std::os::unix::process::ExitStatusExt",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/mod.rs",
      "to": "mod::tests",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/mod.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/mock.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/mock.rs",
      "to": "std::sync::{Arc, Mutex}",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/mock.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/mock.rs",
      "to": "super::error::ProcessError",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/mock.rs",
      "to": "super::runner::{ExitStatus, ProcessCommand, ProcessOutput, ProcessRunner, ProcessStream}",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/tests.rs",
      "to": "mod::subprocess_tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/tests.rs",
      "to": "super::super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/tests.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/builder.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/builder.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/builder.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "src/subprocess/builder.rs",
      "to": "crate::subprocess::ProcessCommand",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/collector.rs",
      "to": "super::{MetricsCoordinator, ProjectMetrics}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/collector.rs",
      "to": "crate::cook::execution::CommandRunner",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/collector.rs",
      "to": "crate::cook::metrics::reporter::MetricsReporter",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/collector.rs",
      "to": "crate::metrics::MetricsCollector",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/collector.rs",
      "to": "crate::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/collector.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/collector.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/collector.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/collector.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/collector.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/collector.rs",
      "to": "crate::cook::execution::runner::tests::MockCommandRunner",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/collector.rs",
      "to": "crate::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/collector.rs",
      "to": "crate::testing::test_mocks::TestMockSetup",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/collector.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/collector.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/reporter.rs",
      "to": "super::ProjectMetrics",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/reporter.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/reporter.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/reporter.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/reporter.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/reporter.rs",
      "to": "chrono::Utc",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/mod.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/mod.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/mod.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/metrics/mod.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/session.rs",
      "to": "crate::cook::session::{SessionManager, SessionStatus, SessionUpdate}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/session.rs",
      "to": "crate::simple_state::StateManager",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/session.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/session.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/session.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/execution.rs",
      "to": "crate::cook::execution::{ClaudeExecutor, CommandExecutor}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/execution.rs",
      "to": "crate::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/execution.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/execution.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/execution.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/execution.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/execution.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/mod.rs",
      "to": "mod::environment",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/mod.rs",
      "to": "mod::execution",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/mod.rs",
      "to": "mod::session",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/mod.rs",
      "to": "mod::workflow",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/workflow.rs",
      "to": "crate::config::WorkflowCommand",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/workflow.rs",
      "to": "crate::cook::interaction::UserInteraction",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/workflow.rs",
      "to": "crate::cook::workflow::WorkflowStep",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/workflow.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/workflow.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/workflow.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/workflow.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/workflow.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/workflow.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/environment.rs",
      "to": "crate::abstractions::git::GitOperations",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/environment.rs",
      "to": "crate::config::{ConfigLoader, WorkflowConfig}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/environment.rs",
      "to": "crate::cook::CookCommand",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/environment.rs",
      "to": "crate::worktree::WorktreeManager",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/environment.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/environment.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/environment.rs",
      "to": "std::path::{Path, PathBuf}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/coordinators/environment.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/cache.rs",
      "to": "crate::context::AnalysisResult",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/cache.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/cache.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/cache.rs",
      "to": "chrono::{DateTime, Duration, Utc}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/cache.rs",
      "to": "std::path::{Path, PathBuf}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/cache.rs",
      "to": "tokio::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/cache.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/cache.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/cache.rs",
      "to": "crate::context::AnalysisMetadata",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/cache.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/cache.rs",
      "to": "crate::context::{",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/cache.rs",
      "to": "std::collections::{BinaryHeap, HashMap}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/runner.rs",
      "to": "super::AnalysisCoordinator",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/runner.rs",
      "to": "crate::context::{AnalysisMetadata, AnalysisResult}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/runner.rs",
      "to": "crate::context::{ContextAnalyzer, ProjectAnalyzer}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/runner.rs",
      "to": "crate::cook::execution::CommandRunner",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/runner.rs",
      "to": "anyhow::{Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/runner.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/runner.rs",
      "to": "chrono::Utc",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/runner.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/runner.rs",
      "to": "std::time::Instant",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/runner.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/runner.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/runner.rs",
      "to": "crate::cook::execution::runner::tests::MockCommandRunner",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/runner.rs",
      "to": "crate::cook::execution::ExecutionResult",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/runner.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/mod.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/mod.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/mod.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/mod.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/mod.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/analysis/mod.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/command.rs",
      "to": "clap::Args",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/command.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/git_ops.rs",
      "to": "crate::abstractions::{GitOperations, RealGitOperations}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/git_ops.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/git_ops.rs",
      "to": "once_cell::sync::Lazy",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/git_ops.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/git_ops.rs",
      "to": "tokio::sync::Mutex",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/git_ops.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/git_ops.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/git_ops.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/git_ops.rs",
      "to": "tokio::process::Command",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod_tests.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod_tests.rs",
      "to": "crate::abstractions::{ClaudeClient, GitOperations, MockClaudeClient, MockGitOperations}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod_tests.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod_tests.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod_tests.rs",
      "to": "mod::core_tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod_tests.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod_tests.rs",
      "to": "crate::worktree::WorktreeManager",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod_tests.rs",
      "to": "crate::context::ContextAnalyzer",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod.rs",
      "to": "mod::tests",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod.rs",
      "to": "mod::mod_tests",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod.rs",
      "to": "crate::abstractions::git::RealGitOperations",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod.rs",
      "to": "crate::config::{workflow::WorkflowConfig, ConfigLoader}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod.rs",
      "to": "crate::simple_state::StateManager",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod.rs",
      "to": "anyhow::{anyhow, Context as _, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod.rs",
      "to": "mod::cook_tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/mod.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/execution/claude.rs",
      "to": "super::{CommandExecutor, CommandRunner, ExecutionContext, ExecutionResult}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/execution/claude.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/execution/claude.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/execution/claude.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/execution/claude.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/execution/claude.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/execution/claude.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/execution/claude.rs",
      "to": "crate::cook::execution::runner::tests::MockCommandRunner",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/execution/runner.rs",
      "to": "super::{CommandExecutor, ExecutionContext, ExecutionResult}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/execution/runner.rs",
      "to": "crate::abstractions::exit_status::ExitStatusExt",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/execution/runner.rs",
      "to": "crate::subprocess::{ProcessCommandBuilder, SubprocessManager}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/execution/runner.rs",
      "to": "anyhow::{Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/execution/runner.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/execution/runner.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/execution/mod.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/execution/mod.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/execution/mod.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/workflow/mod.rs",
      "to": "mod::executor",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/workflow/executor.rs",
      "to": "crate::cook::analysis::AnalysisCoordinator",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/workflow/executor.rs",
      "to": "crate::cook::execution::ClaudeExecutor",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/workflow/executor.rs",
      "to": "crate::cook::interaction::UserInteraction",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/workflow/executor.rs",
      "to": "crate::cook::metrics::MetricsCoordinator",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/workflow/executor.rs",
      "to": "crate::cook::orchestrator::ExecutionEnvironment",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/workflow/executor.rs",
      "to": "crate::cook::session::{SessionManager, SessionUpdate}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/workflow/executor.rs",
      "to": "crate::session::{format_duration, TimingTracker}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/workflow/executor.rs",
      "to": "anyhow::{anyhow, Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/workflow/executor.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/workflow/executor.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/workflow/executor.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/workflow/executor.rs",
      "to": "std::time::Instant",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/workflow/executor.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/workflow/executor.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/workflow/executor.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/tests.rs",
      "to": "mod::cook_tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/tests.rs",
      "to": "crate::abstractions::{ClaudeClient, GitOperations, MockClaudeClient, MockGitOperations}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/tests.rs",
      "to": "crate::cook::command::CookCommand",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/tests.rs",
      "to": "crate::testing::{TestContext, TestFixtures}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/tests.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/tests.rs",
      "to": "mod::workflow_parsing_tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/tests.rs",
      "to": "crate::config::command::{InputMethod, WorkflowCommand}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/tests.rs",
      "to": "crate::config::workflow::WorkflowConfig",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/tests.rs",
      "to": "mod::retry_tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/tests.rs",
      "to": "crate::cook::retry::{format_subprocess_error, is_transient_error}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/tests.rs",
      "to": "mod::git_ops_tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/tests.rs",
      "to": "crate::abstractions::{GitOperations, MockGitOperations}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "crate::abstractions::git::GitOperations",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "crate::analysis::{run_analysis, AnalysisConfig, OutputFormat, ProgressReporter}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "crate::config::{WorkflowCommand, WorkflowConfig}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "crate::simple_state::StateManager",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "crate::worktree::WorktreeManager",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "anyhow::{anyhow, Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "super::analysis::AnalysisCoordinator",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "super::command::CookCommand",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "super::execution::{ClaudeExecutor, CommandExecutor}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "super::interaction::UserInteraction",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "super::metrics::MetricsCoordinator",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "super::session::{SessionManager, SessionStatus, SessionUpdate}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "super::workflow::{ExtendedWorkflowConfig, WorkflowExecutor, WorkflowStep}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "crate::session::{format_duration, TimingTracker}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "std::time::Instant",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "crate::config::command::WorkflowCommand",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "crate::config::command::InputMethod",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "tokio::process::Command",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "crate::cook::analysis::runner::AnalysisRunnerImpl",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "crate::cook::execution::claude::ClaudeExecutorImpl",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "crate::cook::execution::runner::tests::MockCommandRunner",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "crate::cook::interaction::mocks::MockUserInteraction",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "crate::cook::metrics::collector::MetricsCollectorImpl",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "crate::cook::session::tracker::SessionTrackerImpl",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "std::os::unix::process::ExitStatusExt",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "crate::config::command::{CommandArg, InputMethod, InputReference}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/orchestrator.rs",
      "to": "crate::config::command::CommandArg",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/signal_handler.rs",
      "to": "crate::worktree::{InterruptionType, WorktreeManager}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/signal_handler.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/signal_handler.rs",
      "to": "chrono::Utc",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/signal_handler.rs",
      "to": "signal_hook::consts::{SIGINT, SIGTERM}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/signal_handler.rs",
      "to": "signal_hook::iterator::Signals",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/signal_handler.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/signal_handler.rs",
      "to": "std::thread",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/signal_handler.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/signal_handler.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/signal_handler.rs",
      "to": "crate::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/signal_handler.rs",
      "to": "crate::worktree::WorktreeState",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/signal_handler.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/signal_handler.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/signal_handler.rs",
      "to": "mod::signal_tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/signal_handler.rs",
      "to": "super::tests::create_test_worktree_manager",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/signal_handler.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/interaction/display.rs",
      "to": "super::SpinnerHandle",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/interaction/display.rs",
      "to": "std::sync::{Arc, Mutex}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/interaction/display.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/interaction/display.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/interaction/prompts.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/interaction/prompts.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/interaction/prompts.rs",
      "to": "std::io::{self, Write}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/interaction/prompts.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/interaction/prompts.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/interaction/mod.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/interaction/mod.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/interaction/mod.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/interaction/mod.rs",
      "to": "std::sync::{Arc, Mutex}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/interaction/mod.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/interaction/mod.rs",
      "to": "std::sync::Mutex",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/retry.rs",
      "to": "crate::abstractions::{ClaudeClient, RealClaudeClient}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/retry.rs",
      "to": "anyhow::{Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/retry.rs",
      "to": "once_cell::sync::Lazy",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/retry.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/retry.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/retry.rs",
      "to": "tokio::process::Command",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/retry.rs",
      "to": "tokio::time::sleep",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/retry.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/retry.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/retry.rs",
      "to": "std::time::Instant",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/retry.rs",
      "to": "mod::additional_tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/retry.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/adapter.rs",
      "to": "crate::session::{",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/adapter.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/adapter.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/adapter.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/adapter.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/adapter.rs",
      "to": "tokio::sync::Mutex",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/adapter.rs",
      "to": "super::{",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/adapter.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/adapter.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/adapter.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/adapter.rs",
      "to": "mod::adapter_tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/adapter.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/adapter.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/mod.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/mod.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/mod.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/state.rs",
      "to": "chrono::{DateTime, Utc}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/state.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/state.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/state.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/migration.rs",
      "to": "crate::session::{",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/migration.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/migration.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/migration.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/migration.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/migration.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/tracker.rs",
      "to": "super::{SessionManager, SessionState, SessionStatus, SessionSummary, SessionUpdate}",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/tracker.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/tracker.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/tracker.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/tracker.rs",
      "to": "std::sync::Mutex",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/tracker.rs",
      "to": "tokio::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/tracker.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/tracker.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/tracker.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/tracker.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/cook/session/summary.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/scoring/mod.rs",
      "to": "chrono::{DateTime, Utc}",
      "dep_type": "Import"
    },
    {
      "from": "src/scoring/mod.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/scoring/mod.rs",
      "to": "crate::context::{debt::DebtItem as TechnicalDebtItem, AnalysisResult}",
      "dep_type": "Import"
    },
    {
      "from": "src/scoring/mod.rs",
      "to": "crate::metrics::ImprovementMetrics",
      "dep_type": "Import"
    },
    {
      "from": "src/scoring/mod.rs",
      "to": "crate::context::debt::DebtType",
      "dep_type": "Import"
    },
    {
      "from": "src/scoring/mod.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/scoring/mod.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/main.rs",
      "to": "clap::{CommandFactory, Parser, Subcommand}",
      "dep_type": "Import"
    },
    {
      "from": "src/main.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/main.rs",
      "to": "tracing::{debug, error, trace}",
      "dep_type": "Import"
    },
    {
      "from": "src/main.rs",
      "to": "mmm::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "src/main.rs",
      "to": "mmm::worktree::WorktreeManager",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/command.rs",
      "to": "crate::analysis::{run_analysis, AnalysisConfig, OutputFormat, ProgressReporter}",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/command.rs",
      "to": "crate::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/command.rs",
      "to": "anyhow::{Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/command.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/command.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/mod.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/mod.rs",
      "to": "command::AnalyzeCommand",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/mod.rs",
      "to": "mod::tests",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/tests.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/tests.rs",
      "to": "crate::subprocess::SubprocessManager",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/tests.rs",
      "to": "crate::testing::test_mocks::TestMockSetup",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/tests.rs",
      "to": "std::process::Command",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/tests.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/tests.rs",
      "to": "mod::command_tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/tests.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/tests.rs",
      "to": "crate::analyze::command",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/tests.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/tests.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/analyze/tests.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/claude.rs",
      "to": "crate::abstractions::exit_status::ExitStatusExt",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/claude.rs",
      "to": "crate::subprocess::{",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/claude.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/claude.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/claude.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/claude.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/claude.rs",
      "to": "tokio::sync::Mutex",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/claude.rs",
      "to": "std::time::Duration",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/claude.rs",
      "to": "tokio::time::sleep",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/claude.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/claude.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/git.rs",
      "to": "crate::subprocess::{ProcessCommandBuilder, SubprocessManager}",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/git.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/git.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/git.rs",
      "to": "std::path::Path",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/git.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/git.rs",
      "to": "tokio::sync::Mutex",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/git.rs",
      "to": "crate::abstractions::exit_status::ExitStatusExt",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/git.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/git.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/git.rs",
      "to": "mod::real_git_tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/git.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/abstractions/git.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/cache.rs",
      "to": "anyhow::{Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/cache.rs",
      "to": "serde::{de::DeserializeOwned, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/cache.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/cache.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/cache.rs",
      "to": "std::time::{Duration, SystemTime}",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/types.rs",
      "to": "chrono::{DateTime, Utc}",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/types.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/mod.rs",
      "to": "mod::tests",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/mod.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/mod.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/state.rs",
      "to": "anyhow::{Context, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/state.rs",
      "to": "chrono::Utc",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/state.rs",
      "to": "std::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/state.rs",
      "to": "std::path::{Path, PathBuf}",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/state.rs",
      "to": "super::types::{SessionRecord, State}",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/tests.rs",
      "to": "mod::test {",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/tests.rs",
      "to": "super::super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/tests.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/tests.rs",
      "to": "std::sync::{Arc, Mutex}",
      "dep_type": "Import"
    },
    {
      "from": "src/simple_state/tests.rs",
      "to": "std::thread",
      "dep_type": "Import"
    },
    {
      "from": "src/git/parsers.rs",
      "to": "super::types::*",
      "dep_type": "Import"
    },
    {
      "from": "src/git/parsers.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/git/parsers.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/git/parsers.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/git/parsers.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/git/types.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/git/error.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/git/error.rs",
      "to": "thiserror::Error",
      "dep_type": "Import"
    },
    {
      "from": "src/git/mod.rs",
      "to": "crate::subprocess::{ProcessCommandBuilder, ProcessRunner}",
      "dep_type": "Import"
    },
    {
      "from": "src/git/mod.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/git/mod.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/git/mod.rs",
      "to": "std::path::{Path, PathBuf}",
      "dep_type": "Import"
    },
    {
      "from": "src/git/mod.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/git/mod.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/git/mod.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/git/mod.rs",
      "to": "crate::subprocess::MockProcessRunner",
      "dep_type": "Import"
    },
    {
      "from": "src/git/mod.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/git/mod.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/git/scenario.rs",
      "to": "super::{error::GitError, types::*, GitOperations, GitReader, GitWorktree, GitWriter}",
      "dep_type": "Import"
    },
    {
      "from": "src/git/scenario.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/git/scenario.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/git/scenario.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/git/scenario.rs",
      "to": "std::path::{Path, PathBuf}",
      "dep_type": "Import"
    },
    {
      "from": "src/git/scenario.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/git/scenario.rs",
      "to": "tokio::sync::Mutex",
      "dep_type": "Import"
    },
    {
      "from": "src/git/scenario.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/git/scenario.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/git/scenario.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/session/events.rs",
      "to": "super::{IterationChanges, SessionConfig, SessionId}",
      "dep_type": "Import"
    },
    {
      "from": "src/session/events.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/session/events.rs",
      "to": "chrono::{DateTime, Utc}",
      "dep_type": "Import"
    },
    {
      "from": "src/session/events.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/session/events.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/session/events.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/session/events.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/session/config.rs",
      "to": "crate::config::workflow::WorkflowConfig",
      "dep_type": "Import"
    },
    {
      "from": "src/session/config.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/session/config.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/session/config.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/session/config.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/session/persistence.rs",
      "to": "super::{SessionConfig, SessionId, SessionState, TimestampedEvent}",
      "dep_type": "Import"
    },
    {
      "from": "src/session/persistence.rs",
      "to": "chrono::{DateTime, Utc}",
      "dep_type": "Import"
    },
    {
      "from": "src/session/persistence.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/session/persistence.rs",
      "to": "std::collections::HashSet",
      "dep_type": "Import"
    },
    {
      "from": "src/session/persistence.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/session/persistence.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/session/persistence.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/session/manager.rs",
      "to": "super::{",
      "dep_type": "Import"
    },
    {
      "from": "src/session/manager.rs",
      "to": "anyhow::{anyhow, Result}",
      "dep_type": "Import"
    },
    {
      "from": "src/session/manager.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/session/manager.rs",
      "to": "std::collections::HashMap",
      "dep_type": "Import"
    },
    {
      "from": "src/session/manager.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/session/manager.rs",
      "to": "std::time::Instant",
      "dep_type": "Import"
    },
    {
      "from": "src/session/manager.rs",
      "to": "tokio::sync::RwLock",
      "dep_type": "Import"
    },
    {
      "from": "src/session/manager.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/session/manager.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/session/manager.rs",
      "to": "crate::session::IterationChanges",
      "dep_type": "Import"
    },
    {
      "from": "src/session/manager.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/session/mod.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/session/mod.rs",
      "to": "std::fmt",
      "dep_type": "Import"
    },
    {
      "from": "src/session/mod.rs",
      "to": "uuid::Uuid",
      "dep_type": "Import"
    },
    {
      "from": "src/session/mod.rs",
      "to": "mod::tests",
      "dep_type": "Import"
    },
    {
      "from": "src/session/state.rs",
      "to": "super::{CommitInfo, ExecutedCommand, IterationChanges}",
      "dep_type": "Import"
    },
    {
      "from": "src/session/state.rs",
      "to": "serde::{Deserialize, Serialize}",
      "dep_type": "Import"
    },
    {
      "from": "src/session/state.rs",
      "to": "std::collections::{HashMap, HashSet}",
      "dep_type": "Import"
    },
    {
      "from": "src/session/state.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/session/state.rs",
      "to": "std::time::{Duration, Instant}",
      "dep_type": "Import"
    },
    {
      "from": "src/session/state.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/session/state.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/session/tests.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/session/tests.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/session/tests.rs",
      "to": "std::sync::atomic::{AtomicUsize, Ordering}",
      "dep_type": "Import"
    },
    {
      "from": "src/session/tests.rs",
      "to": "std::sync::Arc",
      "dep_type": "Import"
    },
    {
      "from": "src/session/tests.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/session/storage.rs",
      "to": "super::{PersistedSession, SessionId}",
      "dep_type": "Import"
    },
    {
      "from": "src/session/storage.rs",
      "to": "anyhow::Result",
      "dep_type": "Import"
    },
    {
      "from": "src/session/storage.rs",
      "to": "async_trait::async_trait",
      "dep_type": "Import"
    },
    {
      "from": "src/session/storage.rs",
      "to": "std::path::PathBuf",
      "dep_type": "Import"
    },
    {
      "from": "src/session/storage.rs",
      "to": "tokio::fs",
      "dep_type": "Import"
    },
    {
      "from": "src/session/storage.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/session/storage.rs",
      "to": "super::*",
      "dep_type": "Import"
    },
    {
      "from": "src/session/storage.rs",
      "to": "tempfile::TempDir",
      "dep_type": "Import"
    },
    {
      "from": "src/session/timing.rs",
      "to": "std::time::{Duration, Instant}",
      "dep_type": "Import"
    },
    {
      "from": "src/session/timing.rs",
      "to": "mod::tests {",
      "dep_type": "Import"
    },
    {
      "from": "src/session/timing.rs",
      "to": "super::*",
      "dep_type": "Import"
    }
  ],
  "cycles": [],
  "layers": [
    {
      "name": "root",
      "level": 0,
      "modules": [
        "Cargo.toml"
      ]
    },
    {
      "name": "top-level",
      "level": 1,
      "modules": [
        "tests/worktree_integration_tests.rs",
        "src/main.rs",
        "tests/workflow_commit_verification_tests.rs",
        "tests/cook_iteration_tests.rs",
        "tests/config_integration_tests.rs",
        "tests/analysis_integration.rs",
        "tests/cli_tests.rs",
        "tests/integration_test_cook_path.rs",
        "tests/unified_scoring_tests.rs",
        "tests/metrics_integration.rs",
        "tests/cook_orchestrator_integration.rs",
        "tests/context_optimization_tests.rs",
        "tests/edge_case_tests.rs",
        "src/lib.rs",
        "tests/context_integration.rs",
        "tests/error_handling_tests.rs",
        "tests/workflow_tests.rs",
        "tests/workflow_analysis_tests.rs",
        "tests/command_parsing_tests.rs",
        "tests/cook_tests.rs",
        "tests/cook_coordinators_integration.rs",
        "tests/metrics_collector_integration.rs",
        "tests/metrics_system_integration.rs",
        "tests/signal_handling_integration.rs",
        "tests/subprocess_tests.rs"
      ]
    },
    {
      "name": "module",
      "level": 2,
      "modules": [
        "src/context/debt.rs",
        "src/metrics/collector.rs",
        "src/subprocess/builder.rs",
        "src/metrics/testing.rs",
        "src/abstractions/exit_status.rs",
        "src/init/templates.rs",
        "src/simple_state/tests.rs",
        "src/context/architecture.rs",
        "src/subprocess/git.rs",
        "src/session/persistence.rs",
        "src/worktree/test_state.rs",
        "tests/common/mod.rs",
        "src/metrics/performance.rs",
        "src/worktree/tests.rs",
        "src/context/test_coverage.rs",
        "src/session/state.rs",
        "src/context/summary.rs",
        "src/cook/command.rs",
        "src/subprocess/error.rs",
        "src/subprocess/runner.rs",
        "src/abstractions/mod.rs",
        "src/git/scenario.rs",
        "src/metrics/registry.rs",
        "src/config/command_validator.rs",
        "src/session/storage.rs",
        "src/metrics/backends.rs",
        "src/analysis/unified.rs",
        "src/metrics/complexity.rs",
        "src/analyze/command.rs",
        "src/metrics/mod.rs",
        "src/scoring/mod.rs",
        "src/git/parsers.rs",
        "src/session/config.rs",
        "src/simple_state/state.rs",
        "src/context/dependencies.rs",
        "src/cook/orchestrator.rs",
        "src/simple_state/mod.rs",
        "src/cook/mod.rs",
        "src/subprocess/mod.rs",
        "src/metrics/context.rs",
        "src/config/command_discovery.rs",
        "src/context/analyzer.rs",
        "src/analysis/mod.rs",
        "src/config/loader.rs",
        "src/analyze/tests.rs",
        "src/testing/mod.rs",
        "src/context/mod.rs",
        "src/git/mod.rs",
        "src/subprocess/tests.rs",
        "src/session/manager.rs",
        "src/session/mod.rs",
        "src/config/mod.rs",
        "src/git/error.rs",
        "src/cook/git_ops.rs",
        "src/testing/test_mocks.rs",
        "src/abstractions/git.rs",
        "src/cook/tests.rs",
        "src/analyze/mod.rs",
        "src/git/types.rs",
        "src/metrics/events.rs",
        "src/context/metrics_aware_coverage.rs",
        "src/session/timing.rs",
        "src/session/tests.rs",
        "src/cook/signal_handler.rs",
        "src/config/command_parser.rs",
        "src/metrics/history.rs",
        "src/abstractions/claude.rs",
        "src/metrics/storage.rs",
        "src/cook/mod_tests.rs",
        "src/simple_state/types.rs",
        "src/context/size_manager.rs",
        "src/metrics/quality.rs",
        "src/worktree/manager.rs",
        "src/subprocess/claude.rs",
        "src/subprocess/mock.rs",
        "src/config/command.rs",
        "src/worktree/state.rs",
        "src/context/tarpaulin_coverage.rs",
        "src/simple_state/cache.rs",
        "src/config/workflow.rs",
        "src/init/mod.rs",
        "src/context/conventions.rs",
        "src/init/command.rs",
        "src/worktree/mod.rs",
        "src/session/events.rs",
        "src/config/metadata_parser.rs",
        "src/config/dynamic_registry.rs",
        "src/cook/retry.rs"
      ]
    },
    {
      "name": "deep",
      "level": 3,
      "modules": [
        "src/cook/session/adapter.rs",
        "src/cook/metrics/collector.rs",
        "src/cook/session/migration.rs",
        "src/cook/session/summary.rs",
        "src/cook/session/state.rs",
        "src/cook/execution/mod.rs",
        "src/cook/workflow/executor.rs",
        "src/cook/interaction/mod.rs",
        "src/cook/coordinators/workflow.rs",
        "src/cook/coordinators/environment.rs",
        "src/cook/execution/claude.rs",
        "src/cook/analysis/runner.rs",
        "src/cook/session/tracker.rs",
        "src/cook/execution/runner.rs",
        "src/cook/session/mod.rs",
        "src/cook/coordinators/execution.rs",
        "src/cook/analysis/cache.rs",
        "src/cook/coordinators/session.rs",
        "src/cook/workflow/mod.rs",
        "src/cook/coordinators/mod.rs",
        "src/cook/metrics/mod.rs",
        "src/cook/analysis/mod.rs",
        "src/cook/interaction/display.rs",
        "src/cook/interaction/prompts.rs",
        "src/cook/metrics/reporter.rs"
      ]
    }
  ],
  "coupling_analysis": {
    "high_coupling_modules": [
      [
        "super::*",
        83
      ],
      [
        "mod::tests {",
        61
      ],
      [
        "tempfile::TempDir",
        56
      ],
      [
        "anyhow::Result",
        49
      ],
      [
        "std::path::PathBuf",
        35
      ],
      [
        "async_trait::async_trait",
        34
      ],
      [
        "std::collections::HashMap",
        34
      ],
      [
        "std::sync::Arc",
        33
      ],
      [
        "serde::{Deserialize, Serialize}",
        30
      ],
      [
        "std::path::Path",
        28
      ]
    ],
    "avg_coupling": 3.4332129963898916,
    "max_coupling": 83
  }
}