{
  "chapter_id": "composition",
  "chapter_title": "Workflow Composition",
  "chapter_file": "book/src/composition.md",
  "drift_detected": true,
  "severity": "critical",
  "quality_assessment": "Chapter is completely empty stub - contains only placeholder content indicating it will be auto-generated. All composition features are missing from documentation.",
  "issues": [
    {
      "type": "missing_content",
      "severity": "critical",
      "section": "Entire Chapter",
      "description": "Chapter contains only a stub note saying it will be auto-generated. No actual documentation exists.",
      "current_content": "Note: This chapter is currently being auto-generated by the book-docs-drift workflow. Content will be populated based on the latest codebase implementation.",
      "should_add": "Complete chapter covering all composition features: imports, templates, extends, parameters, sub-workflows",
      "fix_suggestion": "Generate complete chapter based on implementation in src/cook/workflow/composition/",
      "source_reference": "src/cook/workflow/composition/mod.rs"
    },
    {
      "type": "missing_content",
      "severity": "critical",
      "section": "Workflow Imports",
      "description": "No documentation for the imports feature which allows importing other workflow files",
      "should_add": "Document WorkflowImport with path, alias, and selective import capabilities",
      "fix_suggestion": "Add section explaining:\n- How to import workflows with 'imports:' field\n- Using 'path:' to specify workflow file location\n- Using 'alias:' to reference imported workflows\n- Using 'selective:' to import specific items\n- YAML syntax examples for each import pattern",
      "source_reference": "src/cook/workflow/composition/mod.rs:52-65 (WorkflowImport struct)"
    },
    {
      "type": "missing_content",
      "severity": "critical",
      "section": "Template System",
      "description": "No documentation for the template system which enables workflow reuse",
      "should_add": "Document WorkflowTemplate with name, source, with, and override capabilities",
      "fix_suggestion": "Add section explaining:\n- How to use templates with 'template:' field\n- Template sources: File, Registry, and URL (planned)\n- Passing parameters with 'with:'\n- Overriding template values with 'override:'\n- Template registry operations\n- Template metadata (description, author, version, tags)\n- Searching templates by tags\n- YAML syntax examples for template usage",
      "source_reference": "src/cook/workflow/composition/mod.rs:67-95 (WorkflowTemplate and TemplateSource)"
    },
    {
      "type": "missing_content",
      "severity": "critical",
      "section": "Workflow Extension",
      "description": "No documentation for workflow inheritance via the extends feature",
      "should_add": "Document the 'extends:' field for workflow inheritance",
      "fix_suggestion": "Add section explaining:\n- How to extend base workflows with 'extends:' field\n- Base workflow resolution paths (bases/, templates/, workflows/)\n- Child workflows override parent values\n- Use cases for workflow inheritance\n- YAML syntax examples",
      "source_reference": "src/cook/workflow/composition/mod.rs:32-33 and composer.rs:132-156"
    },
    {
      "type": "missing_content",
      "severity": "critical",
      "section": "Parameters and Type Validation",
      "description": "No documentation for parameter definitions and type validation",
      "should_add": "Document ParameterDefinitions with required/optional parameters and type hints",
      "fix_suggestion": "Add section explaining:\n- How to define parameters with 'parameters:' field\n- Required vs optional parameters\n- Parameter types: string, number, boolean, array, object, any\n- Type validation\n- Default values\n- Custom validation expressions\n- Parameter substitution in commands\n- YAML syntax examples for all parameter types",
      "source_reference": "src/cook/workflow/composition/mod.rs:97-141 (ParameterDefinitions, Parameter, ParameterType)"
    },
    {
      "type": "missing_content",
      "severity": "critical",
      "section": "Sub-Workflows",
      "description": "No documentation for sub-workflow execution feature",
      "should_add": "Document sub-workflow definitions and execution",
      "fix_suggestion": "Add section explaining:\n- How to define sub-workflows with 'workflows:' field\n- Sub-workflow parameters and inputs/outputs\n- Parallel execution of sub-workflows\n- Error handling with continue_on_error\n- Timeouts and working directories\n- YAML syntax examples",
      "source_reference": "src/cook/workflow/composition/mod.rs:48-49 and composition/sub_workflow.rs"
    },
    {
      "type": "missing_content",
      "severity": "critical",
      "section": "Default Values",
      "description": "No documentation for the defaults feature",
      "should_add": "Document the 'defaults:' field for setting default parameter values",
      "fix_suggestion": "Add section explaining:\n- How to define defaults with 'defaults:' field\n- How defaults interact with parameters\n- YAML syntax examples",
      "source_reference": "src/cook/workflow/composition/mod.rs:43-45"
    },
    {
      "type": "missing_content",
      "severity": "high",
      "section": "Composition Metadata",
      "description": "No documentation explaining composition metadata and dependency tracking",
      "should_add": "Document CompositionMetadata for understanding workflow dependencies",
      "fix_suggestion": "Add section explaining:\n- How composition tracks source files\n- How templates and parameters are recorded\n- Dependency graph and cycle detection\n- Use for debugging complex compositions",
      "source_reference": "src/cook/workflow/composition/mod.rs:153-193"
    },
    {
      "type": "missing_content",
      "severity": "high",
      "section": "Complete YAML Examples",
      "description": "No complete working examples of composition features",
      "should_add": "Add comprehensive YAML examples demonstrating all features",
      "fix_suggestion": "Add examples showing:\n1. Basic import with alias\n2. Selective import\n3. Template usage from registry\n4. Template with parameters\n5. Workflow inheritance with extends\n6. Complex composition using multiple features\n7. Sub-workflow execution\n8. Parameter definitions with validation",
      "source_reference": "tests/workflow_composition_test.rs (test examples)"
    },
    {
      "type": "missing_content",
      "severity": "medium",
      "section": "Composition Best Practices",
      "description": "No guidance on when and how to use composition features effectively",
      "should_add": "Add best practices section",
      "fix_suggestion": "Include guidance on:\n- When to use imports vs extends vs templates\n- Organizing reusable workflows\n- Template registry management\n- Avoiding circular dependencies\n- Testing composed workflows\n- Naming conventions for templates",
      "source_reference": "Implementation patterns in composer.rs"
    },
    {
      "type": "missing_content",
      "severity": "medium",
      "section": "Template Registry CLI",
      "description": "No documentation for template registry management commands",
      "should_add": "Document CLI commands for template management",
      "fix_suggestion": "Add section covering:\n- Registering templates\n- Listing available templates\n- Searching templates by tags\n- Deleting templates\n- Template versioning",
      "source_reference": "src/cook/workflow/composition/registry.rs"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Troubleshooting Composition",
      "description": "No troubleshooting section for common composition issues",
      "should_add": "Add troubleshooting guidance",
      "fix_suggestion": "Cover common issues:\n- Circular dependency errors\n- Template not found errors\n- Parameter validation failures\n- Import path resolution\n- Type mismatch errors",
      "source_reference": "Error handling in composer.rs and mod.rs"
    }
  ],
  "positive_aspects": [
    "Chapter file exists with proper structure placeholder",
    "Topics to cover are clearly listed",
    "Note indicates awareness that content needs to be generated"
  ],
  "improvement_suggestions": [
    "Generate complete chapter content based on implementation",
    "Include progressive examples from simple to complex",
    "Add visual diagrams showing workflow composition relationships",
    "Cross-reference with related chapters (workflow-basics, commands, variables)",
    "Include real-world use cases for each composition feature",
    "Add migration guide for users converting to composition patterns",
    "Document limitations and future enhancements (e.g., URL template sources)",
    "Include performance considerations for complex compositions",
    "Add testing strategies for composed workflows"
  ],
  "metadata": {
    "analyzed_at": "2025-10-10",
    "feature_inventory": "Analyzed from source code (features.json not available)",
    "topics_covered": [],
    "validation_focus": "Check composition features match implementation and syntax examples are valid",
    "composition_features_found": {
      "imports": {
        "implemented": true,
        "documented": false,
        "fields": ["path", "alias", "selective"]
      },
      "extends": {
        "implemented": true,
        "documented": false,
        "base_resolution_paths": ["bases/", "templates/", "workflows/", "./"]
      },
      "template": {
        "implemented": true,
        "documented": false,
        "sources": ["File", "Registry", "Url (not implemented)"],
        "features": ["with (parameters)", "override"]
      },
      "parameters": {
        "implemented": true,
        "documented": false,
        "types": ["string", "number", "boolean", "array", "object", "any"],
        "features": ["required", "optional", "default", "validation", "type_hint"]
      },
      "defaults": {
        "implemented": true,
        "documented": false
      },
      "workflows": {
        "implemented": true,
        "documented": false,
        "sub_workflow_features": ["parameters", "inputs", "outputs", "parallel", "continue_on_error", "timeout", "working_dir"]
      },
      "template_registry": {
        "implemented": true,
        "documented": false,
        "features": ["register", "get", "list", "delete", "metadata", "search_by_tags"]
      },
      "composition_metadata": {
        "implemented": true,
        "documented": false,
        "tracked_info": ["sources", "templates", "parameters", "composed_at", "dependencies"]
      },
      "dependency_resolution": {
        "implemented": true,
        "documented": false,
        "features": ["circular_dependency_detection", "dependency_graph"]
      }
    },
    "test_coverage": {
      "integration_tests": "tests/workflow_composition_test.rs",
      "test_count": 19,
      "features_tested": [
        "basic_composition",
        "parameters",
        "imports",
        "templates",
        "sub_workflows",
        "template_registry",
        "type_validation",
        "defaults",
        "inheritance",
        "metadata",
        "tag_search",
        "file_storage"
      ]
    }
  }
}
