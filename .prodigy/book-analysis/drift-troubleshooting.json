{
  "chapter_id": "troubleshooting",
  "chapter_title": "Troubleshooting",
  "chapter_file": "book/src/troubleshooting.md",
  "drift_detected": true,
  "severity": "medium",
  "quality_assessment": "Chapter is comprehensive and well-structured with excellent symptom-cause-solution organization. Contains several accuracy issues in BackoffStrategy enum values and merge timeout format. Missing documentation for many MapReduceError variants. Overall provides strong troubleshooting guidance but needs updates to match current implementation.",
  "issues": [
    {
      "type": "outdated_information",
      "severity": "high",
      "section": "Error Policy Configuration Issues (Line 209-235)",
      "description": "BackoffStrategy enum values are incorrect. Chapter shows simple lowercase names ('constant', 'linear', 'exponential', 'fibonacci') but actual implementation uses capitalized variants with required parameters (Fixed, Linear { increment }, Exponential { base }, Fibonacci).",
      "current_content": "Valid BackoffStrategy values:\n- `constant` - Same delay every time\n- `linear` - Increases linearly\n- `exponential` - Doubles each time\n- `fibonacci` - Fibonacci sequence",
      "should_be": "Valid BackoffStrategy values:\n- `fixed` - Same delay every time (requires delay parameter in retry_config)\n- `linear` - Increases linearly (requires increment parameter)\n- `exponential` - Multiplies by base each time (requires base parameter, default 2.0)\n- `fibonacci` - Fibonacci sequence (requires initial parameter)\n- Note: BackoffStrategy is an enum variant, not a standalone field",
      "fix_suggestion": "Update section to show correct YAML structure:\n```yaml\nerror_policy:\n  retry_config:\n    max_attempts: 3\n    initial_delay: \"1s\"\n    max_delay: \"30s\"\n    # BackoffStrategy is determined by retry_v2 module, not directly configurable in YAML\n```\nOr if it IS configurable, show the correct enum structure with parameters.",
      "source_reference": "src/cook/retry_v2.rs:73-88 and src/cook/workflow/error_policy.rs:108-120 (BackoffStrategy enum definitions)"
    },
    {
      "type": "incorrect_example",
      "severity": "medium",
      "section": "Merge Workflow Timeout (Line 157-184)",
      "description": "Chapter shows merge timeout using duration string format ('600s') but MergeWorkflow struct actually uses Option<u64> for seconds as a number, not a duration string.",
      "current_content": "merge:\n  commands:\n    - shell: \"slow-merge-validation.sh\"\n  timeout: \"600s\"  # Duration string format",
      "should_be": "merge:\n  commands:\n    - shell: \"slow-merge-validation.sh\"\n  timeout: 600  # Timeout in seconds (u64 number)",
      "fix_suggestion": "Correct the example to show timeout as a number (600) not a string (\"600s\"). Add clarifying comment that merge.timeout is one of the few timeout fields that takes a plain number instead of a duration string.",
      "source_reference": "src/config/mapreduce.rs:86-94 (MergeWorkflow struct with timeout: Option<u64>)"
    },
    {
      "type": "missing_content",
      "severity": "medium",
      "section": "MapReduce Error Messages (Line 383-404)",
      "description": "Chapter documents only a subset of MapReduceError variants. Missing documentation for: CheckpointCorrupted, CheckpointLoadFailed, CheckpointSaveFailed, InvalidConfiguration, InvalidJsonPath, ShellSubstitutionFailed, CommandFailed, DeadlockDetected, ConcurrentModification, EnvironmentError, ValidationFailed, DlqError, ProcessingError, Timeout, General.",
      "should_add": "**Configuration and validation errors:**\n- `InvalidConfiguration` - Workflow YAML has configuration errors\n- `InvalidJsonPath` - JSONPath expression syntax error\n- `ValidationFailed` - Validation check failed\n- `ShellSubstitutionFailed` - Variable substitution failed\n\n**Checkpoint errors:**\n- `CheckpointCorrupted` - Checkpoint file corrupted at specific version\n- `CheckpointLoadFailed` - Failed to load checkpoint\n- `CheckpointSaveFailed` - Failed to save checkpoint\n\n**Concurrency errors:**\n- `DeadlockDetected` - Deadlock in job execution\n- `ConcurrentModification` - Concurrent modification of job state\n\n**Other errors:**\n- `EnvironmentError` - Environment validation failed\n- `DlqError` - DLQ operation failed\n- `ProcessingError` - General processing error\n- `Timeout` - Operation timed out\n- `General` - General error for migration compatibility",
      "fix_suggestion": "Add comprehensive list of all MapReduceError variants organized by category (Job-level, Agent-level, Resource, Worktree, Command, I/O, Configuration, Checkpoint, Concurrency). Include recovery actions for each.",
      "source_reference": "src/cook/execution/errors.rs:15-148 (MapReduceError enum with all variants)"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "DLQ Commands (Line 307-322)",
      "description": "Chapter documents 'prodigy dlq list' and 'prodigy dlq inspect' but doesn't mention other available DLQ commands: analyze, export, purge, stats, clear.",
      "should_add": "Additional DLQ commands:\n```bash\n# Analyze failure patterns\nprodigy dlq analyze <job_id>\n\n# Export DLQ items to file\nprodigy dlq export output.json --job-id <job_id>\n\n# Show DLQ statistics\nprodigy dlq stats --workflow-id <workflow_id>\n\n# Purge old items\nprodigy dlq purge --older-than-days 30\n\n# Clear processed items\nprodigy dlq clear <workflow_id>\n```",
      "fix_suggestion": "Add section documenting all DLQ subcommands with examples of each. Include when to use each command.",
      "source_reference": "src/cli/args.rs:540-628 and src/cli/commands/dlq.rs:9-73 (DlqCommands enum and implementation)"
    },
    {
      "type": "incomplete_explanation",
      "severity": "low",
      "section": "Capture Streams Configuration (Line 37-47)",
      "description": "Chapter shows capture_streams fields accurately (stdout, stderr, exit_code, success, duration) but doesn't mention that these are all optional booleans that default to false.",
      "current_content": "capture_streams:\n  stdout: true\n  stderr: true\n  exit_code: true\n  success: true\n  duration: true",
      "should_be": "capture_streams:\n  stdout: true      # Optional, default false\n  stderr: true      # Optional, default false\n  exit_code: true   # Optional, default false\n  success: true     # Optional, default false\n  duration: true    # Optional, default false",
      "fix_suggestion": "Add note that all capture_streams fields are optional and default to false. Users only need to specify the ones they want to capture.",
      "source_reference": "Implementation of capture streams in workflow execution"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Debug Tips - JSON Log Location (missing)",
      "description": "Chapter doesn't mention the Claude JSON log location feature (Spec 121) which is extremely valuable for debugging MapReduce agent failures.",
      "should_add": "### Access Claude JSON logs for debugging\n\nWhen using verbose mode (-v), Prodigy displays the location of Claude's detailed JSON logs:\n```bash\nprodigy run workflow.yml -v\n# Output: Claude JSON log: ~/.local/state/claude/logs/session-abc123.json\n```\n\nThese logs contain:\n- Complete message history (user messages and Claude responses)\n- All tool invocations with parameters and results\n- Token usage statistics\n- Error details and stack traces\n\nFor MapReduce jobs, check the DLQ for json_log_location:\n```bash\nprodigy dlq show <job_id> | jq '.items[].failure_history[].json_log_location'\ncat /path/from/above/session-xyz.json | jq '.messages[-3:]'\n```",
      "fix_suggestion": "Add a dedicated subsection under 'Debug Tips' explaining how to access and use Claude JSON logs for troubleshooting, especially for MapReduce agent failures.",
      "source_reference": "CLAUDE.md Spec 121 - Claude Command Observability"
    }
  ],
  "positive_aspects": [
    "Excellent symptom-cause-solution structure makes troubleshooting intuitive",
    "Comprehensive coverage of common user issues",
    "Well-organized debug tips with practical examples",
    "Good coverage of verbosity flags and their specific uses",
    "Capture streams documentation is accurate",
    "Variable interpolation troubleshooting is clear and actionable",
    "JSONPath troubleshooting includes helpful examples with jq",
    "Timeout configuration examples cover both workflow-level and MapReduce-specific timeouts",
    "Goal-seeking validation format is correctly documented",
    "FAQ section addresses key user questions effectively",
    "Merge workflow format variants (simplified vs full) are both shown correctly",
    "Error handling examples with on_failure are helpful",
    "Best practices section provides valuable guidance"
  ],
  "improvement_suggestions": [
    "Add flowchart or decision tree at the beginning to help users quickly identify their issue category",
    "Include more real-world error message examples users might see in practice",
    "Add troubleshooting section specifically for git worktree issues and cleanup",
    "Include section on debugging parallel MapReduce execution with multiple agents",
    "Add common git merge conflict scenarios and resolution strategies",
    "Document environment variable inheritance issues and how to debug them",
    "Add section on checkpoint corruption recovery procedures",
    "Include examples of using error recovery hints programmatically",
    "Add section on interpreting AggregatedError summaries for batch operations",
    "Include troubleshooting for resource exhaustion (memory, disk, file descriptors)",
    "Add guidance on when to use different DLQ commands (analyze vs inspect vs retry)",
    "Consider adding a 'Quick Reference' table mapping symptoms to solutions",
    "Include section on using ErrorContext and correlation IDs for debugging distributed failures"
  ],
  "metadata": {
    "analyzed_at": "2025-10-10",
    "feature_inventory": ".prodigy/book-analysis/features.json (analyzed from source code)",
    "topics_covered": [
      "Variable interpolation issues",
      "Capture format and streams configuration",
      "Validation and goal-seeking failures",
      "MapReduce JSONPath issues",
      "Timeout configuration (workflow and MapReduce)",
      "Environment variables",
      "Merge workflow issues",
      "Error handling and failure policies",
      "Backoff strategies",
      "Debug tips and verbosity flags",
      "Common MapReduceError messages",
      "DLQ operations and retry",
      "Checkpoint and resume errors",
      "Best practices for debugging"
    ],
    "validation_focus": "Check troubleshooting covers common user issues"
  }
}
