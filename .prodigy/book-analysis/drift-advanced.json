{
  "chapter_id": "advanced",
  "chapter_title": "Advanced Features",
  "chapter_file": "book/src/advanced.md",
  "drift_detected": true,
  "severity": "medium",
  "quality_assessment": "Chapter is mostly accurate but has some outdated information about on_failure configuration and uses deprecated TestDebugConfig instead of the current structure. Missing details about capture_streams field.",
  "issues": [
    {
      "type": "outdated_information",
      "severity": "medium",
      "section": "On Failure Handlers",
      "description": "Chapter shows on_failure with max_attempts and fail_workflow fields, but TestDebugConfig has a different default structure",
      "current_content": "on_failure:\n    claude: \"/fix-warnings\"\n    max_attempts: 3\n    fail_workflow: false",
      "should_be": "on_failure is now part of WorkflowStepCommand and uses TestDebugConfig which has max_attempts defaulting to 3, fail_workflow defaulting to false, and commit_required defaulting to true",
      "fix_suggestion": "Update documentation to reflect that TestDebugConfig.default_max_attempts is 3, fail_workflow defaults to false, and commit_required defaults to true",
      "source_reference": "src/config/command.rs:167-183 (TestDebugConfig struct)"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Stream Capture Control",
      "description": "Chapter documents capture_streams field with 'stdout', 'stderr', 'both' but implementation is more complex with a struct",
      "should_add": "The capture_streams field in the implementation uses CaptureStreams struct with boolean fields for stdout, stderr, exit_code, success, and duration - not just string values",
      "fix_suggestion": "Add clarification that capture_streams can be a simple string ('stdout', 'stderr', 'both') OR a detailed struct with boolean flags",
      "source_reference": "src/cook/workflow/variables.rs:268-292 (CaptureStreams struct)"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Capture Formats",
      "description": "Chapter documents all capture formats correctly (string, number, json, lines, boolean)",
      "should_add": "All formats are accurately documented and match CaptureFormat enum",
      "fix_suggestion": "No changes needed - this section is accurate",
      "source_reference": "src/cook/workflow/variables.rs:250-265 (CaptureFormat enum)"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Validation Configuration",
      "description": "Chapter shows both basic and multi-step validation but doesn't mention that validation can be an array format",
      "should_add": "ValidationConfig supports array format where validation is a direct list of commands",
      "fix_suggestion": "Add example showing validation as array: validate: [commands list]",
      "source_reference": "src/cook/workflow/validation.rs:51-96 (ValidationConfig deserialization)"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "On Incomplete Configuration",
      "description": "Chapter shows on_incomplete with claude, shell, max_attempts, fail_workflow, and commit_required but doesn't mention it can also accept an array format",
      "should_add": "OnIncompleteConfig supports array format for commands similar to ValidationConfig",
      "fix_suggestion": "Add note that on_incomplete can be an array of commands for convenience",
      "source_reference": "src/cook/workflow/validation.rs:154-213 (OnIncompleteConfig deserialization)"
    },
    {
      "type": "correct_example",
      "severity": "none",
      "section": "Conditional Execution",
      "description": "The when field is correctly documented and matches implementation",
      "current_content": "when: \"${tests_passed}\" and when: \"${environment == 'production' && tests_passed}\"",
      "should_be": "Matches WorkflowStepCommand.when field",
      "fix_suggestion": "No changes needed",
      "source_reference": "src/config/command.rs:388 (when field in WorkflowStepCommand)"
    },
    {
      "type": "correct_example",
      "severity": "none",
      "section": "Timeout Configuration",
      "description": "Timeout configuration is correctly documented at command level",
      "current_content": "timeout: 600  # 10 minutes",
      "should_be": "Matches WorkflowStepCommand.timeout field (Option<u64>)",
      "fix_suggestion": "No changes needed",
      "source_reference": "src/config/command.rs:383-384 (timeout field)"
    },
    {
      "type": "correct_example",
      "severity": "none",
      "section": "Step Identification",
      "description": "Step ID feature is correctly documented",
      "current_content": "id: \"test-step\"",
      "should_be": "Matches WorkflowStepCommand.id field",
      "fix_suggestion": "No changes needed",
      "source_reference": "src/config/command.rs:351-352 (id field)"
    },
    {
      "type": "correct_example",
      "severity": "none",
      "section": "Output File Redirection",
      "description": "output_file field is correctly documented",
      "current_content": "output_file: \"test-results.txt\"",
      "should_be": "Matches WorkflowStepCommand.output_file field",
      "fix_suggestion": "No changes needed",
      "source_reference": "src/config/command.rs:399-400 (output_file field)"
    }
  ],
  "positive_aspects": [
    "Comprehensive coverage of advanced features",
    "Good progression from simple to complex examples",
    "Practical real-world examples in Common Patterns section",
    "Clear explanation of conditional execution with when clause",
    "Well-organized sections with clear headers",
    "Capture formats are accurately documented (string, number, json, lines, boolean)",
    "Timeout configuration correctly shown at command level",
    "Step identification feature clearly explained",
    "Good coverage of validation with threshold and on_incomplete",
    "Foreach parallel iteration is well documented"
  ],
  "improvement_suggestions": [
    "Clarify the default values for TestDebugConfig (max_attempts=3, fail_workflow=false, commit_required=true)",
    "Add note that validation and on_incomplete can use array format for convenience",
    "Mention that capture_streams can be either a string ('stdout', 'stderr', 'both') or a detailed struct",
    "Add cross-references to related chapters (Variables, Error Handling)",
    "Consider adding a troubleshooting section for common issues with advanced features",
    "Add note about the relationship between on_failure and TestDebugConfig"
  ],
  "metadata": {
    "analyzed_at": "2025-10-10",
    "feature_inventory": ".prodigy/book-analysis/features.json",
    "topics_covered": [
      "Conditional execution",
      "Output capture formats",
      "Nested conditionals",
      "Timeouts",
      "Validation",
      "Foreach",
      "Goal-seeking"
    ],
    "validation_focus": "Check advanced features match implementation"
  }
}
