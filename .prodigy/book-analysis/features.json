{
  "workflow_basics": {
    "structure": {
      "simple_array": "Direct command array - commands can be a simple list",
      "full_config": "Full format with env, secrets, profiles, and merge configuration",
      "flexible_formats": "Commands support multiple formats: simple strings, structured objects, workflow steps"
    },
    "execution_model": {
      "sequential": "Commands execute in order",
      "commit_tracking": "Git integration for audit trail",
      "worktree_isolation": "Each session runs in isolated git worktree"
    }
  },
  "mapreduce": {
    "phases": {
      "setup": "Optional preparation phase with capture_outputs support",
      "map": "Parallel processing across agents",
      "reduce": "Result aggregation phase"
    },
    "capabilities": {
      "parallel_execution": "Configurable max_parallel agents",
      "work_distribution": "Automatic distribution via JSONPath",
      "checkpoint_resume": "Resume from interruptions"
    }
  },
  "command_types": {
    "shell": {
      "description": "Execute shell commands",
      "use_cases": [
        "Build",
        "Test",
        "Deploy"
      ]
    },
    "claude": {
      "description": "Execute Claude AI commands",
      "use_cases": [
        "Code generation",
        "Analysis"
      ]
    },
    "goal_seek": {
      "description": "Iterative refinement to reach threshold",
      "use_cases": [
        "Coverage improvement",
        "Quality gates"
      ]
    }
  },
  "variables": {
    "standard": {
      "last.output": "Last command output",
      "last.exit_code": "Exit code from last command"
    },
    "mapreduce": {
      "item": "Current work item",
      "map.results": "Aggregated results"
    }
  },
  "environment": {
    "global_env": {
      "static": "Plain key-value pairs",
      "dynamic": "Computed from command output"
    },
    "secrets": {
      "masking": "Automatic masking in logs",
      "providers": [
        "env",
        "file",
        "vault",
        "aws"
      ]
    }
  },
  "advanced_features": {
    "conditional_execution": {
      "when": "Execute step only if expression is true"
    },
    "output_capture": {
      "formats": [
        "string",
        "number",
        "json",
        "lines",
        "boolean"
      ]
    },
    "timeout_control": {
      "command_level": "Timeout per command",
      "workflow_level": "Timeout for entire workflow"
    }
  },
  "error_handling": {
    "workflow_level": {
      "on_item_failure": [
        "dlq",
        "retry",
        "skip",
        "stop"
      ],
      "circuit_breaker": "Prevent cascading failures"
    },
    "command_level": {
      "on_failure": "Execute command on failure",
      "retry": "Automatic retry with backoff"
    }
  },
  "workflow_composition": {
    "imports": {
      "description": "Import and reuse workflow definitions"
    },
    "templates": {
      "description": "Parameterized workflow templates"
    }
  },
  "configuration": {
    "file_locations": {
      "global": "~/.prodigy/config.toml",
      "project": ".prodigy/config.toml"
    }
  },
  "git_context_advanced": {
    "pattern_filtering": {
      "include": "Include specific file patterns",
      "exclude": "Exclude patterns"
    }
  },
  "automated_documentation": {
    "workflow_setup": {
      "description": "MapReduce workflow for documentation drift detection"
    }
  },
  "mapreduce_worktree_architecture": {
    "worktree_hierarchy": {
      "parent_worktree": "Main session worktree",
      "child_worktrees": "Per-agent worktrees"
    }
  },
  "retry_configuration": {
    "backoff_strategies": [
      "fixed",
      "linear",
      "exponential",
      "fibonacci"
    ]
  },
  "version_info": {
    "analyzed_version": "0.2.0+",
    "analysis_date": "2025-01-12"
  }
}
