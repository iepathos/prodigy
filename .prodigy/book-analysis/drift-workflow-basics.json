{
  "chapter_id": "workflow-basics",
  "chapter_title": "Workflow Basics",
  "chapter_file": "book/src/workflow-basics.md",
  "drift_detected": true,
  "severity": "medium",
  "quality_assessment": "The chapter has been significantly improved and now provides good coverage of workflow basics. It includes command types, conditional execution, error handling, output capture, and merge workflows. However, there's a structural inaccuracy in the merge workflow examples showing nested 'commands' array instead of flat structure.",
  "issues": [
    {
      "type": "incorrect_example",
      "severity": "medium",
      "section": "Merge Workflows - Line 220-227",
      "description": "The merge workflow example shows a nested 'commands' array, but the actual MergeWorkflow struct expects a flat array of WorkflowStep commands directly under 'merge'",
      "current_content": "merge:\n  commands:\n    - shell: \"git fetch origin\"\n    - shell: \"git merge origin/main\"\n    - shell: \"cargo test\"\n    - claude: \"/prodigy-merge-worktree ${merge.source_branch}\"\n  timeout: 600",
      "should_be": "merge:\n  - shell: \"git fetch origin\"\n  - shell: \"git merge origin/main\"\n  - shell: \"cargo test\"\n  - claude: \"/prodigy-merge-worktree ${merge.source_branch}\"\ntimeout: 600  # at merge level, not nested",
      "fix_suggestion": "Update the merge workflow examples to show the flat array structure without the nested 'commands' key. The timeout field should be at the merge level, not nested under commands.",
      "source_reference": "src/config/mapreduce.rs:86-94 MergeWorkflow struct has 'commands: Vec<WorkflowStep>' and 'timeout: Option<u64>' as direct fields"
    },
    {
      "type": "incorrect_example",
      "severity": "medium",
      "section": "Complete Example - Line 262-266",
      "description": "The complete example also shows incorrect merge workflow syntax with nested 'commands' array",
      "current_content": "merge:\n  commands:\n    - shell: \"cargo test\"\n    - claude: \"/prodigy-merge-worktree ${merge.source_branch}\"\n  timeout: 300",
      "should_be": "merge:\n  - shell: \"cargo test\"\n  - claude: \"/prodigy-merge-worktree ${merge.source_branch}\"\ntimeout: 300  # separate field at root level if needed",
      "fix_suggestion": "Update the complete example to use the correct flat array structure for merge workflows.",
      "source_reference": "src/config/mapreduce.rs:86-94 MergeWorkflow struct"
    },
    {
      "type": "unclear_content",
      "severity": "low",
      "section": "Command Types - Lines 79-104",
      "description": "The chapter mentions command types like 'shell:', 'claude:', 'goal_seek:', 'foreach:', and 'validate:' but doesn't clearly explain that these are all WorkflowStepCommand fields, not separate command types",
      "fix_suggestion": "Add a clarification that all these are different fields available in the WorkflowStepCommand structure, and exactly one must be present per command step. Consider showing the relationship between WorkflowCommand enum and WorkflowStepCommand.",
      "source_reference": "src/config/command.rs:320-401 WorkflowStepCommand with claude, shell, analyze, test, goal_seek, foreach, write_file fields"
    },
    {
      "type": "incomplete_explanation",
      "severity": "low",
      "section": "Output Capture - Lines 143-149",
      "description": "The chapter shows 'capture: \"commit_hash\"' syntax but doesn't explain the relationship between 'capture' field and the older 'capture_output' field, or when to use each",
      "fix_suggestion": "Add clarification that 'capture' field takes a variable name (string) and is the modern recommended approach, while 'capture_output' is the older boolean/string field for backward compatibility.",
      "source_reference": "src/cook/workflow/executor.rs:316-319 'capture: Option<String>' field and src/config/command.rs:367-368 'capture_output: Option<CaptureOutputConfig>'"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Output Capture - Line 148",
      "description": "The chapter lists capture_format options but doesn't explain what each format does",
      "current_content": "capture_format: \"string\"     # Format: string|json|lines|number|boolean",
      "should_add": "Brief explanation of each capture format: String (raw output, default), Json (parses JSON), Lines (splits into array), Number (parses number), Boolean (parses true/false)",
      "fix_suggestion": "Add a brief explanation of what each capture format does in the comment or add a small table showing format types and their behavior",
      "source_reference": "src/cook/workflow/variables.rs:253-264 CaptureFormat enum with String, Json, Lines, Number, Boolean variants"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Command-Level Options",
      "description": "Chapter mentions basic options but doesn't document working_dir option for setting command working directory",
      "should_add": "Document working_dir: option for setting per-step working directory",
      "fix_suggestion": "Add working_dir to the Command-Level Options section with a brief example",
      "source_reference": "src/cook/workflow/executor.rs:WorkflowStep.working_dir field"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Advanced Commands",
      "description": "Chapter doesn't document 'handler' command type for modular extensibility",
      "should_add": "Document handler: command type for custom extensible commands, or note if it's internal-only",
      "fix_suggestion": "If handler is user-facing, add to advanced commands section. If internal-only, can skip.",
      "source_reference": "src/cook/workflow/executor.rs:HandlerStep and WorkflowStep.handler field"
    }
  ],
  "positive_aspects": [
    "Clear distinction between simple array format and full workflow format with good examples",
    "Good progressive disclosure - starts simple and adds complexity gradually",
    "Correct and comprehensive documentation of environment variable features (env, secrets, env_files, profiles)",
    "Accurate examples of command-level options (id, commit_required, timeout)",
    "Correct documentation of conditional execution with 'when' clause",
    "Good documentation of error handling with on_failure and on_success",
    "Output capture section covers the essential fields (capture, capture_format)",
    "Properly cross-references to other chapters for deeper topics",
    "Correctly documents that 'test:' command is deprecated",
    "Good explanation of merge workflow use cases and available merge variables",
    "Complete example ties together multiple concepts effectively",
    "Command types section provides good overview of available commands"
  ],
  "improvement_suggestions": [
    "Fix the merge workflow structure examples to show flat array instead of nested 'commands'",
    "Add a brief architectural explanation showing WorkflowConfig → WorkflowCommand → WorkflowStepCommand hierarchy",
    "Clarify that command type fields (claude, shell, etc.) are mutually exclusive - exactly one must be present",
    "Expand the output capture section to better explain 'capture' vs 'capture_output' and when to use each",
    "Add brief descriptions of what each capture_format option does",
    "Add working_dir option to command-level options section",
    "Consider adding a troubleshooting note about common YAML errors (e.g., forgetting the dash for array items)",
    "Add examples showing how to reference captured variables in subsequent commands"
  ],
  "metadata": {
    "analyzed_at": "2025-10-10",
    "feature_inventory": "Derived from codebase analysis (features.json not present)",
    "topics_covered": [
      "Workflow types (standard vs MapReduce)",
      "Simple array format",
      "Full configuration format",
      "Command types (shell, claude, goal_seek, foreach, validate, test-deprecated)",
      "Command-level options (id, commit_required, timeout)",
      "Conditional execution (when clause)",
      "Error handling (on_failure, on_success)",
      "Output capture (capture, capture_format)",
      "Environment configuration (env, secrets, env_files, profiles)",
      "Merge workflows with available variables"
    ],
    "validation_focus": "Check basic workflow syntax and structure documentation",
    "source_files_reviewed": [
      "src/config/workflow.rs",
      "src/config/command.rs",
      "src/config/mapreduce.rs",
      "src/cook/workflow/executor.rs",
      "src/cook/workflow/variables.rs"
    ]
  }
}
