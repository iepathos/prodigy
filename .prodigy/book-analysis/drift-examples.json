{
  "chapter_id": "examples",
  "chapter_title": "Examples",
  "chapter_file": "book/src/examples.md",
  "drift_detected": true,
  "severity": "medium",
  "quality_assessment": "Examples are mostly accurate with good progression from simple to complex. Main issues are incorrect environment configuration syntax in Example 6 and some missing modern features like foreach. Most examples use current syntax correctly.",
  "issues": [
    {
      "type": "incorrect_example",
      "severity": "high",
      "section": "Example 6: Environment-Aware Workflow",
      "description": "Example shows non-existent 'environment' root key with nested structure that doesn't match actual implementation",
      "current_content": "environment:\n  global_env:\n    DEPLOY_ENV:\n      condition: \"${branch} == 'main'\"\n      when_true: \"production\"\n      when_false: \"staging\"\n  profiles:\n    production:\n      env:\n        API_URL: https://api.production.com\n  active_profile: \"${DEPLOY_ENV}\"\n\ncommands:\n  - shell: ...",
      "should_be": "env:\n  DEPLOY_ENV:\n    condition: \"${branch} == 'main'\"\n    when_true: \"production\"\n    when_false: \"staging\"\n\nprofiles:\n  production:\n    API_URL: https://api.production.com\n    description: \"Production environment\"\n\nactive_profile: \"${DEPLOY_ENV}\"\n\n# Steps go directly at root (not under 'commands')\n- shell: \"cargo build --release\"\n- shell: \"echo 'Deploying to ${DEPLOY_ENV} at ${API_URL}'\"",
      "fix_suggestion": "Remove 'environment:' wrapper and 'commands:' wrapper. Use root-level fields: 'env', 'profiles', 'active_profile'. Profile env vars should be flattened, not nested under 'env' key. Steps go directly in workflow, not under 'commands'.",
      "source_reference": "src/config/mapreduce.rs:MapReduceWorkflowConfig (lines 24-38), src/cook/environment/config.rs:EnvProfile (lines 116-124)"
    },
    {
      "type": "incorrect_example",
      "severity": "medium",
      "section": "Example 6: Profile Structure",
      "description": "Profile structure incorrectly nests env vars under 'env' key",
      "current_content": "profiles:\n  production:\n    env:\n      API_URL: https://api.production.com",
      "should_be": "profiles:\n  production:\n    API_URL: https://api.production.com\n    description: \"Production environment\"",
      "fix_suggestion": "EnvProfile uses #[serde(flatten)] for env HashMap, so variables go directly in the profile object, not nested under 'env' key",
      "source_reference": "src/cook/environment/config.rs:EnvProfile (line 118)"
    },
    {
      "type": "missing_content",
      "severity": "medium",
      "section": "Missing Examples",
      "description": "No example showing foreach iteration, a key command type",
      "should_add": "Add example showing foreach:\n- foreach:\n    items:\n      - \"src/**/*.rs\"\n      - \"tests/**/*.rs\"\n    do:\n      - shell: \"cargo fmt ${item}\"\n      - shell: \"cargo clippy ${item}\"\n    parallel: 3",
      "fix_suggestion": "Add Example 8 demonstrating foreach with both static list and command-based input, plus parallel execution",
      "source_reference": "src/config/command.rs:ForeachConfig (lines 183-211), src/config/command.rs:WorkflowStepCommand::foreach (line 303)"
    },
    {
      "type": "incomplete_explanation",
      "severity": "low",
      "section": "Example 3: Parallel Code Review",
      "description": "Example could show output capture and better use of map results in reduce",
      "current_content": "agent_template:\n  - claude: \"/review-file ${item.path}\"\n  - shell: \"cargo check ${item.path}\"\nreduce:\n  - claude: \"/summarize-reviews ${map.results}\"",
      "should_add": "Add outputs configuration to capture structured review data:\nagent_template:\n  - claude: \"/review-file ${item.path}\"\n    outputs:\n      review:\n        from_output: true\n        format: json",
      "fix_suggestion": "Enhance to demonstrate output capture pattern for aggregating structured results",
      "source_reference": "src/config/command.rs:WorkflowStepCommand::outputs (line 319), src/cook/workflow/variables.rs:StandardVariables::MAP_RESULTS (line 40)"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Example 4: Conditional Deployment",
      "description": "Example shows capture format: boolean but doesn't explain available formats",
      "current_content": "outputs:\n  tests_passed:\n    from_output: true\n    format: boolean",
      "should_add": "Add comment explaining available formats: string, number, json, lines, boolean",
      "fix_suggestion": "Add inline comment:\n# Capture formats: string, number, json, lines, boolean\noutputs:\n  tests_passed:\n    from_output: true\n    format: boolean",
      "source_reference": "src/cook/execution/variable_capture.rs:CaptureFormat"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Missing Examples",
      "description": "No example showing timeout or working_dir configuration",
      "should_add": "Example showing:\n- shell: \"npm test\"\n  timeout: 300\n  working_dir: \"frontend/\"\n  on_failure:\n    shell: \"npm run debug-tests\"",
      "fix_suggestion": "Add to existing example or create new one showing advanced step configuration options",
      "source_reference": "src/config/command.rs:WorkflowStepCommand::timeout (line 339), src/cook/environment/config.rs:StepEnvironment::working_dir (line 135)"
    },
    {
      "type": "unclear_content",
      "severity": "low",
      "section": "Example 7: Error Handling",
      "description": "Shows error_policy but doesn't explain convenience fields vs nested structure",
      "current_content": "error_policy:\n  on_item_failure: dlq\n  continue_on_failure: true\n  max_failures: 5\n  failure_threshold: 0.3",
      "should_add": "Add comment explaining top-level convenience fields are also available:\n# Can use top-level: on_item_failure, continue_on_failure, max_failures, failure_threshold\n# Or nest under error_policy object as shown",
      "fix_suggestion": "Clarify that these fields can be at root level or nested under error_policy",
      "source_reference": "src/config/mapreduce.rs:MapReduceWorkflowConfig (lines 59-77), src/cook/workflow/error_policy.rs:WorkflowErrorPolicy (lines 131-179)"
    },
    {
      "type": "missing_content",
      "severity": "low",
      "section": "Missing Examples",
      "description": "No example showing secrets management",
      "should_add": "Example demonstrating:\nsecrets:\n  API_KEY:\n    provider: env\n    key: MY_API_KEY\n\n- shell: \"curl -H 'Authorization: Bearer ${API_KEY}' ...\"",
      "fix_suggestion": "Add example showing secret configuration and masking in logs",
      "source_reference": "src/config/mapreduce.rs:MapReduceWorkflowConfig::secrets (line 29), src/cook/environment/config.rs:SecretValue (lines 84-96)"
    }
  ],
  "positive_aspects": [
    "Good progression from simple (Example 1) to complex (Example 7)",
    "Example 1 clearly shows basic shell and on_failure pattern",
    "Example 2 demonstrates goal_seek with proper validation config",
    "Example 3 shows MapReduce basics well (setup, map, reduce)",
    "Example 4 correctly demonstrates conditional execution with when clause",
    "Example 5 shows multi-step validation structure",
    "Example 7 demonstrates error handling and filtering/sorting in MapReduce",
    "All YAML is syntactically valid and parseable",
    "Covers practical use cases: build/test, coverage, code review, deployment",
    "Uses current command syntax (shell:, claude:, goal_seek:, etc.)"
  ],
  "improvement_suggestions": [
    "Fix Example 6 environment configuration to match actual MapReduceWorkflowConfig structure",
    "Add Example 8 showing foreach iteration (missing key feature)",
    "Add example showing timeout and working_dir configuration",
    "Add example demonstrating secrets management and masking",
    "Enhance Example 3 to show output capture for structured data",
    "Add brief comments explaining what each example demonstrates",
    "Add inline comments for available capture formats",
    "Show step-level environment overrides in an example",
    "Add example showing validation result_file with threshold",
    "Consider adding troubleshooting notes for common pitfalls",
    "Add expected output snippets to show what success looks like"
  ],
  "metadata": {
    "analyzed_at": "2025-10-05",
    "feature_inventory": "Analyzed against source code directly",
    "topics_covered": [
      "Simple workflows",
      "Goal seeking",
      "MapReduce parallel execution",
      "Conditional execution",
      "Validation",
      "Environment configuration",
      "Error handling"
    ],
    "validation_focus": "Check examples are valid and work with current syntax",
    "examples_count": 7,
    "syntax_errors": [
      "Example 6 environment structure"
    ],
    "missing_features_to_demonstrate": [
      "foreach iteration",
      "timeout configuration",
      "working_dir",
      "secrets management",
      "step-level environment overrides"
    ]
  }
}
