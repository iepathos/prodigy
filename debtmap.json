{
  "items": [
    {
      "location": {
        "file": "./src/cook/execution/mapreduce.rs",
        "function": "MapReduceExecutor::execute_map_phase",
        "line": 406
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 7,
          "cognitive": 23
        }
      },
      "unified_score": {
        "complexity_factor": 7.0,
        "coverage_factor": 7.0,
        "roi_factor": 3.2665168046493775,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 4.0,
        "organization_factor": 3.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.049
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 7 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=7, cog=23) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 3.5,
        "risk_reduction": 2.764980330610231
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 5,
      "upstream_callers": [
        "MapReduceExecutor::execute"
      ],
      "downstream_callees": [
        "MapReduceExecutor::run_agent",
        "ProgressTracker::new",
        "DirGuard::drop",
        "CommandRegistry::clone",
        "MapReduceExecutor::clone_executor"
      ],
      "nesting_depth": 0,
      "function_length": 60,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 23
    },
    {
      "location": {
        "file": "./src/config/command_parser.rs",
        "function": "parse_command_string",
        "line": 56
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: SyncInLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 20.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.049
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 11,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/retry.rs",
        "function": "execute_with_retry",
        "line": 44
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: SyncInLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 20.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.048
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 10,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/abstractions/git.rs",
        "function": "RealGitOperations::git_command_in_dir",
        "line": 162
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.097777777777778,
          "factors": [
            "Cognitive complexity: 11"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.2,
        "coverage_factor": 0.375,
        "roi_factor": 3.848236918887376,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.047
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.1: Cognitive complexity: 11",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.6557427689165533
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 8,
      "upstream_callers": [],
      "downstream_callees": [
        "MockProcessRunner::run",
        "ProcessCommandBuilder::args",
        "SubprocessManager::runner",
        "ExitStatusHelper::success",
        "ProcessCommandBuilder::current_dir",
        "CommandHandlerBuilder::build",
        "ProcessCommandBuilder::new",
        "ExitStatus::code"
      ],
      "nesting_depth": 0,
      "function_length": 36,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 11
    },
    {
      "location": {
        "file": "./src/cook/session/adapter.rs",
        "function": "SessionManagerAdapter::get_state",
        "line": 234
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 11,
          "cognitive": 29
        }
      },
      "unified_score": {
        "complexity_factor": 8.0,
        "coverage_factor": 5.5,
        "roi_factor": 2.2018057136805314,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 8.746427842267952,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.046
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 11 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=11, cog=29) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 5.5,
        "risk_reduction": 2.5726432307801037
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "tests::test_state_conversion"
      ],
      "downstream_callees": [
        "SessionState::is_terminal",
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 55,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 29
    },
    {
      "location": {
        "file": "./src/config/command_discovery.rs",
        "function": "CommandDiscovery::scan_commands::<closure@2>",
        "line": 80
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Inefficient string processing: RepeatedFormatting"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.046
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/testing/helpers/assertions.rs",
        "function": "assert_file_contains",
        "line": 65
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 5.046
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/coordinators/execution.rs",
        "function": "DefaultExecutionCoordinator::execute_with_retry",
        "line": 159
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.3822222222222225,
          "factors": [
            "Cognitive complexity: 13"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.4,
        "coverage_factor": 5.0,
        "roi_factor": 4.848722976287817,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 4.0,
        "organization_factor": 3.3541019662496847,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.045
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.4: Cognitive complexity: 13",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.448482257009827
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "tests::test_execute_with_retry"
      ],
      "downstream_callees": [
        "CommandRegistry::clone",
        "DefaultExecutionCoordinator::execute_command"
      ],
      "nesting_depth": 0,
      "function_length": 28,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 13
    },
    {
      "location": {
        "file": "./src/cook/execution/mapreduce.rs",
        "function": "MapReduceExecutor::execute",
        "line": 318
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.611111111111111,
          "factors": [
            "Cognitive complexity: 14"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.699999999999999,
        "coverage_factor": 5.0,
        "roi_factor": 5.45589306930693,
        "semantic_factor": 9.0,
        "dependency_factor": 8.0,
        "security_factor": 4.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 0.8,
        "final_score": 5.045
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.6: Cognitive complexity: 14",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.8670357227722774
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.0,
        "propagated_from": []
      },
      "upstream_dependencies": 8,
      "downstream_dependencies": 4,
      "upstream_callers": [
        "CommandRegistry::execute",
        "CargoHandler::execute",
        "WorkflowExecutor::execute_mapreduce",
        "WorkflowExecutor::execute_handler_command",
        "disabled_tests::test_workflow_execution_single_iteration",
        "ClaudeHandler::execute",
        "ShellHandler::execute",
        "GitHandler::execute"
      ],
      "downstream_callees": [
        "MapReduceExecutor::execute_reduce_phase",
        "MapReduceExecutor::report_summary",
        "MapReduceExecutor::load_work_items_with_pipeline",
        "MapReduceExecutor::execute_map_phase"
      ],
      "nesting_depth": 0,
      "function_length": 35,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 14
    },
    {
      "location": {
        "file": "./src/testing/mocks/subprocess.rs",
        "function": "MockSubprocessManager::run_command",
        "line": 97
      },
      "debt_type": {
        "Orchestration": {
          "delegates_to": [
            "DirGuard::drop",
            "CommandRegistry::get"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 2.6999999999999997,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 2.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 0.2,
        "final_score": 5.044
      },
      "function_role": "Orchestrator",
      "recommendation": {
        "primary_action": "Refactor to pure functions or extract testable units",
        "rationale": "Orchestration function delegating to 2 functions",
        "implementation_steps": [
          "Extract logic into pure functions",
          "Compose smaller, testable functions",
          "Add unit tests for extracted functions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.015600000000000003
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "tests::test_mock_subprocess_history"
      ],
      "downstream_callees": [
        "DirGuard::drop",
        "CommandRegistry::get"
      ],
      "nesting_depth": 0,
      "function_length": 26,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 6
    },
    {
      "location": {
        "file": "./src/cook/workflow/executor.rs",
        "function": "WorkflowExecutor::execute_shell_command",
        "line": 842
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 7,
          "cognitive": 17
        }
      },
      "unified_score": {
        "complexity_factor": 6.4,
        "coverage_factor": 0.0,
        "roi_factor": 4.710676747187904,
        "semantic_factor": 9.6,
        "dependency_factor": 5.0,
        "security_factor": 4.0,
        "organization_factor": 3.674234614174767,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.044
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 7 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=7, cog=17) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 3.5,
        "risk_reduction": 1.8382249816905
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 1.0,
        "propagated_from": [
          {
            "file": "./src/config/command.rs",
            "name": "Command::new",
            "line": 405
          },
          {
            "file": "./src/subprocess/runner.rs",
            "name": "ExitStatus::code",
            "line": 42
          },
          {
            "file": "./src/subprocess/runner.rs",
            "name": "ExitStatusHelper::success",
            "line": 56
          }
        ]
      },
      "upstream_dependencies": 4,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "disabled_tests::test_execute_shell_command_success",
        "WorkflowExecutor::execute_test_command",
        "WorkflowExecutor::execute_shell_with_retry",
        "WorkflowExecutor::execute_step"
      ],
      "downstream_callees": [
        "Command::new",
        "ExitStatus::code",
        "ExitStatusHelper::success"
      ],
      "nesting_depth": 0,
      "function_length": 48,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 17
    },
    {
      "location": {
        "file": "./src/testing/test_mocks.rs",
        "function": "MockResponses::cargo_check_json",
        "line": 158
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Inefficient string processing: RepeatedFormatting"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 5.044
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/orchestrator.rs",
        "function": "test_arg_resolution_only_for_commands_with_args::<closure@51>",
        "line": 2180
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "Clone allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 5.044
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/git/scenario.rs",
        "function": "format_status_output",
        "line": 332
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Inefficient string processing: RepeatedFormatting"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.044
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/worktree/manager.rs",
        "function": "WorktreeManager::is_branch_merged",
        "line": 669
      },
      "debt_type": {
        "Orchestration": {
          "delegates_to": [
            "ProcessCommandBuilder::new",
            "CommandHandlerBuilder::build",
            "ExitStatusHelper::success",
            "ProcessCommandBuilder::args",
            "MockProcessRunner::run",
            "ProcessCommandBuilder::current_dir",
            "SubprocessManager::runner"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 2.6999999999999997,
        "coverage_factor": 0.4285714285714287,
        "roi_factor": 7.797158878504674,
        "semantic_factor": 2.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 0.2,
        "final_score": 5.043
      },
      "function_role": "Orchestrator",
      "recommendation": {
        "primary_action": "Refactor to pure functions or extract testable units",
        "rationale": "Orchestration function delegating to 7 functions",
        "implementation_steps": [
          "Extract logic into pure functions",
          "Compose smaller, testable functions",
          "Add unit tests for extracted functions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.05608579439252338
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.8571428571428571,
        "propagated_from": [
          {
            "file": "./src/subprocess/builder.rs",
            "name": "ProcessCommandBuilder::new",
            "line": 12
          },
          {
            "file": "./src/commands/mod.rs",
            "name": "CommandHandlerBuilder::build",
            "line": 71
          },
          {
            "file": "./src/subprocess/runner.rs",
            "name": "ExitStatusHelper::success",
            "line": 56
          },
          {
            "file": "./src/subprocess/builder.rs",
            "name": "ProcessCommandBuilder::args",
            "line": 31
          },
          {
            "file": "./src/subprocess/builder.rs",
            "name": "ProcessCommandBuilder::current_dir",
            "line": 61
          },
          {
            "file": "./src/subprocess/mod.rs",
            "name": "SubprocessManager::runner",
            "line": 149
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 7,
      "upstream_callers": [
        "WorktreeManager::detect_mergeable_sessions"
      ],
      "downstream_callees": [
        "ProcessCommandBuilder::new",
        "CommandHandlerBuilder::build",
        "ExitStatusHelper::success",
        "ProcessCommandBuilder::args",
        "MockProcessRunner::run",
        "ProcessCommandBuilder::current_dir",
        "SubprocessManager::runner"
      ],
      "nesting_depth": 0,
      "function_length": 20,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 6
    },
    {
      "location": {
        "file": "./src/cook/coordinators/environment.rs",
        "function": "DefaultEnvironmentCoordinator::prepare_environment",
        "line": 121
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.5844444444444448,
          "factors": [
            "Moderate complexity (cyclomatic: 6)",
            "Cognitive complexity: 14"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 6.0,
        "coverage_factor": 6.0,
        "roi_factor": 3.996197718631178,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.043
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.6: Moderate complexity (cyclomatic: 6), Cognitive complexity: 14",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.3197148288973386
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [
        "DefaultEnvironmentCoordinator::setup_worktree",
        "DefaultEnvironmentCoordinator::verify_git_repository",
        "DefaultEnvironmentCoordinator::load_configuration"
      ],
      "nesting_depth": 0,
      "function_length": 27,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 14
    },
    {
      "location": {
        "file": "./src/cook/execution/mapreduce.rs",
        "function": "MapReduceExecutor::execute_shell_command",
        "line": 1325
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 6,
          "cognitive": 16
        }
      },
      "unified_score": {
        "complexity_factor": 6.2,
        "coverage_factor": 0.0,
        "roi_factor": 4.522935779816514,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 4.0,
        "organization_factor": 1.5,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.043
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 6 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=6, cog=16) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 3.0,
        "risk_reduction": 1.5412603211009175
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 1.0,
        "propagated_from": [
          {
            "file": "./src/subprocess/runner.rs",
            "name": "ExitStatusHelper::success",
            "line": 56
          },
          {
            "file": "./src/subprocess/runner.rs",
            "name": "ExitStatus::code",
            "line": 42
          },
          {
            "file": "./src/config/command.rs",
            "name": "Command::new",
            "line": 405
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "MapReduceExecutor::execute_single_step"
      ],
      "downstream_callees": [
        "ExitStatusHelper::success",
        "ExitStatus::code",
        "Command::new"
      ],
      "nesting_depth": 0,
      "function_length": 41,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 16
    },
    {
      "location": {
        "file": "./src/cook/workflow/executor.rs",
        "function": "WorkflowExecutor::json_to_attribute_value_static",
        "line": 241
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 11,
          "cognitive": 19
        }
      },
      "unified_score": {
        "complexity_factor": 7.0,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 9.0,
        "security_factor": 6.0,
        "organization_factor": 3.674234614174767,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.043
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 11 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=11, cog=19) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 5.5,
        "risk_reduction": 1.5795736586220877
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 13,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "tests::test_json_to_attribute_value_static_float",
        "tests::test_json_to_attribute_value_static_boolean_true",
        "tests::test_json_to_attribute_value_static_string",
        "tests::test_json_to_attribute_value_static_integer",
        "tests::test_json_to_attribute_value_static_nested_object",
        "WorkflowExecutor::json_to_attribute_value_static",
        "tests::test_json_to_attribute_value_static_object",
        "tests::test_json_to_attribute_value_static_array",
        "tests::test_json_to_attribute_value_static_nested_array",
        "WorkflowExecutor::json_to_attribute_value",
        "tests::test_json_to_attribute_value_static_null",
        "tests::test_json_to_attribute_value_static_large_numbers",
        "tests::test_json_to_attribute_value_static_boolean_false"
      ],
      "downstream_callees": [
        "WorkflowExecutor::json_to_attribute_value_static"
      ],
      "nesting_depth": 0,
      "function_length": 28,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 19
    },
    {
      "location": {
        "file": "./src/cook/orchestrator.rs",
        "function": "DefaultCookOrchestrator::run",
        "line": 148
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 10,
          "cognitive": 41
        }
      },
      "unified_score": {
        "complexity_factor": 9.1,
        "coverage_factor": 10.0,
        "roi_factor": 1.5240829294647966,
        "semantic_factor": 6.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 4.242640687119286,
        "performance_factor": 2.0,
        "role_multiplier": 0.8,
        "final_score": 5.043
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 10 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=10, cog=41) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 5.0,
        "risk_reduction": 1.612282774682206
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 4,
      "upstream_callers": [],
      "downstream_callees": [
        "DefaultCookOrchestrator::check_prerequisites",
        "DefaultCookOrchestrator::cleanup",
        "DefaultCookOrchestrator::execute_workflow",
        "DefaultCookOrchestrator::setup_environment"
      ],
      "nesting_depth": 0,
      "function_length": 47,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 41
    },
    {
      "location": {
        "file": "./src/git/scenario.rs",
        "function": "GitScenarioMock::is_repository",
        "line": 355
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 5,
          "cognitive": 16
        }
      },
      "unified_score": {
        "complexity_factor": 6.1,
        "coverage_factor": 0.0,
        "roi_factor": 4.0483080673244345,
        "semantic_factor": 9.6,
        "dependency_factor": 4.0,
        "security_factor": 0.0,
        "organization_factor": 2.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.043
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 5 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=5, cog=16) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 2.5,
        "risk_reduction": 1.657465433836332
      },
      "transitive_coverage": null,
      "upstream_dependencies": 3,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "tests::test_scenario_mock_clean_repo",
        "tests::test_scenario_mock_command_logging",
        "tests::test_scenario_mock_non_repository"
      ],
      "downstream_callees": [
        "GitScenarioMock::execute_command",
        "GitScenarioMock::get_scenario"
      ],
      "nesting_depth": 0,
      "function_length": 18,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 16
    },
    {
      "location": {
        "file": "./src/session/state.rs",
        "function": "WorkflowTiming::from_iterations",
        "line": 259
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 10,
          "cognitive": 17
        }
      },
      "unified_score": {
        "complexity_factor": 6.7,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 4.9749371855331,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.043
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 10 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=10, cog=17) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 5.0,
        "risk_reduction": 1.0125921011202437
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [
        "SessionProgress::get_workflow_timing"
      ],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 54,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 17
    },
    {
      "location": {
        "file": "./src/worktree/manager.rs",
        "function": "WorktreeManager::collect_all_states",
        "line": 72
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.8511111111111114,
          "factors": [
            "Moderate complexity (cyclomatic: 6)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.2,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.042
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 1.9: Moderate complexity (cyclomatic: 6)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.3915
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "WorktreeManager::list_interrupted_sessions"
      ],
      "downstream_callees": [
        "MockFileSystem::exists",
        "WorktreeManager::load_state_from_file"
      ],
      "nesting_depth": 0,
      "function_length": 17,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 8
    },
    {
      "location": {
        "file": "./src/subprocess/git.rs",
        "function": "GitRunnerImpl::commit",
        "line": 94
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.3866666666666667,
          "factors": [
            "Moderate complexity (cyclomatic: 6)",
            "Cognitive complexity: 12"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.4,
        "coverage_factor": 0.0,
        "roi_factor": 4.479911209766925,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 3.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.042
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.4: Moderate complexity (cyclomatic: 6), Cognitive complexity: 12",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.7627433407325195
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 7,
      "upstream_callers": [],
      "downstream_callees": [
        "ProcessCommandBuilder::new",
        "ProcessCommandBuilder::current_dir",
        "ProcessCommandBuilder::args",
        "CommandHandlerBuilder::build",
        "ExitStatus::code",
        "ExitStatusHelper::success",
        "run"
      ],
      "nesting_depth": 0,
      "function_length": 26,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 12
    },
    {
      "location": {
        "file": "./src/cook/execution/mapreduce.rs",
        "function": "MapReduceExecutor::execute_single_step",
        "line": 1144
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 15,
          "cognitive": 41
        }
      },
      "unified_score": {
        "complexity_factor": 9.6,
        "coverage_factor": 10.0,
        "roi_factor": 1.0558432349970994,
        "semantic_factor": 9.6,
        "dependency_factor": 4.0,
        "security_factor": 6.0,
        "organization_factor": 3.674234614174767,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.042
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 15 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=15, cog=41) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 7.5,
        "risk_reduction": 3.448028083215457
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.125,
        "propagated_from": [
          {
            "file": "./src/cook/execution/mapreduce.rs",
            "name": "AgentContext::to_interpolation_context",
            "line": 251
          }
        ]
      },
      "upstream_dependencies": 3,
      "downstream_dependencies": 8,
      "upstream_callers": [
        "MapReduceExecutor::execute_agent_commands",
        "MapReduceExecutor::handle_on_failure",
        "MapReduceExecutor::execute_reduce_phase"
      ],
      "downstream_callees": [
        "GitDiff::is_empty",
        "AgentContext::to_interpolation_context",
        "CommandRegistry::clone",
        "MapReduceExecutor::determine_command_type",
        "MapReduceExecutor::execute_claude_command",
        "MapReduceExecutor::execute_handler_command",
        "MapReduceExecutor::interpolate_workflow_step",
        "MapReduceExecutor::execute_shell_command"
      ],
      "nesting_depth": 0,
      "function_length": 53,
      "cyclomatic_complexity": 15,
      "cognitive_complexity": 41
    },
    {
      "location": {
        "file": "./src/cook/workflow/executor.rs",
        "function": "WorkflowExecutor::handle_test_mode_execution",
        "line": 1152
      },
      "debt_type": {
        "Risk": {
          "risk_score": 3.726666666666667,
          "factors": [
            "Moderate complexity (cyclomatic: 10)",
            "Cognitive complexity: 15",
            "Long function (53 lines)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 6.5,
        "coverage_factor": 10.0,
        "roi_factor": 3.9514255543822596,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 4.0,
        "organization_factor": 2.598076211353316,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.042
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions (complexity 10 → 3), then add 9 comprehensive tests",
        "rationale": "Risk score 3.7: Moderate complexity (cyclomatic: 10), Cognitive complexity: 15, Long function (53 lines)",
        "implementation_steps": [
          "Identify 3 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 9 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 10 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.9365780597489697
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "WorkflowExecutor::execute_step"
      ],
      "downstream_callees": [
        "WorkflowExecutor::is_test_mode_no_changes_command"
      ],
      "nesting_depth": 0,
      "function_length": 53,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 15
    },
    {
      "location": {
        "file": "./src/init/mod.rs",
        "function": "handle_existing_commands",
        "line": 136
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Inefficient string processing: RepeatedFormatting"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 13.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.042
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 3,
      "downstream_dependencies": 4,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/execution/mapreduce.rs",
        "function": "MapReduceExecutor::load_work_items_with_pipeline",
        "line": 354
      },
      "debt_type": {
        "Risk": {
          "risk_score": 3.242222222222222,
          "factors": [
            "Moderate complexity (cyclomatic: 10)",
            "Cognitive complexity: 10",
            "Long function (51 lines)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 6.0,
        "coverage_factor": 5.0,
        "roi_factor": 4.909319899244332,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 4.0,
        "organization_factor": 1.5,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.041
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions (complexity 10 → 3), then add 9 comprehensive tests",
        "rationale": "Risk score 3.2: Moderate complexity (cyclomatic: 10), Cognitive complexity: 10, Long function (51 lines)",
        "implementation_steps": [
          "Identify 3 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 9 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 10 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.4256989924433254
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.5,
        "propagated_from": [
          {
            "file": "./src/cook/execution/data_pipeline.rs",
            "name": "DataPipeline::from_config",
            "line": 33
          },
          {
            "file": "./src/cook/execution/data_pipeline.rs",
            "name": "DataPipeline::process",
            "line": 72
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 4,
      "upstream_callers": [
        "MapReduceExecutor::execute"
      ],
      "downstream_callees": [
        "CommandRegistry::clone",
        "DataPipeline::from_config",
        "GitDiff::is_empty",
        "DataPipeline::process"
      ],
      "nesting_depth": 0,
      "function_length": 51,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 10
    },
    {
      "location": {
        "file": "./src/cook/execution/data_pipeline.rs",
        "function": "Sorter::parse",
        "line": 754
      },
      "debt_type": {
        "Risk": {
          "risk_score": 3.0755555555555554,
          "factors": [
            "Moderate complexity (cyclomatic: 9)",
            "Cognitive complexity: 13"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 6.2,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 9.6,
        "dependency_factor": 4.0,
        "security_factor": 3.0,
        "organization_factor": 2.598076211353316,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.04
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions (complexity 9 → 3), then add 9 comprehensive tests",
        "rationale": "Risk score 3.1: Moderate complexity (cyclomatic: 9), Cognitive complexity: 13",
        "implementation_steps": [
          "Identify 3 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 9 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 9 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.6494711431702997
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 3,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "tests::test_sorter_single_field",
        "tests::test_sorter_multiple_fields",
        "DataPipeline::from_config"
      ],
      "downstream_callees": [
        "SessionId::as_str"
      ],
      "nesting_depth": 0,
      "function_length": 36,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 13
    },
    {
      "location": {
        "file": "./src/worktree/tests.rs",
        "function": "setup_test_repo",
        "line": 16
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 20.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 5.04
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 11,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/command_validator.rs",
        "function": "CommandRegistry::validate_command",
        "line": 226
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 13,
          "cognitive": 30
        }
      },
      "unified_score": {
        "complexity_factor": 8.3,
        "coverage_factor": 0.0,
        "roi_factor": 0.45000000000000007,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 7.0,
        "organization_factor": 4.242640687119286,
        "performance_factor": 2.121320343559643,
        "role_multiplier": 1.5,
        "final_score": 5.039
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 13 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=13, cog=30) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 6.5,
        "risk_reduction": 1.2178068180368813
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 4,
      "upstream_callers": [],
      "downstream_callees": [
        "CommandRegistry::validate_argument_type",
        "CommandArg::is_variable",
        "CommandRegistry::validate_option_value",
        "CommandRegistry::get"
      ],
      "nesting_depth": 0,
      "function_length": 56,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 30
    },
    {
      "location": {
        "file": "./src/config/command_validator.rs",
        "function": "CommandRegistry::validate_option_value",
        "line": 318
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 12,
          "cognitive": 19
        }
      },
      "unified_score": {
        "complexity_factor": 7.1,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 7.0,
        "organization_factor": 5.4083269131959835,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.039
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 12 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=12, cog=19) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 6.0,
        "risk_reduction": 1.2392185814713943
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "CommandRegistry::validate_command"
      ],
      "downstream_callees": [
        "SessionId::as_str"
      ],
      "nesting_depth": 0,
      "function_length": 46,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 19
    },
    {
      "location": {
        "file": "./src/cook/interaction/display.rs",
        "function": "VerbosityLevel::from_args",
        "line": 19
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.6822222222222225,
          "factors": [
            "Moderate complexity (cyclomatic: 6)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.9,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.039
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 1.7: Moderate complexity (cyclomatic: 6)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.40800000000000003
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 2,
      "downstream_dependencies": 0,
      "upstream_callers": [
        "tests::test_verbosity_levels",
        "ProgressDisplayImpl::from_args"
      ],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 13,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 7
    },
    {
      "location": {
        "file": "./src/cook/orchestrator.rs",
        "function": "test_arg_resolution_only_for_commands_with_args::<closure@51>",
        "line": 2179
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Contains operation on Vec in performance-critical code"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 5.039
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/dynamic_registry.rs",
        "function": "DynamicCommandRegistry::refresh",
        "line": 44
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.8533333333333335,
          "factors": [
            "Cognitive complexity: 9"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.9,
        "coverage_factor": 0.0,
        "roi_factor": 0.20999999999999996,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 4.5,
        "performance_factor": 4.898979485566356,
        "role_multiplier": 1.5,
        "final_score": 5.037
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.9: Cognitive complexity: 9",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.3787500000000001
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 4,
      "upstream_callers": [],
      "downstream_callees": [
        "CommandRegistry::clone",
        "MetadataParser::create_minimal_definition",
        "CommandDiscovery::scan_commands",
        "MetadataParser::parse_command_file"
      ],
      "nesting_depth": 0,
      "function_length": 26,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 9
    },
    {
      "location": {
        "file": "./src/config/dynamic_registry.rs",
        "function": "DynamicCommandRegistry::validate_argument_type",
        "line": 171
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 9,
          "cognitive": 18
        }
      },
      "unified_score": {
        "complexity_factor": 6.7,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 5.0,
        "organization_factor": 4.743416490252569,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.037
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 9 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=9, cog=18) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.5,
        "risk_reduction": 1.13776468286913
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "DynamicCommandRegistry::validate_strict"
      ],
      "downstream_callees": [
        "CommandArg::parse",
        "GitDiff::is_empty"
      ],
      "nesting_depth": 0,
      "function_length": 41,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 18
    },
    {
      "location": {
        "file": "./src/worktree/manager.rs",
        "function": "WorktreeManager::restore_session",
        "line": 620
      },
      "debt_type": {
        "Orchestration": {
          "delegates_to": [
            "CommandRegistry::clone",
            "WorktreeSession::new",
            "MockFileSystem::exists",
            "WorktreeManager::load_session_state"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 1.5,
        "coverage_factor": 1.5,
        "roi_factor": 5.847499999999999,
        "semantic_factor": 2.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 0.2,
        "final_score": 5.037
      },
      "function_role": "Orchestrator",
      "recommendation": {
        "primary_action": "Refactor to pure functions or extract testable units",
        "rationale": "Orchestration function delegating to 4 functions",
        "implementation_steps": [
          "Extract logic into pure functions",
          "Compose smaller, testable functions",
          "Add unit tests for extracted functions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.0462375
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.5,
        "propagated_from": [
          {
            "file": "./src/worktree/mod.rs",
            "name": "WorktreeSession::new",
            "line": 144
          },
          {
            "file": "./src/testing/mocks/fs.rs",
            "name": "MockFileSystem::exists",
            "line": 88
          }
        ]
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 4,
      "upstream_callers": [],
      "downstream_callees": [
        "CommandRegistry::clone",
        "WorktreeSession::new",
        "MockFileSystem::exists",
        "WorktreeManager::load_session_state"
      ],
      "nesting_depth": 0,
      "function_length": 19,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 2
    },
    {
      "location": {
        "file": "./src/cook/execution/mapreduce.rs",
        "function": "MapReduceExecutor::execute_agent_commands",
        "line": 547
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 34,
          "cognitive": 89
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 10.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 6.0,
        "organization_factor": 10.0,
        "performance_factor": 4.0,
        "role_multiplier": 1.5,
        "final_score": 5.036
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 34 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=34, cog=89) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 17.0,
        "risk_reduction": 3.399375
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.2,
        "propagated_from": [
          {
            "file": "./src/cook/execution/mapreduce.rs",
            "name": "AgentContext::new",
            "line": 221
          },
          {
            "file": "./src/cook/execution/mapreduce.rs",
            "name": "AgentContext::update_with_output",
            "line": 241
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 10,
      "upstream_callers": [
        "MapReduceExecutor::run_agent"
      ],
      "downstream_callees": [
        "MapReduceExecutor::handle_on_failure",
        "MapReduceExecutor::get_modified_files",
        "MapReduceExecutor::merge_agent_to_parent",
        "MapReduceExecutor::create_agent_branch",
        "GitDiff::is_empty",
        "MapReduceExecutor::execute_single_step",
        "AgentContext::new",
        "CommandRegistry::clone",
        "MapReduceExecutor::get_worktree_commits",
        "AgentContext::update_with_output"
      ],
      "nesting_depth": 0,
      "function_length": 227,
      "cyclomatic_complexity": 34,
      "cognitive_complexity": 89
    },
    {
      "location": {
        "file": "./src/cook/workflow/executor.rs",
        "function": "WorkflowExecutor::execute_handler_command",
        "line": 765
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 7,
          "cognitive": 19
        }
      },
      "unified_score": {
        "complexity_factor": 6.6,
        "coverage_factor": 2.1,
        "roi_factor": 3.469746134758542,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 4.0,
        "organization_factor": 3.3541019662496847,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.036
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 7 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=7, cog=19) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 3.5,
        "risk_reduction": 1.9511056068011128
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.7,
        "propagated_from": [
          {
            "file": "./src/commands/context.rs",
            "name": "ExecutionContext::with_session_id",
            "line": 66
          },
          {
            "file": "./src/config/command_validator.rs",
            "name": "CommandRegistry::get",
            "line": 222
          },
          {
            "file": "./src/config/command.rs",
            "name": "CommandArg::parse",
            "line": 68
          },
          {
            "file": "./src/commands/context.rs",
            "name": "ExecutionContext::with_iteration",
            "line": 72
          },
          {
            "file": "./src/cook/execution/interpolation.rs",
            "name": "InterpolationEngine::interpolate",
            "line": 43
          },
          {
            "file": "./src/commands/result.rs",
            "name": "CommandResult::is_success",
            "line": 84
          },
          {
            "file": "./src/commands/context.rs",
            "name": "ExecutionContext::new",
            "line": 38
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 10,
      "upstream_callers": [
        "WorkflowExecutor::execute_step"
      ],
      "downstream_callees": [
        "MapReduceExecutor::execute",
        "ExecutionContext::with_session_id",
        "ExecutionContext::add_env_vars",
        "CommandRegistry::get",
        "CommandRegistry::clone",
        "CommandArg::parse",
        "ExecutionContext::with_iteration",
        "InterpolationEngine::interpolate",
        "CommandResult::is_success",
        "ExecutionContext::new"
      ],
      "nesting_depth": 0,
      "function_length": 56,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 19
    },
    {
      "location": {
        "file": "./src/config/mapreduce.rs",
        "function": "deserialize_timeout",
        "line": 116
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Inefficient string processing: InefficientParsing"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.036
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::extract_description",
        "line": 93
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.9266666666666667,
          "factors": [
            "Moderate complexity (cyclomatic: 7)",
            "Cognitive complexity: 15"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 6.2,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 9.6,
        "dependency_factor": 5.0,
        "security_factor": 3.0,
        "organization_factor": 3.674234614174767,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.035
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 7 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.9: Moderate complexity (cyclomatic: 7), Cognitive complexity: 15",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 7 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.6956135192126216
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 4,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "MetadataParser::convert_frontmatter_to_definition",
        "MetadataParser::parse_sections",
        "MetadataParser::create_minimal_definition",
        "tests::test_extract_description_multiline"
      ],
      "downstream_callees": [
        "GitDiff::is_empty"
      ],
      "nesting_depth": 0,
      "function_length": 33,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 15
    },
    {
      "location": {
        "file": "./src/testing/mocks/git.rs",
        "function": "MockGitOperations::git_command",
        "line": 149
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.4577777777777783,
          "factors": [
            "Moderate complexity (cyclomatic: 6)",
            "Cognitive complexity: 11"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.1,
        "coverage_factor": 2.0,
        "roi_factor": 6.498654708520178,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 2.598076211353316,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.035
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.5: Moderate complexity (cyclomatic: 6), Cognitive complexity: 11",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.1723867506038086
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "MockGitOperations::git_command_in_dir"
      ],
      "downstream_callees": [
        "MockGitOperations::next_response",
        "CommandRegistry::get",
        "GitCommandType::classify"
      ],
      "nesting_depth": 0,
      "function_length": 34,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 11
    },
    {
      "location": {
        "file": "./src/cook/orchestrator.rs",
        "function": "DefaultCookOrchestrator::build_command",
        "line": 1161
      },
      "debt_type": {
        "Risk": {
          "risk_score": 3.368888888888889,
          "factors": [
            "Moderate complexity (cyclomatic: 10)",
            "Cognitive complexity: 13"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 6.3,
        "coverage_factor": 7.5,
        "roi_factor": 4.219553206822003,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 2.121320343559643,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.035
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions (complexity 10 → 3), then add 9 comprehensive tests",
        "rationale": "Risk score 3.4: Moderate complexity (cyclomatic: 10), Cognitive complexity: 13",
        "implementation_steps": [
          "Identify 3 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 9 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 10 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.599286295665045
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.25,
        "propagated_from": [
          {
            "file": "./src/config/command.rs",
            "name": "CommandArg::is_variable",
            "line": 50
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 4,
      "upstream_callers": [
        "DefaultCookOrchestrator::execute_workflow_command"
      ],
      "downstream_callees": [
        "GitDiff::is_empty",
        "CommandArg::resolve",
        "CommandArg::is_variable",
        "SessionId::as_str"
      ],
      "nesting_depth": 0,
      "function_length": 44,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 13
    },
    {
      "location": {
        "file": "./src/main.rs",
        "function": "display_worktree_session",
        "line": 206
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 11,
          "cognitive": 14
        }
      },
      "unified_score": {
        "complexity_factor": 6.5,
        "coverage_factor": 10.0,
        "roi_factor": 6.432008953553441,
        "semantic_factor": 1.3,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 1.0,
        "performance_factor": 4.242640687119286,
        "role_multiplier": 0.1,
        "final_score": 5.035
      },
      "function_role": "IOWrapper",
      "recommendation": {
        "primary_action": "Extract 2 pure functions to reduce complexity from 11 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=11, cog=14) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 2 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 6 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 5.5,
        "risk_reduction": 0.2239300783435926
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "handle_list_command"
      ],
      "downstream_callees": [
        "display_worktree_session_legacy"
      ],
      "nesting_depth": 0,
      "function_length": 41,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 14
    },
    {
      "location": {
        "file": "./src/config/dynamic_registry.rs",
        "function": "DynamicCommandRegistry::apply_definition_defaults",
        "line": 292
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "Clone allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 18.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.035
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 8,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/workflow/executor.rs",
        "function": "WorkflowExecutor::execute_step",
        "line": 602
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 35,
          "cognitive": 95
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 10.0,
        "roi_factor": 0.45000000000000007,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 6.0,
        "organization_factor": 8.220727287950695,
        "performance_factor": 4.0,
        "role_multiplier": 1.5,
        "final_score": 5.034
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 35 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=35, cog=95) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 17.5,
        "risk_reduction": 3.3001690913087054
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.16666666666666666,
        "propagated_from": [
          {
            "file": "./src/config/command_validator.rs",
            "name": "CommandRegistry::get",
            "line": 222
          },
          {
            "file": "./src/cook/execution/interpolation.rs",
            "name": "InterpolationEngine::interpolate",
            "line": 43
          }
        ]
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 12,
      "upstream_callers": [],
      "downstream_callees": [
        "WorkflowExecutor::execute_shell_command",
        "WorkflowExecutor::get_step_display_name",
        "WorkflowExecutor::execute_handler_command",
        "CommandRegistry::get",
        "CommandRegistry::clone",
        "WorkflowExecutor::determine_command_type",
        "WorkflowExecutor::execute_shell_with_retry",
        "WorkflowExecutor::handle_test_mode_execution",
        "WorkflowExecutor::execute_test_command",
        "InterpolationEngine::interpolate",
        "WorkflowExecutor::execute_step",
        "WorkflowExecutor::execute_claude_command"
      ],
      "nesting_depth": 0,
      "function_length": 162,
      "cyclomatic_complexity": 35,
      "cognitive_complexity": 95
    },
    {
      "location": {
        "file": "./src/commands/handlers/git.rs",
        "function": "GitHandler::execute",
        "line": 46
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 24,
          "cognitive": 112
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 8.571428571428573,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 6.0,
        "dependency_factor": 3.0,
        "security_factor": 6.0,
        "organization_factor": 10.0,
        "performance_factor": 4.0,
        "role_multiplier": 0.8,
        "final_score": 5.034
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 24 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=24, cog=112) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 12.0,
        "risk_reduction": 1.6977487373415292
      },
      "transitive_coverage": null,
      "upstream_dependencies": 2,
      "downstream_dependencies": 14,
      "upstream_callers": [
        "tests::test_git_status",
        "tests::test_git_commit_dry_run"
      ],
      "downstream_callees": [
        "AttributeValue::as_bool",
        "CommandRegistry::clone",
        "AttributeValue::as_string",
        "CommandRegistry::get",
        "GitHandler::schema",
        "CommandResult::error",
        "SessionId::as_str",
        "ExitStatusHelper::success",
        "DynamicCommandRegistry::apply_defaults",
        "CommandResult::with_duration",
        "MapReduceExecutor::execute",
        "ExecutionContext::full_env",
        "AttributeValue::as_array",
        "CommandResult::success"
      ],
      "nesting_depth": 0,
      "function_length": 160,
      "cyclomatic_complexity": 24,
      "cognitive_complexity": 112
    },
    {
      "location": {
        "file": "./src/git/scenario.rs",
        "function": "GitScenarioMock::execute_command",
        "line": 206
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.117777777777778,
          "factors": [
            "Cognitive complexity: 14"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.4,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 10.0,
        "security_factor": 4.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.034
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.1: Cognitive complexity: 14",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.79425
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 17,
      "downstream_dependencies": 5,
      "upstream_callers": [
        "GitScenarioMock::stage_files",
        "GitScenarioMock::list_worktrees",
        "GitScenarioMock::get_current_branch",
        "GitScenarioMock::stage_all",
        "GitScenarioMock::get_commit_message",
        "GitScenarioMock::delete_branch",
        "GitScenarioMock::create_worktree",
        "GitScenarioMock::get_diff",
        "GitScenarioMock::get_status",
        "GitScenarioMock::commit",
        "GitScenarioMock::is_repository",
        "GitScenarioMock::prune_worktrees",
        "GitScenarioMock::list_files",
        "GitScenarioMock::remove_worktree",
        "GitScenarioMock::init_repository",
        "GitScenarioMock::switch_branch",
        "GitScenarioMock::create_branch"
      ],
      "downstream_callees": [
        "CommandRegistry::get",
        "GitScenarioMock::get_scenario",
        "GitScenarioMock::default_response",
        "GitScenarioMock::log_command",
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 17,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 14
    },
    {
      "location": {
        "file": "./src/init/mod.rs",
        "function": "validate_project_structure",
        "line": 245
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.9422222222222225,
          "factors": [
            "Cognitive complexity: 10"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.2,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 9.6,
        "dependency_factor": 4.0,
        "security_factor": 5.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.033
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.9: Cognitive complexity: 10",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.5505
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 3,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "tests::test_validate_project_structure_not_git_repo",
        "tests::test_validate_project_structure_with_symlinks",
        "run"
      ],
      "downstream_callees": [
        "is_git_repository",
        "CommandRegistry::clone",
        "initialize_directories"
      ],
      "nesting_depth": 0,
      "function_length": 26,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 10
    },
    {
      "location": {
        "file": "./src/testing/mocks/claude.rs",
        "function": "MockClaudeClient::execute_command",
        "line": 113
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 7,
          "cognitive": 16
        }
      },
      "unified_score": {
        "complexity_factor": 6.3,
        "coverage_factor": 4.666666666666667,
        "roi_factor": 5.1632858003615185,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 4.0,
        "organization_factor": 2.121320343559643,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.033
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 7 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=7, cog=16) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 3.5,
        "risk_reduction": 2.40199092031589
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [
        "DirGuard::drop",
        "CommandRegistry::clone",
        "CommandRegistry::get"
      ],
      "nesting_depth": 0,
      "function_length": 47,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 16
    },
    {
      "location": {
        "file": "./src/main.rs",
        "function": "main",
        "line": 119
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 9,
          "cognitive": 24
        }
      },
      "unified_score": {
        "complexity_factor": 7.3,
        "coverage_factor": 4.5,
        "roi_factor": 4.609776304888152,
        "semantic_factor": 10.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 1.5,
        "performance_factor": 2.0,
        "role_multiplier": 0.8,
        "final_score": 5.033
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 9 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=9, cog=24) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.5,
        "risk_reduction": 1.3012843413421706
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.5,
        "propagated_from": [
          {
            "file": "./src/cook/mod.rs",
            "name": "cook",
            "line": 35
          },
          {
            "file": "./src/init/mod.rs",
            "name": "run",
            "line": 286
          }
        ]
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 4,
      "upstream_callers": [],
      "downstream_callees": [
        "init",
        "cook",
        "run_worktree_command",
        "run"
      ],
      "nesting_depth": 0,
      "function_length": 86,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 24
    },
    {
      "location": {
        "file": "./src/git/parsers.rs",
        "function": "parse_diff_output",
        "line": 132
      },
      "debt_type": {
        "Risk": {
          "risk_score": 3.091111111111111,
          "factors": [
            "Moderate complexity (cyclomatic: 8)",
            "Cognitive complexity: 14"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 6.2,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 9.6,
        "dependency_factor": 4.0,
        "security_factor": 3.0,
        "organization_factor": 0.0,
        "performance_factor": 2.5,
        "role_multiplier": 1.5,
        "final_score": 5.032
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 8 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 3.1: Moderate complexity (cyclomatic: 8), Cognitive complexity: 14",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 8 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.6370165042944955
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 3,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "tests::test_parse_diff_output",
        "GitCommandRunner::get_diff",
        "GitScenarioMock::get_diff"
      ],
      "downstream_callees": [
        "GitDiff::is_empty",
        "GitDiff::new",
        "CommandArg::parse"
      ],
      "nesting_depth": 0,
      "function_length": 39,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 14
    },
    {
      "location": {
        "file": "./src/init/mod.rs",
        "function": "handle_existing_commands",
        "line": 126
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 9,
          "cognitive": 25
        }
      },
      "unified_score": {
        "complexity_factor": 7.4,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 4.0,
        "security_factor": 0.0,
        "organization_factor": 1.5,
        "performance_factor": 5.5,
        "role_multiplier": 0.8,
        "final_score": 5.031
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 9 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=9, cog=25) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.5,
        "risk_reduction": 0.6048
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 3,
      "downstream_dependencies": 4,
      "upstream_callers": [
        "tests::test_handle_existing_commands_no_tty",
        "tests::test_handle_existing_commands_with_conflicts",
        "run"
      ],
      "downstream_callees": [
        "GitDiff::is_empty",
        "SessionState::is_terminal",
        "UserPrompterImpl::read_line",
        "MockFileSystem::exists"
      ],
      "nesting_depth": 0,
      "function_length": 51,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 25
    },
    {
      "location": {
        "file": "./src/abstractions/git.rs",
        "function": "MockGitOperations::git_command",
        "line": 279
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.4844444444444447,
          "factors": [
            "Cognitive complexity: 11"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.9,
        "coverage_factor": 2.0,
        "roi_factor": 6.081683915102614,
        "semantic_factor": 10.0,
        "dependency_factor": 8.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.031
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.5: Cognitive complexity: 11",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.231626293632696
      },
      "transitive_coverage": null,
      "upstream_dependencies": 8,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "MockGitOperations::get_last_commit_message",
        "MockGitOperations::create_commit",
        "MockGitOperations::check_git_status",
        "MockGitOperations::switch_branch",
        "MockGitOperations::git_command_in_dir",
        "MockGitOperations::get_current_branch",
        "MockGitOperations::stage_all_changes",
        "MockGitOperations::create_worktree"
      ],
      "downstream_callees": [
        "GitDiff::is_empty",
        "CacheManager::remove"
      ],
      "nesting_depth": 0,
      "function_length": 12,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 11
    },
    {
      "location": {
        "file": "./src/cook/execution/data_pipeline.rs",
        "function": "DataPipeline::from_config",
        "line": 33
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 12,
          "cognitive": 14
        }
      },
      "unified_score": {
        "complexity_factor": 6.6,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 1.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.029
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions to reduce complexity from 12 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=12, cog=14) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 2 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 6 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 6.0,
        "risk_reduction": 0.952875
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 2,
      "downstream_dependencies": 4,
      "upstream_callers": [
        "tests::test_pipeline_complete",
        "MapReduceExecutor::load_work_items_with_pipeline"
      ],
      "downstream_callees": [
        "GitDiff::is_empty",
        "FilterExpression::parse",
        "Sorter::parse",
        "JsonPath::compile"
      ],
      "nesting_depth": 0,
      "function_length": 38,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 14
    },
    {
      "location": {
        "file": "./src/cook/execution/data_pipeline.rs",
        "function": "FilterExpression::parse_value",
        "line": 546
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.3000000000000003,
          "factors": [
            "Moderate complexity (cyclomatic: 6)",
            "Cognitive complexity: 9"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.5,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 3.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.029
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.3: Moderate complexity (cyclomatic: 6), Cognitive complexity: 9",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.4897747564417433
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "FilterExpression::parse"
      ],
      "downstream_callees": [
        "CommandArg::parse"
      ],
      "nesting_depth": 0,
      "function_length": 35,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 9
    },
    {
      "location": {
        "file": "./src/cook/orchestrator.rs",
        "function": "DefaultCookOrchestrator::execute_workflow_command",
        "line": 1096
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.6333333333333337,
          "factors": [
            "Moderate complexity (cyclomatic: 6)",
            "Long function (65 lines)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.6,
        "coverage_factor": 2.6666666666666665,
        "roi_factor": 5.129411764705882,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 4.0,
        "organization_factor": 1.5,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.029
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.6: Moderate complexity (cyclomatic: 6), Long function (65 lines)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.0892058823529414
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.5555555555555556,
        "propagated_from": [
          {
            "file": "./src/session/timing.rs",
            "name": "TimingTracker::complete_command",
            "line": 48
          },
          {
            "file": "./src/cook/interaction/display.rs",
            "name": "ProgressDisplayImpl::format_duration",
            "line": 131
          },
          {
            "file": "./src/session/timing.rs",
            "name": "TimingTracker::start_command",
            "line": 42
          },
          {
            "file": "./src/config/command_validator.rs",
            "name": "apply_command_defaults",
            "line": 411
          },
          {
            "file": "./src/config/command.rs",
            "name": "WorkflowCommand::to_command",
            "line": 344
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 9,
      "upstream_callers": [
        "DefaultCookOrchestrator::process_workflow_input"
      ],
      "downstream_callees": [
        "DefaultCookOrchestrator::prepare_environment_variables",
        "TimingTracker::complete_command",
        "ProgressDisplayImpl::format_duration",
        "CommandRegistry::clone",
        "DefaultCookOrchestrator::build_command",
        "TimingTracker::start_command",
        "apply_command_defaults",
        "DefaultCookOrchestrator::execute_and_validate_command",
        "WorkflowCommand::to_command"
      ],
      "nesting_depth": 0,
      "function_length": 65,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 6
    },
    {
      "location": {
        "file": "./src/config/command_discovery.rs",
        "function": "CommandDiscovery::scan_commands::<closure@2>",
        "line": 83
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "Clone allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.029
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/execution/mapreduce.rs",
        "function": "MapReduceExecutor::json_to_attribute_value",
        "line": 1263
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 11,
          "cognitive": 19
        }
      },
      "unified_score": {
        "complexity_factor": 7.0,
        "coverage_factor": 10.0,
        "roi_factor": 3.582086428795647,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 6.0,
        "organization_factor": 3.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.028
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 11 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=11, cog=19) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 5.5,
        "risk_reduction": 3.4626488437794287
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.0,
        "propagated_from": []
      },
      "upstream_dependencies": 2,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "MapReduceExecutor::determine_command_type",
        "MapReduceExecutor::json_to_attribute_value"
      ],
      "downstream_callees": [
        "MapReduceExecutor::json_to_attribute_value"
      ],
      "nesting_depth": 0,
      "function_length": 27,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 19
    },
    {
      "location": {
        "file": "./src/cook/orchestrator.rs",
        "function": "DefaultCookOrchestrator::check_prerequisites",
        "line": 196
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.0244444444444447,
          "factors": [
            "Cognitive complexity: 11"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.8,
        "coverage_factor": 0.0,
        "roi_factor": 6.716426804123711,
        "semantic_factor": 9.6,
        "dependency_factor": 4.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.028
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.0: Cognitive complexity: 11",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.0024820103092782
      },
      "transitive_coverage": null,
      "upstream_dependencies": 3,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "DefaultCookOrchestrator::run",
        "tests::test_prerequisites_check_claude_unavailable",
        "tests::test_prerequisites_check_no_git"
      ],
      "downstream_callees": [
        "check_claude_cli",
        "is_git_repo"
      ],
      "nesting_depth": 0,
      "function_length": 19,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 11
    },
    {
      "location": {
        "file": "./src/worktree/test_state.rs",
        "function": "setup_test_repo",
        "line": 17
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 16.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 5.028
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 6,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/session/manager.rs",
        "function": "InMemorySessionManager::restore_session",
        "line": 292
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 8,
          "cognitive": 27
        }
      },
      "unified_score": {
        "complexity_factor": 7.5,
        "coverage_factor": 5.333333333333334,
        "roi_factor": 2.9834842834310065,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 7.348469228349534,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.027
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 8 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=8, cog=27) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.0,
        "risk_reduction": 2.5226046294444946
      },
      "transitive_coverage": null,
      "upstream_dependencies": 2,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "test_session_persistence_and_recovery",
        "example_recovery"
      ],
      "downstream_callees": [
        "SessionProgress::new",
        "CommandRegistry::clone",
        "InMemoryStorage::load"
      ],
      "nesting_depth": 0,
      "function_length": 42,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 27
    },
    {
      "location": {
        "file": "./src/config/dynamic_registry.rs",
        "function": "DynamicCommandRegistry::validate_strict",
        "line": 118
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 12,
          "cognitive": 27
        }
      },
      "unified_score": {
        "complexity_factor": 7.9,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 7.0,
        "organization_factor": 4.242640687119286,
        "performance_factor": 2.121320343559643,
        "role_multiplier": 1.5,
        "final_score": 5.026
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 12 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=12, cog=27) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 6.0,
        "risk_reduction": 1.271619318036881
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "DynamicCommandRegistry::validate_against_definition"
      ],
      "downstream_callees": [
        "DynamicCommandRegistry::validate_argument_type",
        "DynamicCommandRegistry::validate_option_value",
        "CommandArg::is_variable"
      ],
      "nesting_depth": 0,
      "function_length": 52,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 27
    },
    {
      "location": {
        "file": "./src/session/manager.rs",
        "function": "InMemorySessionManager::apply_event",
        "line": 85
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 12,
          "cognitive": 21
        }
      },
      "unified_score": {
        "complexity_factor": 7.3,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 6.87386354243376,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.026
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 12 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=12, cog=21) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 6.0,
        "risk_reduction": 1.1096889179888858
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 8,
      "upstream_callers": [
        "InMemorySessionManager::record_event"
      ],
      "downstream_callees": [
        "TimingTracker::complete_iteration",
        "SessionProgress::success_rate",
        "SessionProgress::get_workflow_timing",
        "SessionProgress::all_commits",
        "CommandRegistry::clone",
        "SessionProgress::start_workflow",
        "TimestampedEvent::new",
        "SessionProgress::start_iteration"
      ],
      "nesting_depth": 0,
      "function_length": 83,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 21
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::parse_variables_to_args",
        "line": 185
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "StringConcatenation allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.026
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/execution/mapreduce.rs",
        "function": "MapReduceExecutor::execute_handler_command",
        "line": 1367
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.6733333333333333,
          "factors": [
            "Cognitive complexity: 9"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 0.25,
        "roi_factor": 6.202234042553192,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 4.0,
        "organization_factor": 3.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.025
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.7: Cognitive complexity: 9",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.9438935058334059
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.75,
        "propagated_from": [
          {
            "file": "./src/commands/result.rs",
            "name": "CommandResult::is_success",
            "line": 84
          },
          {
            "file": "./src/commands/context.rs",
            "name": "ExecutionContext::add_env_var",
            "line": 90
          },
          {
            "file": "./src/commands/context.rs",
            "name": "ExecutionContext::new",
            "line": 38
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 4,
      "upstream_callers": [
        "MapReduceExecutor::execute_single_step"
      ],
      "downstream_callees": [
        "CommandResult::is_success",
        "CommandRegistry::clone",
        "ExecutionContext::add_env_var",
        "ExecutionContext::new"
      ],
      "nesting_depth": 0,
      "function_length": 37,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 9
    },
    {
      "location": {
        "file": "./src/session/manager.rs",
        "function": "InMemorySessionManager::complete_session",
        "line": 229
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.948888888888889,
          "factors": [
            "Cognitive complexity: 13"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.1,
        "coverage_factor": 2.666666666666667,
        "roi_factor": 6.68573203883495,
        "semantic_factor": 10.0,
        "dependency_factor": 7.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.025
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.9: Cognitive complexity: 13",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.3709299029126214
      },
      "transitive_coverage": null,
      "upstream_dependencies": 6,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "test_session_state_machine",
        "tests::test_concurrent_sessions",
        "tests::test_session_lifecycle",
        "example_migration",
        "test_session_persistence_and_recovery",
        "test_concurrent_sessions"
      ],
      "downstream_callees": [
        "CommandRegistry::clone",
        "CommandRegistry::get",
        "InMemorySessionManager::record_event"
      ],
      "nesting_depth": 0,
      "function_length": 13,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 13
    },
    {
      "location": {
        "file": "./src/config/command_discovery.rs",
        "function": "CommandDiscovery::scan_commands",
        "line": 34
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 12,
          "cognitive": 43
        }
      },
      "unified_score": {
        "complexity_factor": 9.5,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 9.6,
        "dependency_factor": 6.0,
        "security_factor": 0.0,
        "organization_factor": 2.598076211353316,
        "performance_factor": 4.333333333333333,
        "role_multiplier": 1.5,
        "final_score": 5.024
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 12 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=12, cog=43) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 6.0,
        "risk_reduction": 1.4555120005480244
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 5,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "tests::test_scan_empty_directory",
        "tests::test_scan_commands_filters_correctly",
        "tests::test_cache_behavior",
        "tests::test_needs_refresh",
        "DynamicCommandRegistry::refresh"
      ],
      "downstream_callees": [
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 70,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 43
    },
    {
      "location": {
        "file": "./src/worktree/manager.rs",
        "function": "WorktreeManager::cleanup_all_sessions",
        "line": 572
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.6022222222222222,
          "factors": [
            "Cognitive complexity: 10"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.2,
        "coverage_factor": 0.0,
        "roi_factor": 6.317209665427509,
        "semantic_factor": 10.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.024
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.6: Cognitive complexity: 10",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.8727907249070633
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 1.0,
        "propagated_from": [
          {
            "file": "./src/worktree/manager.rs",
            "name": "WorktreeManager::list_sessions",
            "line": 259
          },
          {
            "file": "./src/worktree/manager.rs",
            "name": "WorktreeManager::cleanup_session",
            "line": 508
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "handle_clean_command"
      ],
      "downstream_callees": [
        "WorktreeManager::list_sessions",
        "WorktreeManager::cleanup_session"
      ],
      "nesting_depth": 0,
      "function_length": 9,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 10
    },
    {
      "location": {
        "file": "./src/cook/git_ops.rs",
        "function": "create_test_commit",
        "line": 209
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.9622222222222225,
          "factors": [
            "Cognitive complexity: 10"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.2,
        "coverage_factor": 4.0,
        "roi_factor": 6.294592542372881,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.024
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.0: Cognitive complexity: 10",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.2010944406779662
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 27,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 10
    },
    {
      "location": {
        "file": "./src/cook/workflow/executor.rs",
        "function": "WorkflowExecutor::execute",
        "line": 355
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 44,
          "cognitive": 145
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 10.0,
        "roi_factor": 0.45000000000000007,
        "semantic_factor": 6.0,
        "dependency_factor": 0.0,
        "security_factor": 6.0,
        "organization_factor": 10.0,
        "performance_factor": 4.0,
        "role_multiplier": 0.8,
        "final_score": 5.024
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 44 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=44, cog=145) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 22.0,
        "risk_reduction": 1.7919999999999998
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.3333333333333333,
        "propagated_from": [
          {
            "file": "./src/session/timing.rs",
            "name": "TimingTracker::start_iteration",
            "line": 30
          },
          {
            "file": "./src/session/timing.rs",
            "name": "TimingTracker::complete_iteration",
            "line": 35
          },
          {
            "file": "./src/cook/interaction/display.rs",
            "name": "ProgressDisplayImpl::format_duration",
            "line": 131
          },
          {
            "file": "./src/session/timing.rs",
            "name": "TimingTracker::complete_command",
            "line": 48
          },
          {
            "file": "./src/session/timing.rs",
            "name": "TimingTracker::start_command",
            "line": 42
          }
        ]
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 15,
      "upstream_callers": [],
      "downstream_callees": [
        "WorkflowExecutor::get_current_head",
        "WorkflowExecutor::should_continue_iterations",
        "TimingTracker::start_iteration",
        "TimingTracker::complete_iteration",
        "WorkflowExecutor::get_step_display_name",
        "WorkflowExecutor::execute_mapreduce",
        "GitDiff::is_empty",
        "WorkflowExecutor::should_stop_early_in_test_mode",
        "ProgressDisplayImpl::format_duration",
        "TimingTracker::complete_command",
        "WorkflowExecutor::execute_step",
        "CommandRegistry::clone",
        "WorkflowExecutor::is_focus_tracking_test",
        "WorkflowExecutor::handle_no_commits_error",
        "TimingTracker::start_command"
      ],
      "nesting_depth": 0,
      "function_length": 246,
      "cyclomatic_complexity": 44,
      "cognitive_complexity": 145
    },
    {
      "location": {
        "file": "./src/session/manager.rs",
        "function": "InMemorySessionManager::record_event",
        "line": 197
      },
      "debt_type": {
        "Orchestration": {
          "delegates_to": [
            "InMemorySessionManager::notify_observers",
            "InMemorySessionManager::apply_event"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.3,
        "coverage_factor": 0.0,
        "roi_factor": 5.752282309807516,
        "semantic_factor": 3.0,
        "dependency_factor": 8.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 0.2,
        "final_score": 5.024
      },
      "function_role": "Orchestrator",
      "recommendation": {
        "primary_action": "Refactor to pure functions or extract testable units",
        "rationale": "Orchestration function delegating to 2 functions",
        "implementation_steps": [
          "Extract logic into pure functions",
          "Compose smaller, testable functions",
          "Add unit tests for extracted functions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.05766141154903759
      },
      "transitive_coverage": null,
      "upstream_dependencies": 9,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "test_session_progress_tracking",
        "example_migration",
        "test_session_persistence_and_recovery",
        "tests::test_session_lifecycle",
        "InMemorySessionManager::start_session",
        "example_recovery",
        "test_session_state_machine",
        "InMemorySessionManager::complete_session",
        "test_concurrent_sessions"
      ],
      "downstream_callees": [
        "InMemorySessionManager::notify_observers",
        "InMemorySessionManager::apply_event"
      ],
      "nesting_depth": 0,
      "function_length": 15,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 8
    },
    {
      "location": {
        "file": "./src/git/scenario.rs",
        "function": "format_status_output",
        "line": 336
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Inefficient string processing: RepeatedFormatting"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.024
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/main.rs",
        "function": "display_worktree_session",
        "line": 215
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.023
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/dynamic_registry.rs",
        "function": "DynamicCommandRegistry::check_value_type",
        "line": 256
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.7622222222222224,
          "factors": [
            "Cognitive complexity: 10"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.2,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 1.4142135623730951,
        "role_multiplier": 1.5,
        "final_score": 5.022
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.8: Cognitive complexity: 10",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.41025
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "DynamicCommandRegistry::validate_json_value_type"
      ],
      "downstream_callees": [
        "SessionId::as_str"
      ],
      "nesting_depth": 0,
      "function_length": 17,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 10
    },
    {
      "location": {
        "file": "./src/testing/test_mocks.rs",
        "function": "TestMockSetup::setup_successful_analysis",
        "line": 180
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.764444444444445,
          "factors": [
            "Cognitive complexity: 11",
            "Long function (56 lines)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.8,
        "coverage_factor": 1.3636363636363635,
        "roi_factor": 3.934627748691099,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 3.3541019662496847,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.022
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.8: Cognitive complexity: 11, Long function (56 lines)",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.824590428827396
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.7272727272727273,
        "propagated_from": [
          {
            "file": "./src/subprocess/mock.rs",
            "name": "MockProcessRunner::expect_command",
            "line": 36
          },
          {
            "file": "./src/testing/test_mocks.rs",
            "name": "CargoMocks::check_success",
            "line": 13
          },
          {
            "file": "./src/subprocess/mock.rs",
            "name": "MockCommandConfig::finish",
            "line": 178
          },
          {
            "file": "./src/subprocess/mock.rs",
            "name": "MockCommandConfig::with_args",
            "line": 141
          },
          {
            "file": "./src/subprocess/mock.rs",
            "name": "MockCommandConfig::returns_exit_code",
            "line": 159
          },
          {
            "file": "./src/subprocess/mock.rs",
            "name": "MockCommandConfig::returns_stdout",
            "line": 149
          },
          {
            "file": "./src/testing/test_mocks.rs",
            "name": "CargoMocks::clippy_output",
            "line": 25
          },
          {
            "file": "./src/testing/test_mocks.rs",
            "name": "CargoMocks::build_success",
            "line": 31
          }
        ]
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 11,
      "upstream_callers": [],
      "downstream_callees": [
        "MockProcessRunner::expect_command",
        "CargoMocks::check_success",
        "GitMocks::status_clean",
        "MockCommandConfig::finish",
        "TarpaulinMocks::coverage_report_good",
        "CargoMocks::test_success",
        "MockCommandConfig::with_args",
        "MockCommandConfig::returns_exit_code",
        "MockCommandConfig::returns_stdout",
        "CargoMocks::clippy_output",
        "CargoMocks::build_success"
      ],
      "nesting_depth": 0,
      "function_length": 56,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 11
    },
    {
      "location": {
        "file": "./src/config/command_validator.rs",
        "function": "CommandRegistry::validate_argument_type",
        "line": 283
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 9,
          "cognitive": 18
        }
      },
      "unified_score": {
        "complexity_factor": 6.7,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 5.0,
        "organization_factor": 4.743416490252569,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.02
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 9 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=9, cog=18) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.5,
        "risk_reduction": 1.13776468286913
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "CommandRegistry::validate_command"
      ],
      "downstream_callees": [
        "CommandArg::parse",
        "GitDiff::is_empty"
      ],
      "nesting_depth": 0,
      "function_length": 34,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 18
    },
    {
      "location": {
        "file": "./src/worktree/manager.rs",
        "function": "WorktreeManager::list_sessions",
        "line": 259
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 11,
          "cognitive": 32
        }
      },
      "unified_score": {
        "complexity_factor": 8.3,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 8.0,
        "security_factor": 0.0,
        "organization_factor": 6.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.02
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 11 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=11, cog=32) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 5.5,
        "risk_reduction": 1.598625
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 8,
      "downstream_dependencies": 9,
      "upstream_callers": [
        "handle_merge_command",
        "WorktreeManager::cleanup_all_sessions",
        "WorktreeManager::detect_mergeable_sessions",
        "test_list_sessions_with_state",
        "WorktreeManager::merge_session",
        "handle_list_command",
        "WorktreeManager::get_worktree_for_branch",
        "test_list_sessions"
      ],
      "downstream_callees": [
        "CommandHandlerBuilder::build",
        "WorktreeSession::new",
        "ProcessCommandBuilder::new",
        "MockProcessRunner::run",
        "ExitStatusHelper::success",
        "ProcessCommandBuilder::args",
        "SubprocessManager::runner",
        "ProcessCommandBuilder::current_dir",
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 67,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 32
    },
    {
      "location": {
        "file": "./src/worktree/manager.rs",
        "function": "WorktreeManager::cleanup_session_after_merge",
        "line": 766
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 13,
          "cognitive": 23
        }
      },
      "unified_score": {
        "complexity_factor": 7.6,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 5.0,
        "security_factor": 0.0,
        "organization_factor": 1.5,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.02
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 13 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=13, cog=23) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 6.5,
        "risk_reduction": 1.20225
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 4,
      "downstream_dependencies": 11,
      "upstream_callers": [
        "handle_clean_command",
        "WorktreeManager::cleanup_merged_sessions",
        "WorktreeManager::merge_session",
        "tests::test_cleanup_session_after_merge_not_merged"
      ],
      "downstream_callees": [
        "MockProcessRunner::run",
        "ExitStatusHelper::success",
        "WorktreeManager::get_session_state",
        "GitDiff::is_empty",
        "SubprocessManager::runner",
        "ProcessCommandBuilder::current_dir",
        "CommandHandlerBuilder::build",
        "ProcessCommandBuilder::new",
        "MockFileSystem::exists",
        "WorktreeManager::cleanup_session",
        "ProcessCommandBuilder::args"
      ],
      "nesting_depth": 0,
      "function_length": 61,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 23
    },
    {
      "location": {
        "file": "./src/git/scenario.rs",
        "function": "format_status_output",
        "line": 343
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Inefficient string processing: RepeatedFormatting"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.019
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/execution/mapreduce.rs",
        "function": "MapReduceExecutor::merge_parent_to_main",
        "line": 1064
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 9,
          "cognitive": 24
        }
      },
      "unified_score": {
        "complexity_factor": 7.3,
        "coverage_factor": 1.7999999999999996,
        "roi_factor": 2.9001883239171367,
        "semantic_factor": 6.0,
        "dependency_factor": 2.0,
        "security_factor": 4.0,
        "organization_factor": 1.5,
        "performance_factor": 2.0,
        "role_multiplier": 0.8,
        "final_score": 5.018
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 9 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=9, cog=24) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.5,
        "risk_reduction": 0.9030131826741996
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.8,
        "propagated_from": [
          {
            "file": "./src/config/command.rs",
            "name": "Command::new",
            "line": 405
          },
          {
            "file": "./src/subprocess/builder.rs",
            "name": "ProcessCommandBuilder::args",
            "line": 31
          },
          {
            "file": "./src/subprocess/runner.rs",
            "name": "ExitStatusHelper::success",
            "line": 56
          },
          {
            "file": "./src/subprocess/builder.rs",
            "name": "ProcessCommandBuilder::current_dir",
            "line": 61
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 5,
      "upstream_callers": [
        "MapReduceExecutor::execute_reduce_phase"
      ],
      "downstream_callees": [
        "Command::new",
        "ProcessCommandBuilder::args",
        "ExitStatusHelper::success",
        "MapReduceExecutor::get_default_branch",
        "ProcessCommandBuilder::current_dir"
      ],
      "nesting_depth": 0,
      "function_length": 62,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 24
    },
    {
      "location": {
        "file": "./src/testing/helpers/mod.rs",
        "function": "dirs_equal",
        "line": 138
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: SyncInLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 5.018
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/dynamic_registry.rs",
        "function": "DynamicCommandRegistry::apply_definition_defaults",
        "line": 274
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.3022222222222224,
          "factors": [
            "Moderate complexity (cyclomatic: 7)",
            "Cognitive complexity: 10"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.1,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 8.0,
        "security_factor": 0.0,
        "organization_factor": 2.598076211353316,
        "performance_factor": 3.5,
        "role_multiplier": 1.5,
        "final_score": 5.017
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 7 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.3: Moderate complexity (cyclomatic: 7), Cognitive complexity: 10",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 7 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.6809711431702997
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 8,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "tests::test_apply_definition_defaults_all_metadata_unset",
        "tests::test_apply_definition_defaults_metadata_already_set",
        "tests::test_apply_definition_defaults_partial_metadata",
        "DynamicCommandRegistry::apply_defaults",
        "tests::test_apply_definition_defaults_no_defaults",
        "tests::test_apply_definition_defaults_options_already_set",
        "tests::test_apply_definition_defaults_mixed_options",
        "tests::test_apply_definition_defaults_options_with_defaults"
      ],
      "downstream_callees": [
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 24,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 10
    },
    {
      "location": {
        "file": "./src/cook/execution/data_pipeline.rs",
        "function": "JsonPath::select",
        "line": 275
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 15,
          "cognitive": 44
        }
      },
      "unified_score": {
        "complexity_factor": 9.9,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 9.6,
        "dependency_factor": 4.0,
        "security_factor": 0.0,
        "organization_factor": 8.616843969807043,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.017
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 15 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=15, cog=44) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 7.5,
        "risk_reduction": 1.5071921542074347
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 3,
      "downstream_dependencies": 4,
      "upstream_callers": [
        "DataPipeline::process",
        "tests::test_json_path_nested",
        "tests::test_json_path_basic"
      ],
      "downstream_callees": [
        "CommandRegistry::clone",
        "JsonPath::evaluate_filter",
        "JsonPath::recursive_descent",
        "CommandRegistry::get"
      ],
      "nesting_depth": 0,
      "function_length": 49,
      "cyclomatic_complexity": 15,
      "cognitive_complexity": 44
    },
    {
      "location": {
        "file": "./src/cook/execution/data_pipeline.rs",
        "function": "FilterExpression::evaluate",
        "line": 582
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 8,
          "cognitive": 22
        }
      },
      "unified_score": {
        "complexity_factor": 7.0,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 2.121320343559643,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.017
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 8 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=8, cog=22) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.0,
        "risk_reduction": 1.0138096590184404
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 2,
      "downstream_dependencies": 4,
      "upstream_callers": [
        "DataPipeline::process",
        "FilterExpression::evaluate"
      ],
      "downstream_callees": [
        "FilterExpression::evaluate",
        "CommandRegistry::get",
        "FilterExpression::compare",
        "FilterExpression::evaluate_function"
      ],
      "nesting_depth": 0,
      "function_length": 22,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 22
    },
    {
      "location": {
        "file": "./src/git/scenario.rs",
        "function": "format_status_output",
        "line": 325
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Inefficient string processing: RepeatedFormatting"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.017
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/subprocess/adapter.rs",
        "function": "RealSubprocessExecutor::execute",
        "line": 33
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.7755555555555558,
          "factors": [
            "Cognitive complexity: 10"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.6,
        "coverage_factor": 1.3333333333333335,
        "roi_factor": 5.818278481012658,
        "semantic_factor": 6.0,
        "dependency_factor": 0.0,
        "security_factor": 4.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 0.8,
        "final_score": 5.016
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.8: Cognitive complexity: 10",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.48793994153090403
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [
        "create_output",
        "MockProcessRunner::run",
        "ExitStatus::code"
      ],
      "nesting_depth": 0,
      "function_length": 31,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 10
    },
    {
      "location": {
        "file": "./src/cook/session/adapter.rs",
        "function": "SessionManagerAdapter::update_session",
        "line": 104
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 21,
          "cognitive": 72
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 10.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 9.6,
        "dependency_factor": 5.0,
        "security_factor": 0.0,
        "organization_factor": 10.0,
        "performance_factor": 4.0,
        "role_multiplier": 1.5,
        "final_score": 5.016
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 21 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=21, cog=72) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 10.5,
        "risk_reduction": 3.441375
      },
      "transitive_coverage": null,
      "upstream_dependencies": 4,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "tests::test_state_conversion",
        "tests::test_session_lifecycle",
        "tests::test_error_handling",
        "adapter_tests::test_complete_session_lifecycle"
      ],
      "downstream_callees": [
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 113,
      "cyclomatic_complexity": 21,
      "cognitive_complexity": 72
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::parse_variables_to_args",
        "line": 175
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Contains operation on Vec in performance-critical code"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.016
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/git/parsers.rs",
        "function": "parse_diff_output",
        "line": 146
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Inefficient string processing: InefficientParsing"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 13.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.016
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 3,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/testing/mocks/fs.rs",
        "function": "MockFileSystem::list_dir",
        "line": 105
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.951111111111111,
          "factors": [
            "Moderate complexity (cyclomatic: 8)",
            "Cognitive complexity: 14"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 6.2,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 4.0,
        "organization_factor": 2.121320343559643,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.015
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 8 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 3.0: Moderate complexity (cyclomatic: 8), Cognitive complexity: 14",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 8 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.5733198051533946
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "tests::test_mock_fs_list_dir"
      ],
      "downstream_callees": [
        "CommandRegistry::clone",
        "MockFileSystem::is_dir"
      ],
      "nesting_depth": 0,
      "function_length": 32,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 14
    },
    {
      "location": {
        "file": "./src/git/parsers.rs",
        "function": "parse_worktree_list",
        "line": 172
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.9711111111111115,
          "factors": [
            "Moderate complexity (cyclomatic: 6)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.2,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 9.6,
        "dependency_factor": 4.0,
        "security_factor": 3.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.015
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.0: Moderate complexity (cyclomatic: 6)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.5205000000000001
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 3,
      "downstream_dependencies": 4,
      "upstream_callers": [
        "GitScenarioMock::list_worktrees",
        "tests::test_parse_worktree_list",
        "GitCommandRunner::list_worktrees"
      ],
      "downstream_callees": [
        "GitDiff::is_empty",
        "finalize_worktree",
        "create_worktree_from_line",
        "update_worktree_info"
      ],
      "nesting_depth": 0,
      "function_length": 23,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 8
    },
    {
      "location": {
        "file": "./src/config/command_parser.rs",
        "function": "parse_command_string",
        "line": 50
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Contains operation on Vec in performance-critical code"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 20.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.015
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 11,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/dynamic_registry.rs",
        "function": "DynamicCommandRegistry::list_commands",
        "line": 304
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Contains operation on Vec in performance-critical code"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.015
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/execution/mapreduce.rs",
        "function": "MapReduceExecutor::determine_command_type",
        "line": 1198
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 23,
          "cognitive": 45
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 10.0,
        "roi_factor": 0.4946769456681351,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 6.0,
        "organization_factor": 1.5,
        "performance_factor": 4.0,
        "role_multiplier": 1.5,
        "final_score": 5.014
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 23 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=23, cog=45) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 11.5,
        "risk_reduction": 3.2018013491189428
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "MapReduceExecutor::execute_single_step"
      ],
      "downstream_callees": [
        "MapReduceExecutor::json_to_attribute_value",
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 64,
      "cyclomatic_complexity": 23,
      "cognitive_complexity": 45
    },
    {
      "location": {
        "file": "./src/cook/execution/data_pipeline.rs",
        "function": "JsonPath::evaluate_filter",
        "line": 346
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 32,
          "cognitive": 68
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 8.746427842267952,
        "performance_factor": 4.0,
        "role_multiplier": 1.5,
        "final_score": 5.013
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 32 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=32, cog=68) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 16.0,
        "risk_reduction": 1.371468730859534
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 1.0,
        "propagated_from": [
          {
            "file": "./src/config/command.rs",
            "name": "CommandArg::parse",
            "line": 68
          },
          {
            "file": "./src/config/command_validator.rs",
            "name": "CommandRegistry::get",
            "line": 222
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "JsonPath::select"
      ],
      "downstream_callees": [
        "CommandArg::parse",
        "CommandRegistry::get"
      ],
      "nesting_depth": 0,
      "function_length": 83,
      "cyclomatic_complexity": 32,
      "cognitive_complexity": 68
    },
    {
      "location": {
        "file": "./src/cook/execution/interpolation.rs",
        "function": "InterpolationEngine::interpolate",
        "line": 43
      },
      "debt_type": {
        "Risk": {
          "risk_score": 3.393333333333333,
          "factors": [
            "Moderate complexity (cyclomatic: 9)",
            "Cognitive complexity: 15"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 6.4,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 6.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.013
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions (complexity 9 → 3), then add 9 comprehensive tests",
        "rationale": "Risk score 3.4: Moderate complexity (cyclomatic: 9), Cognitive complexity: 15",
        "implementation_steps": [
          "Identify 3 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 9 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 9 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.8504999999999999
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 20,
      "downstream_dependencies": 4,
      "upstream_callers": [
        "tests::test_context_inheritance",
        "test_interpolation_with_map_results",
        "tests::test_complex_json_interpolation",
        "MapReduceExecutor::interpolate_workflow_step",
        "tests::test_array_indexing",
        "WorkflowExecutor::execute_handler_command",
        "WorkflowExecutor::execute_shell_with_retry",
        "tests::test_basic_interpolation",
        "WorkflowExecutor::execute_test_command",
        "test_interpolation_strict_mode",
        "test_interpolation_with_work_item",
        "tests::test_default_values",
        "tests::test_undefined_variable_non_strict",
        "test_interpolation_with_shell_output",
        "WorkflowExecutor::execute_step",
        "test_interpolation_with_defaults",
        "tests::test_undefined_variable_strict_mode",
        "tests::test_nested_property_access",
        "test_interpolation_context_hierarchy",
        "test_interpolation_with_arrays"
      ],
      "downstream_callees": [
        "InterpolationEngine::parse_template",
        "CommandRegistry::clone",
        "value_to_string",
        "InterpolationEngine::resolve_variable"
      ],
      "nesting_depth": 0,
      "function_length": 43,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 15
    },
    {
      "location": {
        "file": "./src/config/dynamic_registry.rs",
        "function": "DynamicCommandRegistry::apply_definition_defaults",
        "line": 290
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: SyncInLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 18.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.013
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 8,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/git_ops.rs",
        "function": "create_temp_git_repo",
        "line": 182
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.3422222222222224,
          "factors": [
            "Cognitive complexity: 13"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.4,
        "coverage_factor": 5.0,
        "roi_factor": 4.203860238568588,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.012
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.3: Cognitive complexity: 13",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.2032895178926442
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 26,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 13
    },
    {
      "location": {
        "file": "./src/abstractions/claude.rs",
        "function": "RealClaudeClient::check_availability",
        "line": 436
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.362222222222222,
          "factors": [
            "Cognitive complexity: 13"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.4,
        "coverage_factor": 1.666666666666667,
        "roi_factor": 3.510217642384106,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 4.242640687119286,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.012
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.4: Cognitive complexity: 13",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.8649059334855974
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 9,
      "upstream_callers": [],
      "downstream_callees": [
        "ProcessCommandBuilder::arg",
        "SubprocessManager::claude",
        "ClaudeRunnerImpl::check_availability",
        "CommandHandlerBuilder::build",
        "ProcessCommandBuilder::new",
        "MockProcessRunner::run",
        "GitDiff::is_empty",
        "SubprocessManager::runner",
        "ExitStatusHelper::success"
      ],
      "nesting_depth": 0,
      "function_length": 27,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 13
    },
    {
      "location": {
        "file": "./src/git/mod.rs",
        "function": "GitCommandRunner::commit",
        "line": 254
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.0933333333333333,
          "factors": [
            "Cognitive complexity: 12"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.1,
        "coverage_factor": 0.0,
        "roi_factor": 5.8159783132530105,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.012
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.1: Cognitive complexity: 12",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.875698373493976
      },
      "transitive_coverage": null,
      "upstream_dependencies": 2,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "tests::test_commit_success",
        "tests::test_commit_nothing_to_commit"
      ],
      "downstream_callees": [
        "GitCommandRunner::run_git_command",
        "ExitStatusHelper::success",
        "CommitId::new"
      ],
      "nesting_depth": 0,
      "function_length": 18,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 12
    },
    {
      "location": {
        "file": "./src/config/command.rs",
        "function": "WorkflowStepCommand::deserialize",
        "line": 277
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.46,
          "factors": [
            "Long function (63 lines)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.3,
        "coverage_factor": 5.0,
        "roi_factor": 5.067566101694915,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 3.0,
        "organization_factor": 1.5,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.01
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Address identified risk factors",
        "rationale": "Risk score 2.5: Long function (63 lines)",
        "implementation_steps": [
          "Review and refactor problematic areas",
          "Add missing tests if coverage is low",
          "Update documentation"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.2410674576271188
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 63,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 6
    },
    {
      "location": {
        "file": "./src/git/types.rs",
        "function": "GitStatus::is_clean",
        "line": 45
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.4244444444444446,
          "factors": [
            "Moderate complexity (cyclomatic: 6)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.3,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 9.6,
        "dependency_factor": 5.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.01
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 1.4: Moderate complexity (cyclomatic: 6)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.46499999999999997
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 4,
      "downstream_dependencies": 0,
      "upstream_callers": [
        "GitScenarioMock::default_response",
        "tests::test_is_clean",
        "GitCommandRunner::is_clean",
        "GitScenarioMock::is_clean"
      ],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 9,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5
    },
    {
      "location": {
        "file": "./src/config/command_discovery.rs",
        "function": "CommandDiscovery::scan_commands::<closure@2>",
        "line": 72
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "Clone allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.01
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/loader.rs",
        "function": "ConfigLoader::load_with_explicit_path",
        "line": 31
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 5,
          "cognitive": 16
        }
      },
      "unified_score": {
        "complexity_factor": 6.1,
        "coverage_factor": 0.0,
        "roi_factor": 0.45000000000000007,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 2.598076211353316,
        "performance_factor": 2.8284271247461903,
        "role_multiplier": 1.5,
        "final_score": 5.009
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 5 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=5, cog=16) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 2.5,
        "risk_reduction": 0.8176370005480244
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 2,
      "upstream_callers": [],
      "downstream_callees": [
        "ConfigLoader::load_from_path",
        "MockFileSystem::exists"
      ],
      "nesting_depth": 0,
      "function_length": 25,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 16
    },
    {
      "location": {
        "file": "./src/testing/mocks/session.rs",
        "function": "MockSessionManager::update_session",
        "line": 80
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.011111111111111,
          "factors": [
            "Moderate complexity (cyclomatic: 6)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.2,
        "coverage_factor": 2.0,
        "roi_factor": 5.6993377483443695,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.009
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.0: Moderate complexity (cyclomatic: 6)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.9464503311258277
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [
        "SessionState::add_files_changed",
        "SessionState::increment_iteration",
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 25,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 8
    },
    {
      "location": {
        "file": "./src/commands/handlers/file.rs",
        "function": "FileHandler::execute",
        "line": 52
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 34,
          "cognitive": 170
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 6.666666666666668,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 7.199999999999999,
        "dependency_factor": 4.0,
        "security_factor": 6.0,
        "organization_factor": 10.0,
        "performance_factor": 4.0,
        "role_multiplier": 0.8,
        "final_score": 5.009
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 34 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=34, cog=170) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 17.0,
        "risk_reduction": 1.5702645229395795
      },
      "transitive_coverage": null,
      "upstream_dependencies": 3,
      "downstream_dependencies": 12,
      "upstream_callers": [
        "tests::test_file_dry_run",
        "tests::test_file_write_and_read",
        "tests::test_file_exists"
      ],
      "downstream_callees": [
        "CommandResult::success",
        "MockFileSystem::exists",
        "DynamicCommandRegistry::apply_defaults",
        "AttributeValue::as_bool",
        "FileHandler::schema",
        "AttributeValue::as_string",
        "CommandRegistry::get",
        "CommandResult::with_duration",
        "SessionId::as_str",
        "CommandResult::error",
        "ExecutionContext::resolve_path",
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 229,
      "cyclomatic_complexity": 34,
      "cognitive_complexity": 170
    },
    {
      "location": {
        "file": "./src/git/parsers.rs",
        "function": "parse_status_line",
        "line": 56
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 10,
          "cognitive": 17
        }
      },
      "unified_score": {
        "complexity_factor": 6.7,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 3.0,
        "organization_factor": 2.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.009
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 10 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=10, cog=17) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 5.0,
        "risk_reduction": 1.059653882515367
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [
        "parse_status_line_entry"
      ],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 44,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 17
    },
    {
      "location": {
        "file": "./src/config/loader.rs",
        "function": "ConfigLoader::load_from_path::<closure@4>",
        "line": 85
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.008
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/worktree/manager.rs",
        "function": "WorktreeManager::update_session_state",
        "line": 222
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.8622222222222227,
          "factors": [
            "Moderate complexity (cyclomatic: 6)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.9,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 9.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.007
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 1.9: Moderate complexity (cyclomatic: 6)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.618
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 12,
      "downstream_dependencies": 0,
      "upstream_callers": [
        "WorktreeManager::update_checkpoint",
        "test_list_sessions_with_state",
        "test_list_interrupted_sessions_with_mixed_states",
        "test_state_updates",
        "test_state_error_handling",
        "test_merge_updates_state",
        "update_interrupted_state",
        "WorktreeManager::mark_session_abandoned",
        "test_list_interrupted_sessions_none_interrupted",
        "test_list_interrupted_sessions_all_interrupted",
        "WorktreeManager::merge_session",
        "WorktreeManager::create_checkpoint"
      ],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 22,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 7
    },
    {
      "location": {
        "file": "./src/cook/execution/data_pipeline.rs",
        "function": "FilterExpression::parse",
        "line": 452
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 23,
          "cognitive": 42
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 9.6,
        "dependency_factor": 6.0,
        "security_factor": 5.0,
        "organization_factor": 4.743416490252569,
        "performance_factor": 4.0,
        "role_multiplier": 1.5,
        "final_score": 5.007
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 23 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=23, cog=42) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 11.5,
        "risk_reduction": 1.6496396828691295
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 5,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "FilterExpression::parse",
        "tests::test_filter_logical",
        "DataPipeline::from_config",
        "tests::test_filter_in_operator",
        "tests::test_filter_comparison"
      ],
      "downstream_callees": [
        "FilterExpression::parse_value",
        "FilterExpression::parse",
        "GitDiff::is_empty"
      ],
      "nesting_depth": 0,
      "function_length": 93,
      "cyclomatic_complexity": 23,
      "cognitive_complexity": 42
    },
    {
      "location": {
        "file": "./src/cook/interaction/prompts.rs",
        "function": "MockPrompter::prompt_choice",
        "line": 167
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.6822222222222225,
          "factors": [
            "Moderate complexity (cyclomatic: 6)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.9,
        "coverage_factor": 0.0,
        "roi_factor": 6.911627906976744,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 2.121320343559643,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.007
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 1.7: Moderate complexity (cyclomatic: 6)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.9056918981766504
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "tests::test_mock_prompter_choice"
      ],
      "downstream_callees": [
        "CommandArg::parse"
      ],
      "nesting_depth": 0,
      "function_length": 13,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 7
    },
    {
      "location": {
        "file": "./src/scoring/mod.rs",
        "function": "format_component",
        "line": 329
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.851111111111111,
          "factors": [
            "Moderate complexity (cyclomatic: 10)",
            "Cognitive complexity: 11"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 6.1,
        "coverage_factor": 10.0,
        "roi_factor": 4.011631885049606,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.007
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions (complexity 10 → 3), then add 9 comprehensive tests",
        "rationale": "Risk score 2.9: Moderate complexity (cyclomatic: 10), Cognitive complexity: 11",
        "implementation_steps": [
          "Identify 3 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 9 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 10 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.745372391378721
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.0,
        "propagated_from": []
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 27,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 11
    },
    {
      "location": {
        "file": "./src/main.rs",
        "function": "handle_list_command",
        "line": 253
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.9888888888888892,
          "factors": [
            "Moderate complexity (cyclomatic: 6)",
            "Cognitive complexity: 10"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.8,
        "coverage_factor": 4.0,
        "roi_factor": 6.255999999999999,
        "semantic_factor": 10.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 0.8,
        "final_score": 5.007
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.0: Moderate complexity (cyclomatic: 6), Cognitive complexity: 10",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.7014400000000002
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.3333333333333333,
        "propagated_from": [
          {
            "file": "./src/worktree/manager.rs",
            "name": "WorktreeManager::list_sessions",
            "line": 259
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "run_worktree_command"
      ],
      "downstream_callees": [
        "display_worktree_session",
        "WorktreeManager::list_sessions",
        "GitDiff::is_empty"
      ],
      "nesting_depth": 0,
      "function_length": 15,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 10
    },
    {
      "location": {
        "file": "./src/simple_state/cache.rs",
        "function": "CacheManager::remove",
        "line": 77
      },
      "debt_type": {
        "Orchestration": {
          "delegates_to": [
            "MockFileSystem::exists",
            "CacheManager::cache_path"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 1.7999999999999998,
        "coverage_factor": 0.0,
        "roi_factor": 8.568654450261779,
        "semantic_factor": 2.4,
        "dependency_factor": 5.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 0.2,
        "final_score": 5.007
      },
      "function_role": "Orchestrator",
      "recommendation": {
        "primary_action": "Refactor to pure functions or extract testable units",
        "rationale": "Orchestration function delegating to 2 functions",
        "implementation_steps": [
          "Extract logic into pure functions",
          "Compose smaller, testable functions",
          "Add unit tests for extracted functions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.0606432722513089
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 1.0,
        "propagated_from": [
          {
            "file": "./src/testing/mocks/fs.rs",
            "name": "MockFileSystem::exists",
            "line": 88
          },
          {
            "file": "./src/simple_state/cache.rs",
            "name": "CacheManager::cache_path",
            "line": 121
          }
        ]
      },
      "upstream_dependencies": 4,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "MockGitOperations::git_command",
        "MockClaudeClient::execute_command",
        "InMemoryStorage::delete",
        "MockSubprocessExecutor::execute"
      ],
      "downstream_callees": [
        "MockFileSystem::exists",
        "CacheManager::cache_path"
      ],
      "nesting_depth": 0,
      "function_length": 8,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 3
    },
    {
      "location": {
        "file": "./src/cook/interaction/prompts.rs",
        "function": "UserPrompterImpl::prompt_choice",
        "line": 107
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.0933333333333333,
          "factors": [
            "Moderate complexity (cyclomatic: 7)",
            "Cognitive complexity: 9"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.8,
        "coverage_factor": 4.666666666666667,
        "roi_factor": 7.0331221719457,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.006
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 7 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.1: Moderate complexity (cyclomatic: 7), Cognitive complexity: 9",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 7 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.4134841628959276
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "tests::test_prompt_choice_empty_choices"
      ],
      "downstream_callees": [
        "UserPrompterImpl::validate_choice_input",
        "GitDiff::is_empty",
        "UserPrompterImpl::read_line"
      ],
      "nesting_depth": 0,
      "function_length": 18,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 9
    },
    {
      "location": {
        "file": "./src/main.rs",
        "function": "run_worktree_command",
        "line": 395
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 5,
          "cognitive": 16
        }
      },
      "unified_score": {
        "complexity_factor": 6.1,
        "coverage_factor": 3.0,
        "roi_factor": 5.15840888418826,
        "semantic_factor": 10.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 2.0,
        "performance_factor": 2.0,
        "role_multiplier": 0.8,
        "final_score": 5.006
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 5 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=5, cog=16) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 2.5,
        "risk_reduction": 1.1352886218931784
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.4,
        "propagated_from": [
          {
            "file": "./src/worktree/manager.rs",
            "name": "WorktreeManager::new",
            "line": 102
          },
          {
            "file": "./src/subprocess/mod.rs",
            "name": "SubprocessManager::production",
            "line": 119
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 5,
      "upstream_callers": [
        "main"
      ],
      "downstream_callees": [
        "handle_list_command",
        "handle_clean_command",
        "handle_merge_command",
        "WorktreeManager::new",
        "SubprocessManager::production"
      ],
      "nesting_depth": 0,
      "function_length": 20,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 16
    },
    {
      "location": {
        "file": "./src/init/mod.rs",
        "function": "handle_existing_commands",
        "line": 160
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 13.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.006
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 3,
      "downstream_dependencies": 4,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/execution/claude.rs",
        "function": "ClaudeExecutorImpl::execute_claude_command",
        "line": 55
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.3066666666666666,
          "factors": [
            "Cognitive complexity: 12"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.5,
        "coverage_factor": 3.0,
        "roi_factor": 5.018452301534356,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 4.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.005
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.3: Cognitive complexity: 12",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.1638839226150768
      },
      "transitive_coverage": null,
      "upstream_dependencies": 2,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "tests::test_claude_command_execution",
        "ClaudeExecutorImpl::execute"
      ],
      "downstream_callees": [
        "ExecutionContext::default",
        "ClaudeExecutorImpl::handle_test_mode_execution"
      ],
      "nesting_depth": 0,
      "function_length": 42,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 12
    },
    {
      "location": {
        "file": "./src/git/parsers.rs",
        "function": "parse_status_line_entry",
        "line": 22
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.8644444444444443,
          "factors": [
            "Moderate complexity (cyclomatic: 7)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.5,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 3.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.005
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 7 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 1.9: Moderate complexity (cyclomatic: 7)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 7 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.45
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 5,
      "upstream_callers": [
        "parse_status_output"
      ],
      "downstream_callees": [
        "parse_header_line",
        "parse_renamed_line",
        "parse_untracked_line",
        "parse_unmerged_line",
        "parse_status_line"
      ],
      "nesting_depth": 0,
      "function_length": 11,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 8
    },
    {
      "location": {
        "file": "./src/session/storage.rs",
        "function": "FileSessionStorage::save",
        "line": 44
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.5533333333333335,
          "factors": [
            "Cognitive complexity: 9"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.9,
        "coverage_factor": 0.0,
        "roi_factor": 7.205099985945186,
        "semantic_factor": 1.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 0.1,
        "final_score": 5.004
      },
      "function_role": "IOWrapper",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.6: Cognitive complexity: 9",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.05472549992972592
      },
      "transitive_coverage": null,
      "upstream_dependencies": 2,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "test_storage_operations",
        "tests::test_file_storage"
      ],
      "downstream_callees": [
        "FileSessionStorage::session_path"
      ],
      "nesting_depth": 0,
      "function_length": 11,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 9
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::parse_options",
        "line": 211
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Contains operation on Vec in performance-critical code"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.004
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/testing/test_mocks.rs",
        "function": "TestMockSetup::setup_metrics_collection",
        "line": 264
      },
      "debt_type": {
        "Risk": {
          "risk_score": 3.328888888888889,
          "factors": [
            "Moderate complexity (cyclomatic: 7)",
            "Cognitive complexity: 13",
            "Long function (62 lines)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 6.0,
        "coverage_factor": 0.0,
        "roi_factor": 0.20999999999999996,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 3.3541019662496847,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.003
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 7 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 3.3: Moderate complexity (cyclomatic: 7), Cognitive complexity: 13, Long function (62 lines)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 7 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.4560615294937453
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 9,
      "upstream_callers": [],
      "downstream_callees": [
        "MockCommandConfig::returns_stderr",
        "CargoMocks::build_success",
        "MockCommandConfig::returns_exit_code",
        "CargoMocks::clippy_output",
        "CargoMocks::check_success",
        "MockCommandConfig::with_args",
        "MockCommandConfig::returns_stdout",
        "MockCommandConfig::finish",
        "MockProcessRunner::expect_command"
      ],
      "nesting_depth": 0,
      "function_length": 62,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 13
    },
    {
      "location": {
        "file": "./src/cook/execution/claude.rs",
        "function": "ClaudeExecutorImpl::check_claude_cli",
        "line": 98
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.6977777777777778,
          "factors": [
            "Cognitive complexity: 11"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.2,
        "coverage_factor": 1.5,
        "roi_factor": 6.108743137821439,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 4.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.003
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.7: Cognitive complexity: 11",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.044655735336608
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "tests::test_claude_executor_check"
      ],
      "downstream_callees": [
        "ExitStatusHelper::success",
        "run_command"
      ],
      "nesting_depth": 0,
      "function_length": 16,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 11
    },
    {
      "location": {
        "file": "./src/cook/execution/data_pipeline.rs",
        "function": "JsonPath::recursive_descent",
        "line": 325
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.0000000000000004,
          "factors": [
            "Moderate complexity (cyclomatic: 6)",
            "Cognitive complexity: 9"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.5,
        "coverage_factor": 4.0,
        "roi_factor": 5.0667734187349875,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 2.121320343559643,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.003
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.0: Moderate complexity (cyclomatic: 6), Cognitive complexity: 9",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.2443278115585188
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.3333333333333333,
        "propagated_from": [
          {
            "file": "./src/config/command_validator.rs",
            "name": "CommandRegistry::get",
            "line": 222
          }
        ]
      },
      "upstream_dependencies": 2,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "JsonPath::select",
        "JsonPath::recursive_descent"
      ],
      "downstream_callees": [
        "CommandRegistry::clone",
        "JsonPath::recursive_descent",
        "CommandRegistry::get"
      ],
      "nesting_depth": 0,
      "function_length": 20,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 9
    },
    {
      "location": {
        "file": "./src/cook/workflow/executor.rs",
        "function": "WorkflowExecutor::execute_shell_with_retry",
        "line": 891
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 17,
          "cognitive": 45
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 10.0,
        "roi_factor": 0.6833757909442024,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 6.0,
        "organization_factor": 10.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.003
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 17 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=17, cog=45) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 8.5,
        "risk_reduction": 3.482505572561427
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.2,
        "propagated_from": [
          {
            "file": "./src/cook/execution/interpolation.rs",
            "name": "InterpolationEngine::interpolate",
            "line": 43
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 5,
      "upstream_callers": [
        "WorkflowExecutor::execute_step"
      ],
      "downstream_callees": [
        "WorkflowExecutor::execute_claude_command",
        "InterpolationEngine::interpolate",
        "WorkflowExecutor::execute_shell_command",
        "DirGuard::drop",
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 128,
      "cyclomatic_complexity": 17,
      "cognitive_complexity": 45
    },
    {
      "location": {
        "file": "./src/config/command_parser.rs",
        "function": "parse_command_string",
        "line": 42
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "StringConcatenation allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 20.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.003
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 11,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/command_validator.rs",
        "function": "CommandRegistry::apply_defaults",
        "line": 387
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: SyncInLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.003
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/mod.rs",
        "function": "cook",
        "line": 35
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 20,
          "cognitive": 45
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 2.121320343559643,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 5.002
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 20 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=20, cog=45) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 10.0,
        "risk_reduction": 1.3025596590184405
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 2,
      "downstream_dependencies": 9,
      "upstream_callers": [
        "run_improvement_loop",
        "main"
      ],
      "downstream_callees": [
        "load_workflow_with_mapreduce",
        "MockProcessRunner::run",
        "MockFileSystem::exists",
        "create_orchestrator",
        "MockConfigLoader::load_with_explicit_path",
        "ConfigLoader::new",
        "CommandRegistry::clone",
        "MockConfigLoader::get_config",
        "MockFileSystem::is_dir"
      ],
      "nesting_depth": 0,
      "function_length": 87,
      "cyclomatic_complexity": 20,
      "cognitive_complexity": 45
    },
    {
      "location": {
        "file": "./src/cook/interaction/prompts.rs",
        "function": "UserPrompterImpl::prompt_text",
        "line": 90
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.6977777777777778,
          "factors": [
            "Moderate complexity (cyclomatic: 7)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.6,
        "coverage_factor": 7.0,
        "roi_factor": 6.6337182448036955,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 5.002
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 7 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 1.7: Moderate complexity (cyclomatic: 7)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 7 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.5745288683602774
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "DefaultUserInteraction::prompt_text"
      ],
      "downstream_callees": [
        "UserPrompterImpl::read_line",
        "GitDiff::is_empty"
      ],
      "nesting_depth": 0,
      "function_length": 16,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 5
    },
    {
      "location": {
        "file": "./src/config/command_discovery.rs",
        "function": "CommandDiscovery::scan_commands::<closure@2>",
        "line": 84
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "StringConcatenation allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 5.002
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/mod.rs",
        "function": "Config::merge_env_vars",
        "line": 111
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.197777777777778,
          "factors": [
            "Moderate complexity (cyclomatic: 8)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.8,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 9.6,
        "dependency_factor": 5.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 4.999
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 8 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.2: Moderate complexity (cyclomatic: 8)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 8 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.6163525491562422
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 4,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "tests::test_merge_env_vars",
        "tests::test_get_claude_api_key_config_precedence_over_env",
        "tests::test_get_claude_api_key_from_env",
        "tests::test_merge_env_vars_editor_fallback"
      ],
      "downstream_callees": [
        "CommandArg::parse"
      ],
      "nesting_depth": 0,
      "function_length": 21,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 8
    },
    {
      "location": {
        "file": "./src/worktree/manager.rs",
        "function": "WorktreeManager::cleanup_session",
        "line": 508
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 8,
          "cognitive": 22
        }
      },
      "unified_score": {
        "complexity_factor": 7.0,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 1.5,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.999
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 8 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=8, cog=22) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.0,
        "risk_reduction": 1.0303124999999997
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 2,
      "downstream_dependencies": 7,
      "upstream_callers": [
        "WorktreeManager::cleanup_session_after_merge",
        "WorktreeManager::cleanup_all_sessions"
      ],
      "downstream_callees": [
        "MockProcessRunner::run",
        "CommandHandlerBuilder::build",
        "ProcessCommandBuilder::args",
        "ProcessCommandBuilder::current_dir",
        "ExitStatusHelper::success",
        "ProcessCommandBuilder::new",
        "SubprocessManager::runner"
      ],
      "nesting_depth": 0,
      "function_length": 74,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 22
    },
    {
      "location": {
        "file": "./src/cook/execution/mapreduce.rs",
        "function": "MapReduceExecutor::get_modified_files",
        "line": 840
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.5800000000000003,
          "factors": [
            "Cognitive complexity: 9"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.6,
        "coverage_factor": 0.0,
        "roi_factor": 5.471767578125,
        "semantic_factor": 1.0,
        "dependency_factor": 2.0,
        "security_factor": 4.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 0.1,
        "final_score": 4.999
      },
      "function_role": "IOWrapper",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.6: Cognitive complexity: 9",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.047158837890625006
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 1.0,
        "propagated_from": [
          {
            "file": "./src/config/command.rs",
            "name": "Command::new",
            "line": 405
          },
          {
            "file": "./src/subprocess/builder.rs",
            "name": "ProcessCommandBuilder::args",
            "line": 31
          },
          {
            "file": "./src/subprocess/runner.rs",
            "name": "ExitStatusHelper::success",
            "line": 56
          },
          {
            "file": "./src/subprocess/builder.rs",
            "name": "ProcessCommandBuilder::current_dir",
            "line": 61
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 4,
      "upstream_callers": [
        "MapReduceExecutor::execute_agent_commands"
      ],
      "downstream_callees": [
        "Command::new",
        "ProcessCommandBuilder::args",
        "ExitStatusHelper::success",
        "ProcessCommandBuilder::current_dir"
      ],
      "nesting_depth": 0,
      "function_length": 19,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 9
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::parse_options",
        "line": 204
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "StringConcatenation allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.999
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::parse_variables_to_args",
        "line": 176
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Contains operation on Vec in performance-critical code"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.999
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::extract_section",
        "line": 137
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.317777777777778,
          "factors": [
            "Moderate complexity (cyclomatic: 6)",
            "Cognitive complexity: 11"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.1,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 3.0,
        "organization_factor": 2.121320343559643,
        "performance_factor": 2.121320343559643,
        "role_multiplier": 1.5,
        "final_score": 4.998
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.3: Moderate complexity (cyclomatic: 6), Cognitive complexity: 11",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.5388198051533947
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 2,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "MetadataParser::extract_options_section",
        "MetadataParser::extract_variables_section"
      ],
      "downstream_callees": [
        "GitDiff::is_empty"
      ],
      "nesting_depth": 0,
      "function_length": 27,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 11
    },
    {
      "location": {
        "file": "./src/main.rs",
        "function": "handle_clean_command",
        "line": 324
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 22,
          "cognitive": 70
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 10.0,
        "roi_factor": 0.46657240961421936,
        "semantic_factor": 10.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 1.5,
        "performance_factor": 4.242640687119286,
        "role_multiplier": 0.8,
        "final_score": 4.998
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 22 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=22, cog=70) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 11.0,
        "risk_reduction": 1.6496600686729954
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.42857142857142855,
        "propagated_from": [
          {
            "file": "./src/worktree/manager.rs",
            "name": "WorktreeManager::get_session_state",
            "line": 245
          },
          {
            "file": "./src/worktree/manager.rs",
            "name": "WorktreeManager::detect_mergeable_sessions",
            "line": 690
          },
          {
            "file": "./src/worktree/manager.rs",
            "name": "WorktreeManager::cleanup_session_after_merge",
            "line": 766
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 7,
      "upstream_callers": [
        "run_worktree_command"
      ],
      "downstream_callees": [
        "WorktreeManager::get_session_state",
        "MockWorktreeManager::cleanup_session",
        "WorktreeManager::cleanup_all_sessions",
        "WorktreeManager::detect_mergeable_sessions",
        "GitDiff::is_empty",
        "WorktreeManager::cleanup_merged_sessions",
        "WorktreeManager::cleanup_session_after_merge"
      ],
      "nesting_depth": 0,
      "function_length": 71,
      "cyclomatic_complexity": 22,
      "cognitive_complexity": 70
    },
    {
      "location": {
        "file": "./src/simple_state/cache.rs",
        "function": "CacheManager::cleanup",
        "line": 97
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 8,
          "cognitive": 19
        }
      },
      "unified_score": {
        "complexity_factor": 6.7,
        "coverage_factor": 8.0,
        "roi_factor": 4.285672822261727,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 3.968626966596886,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.998
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 8 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=8, cog=19) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.0,
        "risk_reduction": 2.9439018395680705
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.0,
        "propagated_from": []
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 23,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 19
    },
    {
      "location": {
        "file": "./src/session/manager.rs",
        "function": "InMemorySessionManager::get_state",
        "line": 213
      },
      "debt_type": {
        "Orchestration": {
          "delegates_to": [
            "CommandRegistry::clone",
            "CommandRegistry::get"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 2.4,
        "coverage_factor": 1.0,
        "roi_factor": 7.159,
        "semantic_factor": 2.4,
        "dependency_factor": 4.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 0.2,
        "final_score": 4.998
      },
      "function_role": "Orchestrator",
      "recommendation": {
        "primary_action": "Refactor to pure functions or extract testable units",
        "rationale": "Orchestration function delegating to 2 functions",
        "implementation_steps": [
          "Extract logic into pure functions",
          "Compose smaller, testable functions",
          "Add unit tests for extracted functions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.060395000000000004
      },
      "transitive_coverage": null,
      "upstream_dependencies": 3,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "test_session_state_machine",
        "test_session_persistence_and_recovery",
        "tests::test_session_lifecycle"
      ],
      "downstream_callees": [
        "CommandRegistry::clone",
        "CommandRegistry::get"
      ],
      "nesting_depth": 0,
      "function_length": 7,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 6
    },
    {
      "location": {
        "file": "./src/session/timing.rs",
        "function": "format_duration",
        "line": 86
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.8355555555555556,
          "factors": [
            "Moderate complexity (cyclomatic: 9)",
            "Cognitive complexity: 13"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 6.2,
        "coverage_factor": 0.0,
        "roi_factor": 0.20999999999999996,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.997
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions (complexity 9 → 3), then add 9 comprehensive tests",
        "rationale": "Risk score 2.8: Moderate complexity (cyclomatic: 9), Cognitive complexity: 13",
        "implementation_steps": [
          "Identify 3 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 9 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 9 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.41474999999999995
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 24,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 13
    },
    {
      "location": {
        "file": "./src/cook/workflow/executor.rs",
        "function": "WorkflowExecutor::determine_command_type",
        "line": 271
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 23,
          "cognitive": 45
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 10.0,
        "roi_factor": 0.811208535164633,
        "semantic_factor": 10.0,
        "dependency_factor": 8.0,
        "security_factor": 6.0,
        "organization_factor": 1.5,
        "performance_factor": 4.0,
        "role_multiplier": 1.5,
        "final_score": 4.996
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 23 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=23, cog=45) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 11.5,
        "risk_reduction": 3.5
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.0,
        "propagated_from": []
      },
      "upstream_dependencies": 8,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "disabled_tests::test_determine_command_type_test",
        "disabled_tests::test_determine_command_type_claude",
        "disabled_tests::test_determine_command_type_legacy_name",
        "WorkflowExecutor::execute_step",
        "disabled_tests::test_determine_command_type_shell",
        "disabled_tests::test_determine_command_type_multiple_error",
        "WorkflowExecutor::handle_no_commits_error",
        "disabled_tests::test_determine_command_type_none_error"
      ],
      "downstream_callees": [
        "CommandRegistry::clone",
        "WorkflowExecutor::json_to_attribute_value"
      ],
      "nesting_depth": 0,
      "function_length": 64,
      "cyclomatic_complexity": 23,
      "cognitive_complexity": 45
    },
    {
      "location": {
        "file": "./src/abstractions/claude.rs",
        "function": "MockClaudeClient::execute_command",
        "line": 615
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.6844444444444444,
          "factors": [
            "Cognitive complexity: 11"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.9,
        "coverage_factor": 2.0,
        "roi_factor": 8.081683915102614,
        "semantic_factor": 9.6,
        "dependency_factor": 6.0,
        "security_factor": 4.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.996
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.7: Cognitive complexity: 11",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.3756262936326962
      },
      "transitive_coverage": null,
      "upstream_dependencies": 5,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "MockClaudeClient::code_review",
        "tests::test_add_success_response",
        "MockClaudeClient::lint",
        "tests::test_add_error_response",
        "MockClaudeClient::implement_spec"
      ],
      "downstream_callees": [
        "CacheManager::remove",
        "GitDiff::is_empty"
      ],
      "nesting_depth": 0,
      "function_length": 22,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 11
    },
    {
      "location": {
        "file": "./src/cook/orchestrator.rs",
        "function": "DefaultCookOrchestrator::execute_workflow_with_args",
        "line": 878
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.8288888888888892,
          "factors": [
            "Moderate complexity (cyclomatic: 6)",
            "Cognitive complexity: 10",
            "Long function (57 lines)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.8,
        "coverage_factor": 2.5714285714285716,
        "roi_factor": 5.92312849162011,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 4.0,
        "organization_factor": 3.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 4.995
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.8: Moderate complexity (cyclomatic: 6), Cognitive complexity: 10, Long function (57 lines)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.2152346368715086
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.5714285714285714,
        "propagated_from": [
          {
            "file": "./src/cook/interaction/display.rs",
            "name": "ProgressDisplayImpl::format_duration",
            "line": 131
          },
          {
            "file": "./src/session/timing.rs",
            "name": "TimingTracker::new",
            "line": 21
          },
          {
            "file": "./src/session/timing.rs",
            "name": "TimingTracker::start_iteration",
            "line": 30
          },
          {
            "file": "./src/session/timing.rs",
            "name": "TimingTracker::complete_iteration",
            "line": 35
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 7,
      "upstream_callers": [
        "DefaultCookOrchestrator::execute_workflow"
      ],
      "downstream_callees": [
        "ProgressDisplayImpl::format_duration",
        "TimingTracker::new",
        "DefaultCookOrchestrator::process_workflow_input",
        "GitDiff::is_empty",
        "TimingTracker::start_iteration",
        "DefaultCookOrchestrator::collect_workflow_inputs",
        "TimingTracker::complete_iteration"
      ],
      "nesting_depth": 0,
      "function_length": 57,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 10
    },
    {
      "location": {
        "file": "./src/config/command_discovery.rs",
        "function": "CommandDiscovery::scan_commands::<closure@2>",
        "line": 89
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: SyncInLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.995
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::parse_options",
        "line": 201
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "TemporaryCollection allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.994
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/git/scenario.rs",
        "function": "format_status_output",
        "line": 318
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Inefficient string processing: RepeatedFormatting"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.994
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/mod.rs",
        "function": "load_playbook",
        "line": 320
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 10,
          "cognitive": 38
        }
      },
      "unified_score": {
        "complexity_factor": 8.8,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 8.0,
        "security_factor": 0.0,
        "organization_factor": 6.715822565201729,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.992
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 10 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=10, cog=38) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 5.0,
        "risk_reduction": 1.5911653423365453
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 8,
      "downstream_dependencies": 0,
      "upstream_callers": [
        "load_workflow",
        "cook_tests::test_yaml_error_messages",
        "DefaultEnvironmentCoordinator::load_configuration",
        "core_tests::test_load_playbook_without_commands_wrapper",
        "core_tests::test_load_playbook_nonexistent",
        "core_tests::test_load_playbook_yaml",
        "core_tests::test_load_playbook_invalid_format",
        "core_tests::test_load_playbook_json"
      ],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 64,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 38
    },
    {
      "location": {
        "file": "./src/session/storage.rs",
        "function": "FileSessionStorage::list",
        "line": 69
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 7,
          "cognitive": 24
        }
      },
      "unified_score": {
        "complexity_factor": 7.1,
        "coverage_factor": 0.0,
        "roi_factor": 3.3496143958868894,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 1.5,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.992
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 7 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=7, cog=24) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 3.5,
        "risk_reduction": 1.4056368894601545
      },
      "transitive_coverage": null,
      "upstream_dependencies": 2,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "test_storage_operations",
        "tests::test_file_storage"
      ],
      "downstream_callees": [
        "SessionId::from_string"
      ],
      "nesting_depth": 0,
      "function_length": 20,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 24
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::parse_options",
        "line": 219
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "StringConcatenation allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.992
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/worktree/manager.rs",
        "function": "WorktreeManager::cleanup_merged_sessions",
        "line": 727
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 8,
          "cognitive": 19
        }
      },
      "unified_score": {
        "complexity_factor": 6.7,
        "coverage_factor": 0.0,
        "roi_factor": 3.553829078801331,
        "semantic_factor": 10.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 3.674234614174767,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.991
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 8 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=8, cog=19) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.0,
        "risk_reduction": 1.4580137252147627
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 1.0,
        "propagated_from": [
          {
            "file": "./src/worktree/manager.rs",
            "name": "WorktreeManager::detect_mergeable_sessions",
            "line": 690
          },
          {
            "file": "./src/worktree/manager.rs",
            "name": "WorktreeManager::cleanup_session_after_merge",
            "line": 766
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "handle_clean_command"
      ],
      "downstream_callees": [
        "WorktreeManager::detect_mergeable_sessions",
        "WorktreeManager::cleanup_session_after_merge"
      ],
      "nesting_depth": 0,
      "function_length": 38,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 19
    },
    {
      "location": {
        "file": "./src/abstractions/claude.rs",
        "function": "RealClaudeClient::execute_command",
        "line": 344
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 14,
          "cognitive": 47
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 1.5555555555555562,
        "roi_factor": 0.8957631714464095,
        "semantic_factor": 9.6,
        "dependency_factor": 4.0,
        "security_factor": 6.0,
        "organization_factor": 9.604686356149273,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.991
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 14 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=14, cog=47) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 7.0,
        "risk_reduction": 2.095337766434593
      },
      "transitive_coverage": null,
      "upstream_dependencies": 3,
      "downstream_dependencies": 9,
      "upstream_callers": [
        "RealClaudeClient::lint",
        "RealClaudeClient::code_review",
        "RealClaudeClient::implement_spec"
      ],
      "downstream_callees": [
        "RealClaudeClient::is_transient_error",
        "ExitStatusHelper::success",
        "ExitStatus::code",
        "ProcessCommandBuilder::new",
        "ProcessCommandBuilder::env",
        "MockProcessRunner::run",
        "ProcessCommandBuilder::build",
        "ProcessCommandBuilder::arg",
        "SubprocessManager::runner"
      ],
      "nesting_depth": 0,
      "function_length": 91,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 47
    },
    {
      "location": {
        "file": "./src/session/events.rs",
        "function": "SessionEvent::description",
        "line": 33
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.628888888888889,
          "factors": [
            "Moderate complexity (cyclomatic: 9)",
            "Cognitive complexity: 10"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.699999999999999,
        "coverage_factor": 0.0,
        "roi_factor": 0.20999999999999996,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 3.3541019662496847,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 4.991
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions (complexity 9 → 3), then add 9 comprehensive tests",
        "rationale": "Risk score 2.6: Moderate complexity (cyclomatic: 9), Cognitive complexity: 10",
        "implementation_steps": [
          "Identify 3 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 9 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 9 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.4425615294937453
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 27,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 10
    },
    {
      "location": {
        "file": "./src/config/loader.rs",
        "function": "ConfigLoader::load_from_path::<closure@3>",
        "line": 74
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.991
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/execution/interpolation.rs",
        "function": "InterpolationEngine::parse_path",
        "line": 137
      },
      "debt_type": {
        "Risk": {
          "risk_score": 3.373333333333333,
          "factors": [
            "Moderate complexity (cyclomatic: 9)",
            "Cognitive complexity: 15"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 6.4,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 3.0,
        "organization_factor": 5.196152422706632,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.99
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions (complexity 9 → 3), then add 9 comprehensive tests",
        "rationale": "Risk score 3.4: Moderate complexity (cyclomatic: 9), Cognitive complexity: 15",
        "implementation_steps": [
          "Identify 3 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 9 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 9 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.6134422863405995
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [
        "InterpolationEngine::parse_variable_expression"
      ],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 42,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 15
    },
    {
      "location": {
        "file": "./src/git/scenario.rs",
        "function": "GitScenarioMock::stage_files",
        "line": 433
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.7866666666666666,
          "factors": [
            "Cognitive complexity: 12"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.5,
        "coverage_factor": 2.0,
        "roi_factor": 4.064707953063884,
        "semantic_factor": 1.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 0.1,
        "final_score": 4.99
      },
      "function_role": "IOWrapper",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.8: Cognitive complexity: 12",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.04882353976531942
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [
        "GitScenarioMock::execute_command",
        "SessionId::as_str",
        "GitDiff::is_empty"
      ],
      "nesting_depth": 0,
      "function_length": 16,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 12
    },
    {
      "location": {
        "file": "./src/init/mod.rs",
        "function": "handle_existing_commands",
        "line": 163
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 13.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.989
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 3,
      "downstream_dependencies": 4,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/execution/data_pipeline.rs",
        "function": "JsonPath::compile",
        "line": 187
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 22,
          "cognitive": 63
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 9.6,
        "dependency_factor": 4.0,
        "security_factor": 0.0,
        "organization_factor": 7.794228634059948,
        "performance_factor": 4.0,
        "role_multiplier": 1.5,
        "final_score": 4.988
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 22 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=22, cog=63) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 11.0,
        "risk_reduction": 1.4934735016440734
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 3,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "tests::test_json_path_basic",
        "tests::test_json_path_nested",
        "DataPipeline::from_config"
      ],
      "downstream_callees": [
        "GitDiff::is_empty",
        "CommandArg::parse",
        "JsonPath::parse_field"
      ],
      "nesting_depth": 0,
      "function_length": 71,
      "cyclomatic_complexity": 22,
      "cognitive_complexity": 63
    },
    {
      "location": {
        "file": "./src/config/command_parser.rs",
        "function": "parse_command_string",
        "line": 57
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "StringConcatenation allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 20.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.988
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 11,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/loader.rs",
        "function": "ConfigLoader::load_from_path::<closure@5>",
        "line": 97
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.988
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/testing/helpers/mod.rs",
        "function": "dirs_equal",
        "line": 115
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 6,
          "cognitive": 27
        }
      },
      "unified_score": {
        "complexity_factor": 7.3,
        "coverage_factor": 0.0,
        "roi_factor": 0.45000000000000007,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 3.0,
        "performance_factor": 6.260990336999411,
        "role_multiplier": 1.5,
        "final_score": 4.987
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 6 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=6, cog=27) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 3.0,
        "risk_reduction": 1.0154952650307343
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [
        "MockFileSystem::is_file"
      ],
      "nesting_depth": 0,
      "function_length": 33,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 27
    },
    {
      "location": {
        "file": "./src/cook/execution/mapreduce.rs",
        "function": "MapReduceExecutor::validate_parent_state",
        "line": 923
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.753333333333333,
          "factors": [
            "Moderate complexity (cyclomatic: 6)",
            "Cognitive complexity: 15"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 6.1,
        "coverage_factor": 0.0,
        "roi_factor": 4.6242544731610336,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 9.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.987
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.8: Moderate complexity (cyclomatic: 6), Cognitive complexity: 15",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.9363190854870777
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 1.0,
        "propagated_from": [
          {
            "file": "./src/subprocess/runner.rs",
            "name": "ExitStatusHelper::success",
            "line": 56
          },
          {
            "file": "./src/config/command.rs",
            "name": "Command::new",
            "line": 405
          },
          {
            "file": "./src/subprocess/builder.rs",
            "name": "ProcessCommandBuilder::args",
            "line": 31
          },
          {
            "file": "./src/subprocess/builder.rs",
            "name": "ProcessCommandBuilder::current_dir",
            "line": 61
          },
          {
            "file": "./src/testing/mocks/fs.rs",
            "name": "MockFileSystem::exists",
            "line": 88
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 5,
      "upstream_callers": [
        "MapReduceExecutor::merge_agent_to_parent"
      ],
      "downstream_callees": [
        "ExitStatusHelper::success",
        "Command::new",
        "ProcessCommandBuilder::args",
        "ProcessCommandBuilder::current_dir",
        "MockFileSystem::exists"
      ],
      "nesting_depth": 0,
      "function_length": 31,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 15
    },
    {
      "location": {
        "file": "./src/config/mapreduce.rs",
        "function": "deserialize_timeout",
        "line": 127
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Inefficient string processing: InefficientParsing"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.987
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/dynamic_registry.rs",
        "function": "DynamicCommandRegistry::validate_strict",
        "line": 156
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "LinearSearch operation on Vec in performance-critical code"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.987
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/session/tracker.rs",
        "function": "SessionTrackerImpl::update_session",
        "line": 38
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 14,
          "cognitive": 25
        }
      },
      "unified_score": {
        "complexity_factor": 7.9,
        "coverage_factor": 0.0,
        "roi_factor": 2.405568445475638,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 6.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.986
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 14 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=14, cog=25) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 7.0,
        "risk_reduction": 1.5949236233897583
      },
      "transitive_coverage": null,
      "upstream_dependencies": 2,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "tests::test_session_updates",
        "tests::test_atomic_save_prevents_corruption"
      ],
      "downstream_callees": [
        "SessionState::add_files_changed",
        "SessionState::increment_iteration"
      ],
      "nesting_depth": 0,
      "function_length": 51,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 25
    },
    {
      "location": {
        "file": "./src/scoring/mod.rs",
        "function": "ProjectHealthScore::get_improvement_suggestions",
        "line": 125
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 12,
          "cognitive": 15
        }
      },
      "unified_score": {
        "complexity_factor": 6.7,
        "coverage_factor": 0.0,
        "roi_factor": 0.45000000000000007,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 1.5,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.986
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions to reduce complexity from 12 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=12, cog=15) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 2 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 6 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 6.0,
        "risk_reduction": 0.8360624999999999
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 47,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 15
    },
    {
      "location": {
        "file": "./src/testing/helpers/mod.rs",
        "function": "dirs_equal",
        "line": 118
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Nested Loops",
          "impact": "High",
          "description": "Nested loop with 2 levels (Quadratic complexity)"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 4.986
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Nested Loops performance issue",
        "rationale": "Performance issue (High) detected: Nested Loops",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::parse_variables_to_args",
        "line": 165
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.3333333333333335,
          "factors": [
            "Cognitive complexity: 12"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.1,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 3.0,
        "organization_factor": 4.242640687119286,
        "performance_factor": 2.857738033247041,
        "role_multiplier": 1.5,
        "final_score": 4.985
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.3: Cognitive complexity: 12",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.5406396103067893
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "MetadataParser::parse_sections"
      ],
      "downstream_callees": [
        "CommandRegistry::get",
        "SessionId::as_str"
      ],
      "nesting_depth": 0,
      "function_length": 30,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 12
    },
    {
      "location": {
        "file": "./src/cook/execution/data_pipeline.rs",
        "function": "FilterExpression::evaluate_function",
        "line": 676
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 14,
          "cognitive": 26
        }
      },
      "unified_score": {
        "complexity_factor": 8.0,
        "coverage_factor": 0.0,
        "roi_factor": 2.1235955056179776,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 4.9749371855331,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.985
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 14 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=14, cog=26) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 7.0,
        "risk_reduction": 1.3543140112326035
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 1.0,
        "propagated_from": [
          {
            "file": "./src/config/command_validator.rs",
            "name": "CommandRegistry::get",
            "line": 222
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "FilterExpression::evaluate"
      ],
      "downstream_callees": [
        "CommandRegistry::get"
      ],
      "nesting_depth": 0,
      "function_length": 45,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 26
    },
    {
      "location": {
        "file": "./src/abstractions/git.rs",
        "function": "RealGitOperations::git_command",
        "line": 88
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.9377777777777778,
          "factors": [
            "Cognitive complexity: 11"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.2,
        "coverage_factor": 0.4285714285714287,
        "roi_factor": 7.0090844602083795,
        "semantic_factor": 10.0,
        "dependency_factor": 9.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.985
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.9: Cognitive complexity: 11",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.1984313345156286
      },
      "transitive_coverage": null,
      "upstream_dependencies": 11,
      "downstream_dependencies": 7,
      "upstream_callers": [
        "git_command",
        "RealGitOperations::stage_all_changes",
        "RealGitOperations::create_commit",
        "RealGitOperations::switch_branch",
        "RealGitOperations::check_git_status",
        "real_git_tests::test_git_command_failure",
        "real_git_tests::test_git_command_success",
        "tests::test_git_command_with_classifier",
        "RealGitOperations::get_last_commit_message",
        "RealGitOperations::create_worktree",
        "RealGitOperations::get_current_branch"
      ],
      "downstream_callees": [
        "CommandHandlerBuilder::build",
        "SubprocessManager::runner",
        "ProcessCommandBuilder::new",
        "ProcessCommandBuilder::args",
        "ExitStatusHelper::success",
        "MockProcessRunner::run",
        "ExitStatus::code"
      ],
      "nesting_depth": 0,
      "function_length": 28,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 11
    },
    {
      "location": {
        "file": "./src/testing/helpers/assertions.rs",
        "function": "assert_file_not_contains",
        "line": 78
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 4.985
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/subprocess/git.rs",
        "function": "GitRunnerImpl::status",
        "line": 52
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 12,
          "cognitive": 30
        }
      },
      "unified_score": {
        "complexity_factor": 8.2,
        "coverage_factor": 0.0,
        "roi_factor": 2.103652173913043,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 3.3541019662496847,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.984
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 12 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=12, cog=30) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 6.0,
        "risk_reduction": 1.410212024440141
      },
      "transitive_coverage": null,
      "upstream_dependencies": 2,
      "downstream_dependencies": 7,
      "upstream_callers": [
        "subprocess_tests::test_git_runner",
        "git_error_tests::test_git_command_failure"
      ],
      "downstream_callees": [
        "ProcessCommandBuilder::new",
        "ExitStatus::code",
        "ProcessCommandBuilder::current_dir",
        "CommandHandlerBuilder::build",
        "run",
        "ProcessCommandBuilder::args",
        "ExitStatusHelper::success"
      ],
      "nesting_depth": 0,
      "function_length": 41,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 30
    },
    {
      "location": {
        "file": "./src/cook/workflow/executor.rs",
        "function": "WorkflowExecutor::execute_mapreduce",
        "line": 1274
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 6,
          "cognitive": 23
        }
      },
      "unified_score": {
        "complexity_factor": 6.9,
        "coverage_factor": 3.5999999999999996,
        "roi_factor": 3.459208489940305,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 4.0,
        "organization_factor": 1.5,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.984
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 6 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=6, cog=23) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 3.0,
        "risk_reduction": 2.118271114304665
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.4,
        "propagated_from": [
          {
            "file": "./src/worktree/manager.rs",
            "name": "WorktreeManager::new",
            "line": 102
          },
          {
            "file": "./src/cook/interaction/display.rs",
            "name": "ProgressDisplayImpl::format_duration",
            "line": 131
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 5,
      "upstream_callers": [
        "WorkflowExecutor::execute"
      ],
      "downstream_callees": [
        "MapReduceExecutor::execute",
        "WorktreeManager::new",
        "CommandRegistry::clone",
        "MapReduceExecutor::new",
        "ProgressDisplayImpl::format_duration"
      ],
      "nesting_depth": 0,
      "function_length": 67,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 23
    },
    {
      "location": {
        "file": "./src/commands/handlers/shell.rs",
        "function": "ShellHandler::execute",
        "line": 45
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 7,
          "cognitive": 41
        }
      },
      "unified_score": {
        "complexity_factor": 8.8,
        "coverage_factor": 2.6249999999999996,
        "roi_factor": 1.8216867469879514,
        "semantic_factor": 6.0,
        "dependency_factor": 3.0,
        "security_factor": 4.0,
        "organization_factor": 2.121320343559643,
        "performance_factor": 2.0,
        "role_multiplier": 0.8,
        "final_score": 4.984
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 7 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=7, cog=41) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 3.5,
        "risk_reduction": 1.0383774462314468
      },
      "transitive_coverage": null,
      "upstream_dependencies": 2,
      "downstream_dependencies": 16,
      "upstream_callers": [
        "tests::test_shell_handler_execute",
        "tests::test_shell_handler_dry_run"
      ],
      "downstream_callees": [
        "CommandRegistry::get",
        "MapReduceExecutor::execute",
        "CommandResult::with_duration",
        "CommandResult::from_output",
        "AttributeValue::as_object",
        "ShellHandler::schema",
        "CommandRegistry::clone",
        "ExecutionContext::resolve_path",
        "CommandResult::error",
        "DynamicCommandRegistry::apply_defaults",
        "ExitStatus::code",
        "AttributeValue::as_string",
        "SessionId::as_str",
        "CommandResult::success",
        "AttributeValue::as_number",
        "ExecutionContext::full_env"
      ],
      "nesting_depth": 0,
      "function_length": 80,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 41
    },
    {
      "location": {
        "file": "./src/git/scenario.rs",
        "function": "GitScenarioMock::default_response",
        "line": 224
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 17,
          "cognitive": 23
        }
      },
      "unified_score": {
        "complexity_factor": 8.0,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 4.242640687119286,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.984
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 17 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=17, cog=23) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 8.5,
        "risk_reduction": 1.0957443180368809
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 5,
      "upstream_callers": [
        "GitScenarioMock::execute_command"
      ],
      "downstream_callees": [
        "CommandRegistry::clone",
        "GitScenarioMock::get_scenario",
        "GitStatus::is_clean",
        "CommitId::hash",
        "format_status_output"
      ],
      "nesting_depth": 0,
      "function_length": 47,
      "cyclomatic_complexity": 17,
      "cognitive_complexity": 23
    },
    {
      "location": {
        "file": "./src/config/command.rs",
        "function": "WorkflowCommand::to_command",
        "line": 344
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 17,
          "cognitive": 36
        }
      },
      "unified_score": {
        "complexity_factor": 9.3,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 8.0,
        "security_factor": 0.0,
        "organization_factor": 6.538348415311011,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.983
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 17 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=17, cog=36) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 8.5,
        "risk_reduction": 1.6258816459019143
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 8,
      "downstream_dependencies": 4,
      "upstream_callers": [
        "DefaultCookOrchestrator::execute_workflow",
        "DefaultCookOrchestrator::execute_workflow_command",
        "tests::test_commit_required_field",
        "tests::test_workflow_command_conversion",
        "tests::test_structured_workflow_config_parsing",
        "tests::test_mixed_workflow_config",
        "workflow_parsing_tests::test_parse_workflow_with_commit_required",
        "DefaultCookOrchestrator::execute_structured_workflow"
      ],
      "downstream_callees": [
        "CommandArg::parse",
        "Command::from_string",
        "Command::new",
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 58,
      "cyclomatic_complexity": 17,
      "cognitive_complexity": 36
    },
    {
      "location": {
        "file": "./src/simple_state/cache.rs",
        "function": "CacheManager::clear",
        "line": 86
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.8888888888888893,
          "factors": [
            "Moderate complexity (cyclomatic: 6)",
            "Cognitive complexity: 10"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.8,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 7.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 4.983
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 1.9: Moderate complexity (cyclomatic: 6), Cognitive complexity: 10",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.5985
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 6,
      "downstream_dependencies": 0,
      "upstream_callers": [
        "GitScenarioMock::clear_command_log",
        "MockSubprocessManager::reset_history",
        "test::test_cache_cleanup",
        "test::test_cache_manager",
        "MockProcessRunner::reset",
        "DataPipeline::process"
      ],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 10,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 10
    },
    {
      "location": {
        "file": "./src/config/mapreduce.rs",
        "function": "MapReduceWorkflowConfig::to_reduce_phase",
        "line": 155
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "Clone allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.983
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/coordinators/workflow.rs",
        "function": "DefaultWorkflowCoordinator::execute_workflow",
        "line": 145
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 6,
          "cognitive": 17
        }
      },
      "unified_score": {
        "complexity_factor": 6.3,
        "coverage_factor": 4.0,
        "roi_factor": 5.50748995250274,
        "semantic_factor": 10.0,
        "dependency_factor": 7.0,
        "security_factor": 4.0,
        "organization_factor": 2.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.982
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 6 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=6, cog=17) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 3.0,
        "risk_reduction": 2.7414830562659844
      },
      "transitive_coverage": null,
      "upstream_dependencies": 6,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "tests::test_execute_workflow_structured_commands",
        "tests::test_execute_workflow_workflow_step_commands",
        "tests::test_execute_workflow_simple_commands",
        "tests::test_execute_workflow_with_variables",
        "tests::test_execute_workflow_empty_commands",
        "tests::test_execute_workflow_stops_at_max_iterations"
      ],
      "downstream_callees": [
        "DefaultWorkflowCoordinator::execute_step",
        "DefaultWorkflowCoordinator::should_continue",
        "DefaultWorkflowCoordinator::convert_to_workflow_step"
      ],
      "nesting_depth": 0,
      "function_length": 23,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 17
    },
    {
      "location": {
        "file": "./src/cook/mod.rs",
        "function": "create_orchestrator",
        "line": 123
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.8888888888888893,
          "factors": [
            "Long function (80 lines)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.6,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 1.5,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 4.982
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Address identified risk factors",
        "rationale": "Risk score 2.9: Long function (80 lines)",
        "implementation_steps": [
          "Review and refactor problematic areas",
          "Add missing tests if coverage is low",
          "Update documentation"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.41700000000000004
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 2,
      "downstream_dependencies": 5,
      "upstream_callers": [
        "cook",
        "cook_tests::test_create_orchestrator"
      ],
      "downstream_callees": [
        "CommandRegistry::clone",
        "DefaultCookOrchestrator::new",
        "StateManager::new",
        "ConfigLoader::new",
        "RealGitOperations::new"
      ],
      "nesting_depth": 0,
      "function_length": 80,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 7
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::parse_options",
        "line": 209
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Contains operation on Vec in performance-critical code"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.982
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/command_validator.rs",
        "function": "CommandRegistry::apply_defaults",
        "line": 366
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 8,
          "cognitive": 17
        }
      },
      "unified_score": {
        "complexity_factor": 6.5,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 3.674234614174767,
        "performance_factor": 4.024922359499622,
        "role_multiplier": 1.5,
        "final_score": 4.981
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 8 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=8, cog=17) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.0,
        "risk_reduction": 0.9626986586220876
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "tests::test_apply_defaults"
      ],
      "downstream_callees": [
        "CommandRegistry::get",
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 30,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 17
    },
    {
      "location": {
        "file": "./src/cook/retry.rs",
        "function": "format_subprocess_error",
        "line": 168
      },
      "debt_type": {
        "Risk": {
          "risk_score": 3.2466666666666666,
          "factors": [
            "Moderate complexity (cyclomatic: 9)",
            "Cognitive complexity: 12"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 6.1,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 1.5,
        "dependency_factor": 9.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 0.1,
        "final_score": 4.981
      },
      "function_role": "IOWrapper",
      "recommendation": {
        "primary_action": "Extract 3 pure functions (complexity 9 → 3), then add 9 comprehensive tests",
        "rationale": "Risk score 3.2: Moderate complexity (cyclomatic: 9), Cognitive complexity: 12",
        "implementation_steps": [
          "Identify 3 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 9 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 9 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.0393
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 12,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "tests::test_error_formatting",
        "retry_tests::test_error_formatting_edge_cases",
        "tests::test_error_formatting_rate_limit",
        "tests::test_error_formatting_command_not_found",
        "additional_tests::test_format_subprocess_error_with_newlines",
        "additional_tests::test_format_subprocess_error_all_hints",
        "tests::test_error_formatting_with_stdout_only",
        "tests::test_error_formatting_no_exit_code",
        "tests::test_format_subprocess_error_all_fields",
        "tests::test_format_subprocess_error_unauthorized_variations",
        "tests::test_format_subprocess_error_unauthorized",
        "tests::test_error_formatting_empty_outputs"
      ],
      "downstream_callees": [
        "GitDiff::is_empty"
      ],
      "nesting_depth": 0,
      "function_length": 49,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 12
    },
    {
      "location": {
        "file": "./src/session/manager.rs",
        "function": "InMemorySessionManager::list_active_sessions",
        "line": 243
      },
      "debt_type": {
        "Orchestration": {
          "delegates_to": [
            "CommandRegistry::clone",
            "SessionState::is_terminal"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 2.6999999999999997,
        "coverage_factor": 1.5,
        "roi_factor": 7.797158878504674,
        "semantic_factor": 2.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 3.0,
        "performance_factor": 0.0,
        "role_multiplier": 0.2,
        "final_score": 4.981
      },
      "function_role": "Orchestrator",
      "recommendation": {
        "primary_action": "Refactor to pure functions or extract testable units",
        "rationale": "Orchestration function delegating to 2 functions",
        "implementation_steps": [
          "Extract logic into pure functions",
          "Compose smaller, testable functions",
          "Add unit tests for extracted functions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.06658579439252338
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "tests::test_concurrent_sessions"
      ],
      "downstream_callees": [
        "CommandRegistry::clone",
        "SessionState::is_terminal"
      ],
      "nesting_depth": 0,
      "function_length": 17,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 6
    },
    {
      "location": {
        "file": "./src/config/command_parser.rs",
        "function": "parse_command_string",
        "line": 52
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: SyncInLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 20.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.981
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 11,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/session/adapter.rs",
        "function": "SessionManagerAdapter::convert_state",
        "line": 43
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.5377777777777775,
          "factors": [
            "Cognitive complexity: 14"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.4,
        "coverage_factor": 4.0,
        "roi_factor": 4.346119999999999,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 6.538348415311011,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.98
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.5: Cognitive complexity: 14",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.2445342262296653
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.0,
        "propagated_from": []
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [
        "SessionState::duration"
      ],
      "nesting_depth": 0,
      "function_length": 38,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 14
    },
    {
      "location": {
        "file": "./src/commands/result.rs",
        "function": "CommandError::fmt",
        "line": 143
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.8644444444444443,
          "factors": [
            "Moderate complexity (cyclomatic: 7)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.5,
        "coverage_factor": 7.0,
        "roi_factor": 4.587608569774175,
        "semantic_factor": 1.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 0.1,
        "final_score": 4.98
      },
      "function_role": "IOWrapper",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 7 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 1.9: Moderate complexity (cyclomatic: 7)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 7 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.08643804284887087
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 11,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 8
    },
    {
      "location": {
        "file": "./src/cook/orchestrator.rs",
        "function": "test_arg_resolution_only_for_commands_with_args",
        "line": 2072
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "StringConcatenation allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 4.98
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/coordinators/execution.rs",
        "function": "DefaultExecutionCoordinator::execute_claude",
        "line": 125
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.126666666666667,
          "factors": [
            "Cognitive complexity: 9"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.2,
        "coverage_factor": 5.0,
        "roi_factor": 7.012455270805812,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 4.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 4.979
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.1: Cognitive complexity: 9",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.528684145310436
      },
      "transitive_coverage": null,
      "upstream_dependencies": 2,
      "downstream_dependencies": 0,
      "upstream_callers": [
        "tests::test_execute_claude_failure",
        "tests::test_execute_claude_success"
      ],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 33,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 9
    },
    {
      "location": {
        "file": "./src/cook/execution/mapreduce.rs",
        "function": "MapReduceExecutor::merge_agent_to_parent",
        "line": 881
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.5088888888888894,
          "factors": [
            "Moderate complexity (cyclomatic: 6)",
            "Cognitive complexity: 10"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.8,
        "coverage_factor": 6.0,
        "roi_factor": 7.144358208955223,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 4.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 4.979
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.5: Moderate complexity (cyclomatic: 6), Cognitive complexity: 10",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.621826865671642
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "MapReduceExecutor::execute_agent_commands"
      ],
      "downstream_callees": [
        "MapReduceExecutor::validate_parent_state"
      ],
      "nesting_depth": 0,
      "function_length": 41,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 10
    },
    {
      "location": {
        "file": "./src/cook/orchestrator.rs",
        "function": "DefaultCookOrchestrator::process_workflow_input",
        "line": 1020
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.391111111111111,
          "factors": [
            "Cognitive complexity: 11"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.5,
        "coverage_factor": 4.0,
        "roi_factor": 6.802189110957959,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 3.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.979
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.4: Cognitive complexity: 11",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.3576641833218472
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "DefaultCookOrchestrator::execute_workflow_with_args"
      ],
      "downstream_callees": [
        "DefaultCookOrchestrator::execute_workflow_command"
      ],
      "nesting_depth": 0,
      "function_length": 44,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 11
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::extract_section",
        "line": 156
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "StringConcatenation allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 12.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.979
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 2,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/testing/helpers/mod.rs",
        "function": "dirs_equal",
        "line": 139
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: SyncInLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 4.979
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/orchestrator.rs",
        "function": "tests::test_find_files_matching_pattern",
        "line": 1915
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 4.979
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 4,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/worktree/state.rs",
        "function": "WorktreeState::validate_initial_state",
        "line": 109
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.531111111111111,
          "factors": [
            "Moderate complexity (cyclomatic: 9)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.1,
        "coverage_factor": 0.0,
        "roi_factor": 0.20999999999999996,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 5.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 4.978
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions (complexity 9 → 3), then add 9 comprehensive tests",
        "rationale": "Risk score 2.5: Moderate complexity (cyclomatic: 9)",
        "implementation_steps": [
          "Identify 3 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 9 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 9 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.44025000000000003
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 31,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 8
    },
    {
      "location": {
        "file": "./src/simple_state/state.rs",
        "function": "StateManager::get_history",
        "line": 141
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 9,
          "cognitive": 28
        }
      },
      "unified_score": {
        "complexity_factor": 7.7,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 4.242640687119286,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.978
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 9 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=9, cog=28) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.5,
        "risk_reduction": 1.2174270830676155
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 2,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "test::test_history_retrieval",
        "test::test_history_sorting"
      ],
      "downstream_callees": [
        "MockFileSystem::exists"
      ],
      "nesting_depth": 0,
      "function_length": 25,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 28
    },
    {
      "location": {
        "file": "./src/testing/helpers/assertions.rs",
        "function": "assert_files_equal",
        "line": 93
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 4.978
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/execution/data_pipeline.rs",
        "function": "Sorter::compare_values",
        "line": 817
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.3555555555555556,
          "factors": [
            "Moderate complexity (cyclomatic: 6)",
            "Cognitive complexity: 13"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.699999999999999,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.977
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.4: Moderate complexity (cyclomatic: 6), Cognitive complexity: 13",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.459
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "Sorter::compare_items"
      ],
      "downstream_callees": [
        "Sorter::compare_json_values"
      ],
      "nesting_depth": 0,
      "function_length": 20,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 13
    },
    {
      "location": {
        "file": "./src/simple_state/state.rs",
        "function": "StateManager::load_or_create",
        "line": 98
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 6,
          "cognitive": 16
        }
      },
      "unified_score": {
        "complexity_factor": 6.2,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 7.794228634059948,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.977
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 6 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=6, cog=16) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 3.0,
        "risk_reduction": 1.0997235016440734
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 2,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "StateManager::new",
        "StateManager::with_root"
      ],
      "downstream_callees": [
        "State::new",
        "MockFileSystem::exists"
      ],
      "nesting_depth": 0,
      "function_length": 42,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 16
    },
    {
      "location": {
        "file": "./src/git/parsers.rs",
        "function": "update_worktree_info",
        "line": 224
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 11,
          "cognitive": 18
        }
      },
      "unified_score": {
        "complexity_factor": 6.9,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 1.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 3.0,
        "performance_factor": 2.0,
        "role_multiplier": 0.1,
        "final_score": 4.977
      },
      "function_role": "IOWrapper",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 11 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=11, cog=18) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 5.5,
        "risk_reduction": 0.052849999999999994
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "parse_worktree_list"
      ],
      "downstream_callees": [
        "GitDiff::is_empty",
        "CommitId::new"
      ],
      "nesting_depth": 0,
      "function_length": 15,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 18
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::parse_variables_to_args",
        "line": 174
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Contains operation on Vec in performance-critical code"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.977
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/worktree/manager.rs",
        "function": "WorktreeManager::detect_mergeable_sessions",
        "line": 690
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 8,
          "cognitive": 25
        }
      },
      "unified_score": {
        "complexity_factor": 7.3,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 4.0,
        "security_factor": 0.0,
        "organization_factor": 3.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.976
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 8 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=8, cog=25) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.0,
        "risk_reduction": 1.2351058237730506
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 3,
      "downstream_dependencies": 10,
      "upstream_callers": [
        "tests::test_detect_mergeable_sessions_empty",
        "WorktreeManager::cleanup_merged_sessions",
        "handle_clean_command"
      ],
      "downstream_callees": [
        "WorktreeManager::get_session_state",
        "CommandHandlerBuilder::build",
        "WorktreeManager::is_branch_merged",
        "ProcessCommandBuilder::new",
        "ProcessCommandBuilder::args",
        "ExitStatusHelper::success",
        "SubprocessManager::runner",
        "MockProcessRunner::run",
        "ProcessCommandBuilder::current_dir",
        "WorktreeManager::list_sessions"
      ],
      "nesting_depth": 0,
      "function_length": 36,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 25
    },
    {
      "location": {
        "file": "./src/cook/orchestrator.rs",
        "function": "DefaultCookOrchestrator::find_files_matching_pattern",
        "line": 670
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 11,
          "cognitive": 19
        }
      },
      "unified_score": {
        "complexity_factor": 7.0,
        "coverage_factor": 3.6666666666666674,
        "roi_factor": 3.5425423382983063,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 3.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.976
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 11 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=11, cog=19) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 5.5,
        "risk_reduction": 2.169021181901653
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.6666666666666666,
        "propagated_from": [
          {
            "file": "./src/subprocess/builder.rs",
            "name": "ProcessCommandBuilder::args",
            "line": 31
          },
          {
            "file": "./src/config/command.rs",
            "name": "Command::new",
            "line": 405
          },
          {
            "file": "./src/subprocess/builder.rs",
            "name": "ProcessCommandBuilder::current_dir",
            "line": 61
          },
          {
            "file": "./src/subprocess/runner.rs",
            "name": "ExitStatusHelper::success",
            "line": 56
          }
        ]
      },
      "upstream_dependencies": 2,
      "downstream_dependencies": 6,
      "upstream_callers": [
        "tests::test_find_files_matching_pattern",
        "DefaultCookOrchestrator::execute_structured_workflow"
      ],
      "downstream_callees": [
        "GitDiff::is_empty",
        "ProcessCommandBuilder::args",
        "Command::new",
        "ProcessCommandBuilder::current_dir",
        "ExitStatusHelper::success",
        "DefaultCookOrchestrator::matches_glob_pattern"
      ],
      "nesting_depth": 0,
      "function_length": 61,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 19
    },
    {
      "location": {
        "file": "./src/main.rs",
        "function": "handle_merge_command",
        "line": 312
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.976
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 5,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/git/scenario.rs",
        "function": "GitScenarioMock::commit",
        "line": 455
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.771111111111111,
          "factors": [
            "Cognitive complexity: 11"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.5,
        "coverage_factor": 0.0,
        "roi_factor": 5.930048730964466,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.975
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.8: Cognitive complexity: 11",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.827253654822335
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "tests::test_scenario_mock_commit_nothing_to_commit"
      ],
      "downstream_callees": [
        "GitScenarioMock::execute_command",
        "CommitId::new"
      ],
      "nesting_depth": 0,
      "function_length": 13,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 11
    },
    {
      "location": {
        "file": "./src/config/command_parser.rs",
        "function": "expand_variables",
        "line": 90
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: SyncInLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 12.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.975
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 2,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/testing/helpers/mod.rs",
        "function": "create_file",
        "line": 39
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 4.975
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/init/mod.rs",
        "function": "run",
        "line": 286
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.1088888888888895,
          "factors": [
            "Moderate complexity (cyclomatic: 6)",
            "Cognitive complexity: 10"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.8,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 0.8,
        "final_score": 4.974
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.1: Moderate complexity (cyclomatic: 6), Cognitive complexity: 10",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.3672
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 19,
      "downstream_dependencies": 6,
      "upstream_callers": [
        "tests::test_run_init_with_existing_commands",
        "tests::test_init_run_already_initialized",
        "tests::test_run_init_specific_commands",
        "ClaudeRunnerImpl::check_availability",
        "GitRunnerImpl::create_worktree",
        "tests::test_init_run_success",
        "GitRunnerImpl::log",
        "GitRunnerImpl::run_command",
        "ClaudeRunnerImpl::run_command",
        "tests::test_run_init_force_overwrite",
        "GitRunnerImpl::add",
        "GitRunnerImpl::current_branch",
        "GitRunnerImpl::status",
        "main",
        "GitRunnerImpl::commit",
        "GitCommandRunner::run_git_command",
        "GitRunnerImpl::remove_worktree",
        "tests::test_run_init_create_commands",
        "tests::test_run_init_not_git_repo"
      ],
      "downstream_callees": [
        "install_templates",
        "SubprocessManager::production",
        "validate_project_structure",
        "display_installation_summary",
        "select_templates",
        "handle_existing_commands"
      ],
      "nesting_depth": 0,
      "function_length": 21,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 10
    },
    {
      "location": {
        "file": "./src/cook/execution/mapreduce.rs",
        "function": "MapReduceExecutor::execute_reduce_phase",
        "line": 955
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 12,
          "cognitive": 29
        }
      },
      "unified_score": {
        "complexity_factor": 8.1,
        "coverage_factor": 6.857142857142856,
        "roi_factor": 1.954199908352818,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 6.0,
        "organization_factor": 3.75,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.974
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 12 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=12, cog=29) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 6.0,
        "risk_reduction": 2.725301237971307
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.42857142857142855,
        "propagated_from": [
          {
            "file": "./src/cook/execution/interpolation.rs",
            "name": "InterpolationContext::set",
            "line": 232
          },
          {
            "file": "./src/cook/execution/interpolation.rs",
            "name": "InterpolationContext::new",
            "line": 219
          },
          {
            "file": "./src/cook/execution/mapreduce.rs",
            "name": "AgentContext::new",
            "line": 221
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 7,
      "upstream_callers": [
        "MapReduceExecutor::execute"
      ],
      "downstream_callees": [
        "CommandRegistry::clone",
        "MapReduceExecutor::merge_parent_to_main",
        "InterpolationContext::set",
        "InterpolationContext::new",
        "MapReduceExecutor::execute_single_step",
        "AgentContext::new",
        "MapReduceExecutor::should_auto_merge"
      ],
      "nesting_depth": 0,
      "function_length": 101,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 29
    },
    {
      "location": {
        "file": "./src/cook/workflow/executor.rs",
        "function": "WorkflowExecutor::get_step_display_name",
        "line": 336
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 13,
          "cognitive": 31
        }
      },
      "unified_score": {
        "complexity_factor": 8.4,
        "coverage_factor": 10.0,
        "roi_factor": 2.6232318902700387,
        "semantic_factor": 1.5,
        "dependency_factor": 7.0,
        "security_factor": 6.0,
        "organization_factor": 4.0,
        "performance_factor": 2.0,
        "role_multiplier": 0.1,
        "final_score": 4.974
      },
      "function_role": "IOWrapper",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 13 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=13, cog=31) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 6.5,
        "risk_reduction": 0.23417827903986282
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.0,
        "propagated_from": []
      },
      "upstream_dependencies": 7,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "disabled_tests::test_get_step_display_name_test",
        "disabled_tests::test_get_step_display_name_unnamed",
        "WorkflowExecutor::handle_no_commits_error",
        "disabled_tests::test_get_step_display_name_claude",
        "disabled_tests::test_get_step_display_name_shell",
        "WorkflowExecutor::execute_step",
        "WorkflowExecutor::execute"
      ],
      "downstream_callees": [
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 18,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 31
    },
    {
      "location": {
        "file": "./src/cook/orchestrator.rs",
        "function": "tests::test_find_files_matching_pattern",
        "line": 1894
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 4.974
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 4,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::convert_frontmatter_to_definition",
        "line": 232
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 1,
          "cognitive": 16
        }
      },
      "unified_score": {
        "complexity_factor": 5.1,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 3.0,
        "organization_factor": 2.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.973
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 1 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=1, cog=16) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.5,
        "risk_reduction": 0.967623882185073
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "MetadataParser::parse_frontmatter"
      ],
      "downstream_callees": [
        "MetadataParser::extract_description",
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 35,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 16
    },
    {
      "location": {
        "file": "./src/config/loader.rs",
        "function": "ConfigLoader::load_from_path",
        "line": 54
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 13,
          "cognitive": 52
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 9.6,
        "dependency_factor": 5.0,
        "security_factor": 0.0,
        "organization_factor": 9.367496997597598,
        "performance_factor": 7.155417527999328,
        "role_multiplier": 1.5,
        "final_score": 4.973
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 13 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=13, cog=52) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 6.5,
        "risk_reduction": 1.620084296186937
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 4,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "tests::test_load_from_path_nonexistent_file",
        "ConfigLoader::load_with_explicit_path",
        "tests::test_load_from_path_invalid_yaml",
        "tests::test_load_from_path_unsupported_format"
      ],
      "downstream_callees": [
        "CommandRegistry::get",
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 61,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 52
    },
    {
      "location": {
        "file": "./src/config/loader.rs",
        "function": "ConfigLoader::load_project",
        "line": 115
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.1422222222222222,
          "factors": [
            "Cognitive complexity: 13"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.4,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 1.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 4.242640687119286,
        "role_multiplier": 0.1,
        "final_score": 4.973
      },
      "function_role": "IOWrapper",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.1: Cognitive complexity: 13",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.0227
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "tests::test_load_project_config"
      ],
      "downstream_callees": [
        "MockFileSystem::exists"
      ],
      "nesting_depth": 0,
      "function_length": 16,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 13
    },
    {
      "location": {
        "file": "./src/testing/mocks/claude.rs",
        "function": "MockClaudeClient::implement_spec",
        "line": 201
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.0444444444444447,
          "factors": [
            "Cognitive complexity: 11"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.8,
        "coverage_factor": 0.0,
        "roi_factor": 4.602210563380281,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.972
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.0: Cognitive complexity: 11",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.6811657922535211
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [
        "CommandRegistry::get"
      ],
      "nesting_depth": 0,
      "function_length": 20,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 11
    },
    {
      "location": {
        "file": "./src/cook/orchestrator.rs",
        "function": "tests::test_find_files_matching_pattern",
        "line": 1908
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 4.972
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 4,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/simple_state/cache.rs",
        "function": "CacheManager::get",
        "line": 36
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.297777777777778,
          "factors": [
            "Moderate complexity (cyclomatic: 8)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.8,
        "coverage_factor": 0.0,
        "roi_factor": 0.20999999999999996,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 4.971
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 8 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.3: Moderate complexity (cyclomatic: 8)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 8 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.3705
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 2,
      "upstream_callers": [],
      "downstream_callees": [
        "CacheManager::cache_path",
        "MockFileSystem::exists"
      ],
      "nesting_depth": 0,
      "function_length": 26,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 8
    },
    {
      "location": {
        "file": "./src/config/command_parser.rs",
        "function": "parse_command_string",
        "line": 62
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: SyncInLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 20.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.971
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 11,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/dynamic_registry.rs",
        "function": "DynamicCommandRegistry::check_value_type",
        "line": 268
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "StringConcatenation allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.971
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/testing/test_mocks.rs",
        "function": "MockResponses::cargo_check_json",
        "line": 149
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Inefficient string processing: RepeatedFormatting"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 4.971
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/simple_state/state.rs",
        "function": "StateManager::record_session",
        "line": 74
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.7933333333333337,
          "factors": [
            "Moderate complexity (cyclomatic: 6)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.6,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 9.6,
        "dependency_factor": 4.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 4.97
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 1.8: Moderate complexity (cyclomatic: 6)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.44850000000000007
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 3,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "test::test_history_retrieval",
        "test::test_session_recording",
        "test::test_history_sorting"
      ],
      "downstream_callees": [
        "StateManager::save"
      ],
      "nesting_depth": 0,
      "function_length": 23,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 6
    },
    {
      "location": {
        "file": "./src/session/manager.rs",
        "function": "InMemorySessionManager::save_checkpoint",
        "line": 261
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.2888888888888888,
          "factors": [
            "Cognitive complexity: 13"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.1,
        "coverage_factor": 2.0,
        "roi_factor": 5.147589565217391,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 4.242640687119286,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.97
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.3: Cognitive complexity: 13",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.0992088276980938
      },
      "transitive_coverage": null,
      "upstream_dependencies": 2,
      "downstream_dependencies": 4,
      "upstream_callers": [
        "example_migration",
        "test_session_persistence_and_recovery"
      ],
      "downstream_callees": [
        "SessionState::is_terminal",
        "CommandRegistry::get",
        "InMemoryStorage::save",
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 30,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 13
    },
    {
      "location": {
        "file": "./src/config/dynamic_registry.rs",
        "function": "DynamicCommandRegistry::refresh",
        "line": 61
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: SyncInLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.97
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 4,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/execution/interpolation.rs",
        "function": "InterpolationContext::resolve_in_current",
        "line": 273
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 11,
          "cognitive": 32
        }
      },
      "unified_score": {
        "complexity_factor": 8.3,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 6.18465843842649,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.969
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 11 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=11, cog=32) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 5.5,
        "risk_reduction": 1.1703472840086955
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "InterpolationContext::resolve_path"
      ],
      "downstream_callees": [
        "CommandRegistry::get",
        "CommandRegistry::clone",
        "CommandArg::parse"
      ],
      "nesting_depth": 0,
      "function_length": 42,
      "cyclomatic_complexity": 11,
      "cognitive_complexity": 32
    },
    {
      "location": {
        "file": "./src/cook/orchestrator.rs",
        "function": "DefaultCookOrchestrator::execute_workflow",
        "line": 242
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 21,
          "cognitive": 54
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 10.0,
        "roi_factor": 0.42559967573358026,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 6.0,
        "organization_factor": 10.0,
        "performance_factor": 4.242640687119286,
        "role_multiplier": 1.5,
        "final_score": 4.969
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 21 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=21, cog=54) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 10.5,
        "risk_reduction": 3.468359957440032
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.375,
        "propagated_from": [
          {
            "file": "./src/config/command.rs",
            "name": "WorkflowCommand::to_command",
            "line": 344
          },
          {
            "file": "./src/config/command_validator.rs",
            "name": "CommandRegistry::get",
            "line": 222
          },
          {
            "file": "./src/config/command_validator.rs",
            "name": "apply_command_defaults",
            "line": 411
          }
        ]
      },
      "upstream_dependencies": 2,
      "downstream_dependencies": 8,
      "upstream_callers": [
        "DefaultCookOrchestrator::run",
        "tests::test_arg_resolution_only_for_commands_with_args"
      ],
      "downstream_callees": [
        "DefaultCookOrchestrator::execute_mapreduce_workflow",
        "WorkflowCommand::to_command",
        "DefaultCookOrchestrator::execute_structured_workflow",
        "CommandRegistry::get",
        "DefaultCookOrchestrator::execute_workflow_with_args",
        "apply_command_defaults",
        "CommandRegistry::clone",
        "GitDiff::is_empty"
      ],
      "nesting_depth": 0,
      "function_length": 197,
      "cyclomatic_complexity": 21,
      "cognitive_complexity": 54
    },
    {
      "location": {
        "file": "./src/config/command_validator.rs",
        "function": "CommandRegistry::apply_defaults",
        "line": 389
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "Clone allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.969
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::parse_frontmatter",
        "line": 48
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.7622222222222224,
          "factors": [
            "Cognitive complexity: 10"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.2,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 3.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 4.968
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.8: Cognitive complexity: 10",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.43650000000000005
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "MetadataParser::parse_command_file"
      ],
      "downstream_callees": [
        "CommandRegistry::get",
        "MetadataParser::convert_frontmatter_to_definition",
        "SessionId::as_str"
      ],
      "nesting_depth": 0,
      "function_length": 17,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 10
    },
    {
      "location": {
        "file": "./src/cook/orchestrator.rs",
        "function": "DefaultCookOrchestrator::execute_and_validate_command",
        "line": 1231
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 18,
          "cognitive": 47
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 10.0,
        "roi_factor": 0.6053789624258836,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 10.0,
        "organization_factor": 6.363961030678928,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.968
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 18 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=18, cog=47) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 9.0,
        "risk_reduction": 3.48182246587372
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "DefaultCookOrchestrator::execute_workflow_command"
      ],
      "downstream_callees": [
        "DefaultCookOrchestrator::get_current_head"
      ],
      "nesting_depth": 0,
      "function_length": 87,
      "cyclomatic_complexity": 18,
      "cognitive_complexity": 47
    },
    {
      "location": {
        "file": "./src/cook/session/adapter.rs",
        "function": "SessionManagerAdapter::save_state",
        "line": 290
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 6,
          "cognitive": 22
        }
      },
      "unified_score": {
        "complexity_factor": 6.8,
        "coverage_factor": 6.0,
        "roi_factor": 3.624815361890694,
        "semantic_factor": 1.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 3.0,
        "performance_factor": 2.0,
        "role_multiplier": 0.1,
        "final_score": 4.968
      },
      "function_role": "IOWrapper",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 6 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=6, cog=22) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 3.0,
        "risk_reduction": 0.1549171344165436
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [
        "adapter_tests::test_save_and_load_state"
      ],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 14,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 22
    },
    {
      "location": {
        "file": "./src/config/mapreduce.rs",
        "function": "deserialize_timeout",
        "line": 97
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 8,
          "cognitive": 21
        }
      },
      "unified_score": {
        "complexity_factor": 6.9,
        "coverage_factor": 0.0,
        "roi_factor": 0.45000000000000007,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 3.0,
        "organization_factor": 3.674234614174767,
        "performance_factor": 2.5,
        "role_multiplier": 1.5,
        "final_score": 4.967
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 8 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=8, cog=21) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.0,
        "risk_reduction": 0.9876361586220874
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 0,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [
        "CommandArg::parse"
      ],
      "nesting_depth": 0,
      "function_length": 36,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 21
    },
    {
      "location": {
        "file": "./src/git/scenario.rs",
        "function": "format_status_output",
        "line": 311
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Inefficient string processing: RepeatedFormatting"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.967
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/testing/helpers/mod.rs",
        "function": "file_contains",
        "line": 98
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 4.966
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/subprocess/runner.rs",
        "function": "TokioProcessRunner::run",
        "line": 85
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 33,
          "cognitive": 61
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 10.0,
        "roi_factor": 0.45000000000000007,
        "semantic_factor": 6.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 7.942703473096454,
        "performance_factor": 4.0,
        "role_multiplier": 0.8,
        "final_score": 4.965
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 33 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=33, cog=61) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 16.5,
        "risk_reduction": 1.62669784862335
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 4,
      "upstream_callers": [],
      "downstream_callees": [
        "CommandRegistry::clone",
        "ExitStatus::code",
        "ExitStatusHelper::success",
        "GitDiff::is_empty"
      ],
      "nesting_depth": 0,
      "function_length": 159,
      "cyclomatic_complexity": 33,
      "cognitive_complexity": 61
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::parse_variables_to_args",
        "line": 182
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Contains operation on Vec in performance-critical code"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.965
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::parse_options",
        "line": 210
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Contains operation on Vec in performance-critical code"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.965
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/command_validator.rs",
        "function": "CommandRegistry::validate_command",
        "line": 269
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "LinearSearch operation on Vec in performance-critical code"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.965
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 4,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/worktree/manager.rs",
        "function": "WorktreeManager::merge_session",
        "line": 330
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 20,
          "cognitive": 58
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 5.0,
        "security_factor": 0.0,
        "organization_factor": 6.5484618759809905,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.964
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 20 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=20, cog=58) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 10.0,
        "risk_reduction": 1.556584624244501
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 4,
      "downstream_dependencies": 14,
      "upstream_callers": [
        "handle_merge_command",
        "tests::test_merge_session_success",
        "tests::test_merge_session_claude_cli_failure",
        "DefaultCookOrchestrator::cleanup"
      ],
      "downstream_callees": [
        "WorktreeManager::get_cleanup_config",
        "MockProcessRunner::run",
        "WorktreeManager::list_sessions",
        "WorktreeManager::update_session_state",
        "ProcessCommandBuilder::env",
        "ProcessCommandBuilder::args",
        "WorktreeManager::cleanup_session_after_merge",
        "ExitStatusHelper::success",
        "CommandHandlerBuilder::build",
        "ProcessCommandBuilder::current_dir",
        "ProcessCommandBuilder::new",
        "GitDiff::is_empty",
        "ProcessCommandBuilder::arg",
        "SubprocessManager::runner"
      ],
      "nesting_depth": 0,
      "function_length": 176,
      "cyclomatic_complexity": 20,
      "cognitive_complexity": 58
    },
    {
      "location": {
        "file": "./src/cook/orchestrator.rs",
        "function": "DefaultCookOrchestrator::cleanup",
        "line": 440
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 19,
          "cognitive": 59
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 9.5,
        "roi_factor": 0.44886345471402533,
        "semantic_factor": 9.6,
        "dependency_factor": 4.0,
        "security_factor": 0.0,
        "organization_factor": 7.794228634059948,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.964
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 19 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=19, cog=59) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 9.5,
        "risk_reduction": 3.2914493300752885
      },
      "transitive_coverage": null,
      "upstream_dependencies": 3,
      "downstream_dependencies": 4,
      "upstream_callers": [
        "tests::test_auto_accept_worktree_merge",
        "DefaultCookOrchestrator::run",
        "tests::test_worktree_cleanup_after_merge"
      ],
      "downstream_callees": [
        "MockWorktreeManager::cleanup_session",
        "WorktreeManager::new",
        "CommandRegistry::clone",
        "WorktreeManager::merge_session"
      ],
      "nesting_depth": 0,
      "function_length": 60,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 59
    },
    {
      "location": {
        "file": "./src/cook/retry.rs",
        "function": "execute_with_retry",
        "line": 30
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 8,
          "cognitive": 26
        }
      },
      "unified_score": {
        "complexity_factor": 7.4,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 9.0,
        "dependency_factor": 9.0,
        "security_factor": 4.0,
        "organization_factor": 5.196152422706632,
        "performance_factor": 4.242640687119286,
        "role_multiplier": 0.8,
        "final_score": 4.964
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 8 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=8, cog=26) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.0,
        "risk_reduction": 0.8385461339178929
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 10,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "tests::test_execute_with_retry_non_transient_failure",
        "additional_tests::test_execute_with_retry_signal_interruption",
        "tests::test_execute_with_retry_exponential_backoff",
        "tests::test_execute_with_retry_exhausted_retries",
        "additional_tests::test_execute_with_retry_io_error_recovery",
        "tests::test_execute_with_retry_success",
        "tests::test_execute_with_retry_max_attempts_reached",
        "additional_tests::test_execute_with_retry_network_timeout",
        "additional_tests::test_execute_with_retry_verbose_output",
        "tests::test_execute_with_retry_command_not_found"
      ],
      "downstream_callees": [
        "await_retry_delay",
        "should_retry_output",
        "handle_command_error"
      ],
      "nesting_depth": 0,
      "function_length": 55,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 26
    },
    {
      "location": {
        "file": "./src/config/command_parser.rs",
        "function": "parse_command_string",
        "line": 41
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "StringConcatenation allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 20.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.964
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 11,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/commands/handlers/claude.rs",
        "function": "ClaudeHandler::execute",
        "line": 43
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 12,
          "cognitive": 59
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 4.8,
        "roi_factor": 0.7495842872635257,
        "semantic_factor": 6.0,
        "dependency_factor": 3.0,
        "security_factor": 6.0,
        "organization_factor": 8.08290376865476,
        "performance_factor": 2.0,
        "role_multiplier": 0.8,
        "final_score": 4.963
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 12 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=12, cog=59) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 6.0,
        "risk_reduction": 1.3383424420020686
      },
      "transitive_coverage": null,
      "upstream_dependencies": 2,
      "downstream_dependencies": 15,
      "upstream_callers": [
        "tests::test_claude_handler_dry_run",
        "tests::test_claude_handler_execute"
      ],
      "downstream_callees": [
        "ExecutionContext::resolve_path",
        "DynamicCommandRegistry::apply_defaults",
        "AttributeValue::as_array",
        "ExitStatusHelper::success",
        "ExecutionContext::full_env",
        "SessionId::as_str",
        "ClaudeHandler::schema",
        "CommandRegistry::get",
        "AttributeValue::as_number",
        "CommandResult::with_duration",
        "AttributeValue::as_string",
        "CommandResult::error",
        "CommandResult::success",
        "CommandRegistry::clone",
        "MapReduceExecutor::execute"
      ],
      "nesting_depth": 0,
      "function_length": 140,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 59
    },
    {
      "location": {
        "file": "./src/config/loader.rs",
        "function": "ConfigLoader::load_project",
        "line": 122
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.963
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/testing/mocks/claude.rs",
        "function": "MockClaudeClient::code_review",
        "line": 169
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.442222222222222,
          "factors": [
            "Moderate complexity (cyclomatic: 7)",
            "Cognitive complexity: 10"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.1,
        "coverage_factor": 3.5,
        "roi_factor": 5.118803589232302,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 2.121320343559643,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 4.962
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 7 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.4: Moderate complexity (cyclomatic: 7), Cognitive complexity: 10",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 7 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.1327300743458173
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 2,
      "upstream_callers": [],
      "downstream_callees": [
        "CommandRegistry::get",
        "DirGuard::drop"
      ],
      "nesting_depth": 0,
      "function_length": 31,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 10
    },
    {
      "location": {
        "file": "./src/git/parsers.rs",
        "function": "parse_diff_output",
        "line": 140
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "TemporaryCollection allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 13.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.962
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 3,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::parse_options",
        "line": 196
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 8,
          "cognitive": 21
        }
      },
      "unified_score": {
        "complexity_factor": 6.9,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 3.0,
        "organization_factor": 6.708203932499369,
        "performance_factor": 3.3333333333333335,
        "role_multiplier": 1.5,
        "final_score": 4.961
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 8 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=8, cog=21) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.0,
        "risk_reduction": 1.1525903532281085
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [
        "MetadataParser::parse_sections"
      ],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 35,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 21
    },
    {
      "location": {
        "file": "./src/cook/orchestrator.rs",
        "function": "DefaultCookOrchestrator::execute_structured_workflow",
        "line": 507
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 18,
          "cognitive": 64
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 10.0,
        "roi_factor": 0.34610774455616977,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 6.0,
        "organization_factor": 10.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.961
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 18 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=18, cog=64) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 9.0,
        "risk_reduction": 3.4054266414729977
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.3333333333333333,
        "propagated_from": [
          {
            "file": "./src/config/command_validator.rs",
            "name": "apply_command_defaults",
            "line": 411
          },
          {
            "file": "./src/config/command.rs",
            "name": "WorkflowCommand::to_command",
            "line": 344
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 6,
      "upstream_callers": [
        "DefaultCookOrchestrator::execute_workflow"
      ],
      "downstream_callees": [
        "CommandRegistry::clone",
        "apply_command_defaults",
        "CommandArg::resolve",
        "DefaultCookOrchestrator::find_files_matching_pattern",
        "GitDiff::is_empty",
        "WorkflowCommand::to_command"
      ],
      "nesting_depth": 0,
      "function_length": 162,
      "cyclomatic_complexity": 18,
      "cognitive_complexity": 64
    },
    {
      "location": {
        "file": "./src/git/mod.rs",
        "function": "GitCommandRunner::list_files",
        "line": 173
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.4600000000000002,
          "factors": [
            "Cognitive complexity: 9"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.6,
        "coverage_factor": 0.0,
        "roi_factor": 7.414252100840337,
        "semantic_factor": 1.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 0.1,
        "final_score": 4.961
      },
      "function_role": "IOWrapper",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.5: Cognitive complexity: 9",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.05287126050420169
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "tests::test_list_files"
      ],
      "downstream_callees": [
        "ExitStatusHelper::success",
        "GitCommandRunner::run_git_command"
      ],
      "nesting_depth": 0,
      "function_length": 13,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 9
    },
    {
      "location": {
        "file": "./src/testing/helpers/assertions.rs",
        "function": "assert_files_equal",
        "line": 94
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 4.961
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/metadata_parser.rs",
        "function": "MetadataParser::parse_options",
        "line": 207
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Contains operation on Vec in performance-critical code"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 11.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.96
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/dynamic_registry.rs",
        "function": "DynamicCommandRegistry::refresh",
        "line": 51
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: SyncInLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.96
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 4,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/config/command_parser.rs",
        "function": "parse_command_string",
        "line": 14
      },
      "debt_type": {
        "Risk": {
          "risk_score": 3.8088888888888888,
          "factors": [
            "Moderate complexity (cyclomatic: 10)",
            "Cognitive complexity: 13",
            "Long function (66 lines)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 6.3,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 9.0,
        "security_factor": 3.0,
        "organization_factor": 4.743416490252569,
        "performance_factor": 6.54846187598099,
        "role_multiplier": 1.5,
        "final_score": 4.959
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions (complexity 10 → 3), then add 9 comprehensive tests",
        "rationale": "Risk score 3.8: Moderate complexity (cyclomatic: 10), Cognitive complexity: 13, Long function (66 lines)",
        "implementation_steps": [
          "Identify 3 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 9 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 10 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.8609012473537885
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 11,
      "downstream_dependencies": 3,
      "upstream_callers": [
        "Command::from_string",
        "tests::test_parse_simple_command",
        "tests::test_parse_command_with_options",
        "tests::test_parse_command_string_empty",
        "tests::test_parse_command_string_with_variables",
        "tests::test_command_string_parsing",
        "tests::test_parse_command_with_slash",
        "tests::test_parse_command_with_variable",
        "tests::test_parse_command_string_simple",
        "tests::test_parse_command_with_args",
        "tests::test_parse_complex_command"
      ],
      "downstream_callees": [
        "Command::new",
        "GitDiff::is_empty",
        "CommandArg::parse"
      ],
      "nesting_depth": 0,
      "function_length": 66,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 13
    },
    {
      "location": {
        "file": "./src/cook/coordinators/workflow.rs",
        "function": "DefaultWorkflowCoordinator::extract_workflow_step_command",
        "line": 80
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.042222222222222,
          "factors": [
            "Moderate complexity (cyclomatic: 7)",
            "Cognitive complexity: 10"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.1,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 7.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 4.959
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 7 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.0: Moderate complexity (cyclomatic: 7), Cognitive complexity: 10",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 7 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.6120000000000001
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 6,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "DefaultWorkflowCoordinator::extract_command_string",
        "tests::test_extract_workflow_step_command_shell",
        "tests::test_extract_workflow_step_command_claude",
        "tests::test_extract_workflow_step_command_empty",
        "tests::test_extract_workflow_step_command_test",
        "tests::test_extract_workflow_step_command_priority"
      ],
      "downstream_callees": [
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 11,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 10
    },
    {
      "location": {
        "file": "./src/cook/session/migration.rs",
        "function": "example_migration",
        "line": 72
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "StringConcatenation allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.959
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 7,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/main.rs",
        "function": "handle_merge_command",
        "line": 269
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 15,
          "cognitive": 49
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 9.0,
        "roi_factor": 1.3167812015074263,
        "semantic_factor": 10.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 6.18465843842649,
        "performance_factor": 4.242640687119286,
        "role_multiplier": 0.8,
        "final_score": 4.958
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 15 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=15, cog=49) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 7.5,
        "risk_reduction": 1.676759902243491
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.4,
        "propagated_from": [
          {
            "file": "./src/worktree/manager.rs",
            "name": "WorktreeManager::list_sessions",
            "line": 259
          },
          {
            "file": "./src/worktree/manager.rs",
            "name": "WorktreeManager::merge_session",
            "line": 330
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 5,
      "upstream_callers": [
        "run_worktree_command"
      ],
      "downstream_callees": [
        "UserPrompterImpl::read_line",
        "MockWorktreeManager::cleanup_session",
        "GitDiff::is_empty",
        "WorktreeManager::list_sessions",
        "WorktreeManager::merge_session"
      ],
      "nesting_depth": 0,
      "function_length": 54,
      "cyclomatic_complexity": 15,
      "cognitive_complexity": 49
    },
    {
      "location": {
        "file": "./src/subprocess/mock.rs",
        "function": "MockProcessRunner::run",
        "line": 99
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.877777777777778,
          "factors": [
            "Moderate complexity (cyclomatic: 7)",
            "Cognitive complexity: 14"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 6.1,
        "coverage_factor": 7.0,
        "roi_factor": 4.712477396021699,
        "semantic_factor": 9.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 3.3541019662496847,
        "performance_factor": 2.0,
        "role_multiplier": 0.8,
        "final_score": 4.957
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 7 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.9: Moderate complexity (cyclomatic: 7), Cognitive complexity: 14",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 7 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.9857319115708656
      },
      "transitive_coverage": null,
      "upstream_dependencies": 34,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "RealClaudeClient::check_availability",
        "RealCommandRunner::run_with_context",
        "RealGitOperations::git_command_in_dir",
        "subprocess_tests::test_production_runner_timeout",
        "RealClaudeClient::execute_command",
        "WorktreeManager::cleanup_session",
        "subprocess_tests::test_production_runner_command_not_found",
        "WorktreeManager::detect_mergeable_sessions",
        "tests::test_validate_project_structure_with_symlinks",
        "tests::test_init_run_already_initialized",
        "WorktreeManager::merge_session",
        "RealGitOperations::is_git_repo",
        "tests::test_run_init_create_commands",
        "tests::test_real_git_operations_is_git_repo",
        "tests::test_run_init_specific_commands",
        "RealGitOperations::git_command",
        "tests::test_init_run_success",
        "RealSubprocessExecutor::execute",
        "WorktreeManager::cleanup_session_after_merge",
        "subprocess_tests::test_production_runner_failure",
        "subprocess_tests::test_mock_runner_basic",
        "subprocess_tests::test_mock_runner_multiple_calls",
        "WorktreeManager::create_session",
        "tests::test_run_init_force_overwrite",
        "tests::test_run_init_with_existing_commands",
        "is_git_repository",
        "cook",
        "RealCommandRunner::run_command",
        "tests::test_detect_mergeable_sessions_empty",
        "tests::test_is_git_repository",
        "WorktreeManager::is_branch_merged",
        "WorktreeManager::list_sessions",
        "subprocess_tests::test_production_runner_success",
        "subprocess_tests::test_subprocess_manager"
      ],
      "downstream_callees": [
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 35,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 14
    },
    {
      "location": {
        "file": "./src/cook/mod.rs",
        "function": "load_playbook_with_mapreduce",
        "line": 225
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 13,
          "cognitive": 53
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 0.0,
        "roi_factor": 0.7884539787723928,
        "semantic_factor": 9.6,
        "dependency_factor": 4.0,
        "security_factor": 0.0,
        "organization_factor": 9.952332040455557,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.957
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 13 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=13, cog=53) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 6.5,
        "risk_reduction": 1.614233300775835
      },
      "transitive_coverage": null,
      "upstream_dependencies": 3,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "load_workflow_with_mapreduce",
        "cook_tests::test_load_debtmap_mapreduce_workflow",
        "cook_tests::test_load_mapreduce_workflow"
      ],
      "downstream_callees": [
        "parse_mapreduce_workflow"
      ],
      "nesting_depth": 0,
      "function_length": 94,
      "cyclomatic_complexity": 13,
      "cognitive_complexity": 53
    },
    {
      "location": {
        "file": "./src/cook/execution/data_pipeline.rs",
        "function": "FilterExpression::compare",
        "line": 605
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 27,
          "cognitive": 32
        }
      },
      "unified_score": {
        "complexity_factor": 9.9,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 7.348469228349534,
        "performance_factor": 4.0,
        "role_multiplier": 1.5,
        "final_score": 4.957
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 27 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=27, cog=32) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 13.5,
        "risk_reduction": 1.3268973172441751
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "FilterExpression::evaluate"
      ],
      "downstream_callees": [
        "SessionId::as_str"
      ],
      "nesting_depth": 0,
      "function_length": 70,
      "cyclomatic_complexity": 27,
      "cognitive_complexity": 32
    },
    {
      "location": {
        "file": "./src/git/mod.rs",
        "function": "GitCommandRunner::stage_files",
        "line": 222
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.108888888888889,
          "factors": [
            "Cognitive complexity: 13"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.1,
        "coverage_factor": 2.0,
        "roi_factor": 4.076893114754098,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.957
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 2.1: Cognitive complexity: 13",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.8652669836065574
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 4,
      "upstream_callers": [],
      "downstream_callees": [
        "GitCommandRunner::run_git_command",
        "GitDiff::is_empty",
        "ExitStatusHelper::success",
        "SessionId::as_str"
      ],
      "nesting_depth": 0,
      "function_length": 21,
      "cyclomatic_complexity": 4,
      "cognitive_complexity": 13
    },
    {
      "location": {
        "file": "./src/config/loader.rs",
        "function": "ConfigLoader::get_config",
        "line": 132
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Blocking I/O",
          "impact": "High",
          "description": "Inefficient I/O pattern: UnbufferedIO"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.957
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Blocking I/O performance issue",
        "rationale": "Performance issue (High) detected: Blocking I/O",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/testing/helpers/mod.rs",
        "function": "dirs_equal",
        "line": 125
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Nested Loops",
          "impact": "High",
          "description": "Nested loop with 2 levels (Quadratic complexity)"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 0.3,
        "final_score": 4.957
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Nested Loops performance issue",
        "rationale": "Performance issue (High) detected: Nested Loops",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 15,
        "complexity_reduction": 1.0,
        "risk_reduction": 6.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/workflow/executor.rs",
        "function": "WorkflowExecutor::handle_no_commits_error",
        "line": 1224
      },
      "debt_type": {
        "Risk": {
          "risk_score": 2.624444444444445,
          "factors": [
            "Moderate complexity (cyclomatic: 7)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.5,
        "coverage_factor": 7.0,
        "roi_factor": 5.492159416514717,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 4.0,
        "organization_factor": 2.625,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 4.956
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 7 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.6: Moderate complexity (cyclomatic: 7)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 7 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 1.677536956238604
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.0,
        "propagated_from": []
      },
      "upstream_dependencies": 2,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "disabled_tests::test_handle_no_commits_error_general_command",
        "WorkflowExecutor::execute"
      ],
      "downstream_callees": [
        "WorkflowExecutor::get_step_display_name",
        "WorkflowExecutor::determine_command_type"
      ],
      "nesting_depth": 0,
      "function_length": 49,
      "cyclomatic_complexity": 7,
      "cognitive_complexity": 8
    },
    {
      "location": {
        "file": "./src/config/command_discovery.rs",
        "function": "CommandDiscovery::scan_commands::<closure@2>",
        "line": 90
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Memory Allocation",
          "impact": "Medium",
          "description": "StringConcatenation allocation InLoop"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.956
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Memory Allocation performance issue",
        "rationale": "Performance issue (Medium) detected: Memory Allocation",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 0,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/cook/session/migration.rs",
        "function": "example_recovery",
        "line": 106
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 6,
          "cognitive": 20
        }
      },
      "unified_score": {
        "complexity_factor": 6.6,
        "coverage_factor": 6.0,
        "roi_factor": 4.673267326732673,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 2.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.955
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 6 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=6, cog=20) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 3.0,
        "risk_reduction": 2.4981163366336627
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 4,
      "upstream_callers": [],
      "downstream_callees": [
        "InMemorySessionManager::record_event",
        "create_full_featured_manager",
        "InMemorySessionManager::restore_session",
        "SessionTrackerImpl::get_state"
      ],
      "nesting_depth": 0,
      "function_length": 32,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 20
    },
    {
      "location": {
        "file": "./src/cook/session/tracker.rs",
        "function": "SessionTrackerImpl::save_state",
        "line": 103
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 6,
          "cognitive": 18
        }
      },
      "unified_score": {
        "complexity_factor": 6.4,
        "coverage_factor": 6.0,
        "roi_factor": 4.369980250164582,
        "semantic_factor": 8.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 2.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.955
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 6 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=6, cog=18) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 3.0,
        "risk_reduction": 2.731309907834101
      },
      "transitive_coverage": null,
      "upstream_dependencies": 2,
      "downstream_dependencies": 0,
      "upstream_callers": [
        "tests::test_session_state_persistence",
        "tests::test_atomic_save_prevents_corruption"
      ],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 28,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 18
    },
    {
      "location": {
        "file": "./src/git/parsers.rs",
        "function": "parse_diff_output",
        "line": 145
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Inefficient string processing: InefficientParsing"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 13.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.955
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 3,
      "downstream_dependencies": 3,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/git/mod.rs",
        "function": "GitCommandRunner::switch_branch",
        "line": 286
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.7666666666666666,
          "factors": [
            "Cognitive complexity: 9"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 4.2,
        "coverage_factor": 0.0,
        "roi_factor": 7.477467947598253,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 4.954
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.8: Cognitive complexity: 9",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.9298100960698691
      },
      "transitive_coverage": null,
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "tests::test_switch_branch"
      ],
      "downstream_callees": [
        "ExitStatusHelper::success",
        "GitCommandRunner::run_git_command"
      ],
      "nesting_depth": 0,
      "function_length": 15,
      "cyclomatic_complexity": 5,
      "cognitive_complexity": 9
    },
    {
      "location": {
        "file": "./src/git/scenario.rs",
        "function": "format_status_output",
        "line": 296
      },
      "debt_type": {
        "Risk": {
          "risk_score": 3.184444444444444,
          "factors": [
            "Moderate complexity (cyclomatic: 10)",
            "Long function (57 lines)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 5.4,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 1.5,
        "performance_factor": 2.449489742783178,
        "role_multiplier": 1.5,
        "final_score": 4.954
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions (complexity 10 → 3), then add 9 comprehensive tests",
        "rationale": "Risk score 3.2: Moderate complexity (cyclomatic: 10), Long function (57 lines)",
        "implementation_steps": [
          "Identify 3 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 9 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 10 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.46799999999999997
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [
        "GitScenarioMock::default_response"
      ],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 57,
      "cyclomatic_complexity": 10,
      "cognitive_complexity": 8
    },
    {
      "location": {
        "file": "./src/worktree/manager.rs",
        "function": "WorktreeManager::new",
        "line": 102
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 8,
          "cognitive": 17
        }
      },
      "unified_score": {
        "complexity_factor": 6.5,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 10.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 2.598076211353316,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.953
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 8 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=8, cog=17) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.0,
        "risk_reduction": 1.4069495005480244
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 32,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "tests::test_merge_session_claude_cli_failure",
        "test_merge_already_merged",
        "test_state_updates",
        "test_list_interrupted_sessions_with_mixed_states",
        "test_list_interrupted_sessions_none_interrupted",
        "test_merge_updates_state",
        "DefaultCookOrchestrator::cleanup",
        "tests::create_test_worktree_manager",
        "test_list_interrupted_sessions_empty",
        "tests::test_detect_mergeable_sessions_empty",
        "tests::test_update_checkpoint_success",
        "tests::test_verify_git_repository_success",
        "test_state_file_creation",
        "test_gitignore_creation",
        "test_create_session_with_generated_name",
        "tests::test_verify_git_repository_not_a_repo",
        "test_merge_session",
        "test_list_sessions",
        "test_state_error_handling",
        "tests::test_cleanup_session_after_merge_not_merged",
        "test_list_interrupted_sessions_all_interrupted",
        "tests::test_update_checkpoint_increments_iteration",
        "test_worktree_manager_creation",
        "core_tests::test_handle_worktree_merge",
        "DefaultCookOrchestrator::setup_environment",
        "test_create_session_with_uuid_name",
        "tests::test_claude_merge_command_construction",
        "tests::test_merge_session_success",
        "test_cleanup_session",
        "test_list_sessions_with_state",
        "run_worktree_command",
        "WorkflowExecutor::execute_mapreduce"
      ],
      "downstream_callees": [
        "MockFileSystem::exists"
      ],
      "nesting_depth": 0,
      "function_length": 53,
      "cyclomatic_complexity": 8,
      "cognitive_complexity": 17
    },
    {
      "location": {
        "file": "./src/cook/execution/mapreduce.rs",
        "function": "MapReduceExecutor::run_agent",
        "line": 467
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 6,
          "cognitive": 27
        }
      },
      "unified_score": {
        "complexity_factor": 7.3,
        "coverage_factor": 6.0,
        "roi_factor": 3.1346054667354304,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 4.0,
        "organization_factor": 7.937253933193772,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.953
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 6 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=6, cog=27) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 3.0,
        "risk_reduction": 2.7171448832553615
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 4,
      "upstream_callers": [
        "MapReduceExecutor::execute_map_phase"
      ],
      "downstream_callees": [
        "MapReduceExecutor::execute_agent_commands",
        "ProgressTracker::update_agent",
        "CommandRegistry::clone",
        "ProgressTracker::complete_item"
      ],
      "nesting_depth": 0,
      "function_length": 79,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 27
    },
    {
      "location": {
        "file": "./src/cook/execution/data_pipeline.rs",
        "function": "Sorter::compare_json_values",
        "line": 838
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 14,
          "cognitive": 20
        }
      },
      "unified_score": {
        "complexity_factor": 7.4,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 3.674234614174767,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.953
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 14 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=14, cog=20) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 7.0,
        "risk_reduction": 1.0904065757454413
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 0,
      "upstream_callers": [
        "Sorter::compare_values"
      ],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 29,
      "cyclomatic_complexity": 14,
      "cognitive_complexity": 20
    },
    {
      "location": {
        "file": "./src/config/mapreduce.rs",
        "function": "deserialize_timeout",
        "line": 121
      },
      "debt_type": {
        "BasicPerformance": {
          "issue_type": "Performance Issue",
          "impact": "Medium",
          "description": "Inefficient string processing: InefficientParsing"
        }
      },
      "unified_score": {
        "complexity_factor": 3.0,
        "coverage_factor": 2.0,
        "roi_factor": 6.0,
        "semantic_factor": 5.0,
        "dependency_factor": 10.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 10.0,
        "role_multiplier": 1.0,
        "final_score": 4.953
      },
      "function_role": "Unknown",
      "recommendation": {
        "primary_action": "Optimize Performance Issue performance issue",
        "rationale": "Performance issue (Medium) detected: Performance Issue",
        "implementation_steps": [
          "Profile performance bottleneck",
          "Apply optimization techniques",
          "Benchmark improvements",
          "Verify no regressions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 8,
        "complexity_reduction": 1.0,
        "risk_reduction": 4.0
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 1,
      "upstream_callers": [],
      "downstream_callees": [],
      "nesting_depth": 0,
      "function_length": 1,
      "cyclomatic_complexity": 1,
      "cognitive_complexity": 1
    },
    {
      "location": {
        "file": "./src/testing/helpers/mod.rs",
        "function": "create_rust_project",
        "line": 44
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.9644444444444447,
          "factors": [
            "Moderate complexity (cyclomatic: 6)"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.3,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 4.952
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 2 pure functions (complexity 6 → 3), then add 6 comprehensive tests",
        "rationale": "Risk score 2.0: Moderate complexity (cyclomatic: 6)",
        "implementation_steps": [
          "Identify 2 logical sections in the function",
          "Extract each section as a pure function (no side effects)",
          "Replace nested if/else with pattern matching or early returns",
          "Convert imperative loops to .map(), .filter(), .fold()",
          "Move all I/O operations to a single orchestrator function",
          "Write 6 unit tests for the extracted pure functions",
          "Goal: Reduce cyclomatic complexity from 6 to <=3"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.351
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 1,
      "upstream_callers": [
        "tests::test_create_rust_project"
      ],
      "downstream_callees": [
        "create_file"
      ],
      "nesting_depth": 0,
      "function_length": 36,
      "cyclomatic_complexity": 6,
      "cognitive_complexity": 5
    },
    {
      "location": {
        "file": "./src/cook/execution/mapreduce.rs",
        "function": "MapReduceExecutor::interpolate_workflow_step",
        "line": 775
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 12,
          "cognitive": 20
        }
      },
      "unified_score": {
        "complexity_factor": 7.2,
        "coverage_factor": 6.0,
        "roi_factor": 3.2133946158896913,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 6.0,
        "organization_factor": 3.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.952
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 3 pure functions to reduce complexity from 12 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=12, cog=20) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 3 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 9 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 6.0,
        "risk_reduction": 2.642508043335522
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.5,
        "propagated_from": [
          {
            "file": "./src/cook/execution/interpolation.rs",
            "name": "InterpolationEngine::interpolate",
            "line": 43
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 2,
      "upstream_callers": [
        "MapReduceExecutor::execute_single_step"
      ],
      "downstream_callees": [
        "InterpolationEngine::interpolate",
        "CommandRegistry::clone"
      ],
      "nesting_depth": 0,
      "function_length": 42,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 20
    },
    {
      "location": {
        "file": "./src/cook/session/migration.rs",
        "function": "example_migration",
        "line": 34
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 9,
          "cognitive": 36
        }
      },
      "unified_score": {
        "complexity_factor": 8.5,
        "coverage_factor": 6.428571428571429,
        "roi_factor": 2.340460662098572,
        "semantic_factor": 8.0,
        "dependency_factor": 0.0,
        "security_factor": 0.0,
        "organization_factor": 2.598076211353316,
        "performance_factor": 2.121320343559643,
        "role_multiplier": 1.5,
        "final_score": 4.952
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 9 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=9, cog=36) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 4.5,
        "risk_reduction": 2.436009962448462
      },
      "transitive_coverage": null,
      "upstream_dependencies": 0,
      "downstream_dependencies": 7,
      "upstream_callers": [],
      "downstream_callees": [
        "WorktreeManager::create_session",
        "DefaultSessionCoordinator::start_session",
        "InMemorySessionManager::save_checkpoint",
        "create_full_featured_manager",
        "InMemorySessionManager::record_event",
        "InMemorySessionManager::complete_session",
        "SessionOptions::from_flags"
      ],
      "nesting_depth": 0,
      "function_length": 71,
      "cyclomatic_complexity": 9,
      "cognitive_complexity": 36
    },
    {
      "location": {
        "file": "./src/cook/execution/mapreduce.rs",
        "function": "MapReduceExecutor::get_worktree_commits",
        "line": 818
      },
      "debt_type": {
        "Risk": {
          "risk_score": 1.6200000000000003,
          "factors": [
            "Cognitive complexity: 9"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.6,
        "coverage_factor": 0.0,
        "roi_factor": 5.471767578125,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 4.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 1.5,
        "final_score": 4.951
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Simplify function structure and improve testability",
        "rationale": "Risk score 1.6: Cognitive complexity: 9",
        "implementation_steps": [
          "Extract helper functions for clarity",
          "Remove unnecessary branching",
          "Consolidate similar code paths",
          "Add 3 unit tests for edge cases and main paths"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.8123825683593751
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 1.0,
        "propagated_from": [
          {
            "file": "./src/subprocess/runner.rs",
            "name": "ExitStatusHelper::success",
            "line": 56
          },
          {
            "file": "./src/subprocess/builder.rs",
            "name": "ProcessCommandBuilder::args",
            "line": 31
          },
          {
            "file": "./src/subprocess/builder.rs",
            "name": "ProcessCommandBuilder::current_dir",
            "line": 61
          },
          {
            "file": "./src/config/command.rs",
            "name": "Command::new",
            "line": 405
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 4,
      "upstream_callers": [
        "MapReduceExecutor::execute_agent_commands"
      ],
      "downstream_callees": [
        "ExitStatusHelper::success",
        "ProcessCommandBuilder::args",
        "ProcessCommandBuilder::current_dir",
        "Command::new"
      ],
      "nesting_depth": 0,
      "function_length": 21,
      "cyclomatic_complexity": 3,
      "cognitive_complexity": 9
    },
    {
      "location": {
        "file": "./src/cook/execution/data_pipeline.rs",
        "function": "DataPipeline::process",
        "line": 72
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 12,
          "cognitive": 23
        }
      },
      "unified_score": {
        "complexity_factor": 7.5,
        "coverage_factor": 0.0,
        "roi_factor": 0.30000000000000004,
        "semantic_factor": 6.0,
        "dependency_factor": 3.0,
        "security_factor": 0.0,
        "organization_factor": 1.5,
        "performance_factor": 2.0,
        "role_multiplier": 0.8,
        "final_score": 4.951
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 4 pure functions to reduce complexity from 12 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=12, cog=23) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 4 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 12 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 6.0,
        "risk_reduction": 0.5249999999999999
      },
      "transitive_coverage": {
        "direct": 1.0,
        "transitive": 1.0,
        "propagated_from": []
      },
      "upstream_dependencies": 2,
      "downstream_dependencies": 6,
      "upstream_callers": [
        "MapReduceExecutor::load_work_items_with_pipeline",
        "tests::test_pipeline_complete"
      ],
      "downstream_callees": [
        "Sorter::sort",
        "CommandRegistry::clone",
        "FilterExpression::evaluate",
        "DataPipeline::apply_field_mapping",
        "JsonPath::select",
        "CacheManager::clear"
      ],
      "nesting_depth": 0,
      "function_length": 58,
      "cyclomatic_complexity": 12,
      "cognitive_complexity": 23
    },
    {
      "location": {
        "file": "./src/commands/handlers/cargo.rs",
        "function": "CargoHandler::execute",
        "line": 62
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 19,
          "cognitive": 78
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 7.307692307692307,
        "roi_factor": 0.32245769547302594,
        "semantic_factor": 7.199999999999999,
        "dependency_factor": 4.0,
        "security_factor": 6.0,
        "organization_factor": 7.50651890605469,
        "performance_factor": 2.0,
        "role_multiplier": 0.8,
        "final_score": 4.951
      },
      "function_role": "EntryPoint",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 19 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=19, cog=78) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 9.5,
        "risk_reduction": 1.5997483391279699
      },
      "transitive_coverage": null,
      "upstream_dependencies": 3,
      "downstream_dependencies": 13,
      "upstream_callers": [
        "tests::test_cargo_test_with_features",
        "tests::test_cargo_dry_run",
        "tests::test_cargo_build"
      ],
      "downstream_callees": [
        "CommandResult::error",
        "SessionId::as_str",
        "AttributeValue::as_bool",
        "DynamicCommandRegistry::apply_defaults",
        "CommandRegistry::clone",
        "ExecutionContext::full_env",
        "CommandRegistry::get",
        "ExitStatusHelper::success",
        "CommandResult::with_duration",
        "MapReduceExecutor::execute",
        "CommandResult::success",
        "AttributeValue::as_string",
        "CargoHandler::schema"
      ],
      "nesting_depth": 0,
      "function_length": 148,
      "cyclomatic_complexity": 19,
      "cognitive_complexity": 78
    },
    {
      "location": {
        "file": "./src/cook/workflow/executor.rs",
        "function": "WorkflowExecutor::execute_test_command",
        "line": 1020
      },
      "debt_type": {
        "ComplexityHotspot": {
          "cyclomatic": 17,
          "cognitive": 45
        }
      },
      "unified_score": {
        "complexity_factor": 10.0,
        "coverage_factor": 10.0,
        "roi_factor": 0.6833757909442024,
        "semantic_factor": 8.0,
        "dependency_factor": 2.0,
        "security_factor": 6.0,
        "organization_factor": 10.0,
        "performance_factor": 2.0,
        "role_multiplier": 1.5,
        "final_score": 4.95
      },
      "function_role": "PureLogic",
      "recommendation": {
        "primary_action": "Extract 5 pure functions to reduce complexity from 17 to <10, then add comprehensive tests",
        "rationale": "High complexity function (cyclo=17, cog=45) likely with low coverage - needs testing and refactoring",
        "implementation_steps": [
          "Identify 5 logical sections in function",
          "Extract pure functions for each section (no side effects)",
          "Move I/O and side effects to orchestrator function",
          "Write 15 unit tests for extracted pure functions",
          "Add property-based tests for complex logic",
          "Goal: 80%+ coverage with each function <10 cyclomatic complexity"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 8.5,
        "risk_reduction": 3.482505572561427
      },
      "transitive_coverage": {
        "direct": 0.0,
        "transitive": 0.2,
        "propagated_from": [
          {
            "file": "./src/cook/execution/interpolation.rs",
            "name": "InterpolationEngine::interpolate",
            "line": 43
          }
        ]
      },
      "upstream_dependencies": 1,
      "downstream_dependencies": 5,
      "upstream_callers": [
        "WorkflowExecutor::execute_step"
      ],
      "downstream_callees": [
        "DirGuard::drop",
        "WorkflowExecutor::execute_shell_command",
        "InterpolationEngine::interpolate",
        "CommandRegistry::clone",
        "WorkflowExecutor::execute_claude_command"
      ],
      "nesting_depth": 0,
      "function_length": 131,
      "cyclomatic_complexity": 17,
      "cognitive_complexity": 45
    },
    {
      "location": {
        "file": "./src/session/manager.rs",
        "function": "InMemorySessionManager::start_session",
        "line": 185
      },
      "debt_type": {
        "Orchestration": {
          "delegates_to": [
            "CommandRegistry::clone",
            "InMemorySessionManager::record_event",
            "CommandRegistry::get",
            "DirGuard::drop"
          ]
        }
      },
      "unified_score": {
        "complexity_factor": 3.3,
        "coverage_factor": 1.5000000000000002,
        "roi_factor": 7.3438252622503235,
        "semantic_factor": 2.4,
        "dependency_factor": 6.0,
        "security_factor": 0.0,
        "organization_factor": 0.0,
        "performance_factor": 0.0,
        "role_multiplier": 0.2,
        "final_score": 4.95
      },
      "function_role": "Orchestrator",
      "recommendation": {
        "primary_action": "Refactor to pure functions or extract testable units",
        "rationale": "Orchestration function delegating to 4 functions",
        "implementation_steps": [
          "Extract logic into pure functions",
          "Compose smaller, testable functions",
          "Add unit tests for extracted functions"
        ],
        "related_items": []
      },
      "expected_impact": {
        "coverage_improvement": 0.0,
        "lines_reduction": 0,
        "complexity_reduction": 0.0,
        "risk_reduction": 0.07151912631125162
      },
      "transitive_coverage": null,
      "upstream_dependencies": 5,
      "downstream_dependencies": 4,
      "upstream_callers": [
        "test_session_persistence_and_recovery",
        "tests::test_concurrent_sessions",
        "test_session_state_machine",
        "test_session_progress_tracking",
        "tests::test_session_lifecycle"
      ],
      "downstream_callees": [
        "CommandRegistry::clone",
        "InMemorySessionManager::record_event",
        "CommandRegistry::get",
        "DirGuard::drop"
      ],
      "nesting_depth": 0,
      "function_length": 11,
      "cyclomatic_complexity": 2,
      "cognitive_complexity": 9
    }
  ],
  "total_impact": {
    "coverage_improvement": 0.0,
    "lines_reduction": 894,
    "complexity_reduction": 726.5,
    "risk_reduction": 638.3951994789174
  },
  "total_debt_score": 1389.4699999999998,
  "call_graph": {
    "nodes": {
      "./src/worktree/test_state.rs:test_list_sessions_with_state:124": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 9,
        "_lines": 30
      },
      "./src/commands/attributes.rs:test_schema_defaults:237": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "test_schema_defaults",
          "line": 237
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/interaction/mod.rs:tests::test_display_formatting:422": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_display_formatting",
          "line": 422
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/init/mod.rs:display_installation_summary:201": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "display_installation_summary",
          "line": 201
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 20
      },
      "./src/config/mod.rs:GlobalConfig::default:89": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "GlobalConfig::default",
          "line": 89
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/tests.rs:cook_tests::test_merge_conflicts:105": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_merge_conflicts",
          "line": 105
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/worktree/state.rs:WorktreeState::validate_initial_state:109": {
        "id": {
          "file": "./src/worktree/state.rs",
          "name": "WorktreeState::validate_initial_state",
          "line": 109
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 9,
        "_lines": 31
      },
      "./src/config/mod.rs:tests::test_command_string_parsing:244": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_string_parsing",
          "line": 244
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 4,
        "_lines": 2
      },
      "./src/worktree/manager.rs:tests::test_update_checkpoint_success:1046": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_success",
          "line": 1046
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/session/adapter.rs:SessionManagerAdapter::inner:37": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::inner",
          "line": 37
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/session/timing.rs:tests::test_timing_tracker:115": {
        "id": {
          "file": "./src/session/timing.rs",
          "name": "tests::test_timing_tracker",
          "line": 115
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/session/storage.rs:InMemoryStorage::save:126": {
        "id": {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::save",
          "line": 126
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/abstractions/git.rs:MockGitOperations::add_success_response:250": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/testing/mocks/git.rs:test_git_command_type_classify_other:289": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "test_git_command_type_classify_other",
          "line": 289
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/simple_state/cache.rs:CacheManager::new:17": {
        "id": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::new",
          "line": 17
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 9
      },
      "./src/config/command_validator.rs:CommandRegistry::get:222": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/dynamic_registry.rs:tests::test_apply_definition_defaults_no_defaults:1044": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_no_defaults",
          "line": 1044
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/mod_tests.rs:test_load_playbook_json:175": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_load_playbook_json",
          "line": 175
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/testing/mocks/git.rs:tests::test_git_command_type_classify_other:289": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_type_classify_other",
          "line": 289
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/worktree/manager.rs:tests::test_merge_session_success:874": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_merge_session_success",
          "line": 874
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/handlers/shell.rs:ShellHandler::default:140": {
        "id": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::default",
          "line": 140
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/coordinators/execution_tests.rs:TestCommandExecutor::execute:24": {
        "id": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "TestCommandExecutor::execute",
          "line": 24
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 16
      },
      "./src/init/mod.rs:is_git_repository:76": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 30
      },
      "./src/cook/interaction/display.rs:tests::test_command_output_display:620": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_command_output_display",
          "line": 620
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/commands/context.rs:ExecutionContext::get_metadata:105": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::get_metadata",
          "line": 105
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/interaction/prompts.rs:test_validate_choice_input_invalid_out_of_bounds:241": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "test_validate_choice_input_invalid_out_of_bounds",
          "line": 241
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/signal_handler.rs:setup_interrupt_handlers::<closure@1>:19": {
        "id": {
          "file": "./src/cook/signal_handler.rs",
          "name": "setup_interrupt_handlers::<closure@1>",
          "line": 19
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 24
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::add_text_response:484": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::add_text_response",
          "line": 484
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/orchestrator.rs:DirGuard::drop:2554": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2554
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/worktree/manager.rs:WorktreeManager::mark_session_abandoned:650": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::mark_session_abandoned",
          "line": 650
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/worktree/test_state.rs:test_state_updates:71": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_updates",
          "line": 71
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 8,
        "_lines": 34
      },
      "./src/cook/workflow/executor_tests.rs:test_handle_no_commits_error_general_command:968": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_handle_no_commits_error_general_command",
          "line": 968
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 26
      },
      "./src/testing/mocks/subprocess.rs:MockSubprocessManagerBuilder::with_success:41": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::with_success",
          "line": 41
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::prompt_yes_no:108": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::prompt_yes_no",
          "line": 108
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::iteration_start:280": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::iteration_start",
          "line": 280
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/main.rs:handle_clean_command:324": {
        "id": {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        },
        "is_entry_point": true,
        "is_test": false,
        "complexity": 22,
        "_lines": 71
      },
      "./src/cook/execution/runner.rs:MockCommandRunner::add_response:179": {
        "id": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::add_response",
          "line": 179
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/prompts.rs:test_prompt_choice_empty_choices:323": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "test_prompt_choice_empty_choices",
          "line": 323
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/config/dynamic_registry.rs:tests::test_dynamic_registry_creation:336": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_dynamic_registry_creation",
          "line": 336
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/context.rs:ExecutionContext::with_session_id:66": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_session_id",
          "line": 66
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/simple_state/tests.rs:test_state_manager_creation:10": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_state_manager_creation",
          "line": 10
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/git_ops.rs:git_in_dir:84": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "git_in_dir",
          "line": 84
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 15
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::start_spinner:547": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::start_spinner",
          "line": 547
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/session/state.rs:IterationTiming::complete:230": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "IterationTiming::complete",
          "line": 230
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 11
      },
      "./src/config/mapreduce.rs:test_parse_timeout_formats:208": {
        "id": {
          "file": "./src/config/mapreduce.rs",
          "name": "test_parse_timeout_formats",
          "line": 208
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 30
      },
      "./src/init/mod.rs:tests::test_validate_project_structure_with_symlinks:565": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_with_symlinks",
          "line": 565
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/retry.rs:test_is_transient_error_edge_cases:460": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_is_transient_error_edge_cases",
          "line": 460
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/commands/handlers/cargo.rs:CargoHandler::schema:27": {
        "id": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 34
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_determine_command_type_none_error:736": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_none_error",
          "line": 736
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::get_type_name:243": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::get_type_name",
          "line": 243
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 12
      },
      "./src/cook/tests.rs:test_merge_conflicts:105": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_merge_conflicts",
          "line": 105
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/cook/git_ops.rs:tests::test_is_git_repo:144": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_is_git_repo",
          "line": 144
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/worktree/manager.rs:test_update_checkpoint_increments_iteration:1109": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "test_update_checkpoint_increments_iteration",
          "line": 1109
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 8,
        "_lines": 59
      },
      "./src/simple_state/tests.rs:test::test_corrupted_cache_entry:305": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_corrupted_cache_entry",
          "line": 305
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/config/metadata_parser.rs:test_parse_frontmatter:351": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "test_parse_frontmatter",
          "line": 351
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 38
      },
      "./src/cook/coordinators/environment_tests.rs:test_verify_git_repository_success:14": {
        "id": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "test_verify_git_repository_success",
          "line": 14
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 20
      },
      "./src/cook/git_ops.rs:test_stage_all_changes_with_mock:430": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "test_stage_all_changes_with_mock",
          "line": 430
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 19
      },
      "./src/cook/execution/mapreduce.rs:AgentContext::to_interpolation_context:251": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 32
      },
      "./src/commands/context.rs:test_context_creation:144": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "test_context_creation",
          "line": 144
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/interaction/prompts.rs:test_validate_choice_input_empty_choices:260": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "test_validate_choice_input_empty_choices",
          "line": 260
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/retry.rs:await_retry_delay:76": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "await_retry_delay",
          "line": 76
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/worktree/test_state.rs:test_validate_initial_state_wrong_status:270": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_validate_initial_state_wrong_status",
          "line": 270
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 27
      },
      "./src/config/loader.rs:ConfigLoader::load_from_path::<closure@4>:82": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_from_path::<closure@4>",
          "line": 82
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_nested_array:1488": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_nested_array",
          "line": 1488
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/commands/handlers/cargo.rs:tests::test_cargo_test_with_features:287": {
        "id": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_test_with_features",
          "line": 287
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/testing/mocks/workflow.rs:MockWorkflowExecutor::get_executed_steps:50": {
        "id": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::get_executed_steps",
          "line": 50
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/execution/data_pipeline.rs:test_json_path_nested:915": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "test_json_path_nested",
          "line": 915
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/abstractions/git.rs:tests::test_mock_git_operations:358": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_operations",
          "line": 358
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/workflow/executor_tests.rs:test_get_step_display_name_test:815": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_get_step_display_name_test",
          "line": 815
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 29
      },
      "./src/cook/workflow/executor_tests.rs:MockAnalysisCoordinator::new:134": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockAnalysisCoordinator::new",
          "line": 134
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/execution/data_pipeline.rs:tests::test_json_path_basic:899": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_json_path_basic",
          "line": 899
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/git/mod.rs:test_stage_all:478": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "test_stage_all",
          "line": 478
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 22
      },
      "./src/cook/workflow/executor.rs:test_json_to_attribute_value_static_integer:1438": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "test_json_to_attribute_value_static_integer",
          "line": 1438
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/execution/mapreduce.rs:default_timeout:59": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "default_timeout",
          "line": 59
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::prompt_yes_no:42": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::prompt_yes_no",
          "line": 42
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/interaction/prompts.rs:tests::test_format_choice_input_prompt:295": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_format_choice_input_prompt",
          "line": 295
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/subprocess/mod.rs:SubprocessManager::mock:139": {
        "id": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::mock",
          "line": 139
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::display_warning:242": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_warning",
          "line": 242
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/command_parser.rs:tests::test_parse_command_string_with_variables:219": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_string_with_variables",
          "line": 219
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/coordinators/session.rs:DefaultSessionCoordinator::resume_session:118": {
        "id": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::resume_session",
          "line": 118
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 10
      },
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_argument_type:171": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_argument_type",
          "line": 171
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 9,
        "_lines": 41
      },
      "./src/cook/coordinators/workflow.rs:test_extract_command_string_structured:293": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "test_extract_command_string_structured",
          "line": 293
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/coordinators/execution_tests.rs:test_execute_command_success:76": {
        "id": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "test_execute_command_success",
          "line": 76
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/cook/session/adapter.rs:test_start_session:328": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "test_start_session",
          "line": 328
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/testing/mocks/session.rs:MockSessionManager::get_state:119": {
        "id": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::get_state",
          "line": 119
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/subprocess/mock.rs:MockProcessRunner::expect_command:36": {
        "id": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 17
      },
      "./src/testing/mocks/subprocess.rs:test_mock_subprocess_history:162": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "test_mock_subprocess_history",
          "line": 162
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/cook/execution/data_pipeline.rs:JsonPath::recursive_descent:325": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::recursive_descent",
          "line": 325
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 20
      },
      "./src/subprocess/mock.rs:MockProcessRunner::get_calls:92": {
        "id": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_calls",
          "line": 92
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/commands/result.rs:test_success_result:175": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "test_success_result",
          "line": 175
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/config/command.rs:test_analysis_config_with_defaults:721": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "test_analysis_config_with_defaults",
          "line": 721
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/interaction/display.rs:test_verbosity_filtering:608": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "test_verbosity_filtering",
          "line": 608
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/simple_state/tests.rs:test::test_concurrent_state_access:148": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_concurrent_state_access",
          "line": 148
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 11
      },
      "./src/subprocess/tests.rs:test_subprocess_manager:105": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "test_subprocess_manager",
          "line": 105
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/session/config.rs:tests::test_execution_mode:77": {
        "id": {
          "file": "./src/session/config.rs",
          "name": "tests::test_execution_mode",
          "line": 77
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/interaction/prompts.rs:tests::test_mock_prompter_choice:214": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_mock_prompter_choice",
          "line": 214
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/git_ops.rs:tests::test_mutex_synchronization:396": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_mutex_synchronization",
          "line": 396
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 6
      },
      "./src/session/storage.rs:InMemoryStorage::list:138": {
        "id": {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::list",
          "line": 138
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/execution/interpolation.rs:InterpolationEngine::interpolate:43": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 9,
        "_lines": 43
      },
      "./src/testing/mod.rs:MockClaudeBuilder::with_error:185": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::with_error",
          "line": 185
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/worktree/manager.rs:tests::test_update_checkpoint_increments_iteration:1109": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_increments_iteration",
          "line": 1109
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::info:182": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::info",
          "line": 182
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/cook/workflow/executor.rs:tests::test_get_current_head_in_regular_repo:1588": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_regular_repo",
          "line": 1588
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute:355": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 44,
        "_lines": 246
      },
      "./src/cook/coordinators/workflow.rs:test_extract_command_string_simple:286": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "test_extract_command_string_simple",
          "line": 286
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/orchestrator.rs:TestMockGitOperations::get_current_branch:1558": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::get_current_branch",
          "line": 1558
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/simple_state/state.rs:StateManager::get_history:141": {
        "id": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::get_history",
          "line": 141
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 9,
        "_lines": 25
      },
      "./src/testing/config.rs:TestConfiguration::builder:44": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/coordinators/workflow_tests.rs:tests::test_execute_workflow_workflow_step_commands:428": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_workflow_step_commands",
          "line": 428
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/commands/result.rs:tests::test_from_output:191": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "tests::test_from_output",
          "line": 191
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/mocks/config.rs:MockConfigLoaderBuilder::build:38": {
        "id": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoaderBuilder::build",
          "line": 38
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::process_glob_pattern:971": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::process_glob_pattern",
          "line": 971
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 33
      },
      "./src/config/command.rs:tests::test_command_from_string:546": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_from_string",
          "line": 546
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/config/command_parser.rs:tests::test_parse_command_with_variable:152": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_with_variable",
          "line": 152
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/execution/mapreduce.rs:default_max_parallel:55": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "default_max_parallel",
          "line": 55
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/commands/result.rs:CommandError::to_result:137": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "CommandError::to_result",
          "line": 137
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/session/state.rs:SessionState::is_terminal:114": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "SessionState::is_terminal",
          "line": 114
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::new:26": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 20
      },
      "./src/config/loader.rs:tests::test_load_from_path_nonexistent_file:320": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_from_path_nonexistent_file",
          "line": 320
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/abstractions/git.rs:test_git_command_failure:455": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "test_git_command_failure",
          "line": 455
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/testing/helpers/assertions.rs:assert_matches_pattern:121": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_matches_pattern",
          "line": 121
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 13
      },
      "./src/cook/retry.rs:format_subprocess_error:168": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 9,
        "_lines": 49
      },
      "./src/commands/handlers/shell.rs:test_shell_handler_dry_run:200": {
        "id": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "test_shell_handler_dry_run",
          "line": 200
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/git/scenario.rs:test_scenario_mock_clean_repo:522": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "test_scenario_mock_clean_repo",
          "line": 522
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/cook/interaction/display.rs:test_debug_output:629": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "test_debug_output",
          "line": 629
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/mod.rs:cook:35": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 20,
        "_lines": 87
      },
      "./src/commands/attributes.rs:AttributeValue::from:72": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::from",
          "line": 72
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/commands/handlers/cargo.rs:test_cargo_dry_run:322": {
        "id": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "test_cargo_dry_run",
          "line": 322
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 24
      },
      "./src/cook/interaction/display.rs:BoxChars::unicode:158": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "BoxChars::unicode",
          "line": 158
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::default:182": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::default",
          "line": 182
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/helpers/assertions.rs:assert_file_contains:63": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_contains",
          "line": 63
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 12
      },
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::new:30": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::new",
          "line": 30
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::should_stop_early_in_test_mode:1349": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::should_stop_early_in_test_mode",
          "line": 1349
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 9
      },
      "./src/cook/retry.rs:execute_with_retry:30": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 8,
        "_lines": 55
      },
      "./src/cook/interaction/display.rs:MockProgressDisplay::start_spinner:390": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::start_spinner",
          "line": 390
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/coordinators/workflow_tests.rs:test_execute_workflow_empty_commands:529": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "test_execute_workflow_empty_commands",
          "line": 529
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 23
      },
      "./src/cook/mod_tests.rs:test_load_playbook_yaml:152": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_load_playbook_yaml",
          "line": 152
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 22
      },
      "./src/simple_state/tests.rs:test_state_corruption_recovery:104": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_state_corruption_recovery",
          "line": 104
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 26
      },
      "./src/cook/coordinators/session.rs:DefaultSessionCoordinator::update_status:73": {
        "id": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::update_status",
          "line": 73
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/mocks/fs.rs:tests::test_mock_fs_list_dir:289": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_list_dir",
          "line": 289
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/orchestrator.rs:tests::test_process_glob_pattern_recursive:2435": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_process_glob_pattern_recursive",
          "line": 2435
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/testing/fixtures/mod.rs:Fixtures::git_subprocess:61": {
        "id": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::git_subprocess",
          "line": 61
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/mod_tests.rs:core_tests::test_run_single_iteration:491": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_run_single_iteration",
          "line": 491
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/abstractions/git.rs:MockGitOperations::new:236": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::new",
          "line": 236
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/testing/mocks/git.rs:tests::test_mock_git_builder:318": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_builder",
          "line": 318
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mocks/git.rs:test_git_command_type_classify_commit:273": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "test_git_command_type_classify_commit",
          "line": 273
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/abstractions/claude.rs:test_add_error_response:770": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "test_add_error_response",
          "line": 770
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/config/mod.rs:Config::get_spec_dir:148": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "Config::get_spec_dir",
          "line": 148
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/abstractions/git.rs:RealGitOperations::new:63": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::new",
          "line": 63
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/retry.rs:test_error_formatting_command_not_found:256": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_error_formatting_command_not_found",
          "line": 256
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/coordinators/workflow.rs:tests::test_workflow_should_continue:197": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_workflow_should_continue",
          "line": 197
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/handlers/file.rs:tests::test_file_exists:363": {
        "id": {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_exists",
          "line": 363
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/git/parsers.rs:tests::test_parse_status_output_conflict:290": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_status_output_conflict",
          "line": 290
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_float:1445": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_float",
          "line": 1445
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::add_yes_no_response:480": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::add_yes_no_response",
          "line": 480
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/command.rs:parse_test_workflow_config::<closure@36>:831": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "parse_test_workflow_config::<closure@36>",
          "line": 831
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/mod_tests.rs:core_tests::test_run_analysis:247": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_run_analysis",
          "line": 247
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/init/mod.rs:tests::test_handle_existing_commands_no_tty:513": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_handle_existing_commands_no_tty",
          "line": 513
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/orchestrator.rs:TestMockGitOperations::check_git_status:1542": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::check_git_status",
          "line": 1542
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/coordinators/workflow_tests.rs:MockSpinner::fail:81": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockSpinner::fail",
          "line": 81
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 1
      },
      "./src/cook/execution/interpolation.rs:test_shell_escape:464": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "test_shell_escape",
          "line": 464
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_workflow_execution_single_iteration:1061": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_workflow_execution_single_iteration",
          "line": 1061
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/cook/interaction/display.rs:test_verbosity_levels:568": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "test_verbosity_levels",
          "line": 568
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/config/command_parser.rs:test_parse_command_string_with_variables:219": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "test_parse_command_string_with_variables",
          "line": 219
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/git_ops.rs:test_mutex_synchronization:396": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "test_mutex_synchronization",
          "line": 396
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 28
      },
      "./src/cook/retry.rs:handle_command_error:98": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "handle_command_error",
          "line": 98
        },
        "is_entry_point": true,
        "is_test": false,
        "complexity": 4,
        "_lines": 22
      },
      "./src/cook/workflow/executor_tests.rs:test_is_focus_tracking_test:950": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_is_focus_tracking_test",
          "line": 950
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/cook/orchestrator.rs:TestMockGitOperations::get_last_commit_message:1538": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::get_last_commit_message",
          "line": 1538
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::create_session:96": {
        "id": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::create_session",
          "line": 96
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 4,
        "_lines": 19
      },
      "./src/cook/session/adapter.rs:test_save_and_load_state:448": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "test_save_and_load_state",
          "line": 448
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/git/parsers.rs:parse_header_line:34": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "parse_header_line",
          "line": 34
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 11
      },
      "./src/cook/coordinators/session.rs:DefaultSessionCoordinator::new:50": {
        "id": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/config/mod.rs:test_get_spec_dir:519": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_get_spec_dir",
          "line": 519
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/cook/workflow/executor_tests.rs:test_shell_command_with_on_failure_retry:1209": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_shell_command_with_on_failure_retry",
          "line": 1209
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 68
      },
      "./src/cook/coordinators/workflow.rs:tests::test_extract_workflow_step_command_claude:322": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_workflow_step_command_claude",
          "line": 322
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/git/scenario.rs:format_status_output:296": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "format_status_output",
          "line": 296
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 10,
        "_lines": 57
      },
      "./src/cook/git_ops.rs:mock_tests::test_create_commit_with_mock:450": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "mock_tests::test_create_commit_with_mock",
          "line": 450
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 6
      },
      "./src/cook/tests.rs:git_ops_tests::test_concurrent_git_operations:522": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_concurrent_git_operations",
          "line": 522
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 4
      },
      "./src/config/command.rs:Command::with_env:466": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "Command::with_env",
          "line": 466
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/mocks/fs.rs:tests::test_mock_fs_basic_operations:216": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_basic_operations",
          "line": 216
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/testing/mocks/worktree.rs:MockWorktreeManagerBuilder::fail_on_cleanup:40": {
        "id": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManagerBuilder::fail_on_cleanup",
          "line": 40
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mod.rs:test_helpers::create_test_files:285": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "test_helpers::create_test_files",
          "line": 285
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 1
      },
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::command_output:94": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::command_output",
          "line": 94
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/git/types.rs:GitStatus::is_clean:45": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::is_clean",
          "line": 45
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 9
      },
      "./src/cook/git_ops.rs:get_last_commit_message:35": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "get_last_commit_message",
          "line": 35
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/interaction/display.rs:MockSpinnerHandle::success:463": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockSpinnerHandle::success",
          "line": 463
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/subprocess/git.rs:GitRunnerImpl::run_command:229": {
        "id": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::run_command",
          "line": 229
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 11
      },
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::format_choice_prompt:57": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::format_choice_prompt",
          "line": 57
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 10
      },
      "./src/config/dynamic_registry.rs:test_edge_cases_json_values:716": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_edge_cases_json_values",
          "line": 716
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 50
      },
      "./src/cook/git_ops.rs:tests::test_stage_all_changes_success:265": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_stage_all_changes_success",
          "line": 265
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::step_start:294": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::step_start",
          "line": 294
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::convert_to_workflow_step:119": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::convert_to_workflow_step",
          "line": 119
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/config/command.rs:test_command_with_analysis_config:698": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "test_command_with_analysis_config",
          "line": 698
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/git/mod.rs:create_test_runner:382": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "create_test_runner",
          "line": 382
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/helpers/assertions.rs:tests::test_assert_ok_macro:206": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_ok_macro",
          "line": 206
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/worktree/tests.rs:setup_test_repo:6": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 6,
        "_lines": 22
      },
      "./src/worktree/manager.rs:test_get_cleanup_config_from_env:951": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "test_get_cleanup_config_from_env",
          "line": 951
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/subprocess/mod.rs:SubprocessManager::new:102": {
        "id": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::new",
          "line": 102
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/mod.rs:cook_tests::test_create_orchestrator:404": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_create_orchestrator",
          "line": 404
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/subprocess/tests.rs:test_process_command_builder:158": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "test_process_command_builder",
          "line": 158
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/cook/interaction/display.rs:tests::test_iteration_display:586": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_iteration_display",
          "line": 586
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/config.rs:test_should_simulate_no_changes:218": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "test_should_simulate_no_changes",
          "line": 218
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/worktree/test_state.rs:test_validate_initial_state_valid:214": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_validate_initial_state_valid",
          "line": 214
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 27
      },
      "./src/cook/execution/claude.rs:tests::test_claude_command_execution:222": {
        "id": {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_command_execution",
          "line": 222
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/mod_tests.rs:core_tests::git_command_exists:48": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::git_command_exists",
          "line": 48
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 1
      },
      "./src/cook/workflow/executor.rs:test_json_to_attribute_value_static_null:1466": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "test_json_to_attribute_value_static_null",
          "line": 1466
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/mocks/fs.rs:MockFileSystem::get_all_files:138": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::get_all_files",
          "line": 138
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/metadata_parser.rs:tests::test_extract_description_multiline:448": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_extract_description_multiline",
          "line": 448
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/command_discovery.rs:test_scan_commands_filters_correctly:138": {
        "id": {
          "file": "./src/config/command_discovery.rs",
          "name": "test_scan_commands_filters_correctly",
          "line": 138
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 26
      },
      "./src/cook/git_ops.rs:tests::test_public_api_functions_in_real_repo:369": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_public_api_functions_in_real_repo",
          "line": 369
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 7
      },
      "./src/cook/interaction/prompts.rs:tests::test_validate_choice_input_invalid_negative:247": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_validate_choice_input_invalid_negative",
          "line": 247
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 1
      },
      "./src/cook/signal_handler.rs:update_interrupted_state:48": {
        "id": {
          "file": "./src/cook/signal_handler.rs",
          "name": "update_interrupted_state",
          "line": 48
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 13
      },
      "./src/testing/mocks/git.rs:MockGitOperations::builder:127": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::builder",
          "line": 127
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/abstractions/git.rs:test_git_command_success:442": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "test_git_command_success",
          "line": 442
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::format_choice_input_prompt:68": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::format_choice_input_prompt",
          "line": 68
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/simple_state/tests.rs:test_cache_manager_edge_cases:205": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_cache_manager_edge_cases",
          "line": 205
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 22
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_execute_claude_command:995": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_claude_command",
          "line": 995
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/cook/workflow/executor.rs:test_json_to_attribute_value_static_nested_object:1531": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "test_json_to_attribute_value_static_nested_object",
          "line": 1531
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 7,
        "_lines": 43
      },
      "./src/cook/interaction/display.rs:SimpleSpinnerHandle::fail:324": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "SimpleSpinnerHandle::fail",
          "line": 324
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/cook/coordinators/workflow_tests.rs:MockSpinner::success:80": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockSpinner::success",
          "line": 80
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 1
      },
      "./src/cook/mod_tests.rs:core_tests::test_ensure_mmm_directory:367": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_ensure_mmm_directory",
          "line": 367
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/worktree/manager.rs:tests::test_merge_session_claude_cli_failure:892": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_merge_session_claude_cli_failure",
          "line": 892
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/config/mod.rs:tests::test_get_global_mmm_dir_path_structure:684": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_global_mmm_dir_path_structure",
          "line": 684
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_string:1431": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_string",
          "line": 1431
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute:1388": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 1388
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/abstractions/exit_status.rs:ExitStatus::from_raw:15": {
        "id": {
          "file": "./src/abstractions/exit_status.rs",
          "name": "ExitStatus::from_raw",
          "line": 15
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/helpers/assertions.rs:test_assert_in_range:194": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "test_assert_in_range",
          "line": 194
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/interaction/display.rs:MockProgressDisplay::progress:376": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::progress",
          "line": 376
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/metadata_parser.rs:MetadataParser::parse_variables_to_args:165": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_variables_to_args",
          "line": 165
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 30
      },
      "./src/cook/tests.rs:workflow_parsing_tests::test_parse_full_default_workflow:292": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "workflow_parsing_tests::test_parse_full_default_workflow",
          "line": 292
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 4,
        "_lines": 6
      },
      "./src/cook/coordinators/execution_tests.rs:test_execute_with_retry:154": {
        "id": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "test_execute_with_retry",
          "line": 154
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 25
      },
      "./src/cook/mod_tests.rs:core_tests::test_load_playbook_json:175": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_load_playbook_json",
          "line": 175
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::start_spinner:73": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::start_spinner",
          "line": 73
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_test_command:1020": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_test_command",
          "line": 1020
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 17,
        "_lines": 131
      },
      "./src/cook/workflow/executor_tests.rs:MockClaudeExecutor::check_claude_cli:66": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockClaudeExecutor::check_claude_cli",
          "line": 66
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/git.rs:tests::test_git_command_type_classify_status:241": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_type_classify_status",
          "line": 241
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/config/loader.rs:test_load_project_config:257": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "test_load_project_config",
          "line": 257
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 6,
        "_lines": 32
      },
      "./src/worktree/manager.rs:tests::test_get_cleanup_config_from_env:951": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_get_cleanup_config_from_env",
          "line": 951
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/execution/data_pipeline.rs:FilterExpression::parse_value:546": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse_value",
          "line": 546
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 35
      },
      "./src/abstractions/claude.rs:tests::test_mock_claude_client:709": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_client",
          "line": 709
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/orchestrator.rs:TestMockGitOperations::create_worktree:1554": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::create_worktree",
          "line": 1554
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/prompts.rs:tests::test_validate_choice_input_invalid_non_numeric:252": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_validate_choice_input_invalid_non_numeric",
          "line": 252
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/worktree/tests.rs:test_cleanup_session:119": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 6,
        "_lines": 29
      },
      "./src/subprocess/git.rs:GitRunnerImpl::add:121": {
        "id": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::add",
          "line": 121
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 20
      },
      "./src/config/command_validator.rs:test_validate_missing_required_args:445": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "test_validate_missing_required_args",
          "line": 445
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/mod_tests.rs:test_ensure_mmm_directory:367": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_ensure_mmm_directory",
          "line": 367
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/cook/signal_handler.rs:test_setup_interrupt_handlers:185": {
        "id": {
          "file": "./src/cook/signal_handler.rs",
          "name": "test_setup_interrupt_handlers",
          "line": 185
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/commands/handlers/cargo.rs:tests::test_cargo_build:254": {
        "id": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_build",
          "line": 254
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/testing/mocks/config.rs:MockConfigLoader::new:59": {
        "id": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::new",
          "line": 59
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/tests.rs:test_parse_workflow_with_multiple_outputs:343": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_parse_workflow_with_multiple_outputs",
          "line": 343
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 26
      },
      "./src/testing/test_mocks.rs:TestMockSetup::setup_metrics_collection::<closure@22>:288": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection::<closure@22>",
          "line": 288
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 4
      },
      "./src/git/scenario.rs:test_scenario_mock_command_logging:608": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "test_scenario_mock_command_logging",
          "line": 608
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/config/metadata_parser.rs:MetadataParser::default:269": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::default",
          "line": 269
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/helpers/assertions.rs:test_assert_approx_eq:200": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "test_assert_approx_eq",
          "line": 200
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/config/command.rs:tests::test_workflow_config_with_new_syntax:804": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_config_with_new_syntax",
          "line": 804
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/mod_tests.rs:core_tests::handle_worktree_merge:103": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::handle_worktree_merge",
          "line": 103
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 1
      },
      "./src/cook/tests.rs:git_ops_tests::test_git_command_tracking:545": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_git_command_tracking",
          "line": 545
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/cook/interaction/prompts.rs:MockPrompter::prompt_text:154": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "MockPrompter::prompt_text",
          "line": 154
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 12
      },
      "./src/config/metadata_parser.rs:MetadataParser::parse_command_file:32": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_command_file",
          "line": 32
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 20
      },
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::prompt_text:414": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::prompt_text",
          "line": 414
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/mod.rs:tests::test_get_claude_api_key_config_precedence_over_env:462": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_claude_api_key_config_precedence_over_env",
          "line": 462
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 10
      },
      "./src/cook/coordinators/workflow.rs:test_extract_workflow_step_command_claude:322": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "test_extract_workflow_step_command_claude",
          "line": 322
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/worktree/tests.rs:test_worktree_manager_creation:37": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_worktree_manager_creation",
          "line": 37
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 17
      },
      "./src/testing/helpers/assertions.rs:assert_approx_eq:145": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_approx_eq",
          "line": 145
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::prompt_user:183": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::prompt_user",
          "line": 183
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/prompts.rs:tests::test_validate_choice_input_invalid_out_of_bounds:241": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_validate_choice_input_invalid_out_of_bounds",
          "line": 241
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/cook/interaction/display.rs:tests::test_progress_display_success:553": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_success",
          "line": 553
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/cook/mod_tests.rs:core_tests::test_git_command_exists:326": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_git_command_exists",
          "line": 326
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 1
      },
      "./src/abstractions/git.rs:real_git_tests::test_create_worktree_invalid_path:526": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_create_worktree_invalid_path",
          "line": 526
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 2
      },
      "./src/config/mod.rs:tests::test_command_validation:292": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_validation",
          "line": 292
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 6
      },
      "./src/testing/mod.rs:tests::test_fixtures:334": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_fixtures",
          "line": 334
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/testing/mocks/session.rs:MockSessionManager::start_session:71": {
        "id": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::start_session",
          "line": 71
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 8
      },
      "./src/cook/git_ops.rs:test_check_git_status_with_changes:348": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "test_check_git_status_with_changes",
          "line": 348
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/orchestrator.rs:test_variable_resolution_logic:2014": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_variable_resolution_logic",
          "line": 2014
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 26
      },
      "./src/config/mapreduce.rs:deserialize_timeout:97": {
        "id": {
          "file": "./src/config/mapreduce.rs",
          "name": "deserialize_timeout",
          "line": 97
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 8,
        "_lines": 36
      },
      "./src/cook/git_ops.rs:stage_all_changes_in_dir:112": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "stage_all_changes_in_dir",
          "line": 112
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/commands/attributes.rs:tests::test_schema_validation:217": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_validation",
          "line": 217
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/subprocess/runner.rs:ExitStatusHelper::failure:61": {
        "id": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::failure",
          "line": 61
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/mod.rs:cook::<closure@1>:77": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "cook::<closure@1>",
          "line": 77
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/command_discovery.rs:tests::test_scan_commands_filters_correctly:138": {
        "id": {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_scan_commands_filters_correctly",
          "line": 138
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/coordinators/workflow_tests.rs:test_display_progress:282": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "test_display_progress",
          "line": 282
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/config/dynamic_registry.rs:test_permissive_validation:389": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_permissive_validation",
          "line": 389
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 29
      },
      "./src/cook/session/adapter.rs:tests::test_state_conversion:382": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_state_conversion",
          "line": 382
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/session/adapter.rs:test_session_lifecycle:341": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "test_session_lifecycle",
          "line": 341
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 24
      },
      "./src/subprocess/mock.rs:MockProcessRunner::new:29": {
        "id": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::new",
          "line": 29
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/session/adapter.rs:SessionManagerAdapter::get_state:234": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::get_state",
          "line": 234
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 11,
        "_lines": 55
      },
      "./src/cook/execution/data_pipeline.rs:test_json_path_basic:899": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "test_json_path_basic",
          "line": 899
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::should_stop_early_in_test_mode::<closure@25>:1354": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::should_stop_early_in_test_mode::<closure@25>",
          "line": 1354
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 1
      },
      "./src/cook/coordinators/workflow.rs:TestCoordinator::execute_step:209": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::execute_step",
          "line": 209
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::command_output:450": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::command_output",
          "line": 450
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/simple_state/tests.rs:test::test_history_sorting:254": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_sorting",
          "line": 254
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 6
      },
      "./src/simple_state/tests.rs:test_concurrent_state_access::<closure@9>:158": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_concurrent_state_access::<closure@9>",
          "line": 158
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 13
      },
      "./src/session/state.rs:SessionState::current_iteration:127": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "SessionState::current_iteration",
          "line": 127
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/config/loader.rs:test_load_with_default_path:215": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "test_load_with_default_path",
          "line": 215
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 6,
        "_lines": 26
      },
      "./src/cook/session/migration.rs:tests::test_migration_example:153": {
        "id": {
          "file": "./src/cook/session/migration.rs",
          "name": "tests::test_migration_example",
          "line": 153
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/session/mod.rs:SessionId::default:48": {
        "id": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::default",
          "line": 48
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/prompts.rs:test_validate_choice_input_invalid_negative:247": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "test_validate_choice_input_invalid_negative",
          "line": 247
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/commands/result.rs:CommandResult::is_error:89": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::is_error",
          "line": 89
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/git/parsers.rs:create_worktree_from_line:201": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "create_worktree_from_line",
          "line": 201
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 15
      },
      "./src/init/mod.rs:tests::test_validate_project_structure_not_git_repo:550": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_not_git_repo",
          "line": 550
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/mod.rs:MockClaudeBuilder::build:191": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::build",
          "line": 191
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/execution/claude.rs:test_claude_executor_check:192": {
        "id": {
          "file": "./src/cook/execution/claude.rs",
          "name": "test_claude_executor_check",
          "line": 192
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/cook/mod_tests.rs:core_tests::test_extract_spec_from_git_error:315": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git_error",
          "line": 315
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/commands/attributes.rs:AttributeValue::as_number:28": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_number",
          "line": 28
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/config/workflow.rs:WorkflowConfig::deserialize:14": {
        "id": {
          "file": "./src/config/workflow.rs",
          "name": "WorkflowConfig::deserialize",
          "line": 14
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 21
      },
      "./src/simple_state/tests.rs:test_concurrent_state_access:148": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_concurrent_state_access",
          "line": 148
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 40
      },
      "./src/subprocess/mock.rs:MockProcessRunner::run_streaming:135": {
        "id": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run_streaming",
          "line": 135
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/prompts.rs:test_format_choice_input_prompt:295": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "test_format_choice_input_prompt",
          "line": 295
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/testing/mocks/git.rs:MockGitOperationsBuilder::is_repo:56": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::is_repo",
          "line": 56
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/coordinators/workflow.rs:tests::test_extract_workflow_step_command_empty:383": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_workflow_step_command_empty",
          "line": 383
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/init/mod.rs:tests::test_init_run_already_initialized:634": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_already_initialized",
          "line": 634
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/testing/mocks/git.rs:MockGitOperationsBuilder::with_response:82": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_response",
          "line": 82
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/orchestrator.rs:tests::test_workflow_detects_structured_commands:1950": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_workflow_detects_structured_commands",
          "line": 1950
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/interaction/prompts.rs:test_format_invalid_choice_message:311": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "test_format_invalid_choice_message",
          "line": 311
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/session/storage.rs:FileSessionStorage::save:44": {
        "id": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::save",
          "line": 44
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 11
      },
      "./src/cook/session/adapter.rs:SessionManagerAdapter::load_state:305": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::load_state",
          "line": 305
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/mod.rs:TestContext::with_mocks:49": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::with_mocks",
          "line": 49
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 15
      },
      "./src/cook/coordinators/workflow.rs:TestCoordinator::execute_workflow:217": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::execute_workflow",
          "line": 217
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/execution/data_pipeline.rs:JsonPath::compile:187": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::compile",
          "line": 187
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 22,
        "_lines": 71
      },
      "./src/simple_state/cache.rs:CacheManager::clear:86": {
        "id": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::clear",
          "line": 86
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 10
      },
      "./src/cook/orchestrator.rs:TestMockGitOperations::git_command:1522": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::git_command",
          "line": 1522
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 11
      },
      "./src/config/command.rs:test_commit_required_serialization:645": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "test_commit_required_serialization",
          "line": 645
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 27
      },
      "./src/testing/mod.rs:MockGitBuilder::new:123": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::new",
          "line": 123
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::display_error:533": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_error",
          "line": 533
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/interaction/prompts.rs:test_format_choice_prompt_empty:281": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "test_format_choice_prompt_empty",
          "line": 281
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/test_mocks.rs:CargoMocks::build_success:31": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::build_success",
          "line": 31
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/git_ops.rs:tests::create_test_commit:209": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/git/scenario.rs:GitScenarioMock::new:51": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::verbosity:164": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::verbosity",
          "line": 164
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/commands/handlers/file.rs:FileHandler::schema:29": {
        "id": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::schema",
          "line": 29
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 22
      },
      "./src/cook/workflow/executor.rs:tests::test_get_current_head_error_handling:1716": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_error_handling",
          "line": 1716
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/config/command.rs:Command::with_option:439": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "Command::with_option",
          "line": 439
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/config.rs:TestConfigurations::with_no_changes:153": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::with_no_changes",
          "line": 153
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/testing/mocks/workflow.rs:MockWorkflowExecutor::with_outputs:44": {
        "id": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::with_outputs",
          "line": 44
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/interaction/mod.rs:test_default_user_interaction_creation:355": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "test_default_user_interaction_creation",
          "line": 355
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/git/mod.rs:tests::test_is_clean:600": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_clean",
          "line": 600
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_and_validate_command:1231": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_and_validate_command",
          "line": 1231
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 18,
        "_lines": 87
      },
      "./src/config/metadata_parser.rs:test_parse_sections:390": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "test_parse_sections",
          "line": 390
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 35
      },
      "./src/subprocess/builder.rs:ProcessCommandBuilder::new:12": {
        "id": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 13
      },
      "./src/cook/execution/data_pipeline.rs:JsonPath::parse_field:259": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::parse_field",
          "line": 259
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 15
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::command_output:308": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::command_output",
          "line": 308
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/config.rs:tests::test_common_configurations:230": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_common_configurations",
          "line": 230
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/cook/interaction/mod.rs:MockSpinnerHandle::success:339": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockSpinnerHandle::success",
          "line": 339
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/simple_state/tests.rs:test_cache_expiration:86": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_cache_expiration",
          "line": 86
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/cook/coordinators/workflow.rs:test_extract_workflow_step_command_empty:383": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "test_extract_workflow_step_command_empty",
          "line": 383
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/cook/tests.rs:test_invalid_spec_id:184": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_invalid_spec_id",
          "line": 184
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 27
      },
      "./src/session/persistence.rs:PersistedSession::last_iteration:52": {
        "id": {
          "file": "./src/session/persistence.rs",
          "name": "PersistedSession::last_iteration",
          "line": 52
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/fixtures/mod.rs:Fixtures::rate_limited_claude:48": {
        "id": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::rate_limited_claude",
          "line": 48
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/orchestrator.rs:test_execute_structured_workflow_with_outputs:2540": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_execute_structured_workflow_with_outputs",
          "line": 2540
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 84
      },
      "./src/config/mod.rs:test_config_new_creates_defaults:397": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_config_new_creates_defaults",
          "line": 397
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::step_start:148": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::step_start",
          "line": 148
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::with_project_structure:171": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_project_structure",
          "line": 171
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 24
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::create_agent_branch:860": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::create_agent_branch",
          "line": 860
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 20
      },
      "./src/cook/mod_tests.rs:run_analysis:33": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "run_analysis",
          "line": 33
        },
        "is_entry_point": true,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/tests.rs:test_error_formatting_edge_cases:498": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_error_formatting_edge_cases",
          "line": 498
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::display_info:235": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_info",
          "line": 235
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/attributes.rs:AttributeValue::from:84": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::from",
          "line": 84
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/helpers/mod.rs:run_command:81": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "run_command",
          "line": 81
        },
        "is_entry_point": true,
        "is_test": true,
        "complexity": 3,
        "_lines": 15
      },
      "./src/commands/handlers/git.rs:GitHandler::examples:211": {
        "id": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::examples",
          "line": 211
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/execution/claude.rs:ClaudeExecutorImpl::execute:169": {
        "id": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::execute",
          "line": 169
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 15
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::iteration_start:140": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::iteration_start",
          "line": 140
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/simple_state/types.rs:SessionRecord::default:60": {
        "id": {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::default",
          "line": 60
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/git/parsers.rs:test_git_status_helper_methods:358": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "test_git_status_helper_methods",
          "line": 358
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/init/mod.rs:install_templates:178": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "install_templates",
          "line": 178
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 22
      },
      "./src/testing/mocks/claude.rs:MockClaudeClient::default:82": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::default",
          "line": 82
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::list_sessions:126": {
        "id": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::list_sessions",
          "line": 126
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 7
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::verbosity:322": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::verbosity",
          "line": 322
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/coordinators/execution_tests.rs:test_execute_command_failure:98": {
        "id": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "test_execute_command_failure",
          "line": 98
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/cook/mod_tests.rs:core_tests::validate_arguments:57": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::validate_arguments",
          "line": 57
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 1
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_step:1397": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 1397
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/testing/mocks/subprocess.rs:MockSubprocessManagerBuilder::build:60": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::build",
          "line": 60
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/mod_tests.rs:handle_worktree_merge:103": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "handle_worktree_merge",
          "line": 103
        },
        "is_entry_point": true,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/config/metadata_parser.rs:MetadataParser::extract_variables_section:127": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_variables_section",
          "line": 127
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::command_output:156": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::command_output",
          "line": 156
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/git/mod.rs:test_switch_branch:645": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "test_switch_branch",
          "line": 645
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 22
      },
      "./src/cook/interaction/display.rs:test_mock_spinner:498": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "test_mock_spinner",
          "line": 498
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/cook/retry.rs:test_execute_with_retry_exponential_backoff:325": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_execute_with_retry_exponential_backoff",
          "line": 325
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 20
      },
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::apply_defaults:94": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_defaults",
          "line": 94
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 8
      },
      "./src/testing/mocks/claude.rs:MockClaudeClient::code_review:169": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 169
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 7,
        "_lines": 31
      },
      "./src/testing/config.rs:tests::test_should_simulate_no_changes:218": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_should_simulate_no_changes",
          "line": 218
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/git/mod.rs:GitCommandRunner::switch_branch:286": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::switch_branch",
          "line": 286
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 15
      },
      "./src/testing/mocks/git.rs:tests::test_git_command_type_classify_add:263": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_type_classify_add",
          "line": 263
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/workflow/executor_tests.rs:test_determine_command_type_none_error:736": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_determine_command_type_none_error",
          "line": 736
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 28
      },
      "./src/testing/helpers/assertions.rs:test_assert_contains:187": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "test_assert_contains",
          "line": 187
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/coordinators/session_tests.rs:tests::test_start_session_failure:32": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session_failure",
          "line": 32
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_handle_test_mode_execution_success:870": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_handle_test_mode_execution_success",
          "line": 870
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/mod_tests.rs:core_tests::format_session_summary:112": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::format_session_summary",
          "line": 112
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 3
      },
      "./src/cook/execution/interpolation.rs:tests::test_nested_property_access:387": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_nested_property_access",
          "line": 387
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/subprocess/builder.rs:ProcessCommandBuilder::build:82": {
        "id": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::build",
          "line": 82
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/mod.rs:test_get_global_mmm_dir_success:673": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_get_global_mmm_dir_success",
          "line": 673
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::box_chars:122": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::box_chars",
          "line": 122
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 8
      },
      "./src/cook/execution/data_pipeline.rs:tests::test_filter_comparison:933": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_filter_comparison",
          "line": 933
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/interaction/display.rs:tests::test_verbosity_filtering:608": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_verbosity_filtering",
          "line": 608
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/mod_tests.rs:test_create_session_state:386": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_create_session_state",
          "line": 386
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/testing/test_mocks.rs:TestMockSetup::setup_metrics_collection:264": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 7,
        "_lines": 62
      },
      "./src/cook/coordinators/workflow.rs:test_extract_workflow_step_command_priority:447": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "test_extract_workflow_step_command_priority",
          "line": 447
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 25
      },
      "./src/cook/tests.rs:test_parse_simple_workflow_yaml:244": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_parse_simple_workflow_yaml",
          "line": 244
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 17
      },
      "./src/cook/coordinators/environment_tests.rs:tests::test_verify_git_repository_not_a_repo:35": {
        "id": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_not_a_repo",
          "line": 35
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/retry.rs:tests::test_execute_with_retry_exponential_backoff:325": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_exponential_backoff",
          "line": 325
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/init/templates.rs:get_all_templates:17": {
        "id": {
          "file": "./src/init/templates.rs",
          "name": "get_all_templates",
          "line": 17
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 34
      },
      "./src/cook/session/state.rs:SessionState::duration:105": {
        "id": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::duration",
          "line": 105
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/subprocess/builder.rs:ProcessCommandBuilder::suppress_stderr:77": {
        "id": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::suppress_stderr",
          "line": 77
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/execution/runner.rs:test_mock_command_runner:213": {
        "id": {
          "file": "./src/cook/execution/runner.rs",
          "name": "test_mock_command_runner",
          "line": 213
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/commands/context.rs:tests::test_context_creation:144": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_context_creation",
          "line": 144
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::display_warning:120": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_warning",
          "line": 120
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/session/adapter.rs:SessionManagerAdapter::save_state:290": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::save_state",
          "line": 290
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 14
      },
      "./src/cook/session/adapter.rs:SessionManagerAdapter::start_session:83": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::start_session",
          "line": 83
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 20
      },
      "./src/session/state.rs:IterationTiming::new:219": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "IterationTiming::new",
          "line": 219
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/coordinators/environment.rs:DefaultEnvironmentCoordinator::new:64": {
        "id": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::new",
          "line": 64
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 12
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::start_spinner:211": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::start_spinner",
          "line": 211
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/cook/coordinators/session_tests.rs:tests::test_error_propagation:246": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_error_propagation",
          "line": 246
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/workflow/executor_tests.rs:MockSessionManager::load_state:124": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::load_state",
          "line": 124
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/coordinators/session_tests.rs:tests::test_resume_session:176": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/testing/mocks/git.rs:tests::test_git_command_type_classify_commit:273": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_type_classify_commit",
          "line": 273
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/simple_state/tests.rs:test_session_recording:38": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_session_recording",
          "line": 38
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/commands/handlers/git.rs:tests::test_git_status:250": {
        "id": {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_status",
          "line": 250
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/config/dynamic_registry.rs:test_validate_json_value_type_string:444": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_validate_json_value_type_string",
          "line": 444
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 26
      },
      "./src/cook/coordinators/session_tests.rs:test_complete_session_failure:129": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "test_complete_session_failure",
          "line": 129
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/subprocess/tests.rs:test_mock_runner_basic:56": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "test_mock_runner_basic",
          "line": 56
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/cook/workflow/executor_tests.rs:MockSpinnerHandle::success:353": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSpinnerHandle::success",
          "line": 353
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 1
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::debug_output:315": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::debug_output",
          "line": 315
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/mod.rs:TestFixtures::unavailable_claude:245": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::unavailable_claude",
          "line": 245
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/abstractions/claude.rs:test_mock_claude_client:709": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "test_mock_claude_client",
          "line": 709
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 22
      },
      "./src/cook/interaction/display.rs:tests::test_progress_display_warning:521": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_warning",
          "line": 521
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/cook/retry.rs:tests::test_check_claude_cli_fallback:417": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_check_claude_cli_fallback",
          "line": 417
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/cook/orchestrator.rs:test_setup_environment_basic:1750": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_setup_environment_basic",
          "line": 1750
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 38
      },
      "./src/session/events.rs:NoOpObserver::on_event:95": {
        "id": {
          "file": "./src/session/events.rs",
          "name": "NoOpObserver::on_event",
          "line": 95
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/subprocess/runner.rs:ExitStatus::code:42": {
        "id": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 7
      },
      "./src/cook/mod.rs:test_load_mapreduce_workflow:465": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "test_load_mapreduce_workflow",
          "line": 465
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 50
      },
      "./src/config/mod.rs:test_get_auto_commit_precedence:495": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_get_auto_commit_precedence",
          "line": 495
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 23
      },
      "./src/testing/helpers/mod.rs:test_dirs_equal_nested_structure:242": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "test_dirs_equal_nested_structure",
          "line": 242
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/testing/mod.rs:test_mock_builders:315": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "test_mock_builders",
          "line": 315
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/cook/retry.rs:test_error_formatting:233": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_error_formatting",
          "line": 233
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::with_read_error:196": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_read_error",
          "line": 196
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/tests.rs:test_load_playbook_structure:423": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_load_playbook_structure",
          "line": 423
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 30
      },
      "./src/testing/config.rs:test_builder_with_all_options:199": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "test_builder_with_all_options",
          "line": 199
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/worktree/manager.rs:CleanupConfig::default:20": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "CleanupConfig::default",
          "line": 20
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/commands/context.rs:ExecutionContext::with_dry_run:78": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_dry_run",
          "line": 78
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/execution/data_pipeline.rs:test_pipeline_complete:1009": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "test_pipeline_complete",
          "line": 1009
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 26
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_handler_command::<closure@13>:808": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command::<closure@13>",
          "line": 808
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/config/command.rs:verify_coverage_command:865": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "verify_coverage_command",
          "line": 865
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 12
      },
      "./src/cook/orchestrator.rs:tests::create_test_orchestrator:1577": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 12
      },
      "./src/init/mod.rs:tests::test_is_git_repository:314": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_is_git_repository",
          "line": 314
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/workflow/executor.rs:test_json_to_attribute_value_static_nested_array:1488": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "test_json_to_attribute_value_static_nested_array",
          "line": 1488
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::debug_output:101": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::debug_output",
          "line": 101
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/execution/claude.rs:ClaudeExecutorImpl::execute_claude_command:55": {
        "id": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::execute_claude_command",
          "line": 55
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 42
      },
      "./src/session/events.rs:tests::test_timestamped_event:149": {
        "id": {
          "file": "./src/session/events.rs",
          "name": "tests::test_timestamped_event",
          "line": 149
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/session/state.rs:test_session_progress:455": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "test_session_progress",
          "line": 455
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 22
      },
      "./src/git/parsers.rs:parse_diff_output:132": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "parse_diff_output",
          "line": 132
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 8,
        "_lines": 39
      },
      "./src/config/dynamic_registry.rs:test_apply_definition_defaults_no_defaults:1044": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_apply_definition_defaults_no_defaults",
          "line": 1044
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 36
      },
      "./src/session/state.rs:WorkflowTiming::from_iterations:259": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "WorkflowTiming::from_iterations",
          "line": 259
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 10,
        "_lines": 54
      },
      "./src/cook/execution/data_pipeline.rs:Sorter::compare_json_values:838": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::compare_json_values",
          "line": 838
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 14,
        "_lines": 29
      },
      "./src/cook/execution/mapreduce.rs:ProgressTracker::new:142": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "ProgressTracker::new",
          "line": 142
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 34
      },
      "./src/git/mod.rs:tests::test_is_repository_failure:415": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_repository_failure",
          "line": 415
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/workflow/executor_tests.rs:test_execute_shell_command_success:1036": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_execute_shell_command_success",
          "line": 1036
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 24
      },
      "./src/config/mapreduce.rs:MapReduceWorkflowConfig::to_reduce_phase:153": {
        "id": {
          "file": "./src/config/mapreduce.rs",
          "name": "MapReduceWorkflowConfig::to_reduce_phase",
          "line": 153
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/session/manager.rs:InMemorySessionManager::restore_session:292": {
        "id": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::restore_session",
          "line": 292
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 8,
        "_lines": 42
      },
      "./src/session/timing.rs:TimingTracker::start_command:42": {
        "id": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::start_command",
          "line": 42
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/test_mocks.rs:MockResponses::cargo_check_json:144": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "MockResponses::cargo_check_json",
          "line": 144
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 30
      },
      "./src/cook/mod.rs:cook_tests::test_run_improvement_loop:666": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_run_improvement_loop",
          "line": 666
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/config/metadata_parser.rs:test_extract_description_multiline:448": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "test_extract_description_multiline",
          "line": 448
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::handle_test_mode_execution:1152": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::handle_test_mode_execution",
          "line": 1152
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 10,
        "_lines": 53
      },
      "./src/config/mod.rs:tests::test_config_new_creates_defaults:397": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_config_new_creates_defaults",
          "line": 397
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/attributes.rs:AttributeValue::as_array:44": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_array",
          "line": 44
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/cook/git_ops.rs:test_public_api_functions_in_real_repo:369": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "test_public_api_functions_in_real_repo",
          "line": 369
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 26
      },
      "./src/cook/session/tracker.rs:SessionTrackerImpl::set_worktree:24": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::set_worktree",
          "line": 24
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/tests.rs:test_concurrent_git_operations:522": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_concurrent_git_operations",
          "line": 522
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 22
      },
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::read_line:34": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::read_line",
          "line": 34
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/cook/mod_tests.rs:core_tests::update_session_metrics:99": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::update_session_metrics",
          "line": 99
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 1
      },
      "./src/cook/interaction/prompts.rs:tests::test_validate_choice_input_single_choice:265": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_validate_choice_input_single_choice",
          "line": 265
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/testing/helpers/assertions.rs:test_assert_ok_macro:206": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "test_assert_ok_macro",
          "line": 206
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/subprocess/tests.rs:test_claude_runner:142": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "test_claude_runner",
          "line": 142
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/workflow/executor_tests.rs:MockAnalysisCoordinator::analyze_project:148": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockAnalysisCoordinator::analyze_project",
          "line": 148
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 49
      },
      "./src/simple_state/tests.rs:test::test_state_file_permissions:228": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_file_permissions",
          "line": 228
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/abstractions/git.rs:MockGitOperations::check_git_status:299": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::check_git_status",
          "line": 299
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/commands/handlers/cargo.rs:CargoHandler::name:23": {
        "id": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::name",
          "line": 23
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/config.rs:TestConfiguration::new:39": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::new",
          "line": 39
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/git/scenario.rs:GitScenarioMock::delete_branch:479": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::delete_branch",
          "line": 479
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 4
      },
      "./src/commands/handlers/file.rs:tests::test_file_handler_schema:309": {
        "id": {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_handler_schema",
          "line": 309
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/worktree/manager.rs:WorktreeManager::get_cleanup_config:828": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_cleanup_config",
          "line": 828
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 18
      },
      "./src/git/mod.rs:GitCommandRunner::prune_worktrees:361": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::prune_worktrees",
          "line": 361
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 9
      },
      "./src/cook/mod_tests.rs:extract_spec_from_git:39": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "extract_spec_from_git",
          "line": 39
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 4,
        "_lines": 8
      },
      "./src/testing/mocks/session.rs:MockSessionManager::failing:42": {
        "id": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::failing",
          "line": 42
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/worktree/test_state.rs:test_validate_initial_state_wrong_session_id:242": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_validate_initial_state_wrong_session_id",
          "line": 242
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 27
      },
      "./src/cook/tests.rs:cook_tests::test_invalid_spec_id:184": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_invalid_spec_id",
          "line": 184
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 2
      },
      "./src/commands/mod.rs:CommandHandlerBuilder::default:77": {
        "id": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::default",
          "line": 77
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/git/scenario.rs:GitScenarioMock::with_dirty_repo:86": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_dirty_repo",
          "line": 86
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 21
      },
      "./src/git/parsers.rs:tests::test_commit_id:374": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_commit_id",
          "line": 374
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/git/scenario.rs:tests::test_scenario_mock_detached_head:569": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_detached_head",
          "line": 569
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/git/scenario.rs:GitScenarioMock::get_status:374": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_status",
          "line": 374
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/testing/helpers/assertions.rs:tests::test_assert_in_range:194": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_in_range",
          "line": 194
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/git/mod.rs:tests::test_commit_nothing_to_commit:532": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_nothing_to_commit",
          "line": 532
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/abstractions/claude.rs:MockClaudeClient::lint:689": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::lint",
          "line": 689
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 13
      },
      "./src/config/mod.rs:Config::get_claude_api_key:133": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "Config::get_claude_api_key",
          "line": 133
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/mod.rs:test_mixed_workflow_config:217": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_mixed_workflow_config",
          "line": 217
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 26
      },
      "./src/commands/handlers/file.rs:FileHandler::execute:52": {
        "id": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 34,
        "_lines": 229
      },
      "./src/config/command_validator.rs:CommandRegistry::validate_command:226": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_command",
          "line": 226
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 13,
        "_lines": 56
      },
      "./src/cook/execution/interpolation.rs:tests::test_default_values:420": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_default_values",
          "line": 420
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::normalize_command_string:92": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::normalize_command_string",
          "line": 92
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 7
      },
      "./src/config/command_parser.rs:tests::test_parse_complex_command:185": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_complex_command",
          "line": 185
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::progress:199": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::progress",
          "line": 199
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/testing/helpers/assertions.rs:tests::test_assert_approx_eq:200": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_approx_eq",
          "line": 200
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/config/command_discovery.rs:test_scan_empty_directory:126": {
        "id": {
          "file": "./src/config/command_discovery.rs",
          "name": "test_scan_empty_directory",
          "line": 126
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/coordinators/workflow.rs:tests::test_create_default_workflow_step:414": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_create_default_workflow_step",
          "line": 414
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/session/state.rs:IterationTiming::add_command_timing:242": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "IterationTiming::add_command_timing",
          "line": 242
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/coordinators/session_tests.rs:test_session_lifecycle:210": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "test_session_lifecycle",
          "line": 210
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 35
      },
      "./src/commands/mod.rs:test_handler_validation:131": {
        "id": {
          "file": "./src/commands/mod.rs",
          "name": "test_handler_validation",
          "line": 131
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/cook/execution/interpolation.rs:tests::test_complex_json_interpolation:472": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_complex_json_interpolation",
          "line": 472
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/helpers/mod.rs:tests::test_dirs_equal_empty_dirs:229": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "tests::test_dirs_equal_empty_dirs",
          "line": 229
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/result.rs:test_with_duration:202": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "test_with_duration",
          "line": 202
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/session/timing.rs:test_format_duration:141": {
        "id": {
          "file": "./src/session/timing.rs",
          "name": "test_format_duration",
          "line": 141
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/execution/mapreduce_tests.rs:test_interpolation_with_map_results:308": {
        "id": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_map_results",
          "line": 308
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 20
      },
      "./src/testing/mocks/fs.rs:MockFileSystem::new:23": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::new",
          "line": 23
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/commands/mod.rs:CommandHandlerBuilder::register:65": {
        "id": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::register",
          "line": 65
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/mocks/fs.rs:MockFileSystem::set_read_error:46": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::set_read_error",
          "line": 46
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/command_validator.rs:CommandRegistry::validate_option_value:318": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_option_value",
          "line": 318
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 12,
        "_lines": 46
      },
      "./src/testing/helpers/assertions.rs:assert_dir_exists:54": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_dir_exists",
          "line": 54
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/abstractions/git.rs:RealGitOperations::create_commit:136": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::create_commit",
          "line": 136
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/cook/retry.rs:test_execute_with_retry_network_timeout:502": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_execute_with_retry_network_timeout",
          "line": 502
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/testing/mocks/git.rs:MockGitOperationsBuilder::with_dirty_status:71": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_dirty_status",
          "line": 71
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/mod_tests.rs:core_tests::test_update_session_metrics:441": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_update_session_metrics",
          "line": 441
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/execution/data_pipeline.rs:DataPipeline::extract_field_value:154": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::extract_field_value",
          "line": 154
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 11
      },
      "./src/config/command_validator.rs:test_validate_valid_command:431": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "test_validate_valid_command",
          "line": 431
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/commands/context.rs:test_path_resolution:180": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "test_path_resolution",
          "line": 180
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/workflow/executor.rs:test_get_current_head_respects_working_directory:1730": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "test_get_current_head_respects_working_directory",
          "line": 1730
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 56
      },
      "./src/testing/config.rs:tests::test_into_arc:252": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_into_arc",
          "line": 252
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/session/mod.rs:SessionId::new:32": {
        "id": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::new",
          "line": 32
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/commands/handlers/git.rs:tests::test_git_handler_schema:240": {
        "id": {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_handler_schema",
          "line": 240
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/execution/data_pipeline.rs:DataPipeline::process:72": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 12,
        "_lines": 58
      },
      "./src/git/parsers.rs:tests::test_git_status_helper_methods:358": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_git_status_helper_methods",
          "line": 358
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_get_step_display_name_claude:765": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_claude",
          "line": 765
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/orchestrator.rs:create_test_orchestrator:1577": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "create_test_orchestrator",
          "line": 1577
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 33
      },
      "./src/subprocess/mock.rs:MockCommandConfig::times:173": {
        "id": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::times",
          "line": 173
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/command.rs:tests::parse_test_workflow_config:813": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::parse_test_workflow_config",
          "line": 813
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 2
      },
      "./src/git/scenario.rs:GitScenarioMock::get_current_branch:381": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_current_branch",
          "line": 381
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 11
      },
      "./src/subprocess/git.rs:GitRunnerImpl::current_branch:184": {
        "id": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::current_branch",
          "line": 184
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 17
      },
      "./src/cook/workflow/executor_tests.rs:MockSessionManager::get_state:116": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::get_state",
          "line": 116
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/commands/handlers/shell.rs:ShellHandler::name:23": {
        "id": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::name",
          "line": 23
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::prompt_text:223": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::prompt_text",
          "line": 223
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 11
      },
      "./src/testing/helpers/mod.rs:test_dirs_equal_nonexistent_dir:278": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "test_dirs_equal_nonexistent_dir",
          "line": 278
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/commands/handlers/cargo.rs:CargoHandler::default:226": {
        "id": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::default",
          "line": 226
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/abstractions/git.rs:RealGitOperations::create_worktree:199": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::create_worktree",
          "line": 199
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 8
      },
      "./src/simple_state/state.rs:StateManager::record_session:74": {
        "id": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::record_session",
          "line": 74
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 23
      },
      "./src/git/parsers.rs:tests::test_parse_status_output_with_changes:258": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_status_output_with_changes",
          "line": 258
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_shell_command_with_on_failure_retry:1209": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_shell_command_with_on_failure_retry",
          "line": 1209
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 14
      },
      "./src/cook/signal_handler.rs:create_test_worktree_manager:69": {
        "id": {
          "file": "./src/cook/signal_handler.rs",
          "name": "create_test_worktree_manager",
          "line": 69
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 17
      },
      "./src/cook/retry.rs:test_execute_with_retry_io_error_recovery:432": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_execute_with_retry_io_error_recovery",
          "line": 432
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/testing/mod.rs:MockClaudeBuilder::is_available:173": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::is_available",
          "line": 173
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/worktree/manager.rs:test_merge_session_claude_cli_failure:892": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "test_merge_session_claude_cli_failure",
          "line": 892
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 49
      },
      "./src/testing/mocks/git.rs:test_mock_git_builder:318": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "test_mock_git_builder",
          "line": 318
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::process_workflow_input:1020": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::process_workflow_input",
          "line": 1020
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 44
      },
      "./src/cook/workflow/executor_tests.rs:MockSessionManager::start_session:105": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::start_session",
          "line": 105
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/claude.rs:tests::test_call_counting:291": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_call_counting",
          "line": 291
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/simple_state/tests.rs:test::test_cache_manager:50": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager",
          "line": 50
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/git/types.rs:CommitId::is_valid:200": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "CommitId::is_valid",
          "line": 200
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 4
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::run_agent:467": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::run_agent",
          "line": 467
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 79
      },
      "./src/testing/config.rs:TestConfiguration::is_test_mode:49": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::is_test_mode",
          "line": 49
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/execution/interpolation.rs:test_basic_interpolation:374": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "test_basic_interpolation",
          "line": 374
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_json_value_type:222": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 20
      },
      "./src/config/dynamic_registry.rs:test_apply_definition_defaults_partial_metadata:849": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_apply_definition_defaults_partial_metadata",
          "line": 849
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 39
      },
      "./src/testing/fixtures/mod.rs:Fixtures::unavailable_claude:56": {
        "id": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::unavailable_claude",
          "line": 56
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/metadata_parser.rs:tests::test_parse_sections:390": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_parse_sections",
          "line": 390
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/config/command_parser.rs:tests::test_expand_variables:159": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_expand_variables",
          "line": 159
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/session/storage.rs:FileSessionStorage::delete:90": {
        "id": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::delete",
          "line": 90
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 9
      },
      "./src/subprocess/mod.rs:SubprocessManager::git:166": {
        "id": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::git",
          "line": 166
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 16
      },
      "./src/testing/mocks/workflow.rs:MockWorkflowExecutor::new:28": {
        "id": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::new:362": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 362
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/git/scenario.rs:GitScenarioMock::stage_files:433": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::stage_files",
          "line": 433
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 16
      },
      "./src/cook/coordinators/workflow.rs:TestCoordinator::execute_step:253": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::execute_step",
          "line": 253
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/config/command_parser.rs:parse_command_string:14": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 10,
        "_lines": 66
      },
      "./src/testing/mod.rs:create_test_file:275": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "create_test_file",
          "line": 275
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 9
      },
      "./src/testing/mocks/subprocess.rs:MockSubprocessManager::was_called_with:128": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::was_called_with",
          "line": 128
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 8
      },
      "./src/worktree/tests.rs:test_list_interrupted_sessions_with_mixed_states::<closure@12>:220": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states::<closure@12>",
          "line": 220
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/worktree/manager.rs:WorktreeManager::detect_mergeable_sessions:690": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 8,
        "_lines": 36
      },
      "./src/session/timing.rs:TimingTracker::is_command_in_progress:74": {
        "id": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::is_command_in_progress",
          "line": 74
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/git/mod.rs:test_commit_success::<closure@28>:507": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "test_commit_success::<closure@28>",
          "line": 507
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 1
      },
      "./src/cook/coordinators/workflow_tests.rs:tests::test_prompt_user:259": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_prompt_user",
          "line": 259
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/init/mod.rs:handle_existing_commands:126": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "handle_existing_commands",
          "line": 126
        },
        "is_entry_point": true,
        "is_test": false,
        "complexity": 9,
        "_lines": 51
      },
      "./src/cook/execution/interpolation.rs:InterpolationContext::resolve_in_current:273": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_in_current",
          "line": 273
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 11,
        "_lines": 42
      },
      "./src/subprocess/git.rs:GitRunnerImpl::log:202": {
        "id": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::log",
          "line": 202
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 26
      },
      "./src/session/config.rs:tests::test_session_options:90": {
        "id": {
          "file": "./src/session/config.rs",
          "name": "tests::test_session_options",
          "line": 90
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/command_validator.rs:tests::test_validate_command_empty_command:527": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_command_empty_command",
          "line": 527
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::new:298": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::new",
          "line": 298
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 19
      },
      "./src/config/command.rs:Command::with_continue_on_error:460": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "Command::with_continue_on_error",
          "line": 460
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/abstractions/claude.rs:RealClaudeClient::lint:527": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::lint",
          "line": 527
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 23
      },
      "./src/worktree/manager.rs:WorktreeManager::create_checkpoint::<closure@17>:596": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_checkpoint::<closure@17>",
          "line": 596
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/command.rs:tests::test_workflow_step_command_parsing:732": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_step_command_parsing",
          "line": 732
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/session/storage.rs:FileSessionStorage::load:56": {
        "id": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::load",
          "line": 56
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 12
      },
      "./src/cook/retry.rs:tests::test_error_formatting:233": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting",
          "line": 233
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/git/scenario.rs:GitScenarioMock::get_commit_message:393": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_commit_message",
          "line": 393
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/git/scenario.rs:tests::test_scenario_mock_command_logging:608": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_command_logging",
          "line": 608
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/worktree/mod.rs:WorktreeSession::new:144": {
        "id": {
          "file": "./src/worktree/mod.rs",
          "name": "WorktreeSession::new",
          "line": 144
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 32
      },
      "./src/commands/registry.rs:CommandRegistry::get_schema:116": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::get_schema",
          "line": 116
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/commands/handlers/shell.rs:test_shell_handler_execute:168": {
        "id": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "test_shell_handler_execute",
          "line": 168
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 31
      },
      "./src/cook/git_ops.rs:tests::test_get_last_commit_message_no_commits:255": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_get_last_commit_message_no_commits",
          "line": 255
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/commands/context.rs:ExecutionContext::with_iteration:72": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_iteration",
          "line": 72
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/git/scenario.rs:GitScenarioMock::execute_command:206": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 17
      },
      "./src/testing/mod.rs:TestContext::with_config:65": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::with_config",
          "line": 65
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 14
      },
      "./src/cook/session/tracker.rs:test_session_tracker_basic:188": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "test_session_tracker_basic",
          "line": 188
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 25
      },
      "./src/config/dynamic_registry.rs:test_get_type_name:618": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_get_type_name",
          "line": 618
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 25
      },
      "./src/session/manager.rs:test_session_lifecycle:344": {
        "id": {
          "file": "./src/session/manager.rs",
          "name": "test_session_lifecycle",
          "line": 344
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 48
      },
      "./src/cook/tests.rs:retry_tests::test_error_formatting_edge_cases:498": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "retry_tests::test_error_formatting_edge_cases",
          "line": 498
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/testing/mocks/claude.rs:MockClaudeClient::lint:222": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::lint",
          "line": 222
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 5,
        "_lines": 20
      },
      "./src/cook/orchestrator.rs:test_prerequisites_check_claude_unavailable:1704": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 45
      },
      "./src/config/mod.rs:test_command_metadata_defaults:350": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_command_metadata_defaults",
          "line": 350
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/session/manager.rs:InMemorySessionManager::list_active_sessions:243": {
        "id": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::list_active_sessions",
          "line": 243
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 17
      },
      "./src/cook/interaction/display.rs:tests::test_progress_display_progress:546": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_progress",
          "line": 546
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/cook/orchestrator.rs:test_detect_structured_workflow::<closure@43>:1825": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_detect_structured_workflow::<closure@43>",
          "line": 1825
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/subprocess/tests.rs:test_production_runner_success:7": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "test_production_runner_success",
          "line": 7
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/abstractions/claude.rs:RealClaudeClient::execute_command:344": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 14,
        "_lines": 91
      },
      "./src/testing/mocks/git.rs:MockGitOperationsBuilder::default:41": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::default",
          "line": 41
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/coordinators/session_tests.rs:test_start_session_failure:32": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "test_start_session_failure",
          "line": 32
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/commands/result.rs:CommandResult::success:34": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 12
      },
      "./src/config/command.rs:tests::test_untagged_enum_debug:776": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::test_untagged_enum_debug",
          "line": 776
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 8
      },
      "./src/init/mod.rs:tests::test_run_init_not_git_repo:351": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_not_git_repo",
          "line": 351
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/coordinators/workflow.rs:TestCoordinator::display_progress:277": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::display_progress",
          "line": 277
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 1
      },
      "./src/testing/mod.rs:test_create_test_file:303": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "test_create_test_file",
          "line": 303
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/tests.rs:test_claude_cli_not_available:50": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_claude_cli_not_available",
          "line": 50
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/session/state.rs:SessionProgress::start_workflow:382": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::start_workflow",
          "line": 382
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/loader.rs:tests::test_load_project_config:257": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_project_config",
          "line": 257
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/git/scenario.rs:test_scenario_mock_merge_conflict:557": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "test_scenario_mock_merge_conflict",
          "line": 557
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::iteration_start:86": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::iteration_start",
          "line": 86
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 1
      },
      "./src/testing/mocks/git.rs:test_git_command_type_classify_add:263": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "test_git_command_type_classify_add",
          "line": 263
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/tests.rs:cook_tests::test_rate_limit_handling:81": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_rate_limit_handling",
          "line": 81
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/config.rs:test_common_configurations:230": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "test_common_configurations",
          "line": 230
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/cook/git_ops.rs:tests::test_check_git_status_success:338": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_check_git_status_success",
          "line": 338
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/claude.rs:MockClaudeClientBuilder::unavailable:51": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::unavailable",
          "line": 51
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/git_ops.rs:tests::get_last_commit_message_in_dir:106": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::get_last_commit_message_in_dir",
          "line": 106
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 2
      },
      "./src/cook/orchestrator.rs:TestMockGitOperations::stage_all_changes:1546": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::stage_all_changes",
          "line": 1546
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/command_validator.rs:CommandRegistry::list_commands:397": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::list_commands",
          "line": 397
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/retry.rs:tests::test_transient_error_case_insensitive:226": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_transient_error_case_insensitive",
          "line": 226
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/config.rs:MockConfigLoaderBuilder::with_config:28": {
        "id": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoaderBuilder::with_config",
          "line": 28
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::debug_output:461": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::debug_output",
          "line": 461
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/config/command.rs:tests::debug_workflow_parsing_error:837": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::debug_workflow_parsing_error",
          "line": 837
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 2
      },
      "./src/cook/tests.rs:test_worktree_creation_failure:91": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_worktree_creation_failure",
          "line": 91
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/cook/git_ops.rs:tests::create_temp_git_repo:182": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/commands/context.rs:ExecutionContext::add_env_var:90": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::add_env_var",
          "line": 90
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/session/manager.rs:InMemorySessionManager::save_checkpoint:261": {
        "id": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 30
      },
      "./src/init/mod.rs:test_init_run_already_initialized:634": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "test_init_run_already_initialized",
          "line": 634
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 31
      },
      "./src/git/mod.rs:GitCommandRunner::get_diff:187": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_diff",
          "line": 187
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 12
      },
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::with_write_error:201": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_write_error",
          "line": 201
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/interaction/display.rs:test_progress_display_progress:546": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "test_progress_display_progress",
          "line": 546
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::extract_workflow_step_command:80": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_workflow_step_command",
          "line": 80
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 7,
        "_lines": 11
      },
      "./src/testing/helpers/assertions.rs:assert_file_not_contains:76": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_not_contains",
          "line": 76
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 12
      },
      "./src/cook/orchestrator.rs:test_execute_structured_workflow_with_analysis:2625": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_execute_structured_workflow_with_analysis",
          "line": 2625
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 83
      },
      "./src/commands/result.rs:tests::test_success_result:175": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "tests::test_success_result",
          "line": 175
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/helpers/assertions.rs:test_assert_file_exists_panic:173": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "test_assert_file_exists_panic",
          "line": 173
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/execution/data_pipeline.rs:FilterExpression::parse:452": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 23,
        "_lines": 93
      },
      "./src/cook/tests.rs:workflow_parsing_tests::test_simplified_output_syntax:399": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "workflow_parsing_tests::test_simplified_output_syntax",
          "line": 399
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 5
      },
      "./src/subprocess/builder.rs:ProcessCommandBuilder::current_dir:61": {
        "id": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/coordinators/workflow_tests.rs:test_execute_step:142": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "test_execute_step",
          "line": 142
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 45
      },
      "./src/commands/attributes.rs:AttributeSchema::required:185": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::required",
          "line": 185
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mod.rs:tests::test_create_test_file:303": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_create_test_file",
          "line": 303
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_should_stop_early_in_test_mode:924": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/retry.rs:additional_tests::test_execute_with_retry_network_timeout:502": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_network_timeout",
          "line": 502
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/subprocess/git.rs:GitRunnerImpl::remove_worktree:166": {
        "id": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::remove_worktree",
          "line": 166
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 17
      },
      "./src/cook/coordinators/execution_tests.rs:tests::test_execute_command_failure:98": {
        "id": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_command_failure",
          "line": 98
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/orchestrator.rs:tests::test_variable_resolution_logic:2014": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_variable_resolution_logic",
          "line": 2014
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_determine_command_type_multiple_error:707": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_multiple_error",
          "line": 707
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/init/mod.rs:test_get_templates:340": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "test_get_templates",
          "line": 340
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/commands/attributes.rs:AttributeSchema::optional:190": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::optional",
          "line": 190
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/command.rs:test_workflow_command_with_workflow_step:754": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "test_workflow_command_with_workflow_step",
          "line": 754
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 21
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::step_start:576": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::step_start",
          "line": 576
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/test_mocks.rs:CargoMocks::clippy_output:25": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::clippy_output",
          "line": 25
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::default:466": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::default",
          "line": 466
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/execution/data_pipeline.rs:FilterExpression::evaluate:582": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 8,
        "_lines": 22
      },
      "./src/cook/execution/runner.rs:RealCommandRunner::run_command:52": {
        "id": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_command",
          "line": 52
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 16
      },
      "./src/commands/registry.rs:CommandRegistry::list:79": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::list",
          "line": 79
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/coordinators/workflow_tests.rs:test_workflow_context_creation:114": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "test_workflow_context_creation",
          "line": 114
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/testing/config.rs:TestConfigurations::worktree:161": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::worktree",
          "line": 161
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::get_default_branch:1127": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_default_branch",
          "line": 1127
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 16
      },
      "./src/cook/tests.rs:test_parse_full_default_workflow:292": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_parse_full_default_workflow",
          "line": 292
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 4,
        "_lines": 50
      },
      "./src/config/command_validator.rs:apply_command_defaults:411": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "apply_command_defaults",
          "line": 411
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/commands/handlers/file.rs:FileHandler::name:25": {
        "id": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::name",
          "line": 25
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::step_start:436": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::step_start",
          "line": 436
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/mod.rs:Config::merge_env_vars:111": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "Config::merge_env_vars",
          "line": 111
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 8,
        "_lines": 21
      },
      "./src/cook/coordinators/workflow_tests.rs:test_execute_workflow_workflow_step_commands:428": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "test_execute_workflow_workflow_step_commands",
          "line": 428
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 71
      },
      "./src/config/command_discovery.rs:tests::test_scan_empty_directory:126": {
        "id": {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_scan_empty_directory",
          "line": 126
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/interaction/display.rs:test_progress_display_error:529": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "test_progress_display_error",
          "line": 529
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/abstractions/claude.rs:MockClaudeClient::get_called_commands:602": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::get_called_commands",
          "line": 602
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mocks/claude.rs:tests::test_mock_claude_unavailable:265": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_unavailable",
          "line": 265
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/interaction/display.rs:test_spinner_lifecycle:536": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "test_spinner_lifecycle",
          "line": 536
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::warning:188": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::warning",
          "line": 188
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/testing/mod.rs:MockClaudeBuilder::with_success:179": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::with_success",
          "line": 179
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/git/scenario.rs:tests::test_scenario_mock_merge_conflict:557": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_merge_conflict",
          "line": 557
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/main.rs:main:119": {
        "id": {
          "file": "./src/main.rs",
          "name": "main",
          "line": 119
        },
        "is_entry_point": true,
        "is_test": false,
        "complexity": 9,
        "_lines": 86
      },
      "./src/cook/execution/runner.rs:tests::test_mock_command_runner:213": {
        "id": {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_mock_command_runner",
          "line": 213
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/commands/handlers/mod.rs:all_handlers:16": {
        "id": {
          "file": "./src/commands/handlers/mod.rs",
          "name": "all_handlers",
          "line": 16
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 10
      },
      "./src/commands/handlers/git.rs:test_git_commit_dry_run:281": {
        "id": {
          "file": "./src/commands/handlers/git.rs",
          "name": "test_git_commit_dry_run",
          "line": 281
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/cook/tests.rs:test_focus_directive:164": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_focus_directive",
          "line": 164
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::prompt_text:112": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::prompt_text",
          "line": 112
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/worktree.rs:MockWorktreeManagerBuilder::with_session:30": {
        "id": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManagerBuilder::with_session",
          "line": 30
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/init/mod.rs:tests::test_run_init_force_overwrite:440": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_force_overwrite",
          "line": 440
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/session/storage.rs:FileSessionStorage::new:32": {
        "id": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::new",
          "line": 32
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/workflow/executor_tests.rs:test_execute_step_with_capture_output:1122": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_execute_step_with_capture_output",
          "line": 1122
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 40
      },
      "./src/cook/retry.rs:test_format_subprocess_error_all_hints:442": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_format_subprocess_error_all_hints",
          "line": 442
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 17
      },
      "./src/cook/mod.rs:test_create_orchestrator:404": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "test_create_orchestrator",
          "line": 404
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 22
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_shell_command:842": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_command",
          "line": 842
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 7,
        "_lines": 48
      },
      "./src/testing/mod.rs:TestFixtures::dirty_repo_git:212": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::dirty_repo_git",
          "line": 212
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::new:27": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/commands/registry.rs:test_registry_get_handler:187": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "test_registry_get_handler",
          "line": 187
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/worktree/tests.rs:test_list_interrupted_sessions_with_mixed_states:205": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 13,
        "_lines": 41
      },
      "./src/config/command_parser.rs:tests::test_parse_command_with_args:130": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_with_args",
          "line": 130
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/git/parsers.rs:test_commit_id:374": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "test_commit_id",
          "line": 374
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/git/parsers.rs:parse_untracked_line:46": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "parse_untracked_line",
          "line": 46
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 9
      },
      "./src/testing/config.rs:TestConfigurationBuilder::skip_commit_validation:107": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::skip_commit_validation",
          "line": 107
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/config/command_validator.rs:validate_command:406": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "validate_command",
          "line": 406
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/command_validator.rs:tests::test_validate_command_invalid_name:508": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_command_invalid_name",
          "line": 508
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/loader.rs:test_load_with_explicit_path_yaml:161": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "test_load_with_explicit_path_yaml",
          "line": 161
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 5,
        "_lines": 25
      },
      "./src/worktree/manager.rs:WorktreeManager::cleanup_merged_sessions:727": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_merged_sessions",
          "line": 727
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 8,
        "_lines": 38
      },
      "./src/config/command.rs:tests::debug_command_sequence:847": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::debug_command_sequence",
          "line": 847
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 1
      },
      "./src/commands/handlers/claude.rs:ClaudeHandler::default:198": {
        "id": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::default",
          "line": 198
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/abstractions/git.rs:test_mock_git_operations:358": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "test_mock_git_operations",
          "line": 358
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 23
      },
      "./src/cook/interaction/display.rs:test_progress_display_success:553": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "test_progress_display_success",
          "line": 553
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/worktree/tests.rs:test_list_interrupted_sessions_empty:191": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_empty",
          "line": 191
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 4,
        "_lines": 13
      },
      "./src/commands/handlers/claude.rs:tests::test_claude_handler_schema:216": {
        "id": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_schema",
          "line": 216
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/orchestrator.rs:tests::test_arg_resolution_only_for_commands_with_args:2060": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 26
      },
      "./src/simple_state/tests.rs:test_state_persistence:19": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_state_persistence",
          "line": 19
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/worktree/manager.rs:WorktreeManager::list_interrupted_sessions:640": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_interrupted_sessions",
          "line": 640
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 9
      },
      "./src/simple_state/tests.rs:test_history_sorting:254": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_history_sorting",
          "line": 254
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 22
      },
      "./src/testing/helpers/mod.rs:test_dirs_equal_missing_nested_file:260": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "test_dirs_equal_missing_nested_file",
          "line": 260
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/subprocess/mock.rs:MockProcessRunner::reset:64": {
        "id": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::reset",
          "line": 64
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/git/scenario.rs:tests::test_scenario_mock_custom_response:592": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_custom_response",
          "line": 592
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/config/command_validator.rs:CommandRegistry::default:64": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::default",
          "line": 64
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/mod.rs:tests::test_global_config_default:659": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_global_config_default",
          "line": 659
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::display_progress:187": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::display_progress",
          "line": 187
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/execution/interpolation.rs:InterpolationEngine::resolve_variable:180": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::resolve_variable",
          "line": 180
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/command_discovery.rs:tests::test_needs_refresh:196": {
        "id": {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_needs_refresh",
          "line": 196
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/abstractions/git.rs:MockGitOperations::get_current_branch:330": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::get_current_branch",
          "line": 330
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/testing/mocks/session.rs:MockSessionManager::get_update_calls:49": {
        "id": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::get_update_calls",
          "line": 49
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/metadata_parser.rs:MetadataParser::parse_sections:66": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_sections",
          "line": 66
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 14
      },
      "./src/cook/coordinators/workflow_tests.rs:test_execute_workflow_simple_commands:304": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "test_execute_workflow_simple_commands",
          "line": 304
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 32
      },
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::prompt_yes_no:410": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::prompt_yes_no",
          "line": 410
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::execute_workflow:145": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 23
      },
      "./src/cook/execution/mapreduce_tests.rs:test_agent_status_serialization:9": {
        "id": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_agent_status_serialization",
          "line": 9
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 8,
        "_lines": 27
      },
      "./src/git/mod.rs:test_is_repository_success:389": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "test_is_repository_success",
          "line": 389
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 25
      },
      "./src/cook/mod_tests.rs:test_check_for_changes:422": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_check_for_changes",
          "line": 422
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/cook/execution/mapreduce_tests.rs:test_interpolation_with_work_item:273": {
        "id": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_work_item",
          "line": 273
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 34
      },
      "./src/cook/execution/data_pipeline.rs:tests::test_filter_in_operator:957": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_filter_in_operator",
          "line": 957
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/config/mod.rs:tests::test_get_auto_commit_precedence:495": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_auto_commit_precedence",
          "line": 495
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::step_end:271": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::step_end",
          "line": 271
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 6
      },
      "./src/cook/coordinators/workflow.rs:tests::test_normalize_command_string_with_slash:402": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_normalize_command_string_with_slash",
          "line": 402
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/cook/session/tracker.rs:SessionTrackerImpl::update_session:38": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::update_session",
          "line": 38
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 14,
        "_lines": 51
      },
      "./src/testing/mocks/session.rs:MockSessionManager::was_complete_called:59": {
        "id": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::was_complete_called",
          "line": 59
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/retry.rs:tests::test_format_subprocess_error_all_fields:355": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_format_subprocess_error_all_fields",
          "line": 355
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::display_progress:256": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_progress",
          "line": 256
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/subprocess/builder.rs:ProcessCommandBuilder::env:42": {
        "id": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::env",
          "line": 42
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/session/tracker.rs:SessionTrackerImpl::track_iteration:154": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::track_iteration",
          "line": 154
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/mod.rs:tests::test_command_handler_builder:116": {
        "id": {
          "file": "./src/commands/mod.rs",
          "name": "tests::test_command_handler_builder",
          "line": 116
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/retry.rs:tests::test_check_claude_cli_when_missing:346": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_check_claude_cli_when_missing",
          "line": 346
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/worktree/manager.rs:WorktreeManager::update_checkpoint:603": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_checkpoint",
          "line": 603
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 11
      },
      "./src/commands/handlers/git.rs:GitHandler::description:207": {
        "id": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::description",
          "line": 207
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/prompts.rs:tests::test_validate_choice_input_valid_single_digit:223": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_validate_choice_input_valid_single_digit",
          "line": 223
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/worktree/test_state.rs:cleanup_worktree_dir:30": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 6
      },
      "./src/cook/session/migration.rs:example_recovery:106": {
        "id": {
          "file": "./src/cook/session/migration.rs",
          "name": "example_recovery",
          "line": 106
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 32
      },
      "./src/cook/retry.rs:test_format_subprocess_error_with_newlines:488": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_format_subprocess_error_with_newlines",
          "line": 488
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::iteration_end:88": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::iteration_end",
          "line": 88
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 1
      },
      "./src/commands/registry.rs:tests::test_registry_get_handler:187": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_get_handler",
          "line": 187
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/helpers/assertions.rs:assert_file_exists:45": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_exists",
          "line": 45
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_is_focus_tracking_test:950": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_focus_tracking_test",
          "line": 950
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/worktree/tests.rs:test_merge_already_merged:177": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_already_merged",
          "line": 177
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 5,
        "_lines": 13
      },
      "./src/abstractions/claude.rs:tests::test_transient_error_detection:758": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_transient_error_detection",
          "line": 758
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mod.rs:create_test_files:285": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "create_test_files",
          "line": 285
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 6
      },
      "./src/testing/helpers/mod.rs:test_dirs_equal_different_content:213": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "test_dirs_equal_different_content",
          "line": 213
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/signal_handler.rs:tests::create_test_worktree_manager:69": {
        "id": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_worktree_manager",
          "line": 69
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/testing/mocks/session.rs:MockSessionManager::set_state:64": {
        "id": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::set_state",
          "line": 64
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/subprocess/tests.rs:subprocess_tests::test_production_runner_success:7": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_success",
          "line": 7
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/subprocess/builder.rs:ProcessCommandBuilder::arg:26": {
        "id": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/session/events.rs:LoggingObserver::on_event:113": {
        "id": {
          "file": "./src/session/events.rs",
          "name": "LoggingObserver::on_event",
          "line": 113
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::start_spinner:132": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::start_spinner",
          "line": 132
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::build_command:1161": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::build_command",
          "line": 1161
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 10,
        "_lines": 44
      },
      "./src/cook/mod_tests.rs:test_update_session_metrics:441": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_update_session_metrics",
          "line": 441
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/commands/handlers/shell.rs:test_shell_handler_schema:158": {
        "id": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "test_shell_handler_schema",
          "line": 158
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/session/manager.rs:test_concurrent_sessions:393": {
        "id": {
          "file": "./src/session/manager.rs",
          "name": "test_concurrent_sessions",
          "line": 393
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 25
      },
      "./src/cook/orchestrator.rs:tests::test_auto_accept_worktree_merge:2238": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_auto_accept_worktree_merge",
          "line": 2238
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/commands/handlers/cargo.rs:test_cargo_test_with_features:287": {
        "id": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "test_cargo_test_with_features",
          "line": 287
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 34
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::display_warning:526": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_warning",
          "line": 526
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/abstractions/git.rs:RealGitOperations::check_git_status:124": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::check_git_status",
          "line": 124
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/cook/execution/interpolation.rs:InterpolationEngine::parse_variable_expression:121": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_variable_expression",
          "line": 121
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 15
      },
      "./src/worktree/test_state.rs:test_validate_initial_state_has_error:354": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_validate_initial_state_has_error",
          "line": 354
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 27
      },
      "./src/cook/workflow/executor_tests.rs:MockClaudeExecutor::add_response:36": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockClaudeExecutor::add_response",
          "line": 36
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/abstractions/claude.rs:MockClaudeClient::add_success_response:582": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_success_response",
          "line": 582
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::create_test_executor:479": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/config/command.rs:test_command_from_string:546": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "test_command_from_string",
          "line": 546
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 26
      },
      "./src/cook/coordinators/session_tests.rs:tests::test_update_status:48": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_update_status",
          "line": 48
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 6
      },
      "./src/cook/coordinators/workflow_tests.rs:tests::test_execute_step:142": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_step",
          "line": 142
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/workflow/executor_tests.rs:MockAnalysisCoordinator::was_called:141": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockAnalysisCoordinator::was_called",
          "line": 141
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/abstractions/git.rs:test_create_worktree_invalid_path:526": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "test_create_worktree_invalid_path",
          "line": 526
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 10
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_get_step_display_name_shell:790": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_shell",
          "line": 790
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/command.rs:Command::deserialize:474": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "Command::deserialize",
          "line": 474
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 45
      },
      "./src/cook/execution/interpolation.rs:InterpolationContext::add_json_object:316": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::add_json_object",
          "line": 316
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 11
      },
      "./src/cook/orchestrator.rs:tests::test_prerequisites_check_no_git:1656": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/cook/mod_tests.rs:core_tests::test_create_session_state_with_focus:400": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_create_session_state_with_focus",
          "line": 400
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/mod.rs:test_merge_env_vars_editor_fallback:601": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_merge_env_vars_editor_fallback",
          "line": 601
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 57
      },
      "./src/cook/execution/interpolation.rs:shell_escape::<closure@17>:358": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "shell_escape::<closure@17>",
          "line": 358
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 1
      },
      "./src/config/dynamic_registry.rs:tests::test_apply_definition_defaults_all_metadata_unset:767": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_all_metadata_unset",
          "line": 767
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/testing/mocks/git.rs:MockGitOperations::default:110": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::default",
          "line": 110
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/loader.rs:ConfigLoader::get_config:131": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::get_config",
          "line": 131
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::display_warning:61": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::display_warning",
          "line": 61
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/metadata_parser.rs:tests::create_test_file:341": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::create_test_file",
          "line": 341
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 1
      },
      "./src/cook/signal_handler.rs:create_test_session_state:87": {
        "id": {
          "file": "./src/cook/signal_handler.rs",
          "name": "create_test_session_state",
          "line": 87
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 33
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::display_progress:540": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_progress",
          "line": 540
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/coordinators/workflow_tests.rs:test_should_continue_within_limit:188": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "test_should_continue_within_limit",
          "line": 188
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/subprocess/mock.rs:MockCommandConfig::with_args:141": {
        "id": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/execution/data_pipeline.rs:test_filter_logical:944": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "test_filter_logical",
          "line": 944
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/subprocess/adapter.rs:create_exit_status:83": {
        "id": {
          "file": "./src/subprocess/adapter.rs",
          "name": "create_exit_status",
          "line": 83
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/orchestrator.rs:tests::test_find_files_matching_pattern:1870": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/init/mod.rs:test_validate_project_structure_not_git_repo:550": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "test_validate_project_structure_not_git_repo",
          "line": 550
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/cook/retry.rs:additional_tests::test_execute_with_retry_signal_interruption:514": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_signal_interruption",
          "line": 514
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/worktree/test_state.rs:test_gitignore_creation:106": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_gitignore_creation",
          "line": 106
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 4,
        "_lines": 17
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::handle_no_commits_error:1224": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::handle_no_commits_error",
          "line": 1224
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 7,
        "_lines": 49
      },
      "./src/cook/execution/mapreduce_tests.rs:test_interpolation_strict_mode:423": {
        "id": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_strict_mode",
          "line": 423
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/git/scenario.rs:GitScenarioMock::stage_all:450": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::stage_all",
          "line": 450
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 4
      },
      "./src/config/command.rs:CommandArg::deserialize:38": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::deserialize",
          "line": 38
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/cook/mod_tests.rs:test_save_checkpoint:523": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_save_checkpoint",
          "line": 523
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/retry.rs:additional_tests::test_check_claude_cli_error_cases:530": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_check_claude_cli_error_cases",
          "line": 530
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 2
      },
      "./src/git/types.rs:CommitId::from:212": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "CommitId::from",
          "line": 212
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/git.rs:MockGitOperations::stage_all_changes:207": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::stage_all_changes",
          "line": 207
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/signal_handler.rs:test_update_interrupted_state:122": {
        "id": {
          "file": "./src/cook/signal_handler.rs",
          "name": "test_update_interrupted_state",
          "line": 122
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 31
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::determine_command_type:271": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 23,
        "_lines": 64
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::new:188": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::new",
          "line": 188
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/mod.rs:create_orchestrator:123": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 80
      },
      "./src/cook/interaction/display.rs:MockProgressDisplay::command_output:426": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::command_output",
          "line": 426
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/git_ops.rs:get_last_commit_message_in_dir:106": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "get_last_commit_message_in_dir",
          "line": 106
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/cook/git_ops.rs:tests::git_in_dir:84": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::git_in_dir",
          "line": 84
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 3
      },
      "./src/testing/mod.rs:TestContext::with_mocks_and_config:80": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::with_mocks_and_config",
          "line": 80
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 16
      },
      "./src/cook/interaction/prompts.rs:test_format_choice_prompt_single:288": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "test_format_choice_prompt_single",
          "line": 288
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/retry.rs:test_execute_with_retry_exhausted_retries:310": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_execute_with_retry_exhausted_retries",
          "line": 310
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/subprocess/tests.rs:test_production_runner_failure:20": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "test_production_runner_failure",
          "line": 20
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/execution/claude.rs:ClaudeExecutorImpl::handle_test_mode_execution:131": {
        "id": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::handle_test_mode_execution",
          "line": 131
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 35
      },
      "./src/cook/tests.rs:cook_tests::test_git_operation_failures:64": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_git_operation_failures",
          "line": 64
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/retry.rs:tests::test_execute_with_retry_non_transient_failure:298": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_non_transient_failure",
          "line": 298
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/session/persistence.rs:PersistedSession::latest_checkpoint:38": {
        "id": {
          "file": "./src/session/persistence.rs",
          "name": "PersistedSession::latest_checkpoint",
          "line": 38
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/session/state.rs:SessionProgress::start_iteration:387": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::start_iteration",
          "line": 387
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/execution/interpolation.rs:InterpolationEngine::default:24": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::default",
          "line": 24
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/worktree/manager.rs:test_detect_mergeable_sessions_empty:1018": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 27
      },
      "./src/testing/mocks/subprocess.rs:MockSubprocessManager::new:85": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::new",
          "line": 85
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/commands/handlers/shell.rs:tests::test_shell_handler_dry_run:200": {
        "id": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_dry_run",
          "line": 200
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/config/mod.rs:test_command_serialization_roundtrip:369": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_command_serialization_roundtrip",
          "line": 369
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 27
      },
      "./src/simple_state/types.rs:SessionRecord::complete:51": {
        "id": {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::complete",
          "line": 51
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/execution/data_pipeline.rs:tests::test_filter_regex_matching:1036": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_filter_regex_matching",
          "line": 1036
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/config/mod.rs:tests::test_merge_env_vars:539": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_merge_env_vars",
          "line": 539
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 5,
        "_lines": 23
      },
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::execute_step:128": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_step",
          "line": 128
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 16
      },
      "./src/testing/mocks/session.rs:MockSessionManager::update_session:80": {
        "id": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::update_session",
          "line": 80
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 6,
        "_lines": 25
      },
      "./src/testing/mocks/subprocess.rs:MockSubprocessManagerBuilder::default:14": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::default",
          "line": 14
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/config.rs:TestConfigurationBuilder::test_mode:87": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::test_mode",
          "line": 87
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/git/mod.rs:GitCommandRunner::delete_branch:302": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::delete_branch",
          "line": 302
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 12
      },
      "./src/abstractions/git.rs:MockGitOperations::get_called_commands:266": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::get_called_commands",
          "line": 266
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/commands/mod.rs:CommandHandlerBuilder::build:71": {
        "id": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mocks/git.rs:MockGitOperations::create_commit:213": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::create_commit",
          "line": 213
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/execution/interpolation.rs:InterpolationContext::new:219": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/commands/registry.rs:CommandRegistry::execute:85": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::execute",
          "line": 85
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 15
      },
      "./src/session/manager.rs:InMemorySessionManager::new:63": {
        "id": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/mod_tests.rs:create_session_state:68": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "create_session_state",
          "line": 68
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/cook/interaction/display.rs:test_iteration_display:586": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "test_iteration_display",
          "line": 586
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/mod_tests.rs:core_tests::test_create_session_state:386": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_create_session_state",
          "line": 386
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_workflow::<closure@8>:286": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow::<closure@8>",
          "line": 286
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 16,
        "_lines": 123
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::success:205": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::success",
          "line": 205
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/git/scenario.rs:tests::test_scenario_mock_clean_repo:522": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_clean_repo",
          "line": 522
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/session/config.rs:test_session_options:90": {
        "id": {
          "file": "./src/session/config.rs",
          "name": "test_session_options",
          "line": 90
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/coordinators/workflow.rs:test_workflow_max_iterations_reached:242": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "test_workflow_max_iterations_reached",
          "line": 242
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 43
      },
      "./src/commands/registry.rs:CommandRegistry::register:39": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::register",
          "line": 39
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/mod.rs:test_yaml_error_messages:626": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "test_yaml_error_messages",
          "line": 626
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 39
      },
      "./src/abstractions/claude.rs:test_add_success_response:783": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "test_add_success_response",
          "line": 783
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/testing/mocks/claude.rs:MockClaudeClient::builder:98": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::builder",
          "line": 98
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/command_validator.rs:tests::test_validate_missing_required_args:445": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_missing_required_args",
          "line": 445
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/session/adapter.rs:adapter_tests::test_save_and_load_state:448": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_save_and_load_state",
          "line": 448
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::load_work_items_with_pipeline:354": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::load_work_items_with_pipeline",
          "line": 354
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 10,
        "_lines": 51
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::should_auto_merge:1057": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::should_auto_merge",
          "line": 1057
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/commands/handlers/claude.rs:ClaudeHandler::execute:43": {
        "id": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 12,
        "_lines": 140
      },
      "./src/subprocess/builder.rs:ProcessCommandBuilder::timeout:66": {
        "id": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::timeout",
          "line": 66
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/git/mod.rs:GitCommandRunner::get_status:132": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_status",
          "line": 132
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 11
      },
      "./src/abstractions/claude.rs:MockClaudeClient::add_error_response:592": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_error_response",
          "line": 592
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/mod_tests.rs:core_tests::test_load_playbook_nonexistent:210": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_load_playbook_nonexistent",
          "line": 210
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/workflow/executor_tests.rs:test_should_stop_early_in_test_mode:924": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_should_stop_early_in_test_mode",
          "line": 924
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 25
      },
      "./src/cook/coordinators/workflow.rs:tests::test_extract_workflow_step_command_shell:341": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_workflow_step_command_shell",
          "line": 341
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/commands/handlers/claude.rs:ClaudeHandler::examples:188": {
        "id": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::examples",
          "line": 188
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/config/mod.rs:test_command_string_parsing:244": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_command_string_parsing",
          "line": 244
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 5,
        "_lines": 47
      },
      "./src/config/command.rs:default_cache_duration:10": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "default_cache_duration",
          "line": 10
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/helpers/assertions.rs:tests::test_assert_file_exists:163": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_file_exists",
          "line": 163
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/simple_state/mod.rs:init:85": {
        "id": {
          "file": "./src/simple_state/mod.rs",
          "name": "init",
          "line": 85
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 8
      },
      "./src/cook/orchestrator.rs:tests::test_execute_structured_workflow_with_outputs:2540": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_execute_structured_workflow_with_outputs",
          "line": 2540
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/git/types.rs:CommitId::new:181": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/simple_state/state.rs:StateManager::state:40": {
        "id": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::state",
          "line": 40
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/abstractions/claude.rs:test_mock_claude_unavailable:732": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "test_mock_claude_unavailable",
          "line": 732
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/cook/coordinators/session_tests.rs:tests::test_session_lifecycle:210": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_session_lifecycle",
          "line": 210
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 12
      },
      "./src/testing/mocks/config.rs:MockConfigLoaderBuilder::fail_on_load:33": {
        "id": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoaderBuilder::fail_on_load",
          "line": 33
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/helpers/mod.rs:file_contains:97": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "file_contains",
          "line": 97
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 5
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_determine_command_type_shell:627": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_shell",
          "line": 627
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/metadata_parser.rs:test_minimal_definition:426": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "test_minimal_definition",
          "line": 426
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/cook/session/state.rs:SessionState::interrupt:89": {
        "id": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::interrupt",
          "line": 89
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/mod_tests.rs:test_should_continue_iteration:502": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_should_continue_iteration",
          "line": 502
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 20
      },
      "./src/init/mod.rs:tests::test_init_run_success:602": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_success",
          "line": 602
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/commands/handlers/git.rs:GitHandler::execute:46": {
        "id": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 24,
        "_lines": 160
      },
      "./src/config/dynamic_registry.rs:tests::test_validate_json_value_type_integer:471": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_integer",
          "line": 471
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/commands/handlers/claude.rs:tests::test_claude_handler_execute:226": {
        "id": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_execute",
          "line": 226
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/retry.rs:test_format_subprocess_error_unauthorized_variations:380": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_format_subprocess_error_unauthorized_variations",
          "line": 380
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 14
      },
      "./src/cook/workflow/executor.rs:test_json_to_attribute_value_static_boolean_false:1459": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "test_json_to_attribute_value_static_boolean_false",
          "line": 1459
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/interaction/mod.rs:tests::test_mock_prompts:382": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_prompts",
          "line": 382
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/worktree/manager.rs:WorktreeManager::restore_session:620": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::restore_session",
          "line": 620
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 19
      },
      "./src/git/mod.rs:test_get_status:555": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "test_get_status",
          "line": 555
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/init/mod.rs:test_handle_existing_commands_no_tty:513": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "test_handle_existing_commands_no_tty",
          "line": 513
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/testing/mocks/session.rs:MockSessionManager::load_state:131": {
        "id": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::load_state",
          "line": 131
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 7
      },
      "./src/cook/orchestrator.rs:tests::test_prerequisites_check_claude_unavailable:1704": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/interaction/prompts.rs:tests::test_validate_choice_input_invalid_zero:236": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_validate_choice_input_invalid_zero",
          "line": 236
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 1
      },
      "./src/cook/retry.rs:test_error_formatting_with_stdout_only:249": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_error_formatting_with_stdout_only",
          "line": 249
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/scoring/mod.rs:calculate_quality_from_patterns:191": {
        "id": {
          "file": "./src/scoring/mod.rs",
          "name": "calculate_quality_from_patterns",
          "line": 191
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 14
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::get_modified_files:840": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_modified_files",
          "line": 840
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 19
      },
      "./src/commands/mod.rs:CommandHandlerBuilder::new:58": {
        "id": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::new",
          "line": 58
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/worktree/test_state.rs:test_list_sessions_with_state::<closure@7>:134": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state::<closure@7>",
          "line": 134
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/session/tracker.rs:SessionTrackerImpl::track_command:161": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::track_command",
          "line": 161
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 10
      },
      "./src/config/metadata_parser.rs:MetadataParser::parse_frontmatter:48": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_frontmatter",
          "line": 48
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 17
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::find_files_matching_pattern:670": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 11,
        "_lines": 61
      },
      "./src/cook/interaction/display.rs:MockProgressDisplay::debug_output:433": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::debug_output",
          "line": 433
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/mocks/fs.rs:MockFileSystem::write_file:73": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::write_file",
          "line": 73
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 14
      },
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_object:1507": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_object",
          "line": 1507
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 3
      },
      "./src/abstractions/git.rs:MockGitOperations::create_worktree:321": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::create_worktree",
          "line": 321
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 8
      },
      "./src/testing/mocks/session.rs:MockSessionManager::save_state:123": {
        "id": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::save_state",
          "line": 123
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 7
      },
      "./src/scoring/mod.rs:calculate_code_quality_score:174": {
        "id": {
          "file": "./src/scoring/mod.rs",
          "name": "calculate_code_quality_score",
          "line": 174
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/retry.rs:tests::test_error_formatting_command_not_found:256": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting_command_not_found",
          "line": 256
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/worktree/manager.rs:test_update_checkpoint_success:1046": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "test_update_checkpoint_success",
          "line": 1046
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 8,
        "_lines": 62
      },
      "./src/simple_state/tests.rs:test::test_cache_cleanup:277": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_cleanup",
          "line": 277
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 5
      },
      "./src/config/command_validator.rs:test_validate_command_empty_command:527": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "test_validate_command_empty_command",
          "line": 527
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/cook/interaction/display.rs:BoxChars::ascii:169": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "BoxChars::ascii",
          "line": 169
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 10
      },
      "./src/commands/handlers/file.rs:tests::test_file_write_and_read:319": {
        "id": {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_write_and_read",
          "line": 319
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::get_messages:368": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 368
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/prompts.rs:test_validate_choice_input_invalid_zero:236": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "test_validate_choice_input_invalid_zero",
          "line": 236
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mocks/git.rs:MockGitOperations::switch_branch:231": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::switch_branch",
          "line": 231
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::get_messages:204": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 204
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/helpers/assertions.rs:assert_in_range:134": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_in_range",
          "line": 134
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/testing/helpers/mod.rs:tests::test_dirs_equal_nested_structure:242": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "tests::test_dirs_equal_nested_structure",
          "line": 242
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_boolean_true:1452": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_boolean_true",
          "line": 1452
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/init/mod.rs:initialize_directories:272": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "initialize_directories",
          "line": 272
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 13
      },
      "./src/session/state.rs:SessionProgress::new:332": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::new",
          "line": 332
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 16
      },
      "./src/commands/result.rs:CommandResult::to_result:99": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::to_result",
          "line": 99
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 10
      },
      "./src/config/command.rs:test_workflow_step_command_parsing:732": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "test_workflow_step_command_parsing",
          "line": 732
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/cook/git_ops.rs:tests::check_git_status_in_dir:100": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::check_git_status_in_dir",
          "line": 100
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 2
      },
      "./src/subprocess/git.rs:test_git_parse_errors::<closure@11>:274": {
        "id": {
          "file": "./src/subprocess/git.rs",
          "name": "test_git_parse_errors::<closure@11>",
          "line": 274
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 1
      },
      "./src/config/loader.rs:tests::test_concurrent_access:336": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_concurrent_access",
          "line": 336
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 6
      },
      "./src/cook/interaction/prompts.rs:tests::test_format_invalid_choice_message:311": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_format_invalid_choice_message",
          "line": 311
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/commands/result.rs:test_error_result:183": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "test_error_result",
          "line": 183
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/interaction/mod.rs:test_mock_user_interaction:362": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "test_mock_user_interaction",
          "line": 362
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/cook/git_ops.rs:check_git_status:43": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "check_git_status",
          "line": 43
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/execution/interpolation.rs:test_undefined_variable_strict_mode:431": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "test_undefined_variable_strict_mode",
          "line": 431
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/git/types.rs:GitDiff::is_empty:115": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/command_validator.rs:CommandRegistry::register:218": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register",
          "line": 218
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/subprocess/claude.rs:ClaudeRunnerImpl::run_command:49": {
        "id": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 24
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::display_progress:128": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_progress",
          "line": 128
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::collect_workflow_inputs:946": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::collect_workflow_inputs",
          "line": 946
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 24
      },
      "./src/cook/signal_handler.rs:test_update_interrupted_state_error_handling:199": {
        "id": {
          "file": "./src/cook/signal_handler.rs",
          "name": "test_update_interrupted_state_error_handling",
          "line": 199
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/commands/handlers/file.rs:test_file_write_and_read:319": {
        "id": {
          "file": "./src/commands/handlers/file.rs",
          "name": "test_file_write_and_read",
          "line": 319
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 43
      },
      "./src/testing/mod.rs:tests::test_mock_builders:315": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_mock_builders",
          "line": 315
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::add_yes_no_response:196": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::add_yes_no_response",
          "line": 196
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/signal_handler.rs:test_termination_interrupt:154": {
        "id": {
          "file": "./src/cook/signal_handler.rs",
          "name": "test_termination_interrupt",
          "line": 154
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 24
      },
      "./src/testing/mocks/git.rs:MockGitOperations::get_staged_files:131": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_staged_files",
          "line": 131
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_workflow:242": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 21,
        "_lines": 197
      },
      "./src/cook/tests.rs:cook_tests::test_successful_improvement_loop:15": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_successful_improvement_loop",
          "line": 15
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/config/command_validator.rs:test_apply_defaults:461": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "test_apply_defaults",
          "line": 461
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/config/mod.rs:tests::test_get_spec_dir:519": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_spec_dir",
          "line": 519
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::display_success:69": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::display_success",
          "line": 69
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mod.rs:tests::test_context_creation:297": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_context_creation",
          "line": 297
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/cook/git_ops.rs:test_mutex_synchronization::<closure@26>:403": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "test_mutex_synchronization::<closure@26>",
          "line": 403
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/session/state.rs:SessionState::complete:76": {
        "id": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::complete",
          "line": 76
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/git/mod.rs:tests::create_test_runner:382": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/init/mod.rs:test_validate_project_structure_with_symlinks:565": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "test_validate_project_structure_with_symlinks",
          "line": 565
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 36
      },
      "./src/session/events.rs:SessionEvent::is_terminal:61": {
        "id": {
          "file": "./src/session/events.rs",
          "name": "SessionEvent::is_terminal",
          "line": 61
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_null:1466": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_null",
          "line": 1466
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::iteration_end:429": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::iteration_end",
          "line": 429
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/abstractions/git.rs:real_git_tests::test_stage_all_changes_and_commit:470": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_stage_all_changes_and_commit",
          "line": 470
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 6
      },
      "./src/testing/mocks/fs.rs:tests::test_mock_fs_errors:252": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_errors",
          "line": 252
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/abstractions/git.rs:test_get_current_branch:489": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "test_get_current_branch",
          "line": 489
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 5,
        "_lines": 36
      },
      "./src/cook/session/tracker.rs:tests::test_atomic_save_prevents_corruption:273": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_atomic_save_prevents_corruption",
          "line": 273
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 6,
        "_lines": 12
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::debug_output:597": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::debug_output",
          "line": 597
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/simple_state/state.rs:StateManager::save:50": {
        "id": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::save",
          "line": 50
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 23
      },
      "./src/subprocess/git.rs:GitRunnerImpl::new:45": {
        "id": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::new",
          "line": 45
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::default:24": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::default",
          "line": 24
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/config.rs:TestConfigurationBuilder::add_no_changes_command:99": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::add_no_changes_command",
          "line": 99
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/abstractions/claude.rs:RealClaudeClient::check_availability:436": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 27
      },
      "./src/cook/coordinators/execution_tests.rs:test_execute_claude_failure:137": {
        "id": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "test_execute_claude_failure",
          "line": 137
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/cook/coordinators/workflow.rs:test_normalize_command_string_without_slash:408": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "test_normalize_command_string_without_slash",
          "line": 408
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::command_output:278": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::command_output",
          "line": 278
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/cook/session/tracker.rs:SessionTrackerImpl::get_state:99": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::get_state",
          "line": 99
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/subprocess.rs:MockSubprocessManagerBuilder::new:20": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::new",
          "line": 20
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/main.rs:run_worktree_command:395": {
        "id": {
          "file": "./src/main.rs",
          "name": "run_worktree_command",
          "line": 395
        },
        "is_entry_point": true,
        "is_test": false,
        "complexity": 5,
        "_lines": 20
      },
      "./src/git/mod.rs:GitCommandRunner::list_files:173": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::list_files",
          "line": 173
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 13
      },
      "./src/cook/interaction/mod.rs:test_spinner_handle:404": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "test_spinner_handle",
          "line": 404
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/commands/attributes.rs:AttributeSchema::apply_defaults:171": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::apply_defaults",
          "line": 171
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 8
      },
      "./src/config/metadata_parser.rs:OptionDef::from:320": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "OptionDef::from",
          "line": 320
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 13
      },
      "./src/config/command.rs:verify_lint_command:890": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "verify_lint_command",
          "line": 890
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 9
      },
      "./src/cook/execution/interpolation.rs:tests::test_shell_escape:464": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_shell_escape",
          "line": 464
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/command.rs:test_analysis_config_defaults:673": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "test_analysis_config_defaults",
          "line": 673
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/interaction/prompts.rs:MockPrompter::prompt_yes_no:145": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "MockPrompter::prompt_yes_no",
          "line": 145
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 8
      },
      "./src/config/command_validator.rs:tests::test_validate_unknown_command:453": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_unknown_command",
          "line": 453
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/session/persistence.rs:tests::test_persisted_session:62": {
        "id": {
          "file": "./src/session/persistence.rs",
          "name": "tests::test_persisted_session",
          "line": 62
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/interaction/prompts.rs:tests::test_prompt_choice_empty_choices:323": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_prompt_choice_empty_choices",
          "line": 323
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/git/parsers.rs:test_parse_worktree_list:324": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "test_parse_worktree_list",
          "line": 324
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 33
      },
      "./src/testing/mocks/git.rs:MockGitOperations::next_response:139": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::next_response",
          "line": 139
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/git/mod.rs:GitCommandRunner::get_commit_message:161": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_commit_message",
          "line": 161
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 11
      },
      "./src/git/parsers.rs:extract_worktree_name:217": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "extract_worktree_name",
          "line": 217
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/dynamic_registry.rs:tests::test_validate_json_value_type_boolean:498": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_boolean",
          "line": 498
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/cook/execution/data_pipeline.rs:tests::test_filter_logical:944": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_filter_logical",
          "line": 944
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/commands/registry.rs:test_registry_execute:203": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "test_registry_execute",
          "line": 203
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::report_summary:1442": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::report_summary",
          "line": 1442
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 38
      },
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::with_directory:166": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_directory",
          "line": 166
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/interaction/display.rs:tests::test_progress_display_error:529": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_error",
          "line": 529
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/config/mod.rs:tests::test_command_metadata_defaults:350": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_metadata_defaults",
          "line": 350
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/session/adapter.rs:test_adapter_creation:318": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "test_adapter_creation",
          "line": 318
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/testing/mocks/workflow.rs:MockWorkflowExecutor::default:21": {
        "id": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::default",
          "line": 21
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/command.rs:test_command_serialization:593": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "test_command_serialization",
          "line": 593
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/config/command_discovery.rs:CommandDiscovery::needs_refresh:99": {
        "id": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::needs_refresh",
          "line": 99
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::with_test_config:219": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::with_test_config",
          "line": 219
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 17
      },
      "./src/cook/git_ops.rs:test_get_last_commit_message_success:237": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "test_get_last_commit_message_success",
          "line": 237
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/cook/orchestrator.rs:test_process_glob_pattern_matches_files:2411": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_process_glob_pattern_matches_files",
          "line": 2411
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 7,
        "_lines": 23
      },
      "./src/testing/mocks/session.rs:MockSessionManager::new:28": {
        "id": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::new",
          "line": 28
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::builder:82": {
        "id": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::builder",
          "line": 82
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/git/mod.rs:test_commit_nothing_to_commit:532": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "test_commit_nothing_to_commit",
          "line": 532
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 22
      },
      "./src/abstractions/git.rs:MockGitOperations::add_response:245": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/retry.rs:test_error_formatting_empty_outputs:268": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_error_formatting_empty_outputs",
          "line": 268
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/worktree/manager.rs:WorktreeManager::create_session:150": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 40
      },
      "./src/cook/coordinators/execution_tests.rs:tests::test_execute_command_success:76": {
        "id": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_command_success",
          "line": 76
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/orchestrator.rs:tests::test_execute_structured_workflow_with_analysis:2625": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_execute_structured_workflow_with_analysis",
          "line": 2625
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/commands/attributes.rs:AttributeValue::as_object:52": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_object",
          "line": 52
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/worktree/manager.rs:WorktreeManager::is_branch_merged:669": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::is_branch_merged",
          "line": 669
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 20
      },
      "./src/config/dynamic_registry.rs:tests::test_apply_definition_defaults_partial_metadata:849": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_partial_metadata",
          "line": 849
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/commands/handlers/git.rs:test_git_status:250": {
        "id": {
          "file": "./src/commands/handlers/git.rs",
          "name": "test_git_status",
          "line": 250
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 30
      },
      "./src/git/parsers.rs:test_parse_status_output_clean:245": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "test_parse_status_output_clean",
          "line": 245
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/testing/test_mocks.rs:TarpaulinMocks::coverage_xml:92": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TarpaulinMocks::coverage_xml",
          "line": 92
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 20
      },
      "./src/session/config.rs:SessionOptions::from_flags:63": {
        "id": {
          "file": "./src/session/config.rs",
          "name": "SessionOptions::from_flags",
          "line": 63
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/init/mod.rs:test_run_init_force_overwrite:440": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "test_run_init_force_overwrite",
          "line": 440
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 37
      },
      "./src/subprocess/tests.rs:test_production_runner_timeout:43": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "test_production_runner_timeout",
          "line": 43
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/config/command_parser.rs:tests::test_parse_simple_command:116": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_simple_command",
          "line": 116
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/mod_tests.rs:save_checkpoint:143": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "save_checkpoint",
          "line": 143
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/session/storage.rs:FileSessionStorage::list:69": {
        "id": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::list",
          "line": 69
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 7,
        "_lines": 20
      },
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::new:155": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/retry.rs:test_is_transient_error_partial_matches:395": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_is_transient_error_partial_matches",
          "line": 395
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/init/mod.rs:tests::test_run_init_specific_commands:478": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_specific_commands",
          "line": 478
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/main.rs:handle_list_command:253": {
        "id": {
          "file": "./src/main.rs",
          "name": "handle_list_command",
          "line": 253
        },
        "is_entry_point": true,
        "is_test": false,
        "complexity": 6,
        "_lines": 15
      },
      "./src/simple_state/tests.rs:test_corrupted_cache_entry:305": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_corrupted_cache_entry",
          "line": 305
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/testing/mocks/claude.rs:MockClaudeClient::reset_call_count:106": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::reset_call_count",
          "line": 106
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/subprocess/tests.rs:subprocess_tests::test_claude_runner:142": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_claude_runner",
          "line": 142
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::cleanup:440": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::cleanup",
          "line": 440
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 19,
        "_lines": 60
      },
      "./src/cook/tests.rs:test_empty_repository:120": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_empty_repository",
          "line": 120
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/retry.rs:tests::test_format_subprocess_error_unauthorized:371": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_format_subprocess_error_unauthorized",
          "line": 371
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/git/types.rs:GitStatus::default:83": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::default",
          "line": 83
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::debug_output:160": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::debug_output",
          "line": 160
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/mod_tests.rs:test_generate_session_id:409": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_generate_session_id",
          "line": 409
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/cook/orchestrator.rs:TestMockGitOperations::git_command_in_dir:1566": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::git_command_in_dir",
          "line": 1566
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/abstractions/git.rs:RealGitOperations::switch_branch:215": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::switch_branch",
          "line": 215
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 4
      },
      "./src/config/dynamic_registry.rs:tests::test_check_value_type:644": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_check_value_type",
          "line": 644
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/git/scenario.rs:GitScenarioMock::log_command:195": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::log_command",
          "line": 195
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 10
      },
      "./src/config/command.rs:tests::test_commit_required_field:605": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::test_commit_required_field",
          "line": 605
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::from_args:99": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::from_args",
          "line": 99
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/mod.rs:cook_tests::test_load_debtmap_mapreduce_workflow:516": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_load_debtmap_mapreduce_workflow",
          "line": 516
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 6
      },
      "./src/testing/mod.rs:MockGitBuilder::build:148": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::build",
          "line": 148
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/commands/handlers/git.rs:GitHandler::default:222": {
        "id": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::default",
          "line": 222
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/command_validator.rs:CommandRegistry::new:70": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::new",
          "line": 70
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/subprocess/mock.rs:MockCommandConfig::finish:178": {
        "id": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/workflow/executor_tests.rs:MockSessionManager::save_state:120": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::save_state",
          "line": 120
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/coordinators/execution.rs:DefaultExecutionCoordinator::execute_with_retry:159": {
        "id": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_with_retry",
          "line": 159
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 28
      },
      "./src/cook/coordinators/session_tests.rs:test_update_status:48": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "test_update_status",
          "line": 48
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 30
      },
      "./src/testing/helpers/mod.rs:test_create_rust_project:159": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "test_create_rust_project",
          "line": 159
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/git/scenario.rs:GitScenarioMock::get_diff:408": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_diff",
          "line": 408
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/commands/context.rs:test_env_vars:164": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "test_env_vars",
          "line": 164
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/workflow/executor_tests.rs:MockMetricsCoordinator::collect_metric:339": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockMetricsCoordinator::collect_metric",
          "line": 339
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/testing/helpers/mod.rs:test_dirs_equal_different_files:197": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "test_dirs_equal_different_files",
          "line": 197
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::new:202": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::new",
          "line": 202
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 16
      },
      "./src/testing/mocks/subprocess.rs:MockSubprocessManager::get_call_history:124": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::get_call_history",
          "line": 124
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/abstractions/exit_status.rs:test_from_raw_failure:41": {
        "id": {
          "file": "./src/abstractions/exit_status.rs",
          "name": "test_from_raw_failure",
          "line": 41
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::prompt_yes_no:211": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::prompt_yes_no",
          "line": 211
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 11
      },
      "./src/worktree/tests.rs:test_filter_sessions_by_status:316": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_filter_sessions_by_status",
          "line": 316
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 93
      },
      "./src/cook/workflow/executor_tests.rs:test_get_step_display_name_claude:765": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_get_step_display_name_claude",
          "line": 765
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 24
      },
      "./src/commands/registry.rs:CommandRegistry::with_defaults:22": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::with_defaults",
          "line": 22
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 16
      },
      "./src/cook/tests.rs:cook_tests::test_multiple_iterations:144": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_multiple_iterations",
          "line": 144
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/simple_state/types.rs:State::new:28": {
        "id": {
          "file": "./src/simple_state/types.rs",
          "name": "State::new",
          "line": 28
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/subprocess/claude.rs:ClaudeRunnerImpl::check_availability:32": {
        "id": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::check_availability",
          "line": 32
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 16
      },
      "./src/config/loader.rs:test_load_with_no_config_uses_defaults:242": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "test_load_with_no_config_uses_defaults",
          "line": 242
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 4,
        "_lines": 14
      },
      "./src/cook/retry.rs:tests::test_is_transient_error_partial_matches:395": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_is_transient_error_partial_matches",
          "line": 395
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/command_validator.rs:test_validate_unknown_command:453": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "test_validate_unknown_command",
          "line": 453
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/git/error.rs:GitError::is_transient:80": {
        "id": {
          "file": "./src/git/error.rs",
          "name": "GitError::is_transient",
          "line": 80
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/session/adapter.rs:test_state_conversion:382": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "test_state_conversion",
          "line": 382
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 27
      },
      "./src/testing/helpers/assertions.rs:tests::test_assert_contains:187": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_contains",
          "line": 187
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/coordinators/workflow.rs:test_extract_command_string_simple_object:309": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "test_extract_command_string_simple_object",
          "line": 309
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/session/timing.rs:TimingTracker::start_iteration:30": {
        "id": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::start_iteration",
          "line": 30
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/helpers/mod.rs:test_count_files:308": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "test_count_files",
          "line": 308
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/cook/git_ops.rs:test_is_git_repo:144": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "test_is_git_repo",
          "line": 144
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 37
      },
      "./src/testing/mocks/git.rs:MockGitOperationsBuilder::with_status:61": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_status",
          "line": 61
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::default:85": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::default",
          "line": 85
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/config.rs:MockConfigLoaderBuilder::default:15": {
        "id": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoaderBuilder::default",
          "line": 15
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/workflow/executor.rs:default_commit_required:150": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "default_commit_required",
          "line": 150
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/metadata_parser.rs:MetadataParser::convert_frontmatter_to_definition:232": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::convert_frontmatter_to_definition",
          "line": 232
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 35
      },
      "./src/subprocess/adapter.rs:MockSubprocessExecutor::new:112": {
        "id": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::new",
          "line": 112
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/config/command.rs:CommandArg::is_variable:50": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::is_variable",
          "line": 50
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/retry.rs:additional_tests::test_is_transient_error_edge_cases:460": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_is_transient_error_edge_cases",
          "line": 460
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/commands/handlers/shell.rs:ShellHandler::new:16": {
        "id": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::new",
          "line": 16
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::get_step_display_name:336": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 13,
        "_lines": 18
      },
      "./src/testing/mocks/claude.rs:MockClaudeClientBuilder::new:25": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::prompt_yes_no:495": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::prompt_yes_no",
          "line": 495
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 11
      },
      "./src/testing/mocks/git.rs:MockGitOperations::get_current_branch:227": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_current_branch",
          "line": 227
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/git/types.rs:CommitId::from:218": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "CommitId::from",
          "line": 218
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/tests.rs:cook_tests::test_workflow_configuration:212": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_workflow_configuration",
          "line": 212
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/interaction/display.rs:tests::test_simple_spinner_handle_fail:560": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_simple_spinner_handle_fail",
          "line": 560
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/execution/data_pipeline.rs:FilterExpression::compare:605": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::compare",
          "line": 605
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 27,
        "_lines": 70
      },
      "./src/session/events.rs:test_timestamped_event:149": {
        "id": {
          "file": "./src/session/events.rs",
          "name": "test_timestamped_event",
          "line": 149
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/git/scenario.rs:GitScenarioMock::default_response:224": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default_response",
          "line": 224
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 17,
        "_lines": 47
      },
      "./src/git/parsers.rs:parse_status_output:8": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 14
      },
      "./src/init/mod.rs:test_init_run_success:602": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "test_init_run_success",
          "line": 602
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 31
      },
      "./src/cook/coordinators/workflow.rs:tests::test_normalize_command_string_without_slash:408": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_normalize_command_string_without_slash",
          "line": 408
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/session/state.rs:SessionProgress::completion_percentage:349": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::completion_percentage",
          "line": 349
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/abstractions/git.rs:RealGitOperations::with_subprocess:72": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::with_subprocess",
          "line": 72
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/execution/data_pipeline.rs:FilterExpression::evaluate_function:676": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate_function",
          "line": 676
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 14,
        "_lines": 45
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::merge_parent_to_main:1064": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_parent_to_main",
          "line": 1064
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 9,
        "_lines": 62
      },
      "./src/config/command.rs:tests::test_commit_required_serialization:645": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::test_commit_required_serialization",
          "line": 645
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/execution/interpolation.rs:test_literal_segments:499": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "test_literal_segments",
          "line": 499
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 10
      },
      "./src/worktree/tests.rs:test_list_interrupted_sessions_all_interrupted:247": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 14,
        "_lines": 39
      },
      "./src/cook/execution/runner.rs:MockCommandRunner::new:173": {
        "id": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/config/command.rs:try_parse_as:855": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "try_parse_as",
          "line": 855
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 9
      },
      "./src/testing/mocks/claude.rs:MockClaudeClient::execute_command:113": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 113
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 7,
        "_lines": 47
      },
      "./src/testing/mocks/git.rs:test_git_command_type_classify_status:241": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "test_git_command_type_classify_status",
          "line": 241
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/config/command_discovery.rs:test_cache_behavior:165": {
        "id": {
          "file": "./src/config/command_discovery.rs",
          "name": "test_cache_behavior",
          "line": 165
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 30
      },
      "./src/cook/workflow/executor_tests.rs:test_is_test_mode_no_changes_command:904": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_is_test_mode_no_changes_command",
          "line": 904
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/testing/mocks/claude.rs:tests::test_mock_claude_fail_after:275": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_fail_after",
          "line": 275
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/simple_state/state.rs:StateManager::save::<closure@5>:64": {
        "id": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::save::<closure@5>",
          "line": 64
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/commands/attributes.rs:AttributeValue::from:66": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::from",
          "line": 66
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/mod.rs:get_global_mmm_dir:27": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "get_global_mmm_dir",
          "line": 27
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/mod_tests.rs:test_extract_spec_from_git_no_spec:305": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_extract_spec_from_git_no_spec",
          "line": 305
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/session/manager.rs:InMemorySessionManager::notify_observers:77": {
        "id": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::notify_observers",
          "line": 77
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/worktree/manager.rs:WorktreeManager::save_session_state:184": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::save_session_state",
          "line": 184
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 37
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_get_step_display_name_unnamed:845": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_unnamed",
          "line": 845
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::display_success:389": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::display_success",
          "line": 389
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/subprocess/git.rs:GitRunnerImpl::commit:94": {
        "id": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::commit",
          "line": 94
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 26
      },
      "./src/config/command.rs:CommandArg::resolve:56": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::resolve",
          "line": 56
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 11
      },
      "./src/commands/handlers/cargo.rs:test_cargo_build:254": {
        "id": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "test_cargo_build",
          "line": 254
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 32
      },
      "./src/testing/test_mocks.rs:TestMockSetup::setup_successful_analysis::<closure@15>:210": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis::<closure@15>",
          "line": 210
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 4
      },
      "./src/init/mod.rs:test_run_init_with_existing_commands:402": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "test_run_init_with_existing_commands",
          "line": 402
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 37
      },
      "./src/cook/orchestrator.rs:test_arg_resolution_only_for_commands_with_args::<closure@51>:2177": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_arg_resolution_only_for_commands_with_args::<closure@51>",
          "line": 2177
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 8
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::with_command_registry:196": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::with_command_registry",
          "line": 196
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/mocks/subprocess.rs:MockSubprocessManager::default:79": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::default",
          "line": 79
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/mod_tests.rs:core_tests::test_extract_spec_from_git_no_spec:305": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git_no_spec",
          "line": 305
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/config/metadata_parser.rs:MetadataParser::create_minimal_definition:81": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::create_minimal_definition",
          "line": 81
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 11
      },
      "./src/git/scenario.rs:GitScenarioMock::create_branch:469": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::create_branch",
          "line": 469
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 4
      },
      "./src/testing/test_mocks.rs:GitMocks::log_output:131": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "GitMocks::log_output",
          "line": 131
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/workflow/executor_tests.rs:test_handle_test_mode_execution_success:870": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_handle_test_mode_execution_success",
          "line": 870
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 33
      },
      "./src/commands/handlers/git.rs:GitHandler::schema:27": {
        "id": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::schema",
          "line": 27
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 18
      },
      "./src/config/loader.rs:tests::test_load_from_path_unsupported_format:290": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_from_path_unsupported_format",
          "line": 290
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/commands/context.rs:ExecutionContext::with_executor:60": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_executor",
          "line": 60
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/mocks/workflow.rs:MockWorkflowExecutor::execute_step:120": {
        "id": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::execute_step",
          "line": 120
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 20
      },
      "./src/cook/coordinators/workflow.rs:test_extract_workflow_step_command_shell:341": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "test_extract_workflow_step_command_shell",
          "line": 341
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/session/storage.rs:InMemoryStorage::delete:142": {
        "id": {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::delete",
          "line": 142
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_against_definition:103": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_against_definition",
          "line": 103
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 14
      },
      "./src/cook/mod.rs:test_load_debtmap_mapreduce_workflow:516": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "test_load_debtmap_mapreduce_workflow",
          "line": 516
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 109
      },
      "./src/session/state.rs:SessionProgress::success_rate:365": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::success_rate",
          "line": 365
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 8
      },
      "./src/testing/mod.rs:MockClaudeBuilder::new:166": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::new",
          "line": 166
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/coordinators/workflow.rs:tests::test_extract_command_string_structured:293": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_command_string_structured",
          "line": 293
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/session/tracker.rs:SessionTrackerImpl::get_progress:172": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::get_progress",
          "line": 172
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/execution/interpolation.rs:shell_escape:350": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "shell_escape",
          "line": 350
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 18
      },
      "./src/git/parsers.rs:tests::test_parse_diff_output:301": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_diff_output",
          "line": 301
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/coordinators/workflow_tests.rs:test_execute_workflow_stops_at_max_iterations:500": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "test_execute_workflow_stops_at_max_iterations",
          "line": 500
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 28
      },
      "./src/config/dynamic_registry.rs:test_apply_definition_defaults_options_already_set:936": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_apply_definition_defaults_options_already_set",
          "line": 936
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 51
      },
      "./src/subprocess/mock.rs:MockProcessRunner::run:99": {
        "id": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 7,
        "_lines": 35
      },
      "./src/cook/mod_tests.rs:core_tests::save_checkpoint:143": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::save_checkpoint",
          "line": 143
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 1
      },
      "./src/cook/workflow/executor_tests.rs:test_context_interpolation:549": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_context_interpolation",
          "line": 549
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 33
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::default:82": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::default",
          "line": 82
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/worktree/tests.rs:cleanup_worktree_dir:30": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 5
      },
      "./src/cook/tests.rs:test_comprehensive_transient_errors:459": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_comprehensive_transient_errors",
          "line": 459
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 38
      },
      "./src/cook/coordinators/workflow.rs:test_workflow_should_continue:197": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "test_workflow_should_continue",
          "line": 197
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 44
      },
      "./src/cook/execution/mapreduce_tests.rs:test_interpolation_with_defaults:348": {
        "id": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_defaults",
          "line": 348
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 17
      },
      "./src/cook/coordinators/execution.rs:DefaultExecutionCoordinator::execute_command:93": {
        "id": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_command",
          "line": 93
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 31
      },
      "./src/cook/mod_tests.rs:core_tests::test_format_session_summary:476": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_format_session_summary",
          "line": 476
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::new:88": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/testing/test_mocks.rs:TestMockSetup::setup_metrics_collection::<closure@24>:307": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection::<closure@24>",
          "line": 307
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 4
      },
      "./src/testing/helpers/assertions.rs:test_assert_err_macro:213": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "test_assert_err_macro",
          "line": 213
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/interaction/display.rs:MockSpinnerHandle::update_message:456": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockSpinnerHandle::update_message",
          "line": 456
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/worktree/manager.rs:WorktreeManager::create_checkpoint:591": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_checkpoint",
          "line": 591
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/mod_tests.rs:core_tests::test_run_command_with_timeout:539": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_run_command_with_timeout",
          "line": 539
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::get_current_head:936": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::get_current_head",
          "line": 936
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 9
      },
      "./src/testing/test_mocks.rs:TestMockSetup::setup_metrics_collection::<closure@20>:269": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection::<closure@20>",
          "line": 269
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 4
      },
      "./src/git/parsers.rs:parse_unmerged_line:119": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "parse_unmerged_line",
          "line": 119
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 11
      },
      "./src/cook/coordinators/session.rs:DefaultSessionCoordinator::track_iteration:79": {
        "id": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::track_iteration",
          "line": 79
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_agent_commands:547": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 34,
        "_lines": 227
      },
      "./src/cook/interaction/display.rs:MockProgressDisplay::warning:362": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::warning",
          "line": 362
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/workflow/executor.rs:test_get_current_head_error_handling:1716": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "test_get_current_head_error_handling",
          "line": 1716
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/simple_state/cache.rs:CacheManager::set:63": {
        "id": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::set",
          "line": 63
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 13
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::display_info:519": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_info",
          "line": 519
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/subprocess/runner.rs:ExitStatusHelper::success:56": {
        "id": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/mod_tests.rs:core_tests::test_run_analysis_with_coverage:272": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_run_analysis_with_coverage",
          "line": 272
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/coordinators/workflow_tests.rs:tests::test_workflow_context_creation:114": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_workflow_context_creation",
          "line": 114
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mocks/claude.rs:test_mock_claude_fail_after:275": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "test_mock_claude_fail_after",
          "line": 275
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::should_continue:169": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::should_continue",
          "line": 169
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 13
      },
      "./src/git/scenario.rs:GitScenarioMock::get_scenario:185": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_scenario",
          "line": 185
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/execution/mapreduce.rs:ProgressTracker::update_agent:177": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "ProgressTracker::update_agent",
          "line": 177
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/cook/workflow/executor_tests.rs:MockAnalysisCoordinator::analyze_incremental:206": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockAnalysisCoordinator::analyze_incremental",
          "line": 206
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 52
      },
      "./src/testing/config.rs:TestConfigurationBuilder::worktree_name:119": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::worktree_name",
          "line": 119
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_determine_command_type_legacy_name:682": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_legacy_name",
          "line": 682
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/simple_state/cache.rs:CacheManager::get:36": {
        "id": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::get",
          "line": 36
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 8,
        "_lines": 26
      },
      "./src/cook/execution/mapreduce_tests.rs:test_reduce_phase_configuration:227": {
        "id": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_reduce_phase_configuration",
          "line": 227
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 45
      },
      "./src/subprocess/runner.rs:TokioProcessRunner::run_streaming:245": {
        "id": {
          "file": "./src/subprocess/runner.rs",
          "name": "TokioProcessRunner::run_streaming",
          "line": 245
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/mod_tests.rs:test_load_playbook_nonexistent:210": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_load_playbook_nonexistent",
          "line": 210
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/config.rs:TestConfigurations::production:178": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::production",
          "line": 178
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/execution/interpolation.rs:InterpolationEngine::new:31": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::display_success:273": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_success",
          "line": 273
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/config.rs:test_into_arc:252": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "test_into_arc",
          "line": 252
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/subprocess/adapter.rs:RealSubprocessExecutor::execute:33": {
        "id": {
          "file": "./src/subprocess/adapter.rs",
          "name": "RealSubprocessExecutor::execute",
          "line": 33
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 31
      },
      "./src/cook/tests.rs:test_rate_limit_handling:81": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_rate_limit_handling",
          "line": 81
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/init/mod.rs:test_is_git_repository:314": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "test_is_git_repository",
          "line": 314
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 25
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_execute_step_with_env_interpolation:1163": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_step_with_env_interpolation",
          "line": 1163
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/execution/data_pipeline.rs:test_filter_in_operator:957": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "test_filter_in_operator",
          "line": 957
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/session/tests.rs:test_event_observers:176": {
        "id": {
          "file": "./src/session/tests.rs",
          "name": "test_event_observers",
          "line": 176
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 37
      },
      "./src/cook/coordinators/workflow_tests.rs:test_execute_workflow_structured_commands:373": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "test_execute_workflow_structured_commands",
          "line": 373
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 54
      },
      "./src/cook/tests.rs:test_workflow_configuration:212": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_workflow_configuration",
          "line": 212
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 26
      },
      "./src/cook/execution/mapreduce_tests.rs:test_interpolation_with_shell_output:329": {
        "id": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_shell_output",
          "line": 329
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/testing/mocks/workflow.rs:MockWorkflowExecutor::validate_step:92": {
        "id": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::validate_step",
          "line": 92
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 7
      },
      "./src/worktree/manager.rs:WorktreeManager::new:102": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 8,
        "_lines": 53
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_mapreduce_workflow:1065": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_mapreduce_workflow",
          "line": 1065
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 29
      },
      "./src/worktree/tests.rs:test_create_session_with_uuid_name:81": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_uuid_name",
          "line": 81
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 5,
        "_lines": 16
      },
      "./src/cook/workflow/executor_tests.rs:MockMetricsCoordinator::was_collected:285": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockMetricsCoordinator::was_collected",
          "line": 285
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/session/adapter.rs:tests::test_adapter_creation:318": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_adapter_creation",
          "line": 318
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_structured_workflow:507": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 18,
        "_lines": 162
      },
      "./src/cook/mod.rs:load_workflow:216": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "load_workflow",
          "line": 216
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/config/command_validator.rs:test_registry_initialization:420": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "test_registry_initialization",
          "line": 420
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/coordinators/workflow.rs:tests::test_workflow_max_iterations_reached:242": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_workflow_max_iterations_reached",
          "line": 242
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/command.rs:tests::try_parse_as:855": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::try_parse_as",
          "line": 855
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 1
      },
      "./src/simple_state/tests.rs:test::test_state_persistence:19": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_persistence",
          "line": 19
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/git_ops.rs:create_commit_in_dir:118": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "create_commit_in_dir",
          "line": 118
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/cook/mod.rs:cook_tests::test_load_mapreduce_workflow:465": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_load_mapreduce_workflow",
          "line": 465
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 6
      },
      "./src/testing/mocks/fs.rs:test_mock_fs_project_structure:273": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "test_mock_fs_project_structure",
          "line": 273
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/session/migration.rs:example_migration:34": {
        "id": {
          "file": "./src/cook/session/migration.rs",
          "name": "example_migration",
          "line": 34
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 9,
        "_lines": 71
      },
      "./src/session/timing.rs:TimingTracker::complete_command:48": {
        "id": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::complete_command",
          "line": 48
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 10
      },
      "./src/testing/mod.rs:MockGitBuilder::with_error:142": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::with_error",
          "line": 142
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/session/timing.rs:format_duration:86": {
        "id": {
          "file": "./src/session/timing.rs",
          "name": "format_duration",
          "line": 86
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 9,
        "_lines": 24
      },
      "./src/cook/interaction/display.rs:SimpleSpinnerHandle::success:317": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "SimpleSpinnerHandle::success",
          "line": 317
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/cook/interaction/prompts.rs:test_format_choice_prompt:271": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "test_format_choice_prompt",
          "line": 271
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/testing/mocks/claude.rs:MockClaudeClientBuilder::with_error:45": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_error",
          "line": 45
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/simple_state/state.rs:StateManager::state_mut:45": {
        "id": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::state_mut",
          "line": 45
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/workflow/executor_tests.rs:MockSessionManager::get_updates:88": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::get_updates",
          "line": 88
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/tests.rs:workflow_parsing_tests::test_parse_workflow_with_commit_required:370": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "workflow_parsing_tests::test_parse_workflow_with_commit_required",
          "line": 370
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/git/parsers.rs:test_parse_status_output_renamed:279": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "test_parse_status_output_renamed",
          "line": 279
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/mod_tests.rs:core_tests::test_load_playbook_yaml:152": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_load_playbook_yaml",
          "line": 152
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/orchestrator.rs:tests::test_worktree_cleanup_after_merge:2319": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_worktree_cleanup_after_merge",
          "line": 2319
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/cook/mod_tests.rs:core_tests::test_handle_worktree_merge:456": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_handle_worktree_merge",
          "line": 456
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 4
      },
      "./src/config/mod.rs:tests::test_structured_workflow_config_parsing:187": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_structured_workflow_config_parsing",
          "line": 187
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/session/persistence.rs:PersistedSession::is_resumable:43": {
        "id": {
          "file": "./src/session/persistence.rs",
          "name": "PersistedSession::is_resumable",
          "line": 43
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 8
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_map_phase:406": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_map_phase",
          "line": 406
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 7,
        "_lines": 60
      },
      "./src/commands/result.rs:tests::test_command_error_display:217": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "tests::test_command_error_display",
          "line": 217
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/command.rs:test_untagged_enum_debug:776": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "test_untagged_enum_debug",
          "line": 776
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 27
      },
      "./src/cook/git_ops.rs:test_create_commit_with_mock:450": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "test_create_commit_with_mock",
          "line": 450
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 24
      },
      "./src/config/mod.rs:Config::get_auto_commit:140": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "Config::get_auto_commit",
          "line": 140
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/commands/attributes.rs:AttributeValue::from:78": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::from",
          "line": 78
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/tests.rs:test_multiple_iterations:144": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_multiple_iterations",
          "line": 144
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/cook/git_ops.rs:create_commit:62": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "create_commit",
          "line": 62
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 10
      },
      "./src/worktree/manager.rs:WorktreeManager::collect_all_states:72": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::collect_all_states",
          "line": 72
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 17
      },
      "./src/session/tests.rs:test_storage_operations:275": {
        "id": {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 47
      },
      "./src/git/mod.rs:GitCommandRunner::init_repository:212": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::init_repository",
          "line": 212
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 9
      },
      "./src/cook/interaction/prompts.rs:tests::test_validate_choice_input_empty_choices:260": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_validate_choice_input_empty_choices",
          "line": 260
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 1
      },
      "./src/session/mod.rs:SessionId::from_string:37": {
        "id": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::from_string",
          "line": 37
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/execution/data_pipeline.rs:JsonPath::evaluate_filter:346": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::evaluate_filter",
          "line": 346
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 32,
        "_lines": 83
      },
      "./src/cook/orchestrator.rs:test_detect_structured_workflow:1789": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_detect_structured_workflow",
          "line": 1789
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 80
      },
      "./src/init/mod.rs:tests::test_run_init_with_existing_commands:402": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_with_existing_commands",
          "line": 402
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/session/events.rs:tests::test_event_descriptions:126": {
        "id": {
          "file": "./src/session/events.rs",
          "name": "tests::test_event_descriptions",
          "line": 126
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/simple_state/tests.rs:test_cache_manager:50": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_cache_manager",
          "line": 50
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 35
      },
      "./src/subprocess/git.rs:GitRunnerImpl::create_worktree:142": {
        "id": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::create_worktree",
          "line": 142
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 23
      },
      "./src/session/manager.rs:InMemorySessionManager::add_observer:72": {
        "id": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::add_observer",
          "line": 72
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/mod.rs:tests::test_get_claude_api_key_precedence:408": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_claude_api_key_precedence",
          "line": 408
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/simple_state/tests.rs:test::test_cache_manager_edge_cases:205": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager_edge_cases",
          "line": 205
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/session/events.rs:TimestampedEvent::new:75": {
        "id": {
          "file": "./src/session/events.rs",
          "name": "TimestampedEvent::new",
          "line": 75
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_workflow::<closure@9>:302": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow::<closure@9>",
          "line": 302
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 18
      },
      "./src/git/scenario.rs:GitScenarioMock::is_repository:355": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_repository",
          "line": 355
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 18
      },
      "./src/cook/coordinators/session_tests.rs:test_error_propagation:246": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "test_error_propagation",
          "line": 246
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/git/scenario.rs:test_scenario_mock_dirty_repo:542": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "test_scenario_mock_dirty_repo",
          "line": 542
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/abstractions/git.rs:RealGitOperations::get_last_commit_message:117": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::get_last_commit_message",
          "line": 117
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/main.rs:display_worktree_session:206": {
        "id": {
          "file": "./src/main.rs",
          "name": "display_worktree_session",
          "line": 206
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 11,
        "_lines": 41
      },
      "./src/cook/mod_tests.rs:core_tests::test_load_playbook_invalid_format:195": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_load_playbook_invalid_format",
          "line": 195
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/dynamic_registry.rs:tests::test_apply_definition_defaults_options_with_defaults:889": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_options_with_defaults",
          "line": 889
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/testing/mocks/git.rs:test_git_command_type_classify_edge_cases:300": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "test_git_command_type_classify_edge_cases",
          "line": 300
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/testing/mocks/worktree.rs:MockWorktreeManagerBuilder::default:16": {
        "id": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManagerBuilder::default",
          "line": 16
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/mod_tests.rs:test_run_single_iteration:491": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_run_single_iteration",
          "line": 491
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/commands/context.rs:test_metadata:172": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "test_metadata",
          "line": 172
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/mod_tests.rs:core_tests::ensure_mmm_directory:62": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::ensure_mmm_directory",
          "line": 62
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/tests.rs:test_git_operation_failures:64": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_git_operation_failures",
          "line": 64
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/cook/execution/runner.rs:RealCommandRunner::run_with_context:69": {
        "id": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 39
      },
      "./src/testing/mocks/fs.rs:MockFileSystem::list_dir:105": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::list_dir",
          "line": 105
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 8,
        "_lines": 32
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::debug_output:284": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::debug_output",
          "line": 284
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/cook/workflow/executor_tests.rs:create_test_executor_with_config:513": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "create_test_executor_with_config",
          "line": 513
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 35
      },
      "./src/cook/retry.rs:test_execute_with_retry_signal_interruption:514": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_execute_with_retry_signal_interruption",
          "line": 514
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/simple_state/cache.rs:CacheManager::cleanup:97": {
        "id": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::cleanup",
          "line": 97
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 8,
        "_lines": 23
      },
      "./src/config/loader.rs:tests::test_load_with_default_path:215": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_default_path",
          "line": 215
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/worktree/tests.rs:test_merge_session:149": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 8,
        "_lines": 27
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_handle_no_commits_error_general_command:968": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_handle_no_commits_error_general_command",
          "line": 968
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/interaction/mod.rs:test_mock_prompts:382": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "test_mock_prompts",
          "line": 382
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/cook/interaction/mod.rs:tests::test_error_handling:436": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_error_handling",
          "line": 436
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/execution/mapreduce_tests.rs:test_agent_context_to_interpolation_context:108": {
        "id": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_agent_context_to_interpolation_context",
          "line": 108
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 51
      },
      "./src/cook/tests.rs:workflow_parsing_tests::test_parse_structured_workflow_with_outputs:262": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "workflow_parsing_tests::test_parse_structured_workflow_with_outputs",
          "line": 262
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 4
      },
      "./src/testing/mocks/subprocess.rs:MockSubprocessManagerBuilder::with_error:47": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::with_error",
          "line": 47
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/init/templates.rs:test_get_templates_by_names:89": {
        "id": {
          "file": "./src/init/templates.rs",
          "name": "test_get_templates_by_names",
          "line": 89
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/execution/mapreduce.rs:AgentContext::update_with_output:241": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::update_with_output",
          "line": 241
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 9
      },
      "./src/testing/helpers/mod.rs:test_file_contains:169": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "test_file_contains",
          "line": 169
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/testing/helpers/assertions.rs:assert_contains:105": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_contains",
          "line": 105
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::default:315": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::default",
          "line": 315
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/interaction/display.rs:MockProgressDisplay::verbosity:440": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::verbosity",
          "line": 440
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/retry.rs:test_format_subprocess_error_unauthorized:371": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_format_subprocess_error_unauthorized",
          "line": 371
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::display_error:124": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_error",
          "line": 124
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/dynamic_registry.rs:test_validate_json_value_type_integer:471": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_validate_json_value_type_integer",
          "line": 471
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 26
      },
      "./src/testing/mocks/git.rs:tests::test_mock_git_commits:356": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_commits",
          "line": 356
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/git/parsers.rs:tests::test_parse_status_output_clean:245": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_status_output_clean",
          "line": 245
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/execution/claude.rs:test_claude_command_execution:222": {
        "id": {
          "file": "./src/cook/execution/claude.rs",
          "name": "test_claude_command_execution",
          "line": 222
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 22
      },
      "./src/init/mod.rs:run:286": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 21
      },
      "./src/commands/handlers/git.rs:GitHandler::new:16": {
        "id": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::new",
          "line": 16
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/abstractions/git.rs:MockGitOperations::add_error_response:260": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_error_response",
          "line": 260
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/interaction/display.rs:MockProgressDisplay::iteration_start:398": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::iteration_start",
          "line": 398
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/mocks/git.rs:MockGitOperations::git_command_in_dir:184": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::git_command_in_dir",
          "line": 184
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/session/state.rs:SessionProgress::get_workflow_timing:408": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::get_workflow_timing",
          "line": 408
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::should_continue_iterations:1342": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::should_continue_iterations",
          "line": 1342
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/retry.rs:test_execute_with_retry_verbose_output:476": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_execute_with_retry_verbose_output",
          "line": 476
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/session/tests.rs:test_session_progress_tracking:214": {
        "id": {
          "file": "./src/session/tests.rs",
          "name": "test_session_progress_tracking",
          "line": 214
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 60
      },
      "./src/cook/mod_tests.rs:generate_session_id:90": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "generate_session_id",
          "line": 90
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/test_mocks.rs:TarpaulinMocks::coverage_report_good:59": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TarpaulinMocks::coverage_report_good",
          "line": 59
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/config/mod.rs:tests::test_simple_workflow_config_parsing:167": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_simple_workflow_config_parsing",
          "line": 167
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 4
      },
      "./src/session/manager.rs:InMemorySessionManager::get_state:213": {
        "id": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_state",
          "line": 213
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/session/state.rs:SessionProgress::total_lines_changed:357": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::total_lines_changed",
          "line": 357
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/git_ops.rs:tests::test_check_git_status_with_changes:348": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_check_git_status_with_changes",
          "line": 348
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/subprocess/mock.rs:MockCommandConfig::returns_success:168": {
        "id": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_success",
          "line": 168
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/metadata_parser.rs:tests::test_parse_frontmatter:351": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_parse_frontmatter",
          "line": 351
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/config/command.rs:default_max_attempts:185": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "default_max_attempts",
          "line": 185
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/command_validator.rs:test_validate_command_invalid_name:508": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "test_validate_command_invalid_name",
          "line": 508
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/worktree/test_state.rs:test_state_updates::<closure@4>:79": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_updates::<closure@4>",
          "line": 79
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/tests.rs:test_git_command_tracking:545": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_git_command_tracking",
          "line": 545
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 20
      },
      "./src/cook/retry.rs:test_format_subprocess_error_all_fields:355": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_format_subprocess_error_all_fields",
          "line": 355
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/git/scenario.rs:tests::test_scenario_mock_dirty_repo:542": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_dirty_repo",
          "line": 542
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/abstractions/exit_status.rs:test_from_raw_success:25": {
        "id": {
          "file": "./src/abstractions/exit_status.rs",
          "name": "test_from_raw_success",
          "line": 25
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/testing/mocks/claude.rs:MockClaudeClientBuilder::default:19": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::default",
          "line": 19
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/command_discovery.rs:CommandDiscovery::scan_commands:34": {
        "id": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::scan_commands",
          "line": 34
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 12,
        "_lines": 70
      },
      "./src/cook/session/adapter.rs:tests::test_start_session:328": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_start_session",
          "line": 328
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/subprocess/adapter.rs:MockSubprocessExecutor::expect_execute:118": {
        "id": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::expect_execute",
          "line": 118
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 18
      },
      "./src/worktree/manager.rs:WorktreeManager::list_sessions:259": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 11,
        "_lines": 67
      },
      "./src/git/parsers.rs:parse_worktree_list:172": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "parse_worktree_list",
          "line": 172
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 23
      },
      "./src/config/loader.rs:ConfigLoader::load_project:115": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_project",
          "line": 115
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 16
      },
      "./src/init/mod.rs:select_templates:107": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "select_templates",
          "line": 107
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 18
      },
      "./src/commands/attributes.rs:AttributeValue::is_null:60": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::is_null",
          "line": 60
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/worktree/manager.rs:WorktreeManager::get_last_successful_command:658": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_last_successful_command",
          "line": 658
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 10
      },
      "./src/testing/mod.rs:setup_test_project:263": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "setup_test_project",
          "line": 263
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/commands/handlers/claude.rs:ClaudeHandler::name:23": {
        "id": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::name",
          "line": 23
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/claude.rs:MockClaudeClientBuilder::build:61": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::build",
          "line": 61
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/abstractions/git.rs:MockGitOperations::is_git_repo:317": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::is_git_repo",
          "line": 317
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/workflow.rs:MockWorkflowExecutor::failing:37": {
        "id": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::failing",
          "line": 37
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/mod.rs:test_global_config_default:659": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_global_config_default",
          "line": 659
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/cook/workflow/executor.rs:tests::test_get_current_head_respects_working_directory:1730": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_respects_working_directory",
          "line": 1730
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 7
      },
      "./src/cook/git_ops.rs:test_get_last_commit_message_no_commits:255": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "test_get_last_commit_message_no_commits",
          "line": 255
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/git/mod.rs:GitCommandRunner::new:101": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::new",
          "line": 101
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/simple_state/tests.rs:test::test_invalid_root_directory:247": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_invalid_root_directory",
          "line": 247
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/config/command.rs:test_workflow_command_conversion:573": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "test_workflow_command_conversion",
          "line": 573
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/subprocess/tests.rs:test_mock_runner_multiple_calls:76": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "test_mock_runner_multiple_calls",
          "line": 76
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 28
      },
      "./src/config/mod.rs:test_get_claude_api_key_config_precedence_over_env:462": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_get_claude_api_key_config_precedence_over_env",
          "line": 462
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 32
      },
      "./src/cook/coordinators/workflow_tests.rs:tests::test_should_continue_within_limit:188": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_within_limit",
          "line": 188
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/session/state.rs:SessionState::fail:82": {
        "id": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::fail",
          "line": 82
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/registry.rs:test_registry_registration:171": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "test_registry_registration",
          "line": 171
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::validate_choice_input:42": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::validate_choice_input",
          "line": 42
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 15
      },
      "./src/cook/execution/claude.rs:tests::test_claude_executor_check:192": {
        "id": {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_check",
          "line": 192
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/worktree/manager.rs:WorktreeManager::mark_session_abandoned::<closure@24>:651": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::mark_session_abandoned::<closure@24>",
          "line": 651
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/execution/interpolation.rs:tests::test_mixed_segments:510": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_mixed_segments",
          "line": 510
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/dynamic_registry.rs:tests::test_list_commands:419": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_list_commands",
          "line": 419
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/interaction/prompts.rs:test_validate_choice_input_invalid_non_numeric:252": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "test_validate_choice_input_invalid_non_numeric",
          "line": 252
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/git_ops.rs:tests::test_git_mutex_prevents_races:124": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_git_mutex_prevents_races",
          "line": 124
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 2
      },
      "./src/testing/helpers/assertions.rs:tests::test_assert_file_exists_panic:173": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_file_exists_panic",
          "line": 173
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 1
      },
      "./src/session/tests.rs:test_session_persistence_and_recovery:105": {
        "id": {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 70
      },
      "./src/worktree/manager.rs:WorktreeManager::cleanup_session:508": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 8,
        "_lines": 74
      },
      "./src/subprocess/runner.rs:TokioProcessRunner::run:85": {
        "id": {
          "file": "./src/subprocess/runner.rs",
          "name": "TokioProcessRunner::run",
          "line": 85
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 33,
        "_lines": 159
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_shell_command:1325": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_shell_command",
          "line": 1325
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 41
      },
      "./src/commands/result.rs:tests::test_error_result:183": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "tests::test_error_result",
          "line": 183
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/git/parsers.rs:update_worktree_info:224": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "update_worktree_info",
          "line": 224
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 11,
        "_lines": 15
      },
      "./src/scoring/mod.rs:format_component:329": {
        "id": {
          "file": "./src/scoring/mod.rs",
          "name": "format_component",
          "line": 329
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 10,
        "_lines": 27
      },
      "./src/simple_state/cache.rs:CacheManager::remove:77": {
        "id": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::remove",
          "line": 77
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 8
      },
      "./src/worktree/manager.rs:test_cleanup_config_defaults:942": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "test_cleanup_config_defaults",
          "line": 942
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::new:95": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::new",
          "line": 95
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 22
      },
      "./src/config/dynamic_registry.rs:tests::test_validate_json_value_type_enum:560": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_enum",
          "line": 560
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/cook/workflow/executor.rs:test_get_current_head:1414": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "test_get_current_head",
          "line": 1414
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 16
      },
      "./src/testing/test_mocks.rs:TestMockSetup::setup_successful_analysis::<closure@14>:193": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis::<closure@14>",
          "line": 193
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 4
      },
      "./src/git/scenario.rs:GitScenarioMock::clear_command_log:180": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::clear_command_log",
          "line": 180
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_context_interpolation:549": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_context_interpolation",
          "line": 549
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/config/loader.rs:tests::test_load_with_explicit_path_nested_workflow:187": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_explicit_path_nested_workflow",
          "line": 187
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/config/loader.rs:test_load_with_explicit_path_nested_workflow:187": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "test_load_with_explicit_path_nested_workflow",
          "line": 187
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 4,
        "_lines": 27
      },
      "./src/config/command_parser.rs:tests::test_parse_command_string_simple:207": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_string_simple",
          "line": 207
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/mod.rs:test_get_claude_api_key_from_config:432": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_get_claude_api_key_from_config",
          "line": 432
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/execution/interpolation.rs:tests::test_undefined_variable_strict_mode:431": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_undefined_variable_strict_mode",
          "line": 431
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::display_error:249": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_error",
          "line": 249
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/retry.rs:test_error_formatting_rate_limit:262": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_error_formatting_rate_limit",
          "line": 262
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/git_ops.rs:is_git_repo:71": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "is_git_repo",
          "line": 71
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/git/scenario.rs:GitScenarioMock::create_worktree:487": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::create_worktree",
          "line": 487
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/cook/execution/runner.rs:RealCommandRunner::execute:112": {
        "id": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::execute",
          "line": 112
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/coordinators/execution_tests.rs:tests::test_execute_claude_success:117": {
        "id": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_claude_success",
          "line": 117
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/execution/data_pipeline.rs:DataPipeline::process_streaming:134": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process_streaming",
          "line": 134
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/session/storage.rs:InMemoryStorage::default:109": {
        "id": {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::default",
          "line": 109
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/tests.rs:cook_tests::test_claude_cli_not_available:50": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_claude_cli_not_available",
          "line": 50
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/config.rs:TestConfiguration::into_arc:64": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::into_arc",
          "line": 64
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/commands/context.rs:ExecutionContext::with_capture_output:84": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_capture_output",
          "line": 84
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/retry.rs:additional_tests::test_format_subprocess_error_with_newlines:488": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_format_subprocess_error_with_newlines",
          "line": 488
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/mod.rs:tests::test_mixed_workflow_config:217": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_mixed_workflow_config",
          "line": 217
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/coordinators/execution_tests.rs:tests::test_check_command_available:180": {
        "id": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_check_command_available",
          "line": 180
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/testing/mocks/git.rs:MockGitOperations::new:116": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/interaction/display.rs:MockProgressDisplay::step_start:412": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::step_start",
          "line": 412
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/config.rs:tests::test_default_configuration:188": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_default_configuration",
          "line": 188
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/session/tracker.rs:test_session_updates:241": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "test_session_updates",
          "line": 241
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 31
      },
      "./src/testing/fixtures/mod.rs:Fixtures::complex_project_fs:73": {
        "id": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::complex_project_fs",
          "line": 73
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 27
      },
      "./src/cook/coordinators/workflow.rs:TestCoordinator::prompt_user:229": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::prompt_user",
          "line": 229
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/session/config.rs:ExecutionMode::is_worktree:40": {
        "id": {
          "file": "./src/session/config.rs",
          "name": "ExecutionMode::is_worktree",
          "line": 40
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/worktree/manager.rs:test_update_checkpoint_increments_iteration::<closure@41>:1158": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "test_update_checkpoint_increments_iteration::<closure@41>",
          "line": 1158
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/dynamic_registry.rs:tests::test_apply_definition_defaults_options_already_set:936": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_options_already_set",
          "line": 936
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/execution/data_pipeline.rs:DataPipeline::from_config:33": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::from_config",
          "line": 33
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 12,
        "_lines": 38
      },
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::apply_definition_defaults:274": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 7,
        "_lines": 24
      },
      "./src/cook/orchestrator.rs:TestMockGitOperations::create_commit:1550": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::create_commit",
          "line": 1550
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/execution/interpolation.rs:InterpolationContext::set:232": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/abstractions/claude.rs:MockClaudeClient::implement_spec:664": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::implement_spec",
          "line": 664
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 24
      },
      "./src/git/types.rs:GitStatus::has_staged_changes:55": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::has_staged_changes",
          "line": 55
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 4
      },
      "./src/git/types.rs:GitDiff::files_count:110": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::files_count",
          "line": 110
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/abstractions/claude.rs:RealClaudeClient::default:337": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::default",
          "line": 337
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/coordinators/workflow_tests.rs:tests::test_should_continue_beyond_limit:232": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_beyond_limit",
          "line": 232
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::interpolate_workflow_step:775": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::interpolate_workflow_step",
          "line": 775
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 12,
        "_lines": 42
      },
      "./src/config/command_validator.rs:test_validate_option_types:473": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "test_validate_option_types",
          "line": 473
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/subprocess/builder.rs:ProcessCommandBuilder::stdin:71": {
        "id": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::stdin",
          "line": 71
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/mod.rs:test_simple_workflow_config_parsing:167": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_simple_workflow_config_parsing",
          "line": 167
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 19
      },
      "./src/config/command.rs:CommandArg::parse:68": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 13
      },
      "./src/testing/mocks/subprocess.rs:MockSubprocessManager::run_command:97": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::run_command",
          "line": 97
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 26
      },
      "./src/commands/handlers/file.rs:FileHandler::description:282": {
        "id": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::description",
          "line": 282
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/prompts.rs:tests::test_mock_prompter_yes_no:183": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_mock_prompter_yes_no",
          "line": 183
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/mod.rs:test_merge_env_vars:539": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_merge_env_vars",
          "line": 539
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 5,
        "_lines": 61
      },
      "./src/testing/mocks/claude.rs:test_mock_claude_unavailable:265": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "test_mock_claude_unavailable",
          "line": 265
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/testing/mocks/git.rs:MockGitOperationsBuilder::new:47": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::new",
          "line": 47
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/testing/mocks/fs.rs:test_mock_fs_list_dir:289": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "test_mock_fs_list_dir",
          "line": 289
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/worktree/tests.rs:test_list_interrupted_sessions_none_interrupted:287": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 10,
        "_lines": 28
      },
      "./src/abstractions/git.rs:RealGitOperations::is_git_repo:142": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 19
      },
      "./src/cook/coordinators/session.rs:DefaultSessionCoordinator::start_session:61": {
        "id": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 11
      },
      "./src/config/command_validator.rs:tests::test_registry_initialization:420": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_registry_initialization",
          "line": 420
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/interaction/prompts.rs:MockPrompter::new:136": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "MockPrompter::new",
          "line": 136
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/orchestrator.rs:test_file_pattern_validation:2041": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_file_pattern_validation",
          "line": 2041
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 18
      },
      "./src/config/mod.rs:tests::test_get_global_mmm_dir_success:673": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_global_mmm_dir_success",
          "line": 673
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/session/tests.rs:test_session_state_machine:10": {
        "id": {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 42
      },
      "./src/cook/interaction/mod.rs:MockSpinnerHandle::fail:614": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockSpinnerHandle::fail",
          "line": 614
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 1
      },
      "./src/cook/execution/mapreduce_tests.rs:test_interpolation_context_hierarchy:366": {
        "id": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_context_hierarchy",
          "line": 366
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 26
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::step_start:265": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::step_start",
          "line": 265
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/config/command_parser.rs:test_parse_command_with_options:141": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "test_parse_command_with_options",
          "line": 141
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::validate_choice_input::<closure@4>:47": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::validate_choice_input::<closure@4>",
          "line": 47
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 7
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::determine_command_type:1198": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::determine_command_type",
          "line": 1198
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 23,
        "_lines": 64
      },
      "./src/cook/mod_tests.rs:core_tests::run_analysis:33": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::run_analysis",
          "line": 33
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 1
      },
      "./src/session/manager.rs:InMemorySessionManager::create_session:171": {
        "id": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::create_session",
          "line": 171
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 13
      },
      "./src/cook/mod_tests.rs:test_validate_arguments:332": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_validate_arguments",
          "line": 332
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 34
      },
      "./src/worktree/manager.rs:WorktreeManager::load_session_state:615": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::load_session_state",
          "line": 615
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/abstractions/claude.rs:test_mock_claude_error_response:746": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "test_mock_claude_error_response",
          "line": 746
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/session/state.rs:SessionState::is_active:122": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "SessionState::is_active",
          "line": 122
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/command.rs:tests::test_analysis_config_defaults:673": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::test_analysis_config_defaults",
          "line": 673
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/worktree/manager.rs:WorktreeManager::merge_session:330": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 20,
        "_lines": 176
      },
      "./src/config/metadata_parser.rs:MetadataParser::extract_section:137": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_section",
          "line": 137
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 27
      },
      "./src/worktree/manager.rs:test_cleanup_session_after_merge_not_merged:969": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "test_cleanup_session_after_merge_not_merged",
          "line": 969
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 48
      },
      "./src/testing/mocks/subprocess.rs:MockSubprocessManager::was_called_with::<closure@13>:130": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::was_called_with::<closure@13>",
          "line": 130
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 5
      },
      "./src/subprocess/mock.rs:MockProcessRunner::verify_called:54": {
        "id": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::verify_called",
          "line": 54
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/config.rs:TestConfigurationBuilder::no_changes_commands:93": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::no_changes_commands",
          "line": 93
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/helpers/assertions.rs:assert_not_contains:115": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_not_contains",
          "line": 115
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/git/mod.rs:GitCommandRunner::get_current_branch:144": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_current_branch",
          "line": 144
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 16
      },
      "./src/testing/mocks/git.rs:MockGitOperationsBuilder::with_clean_status:66": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_clean_status",
          "line": 66
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/signal_handler.rs:signal_tests::test_setup_interrupt_handlers:185": {
        "id": {
          "file": "./src/cook/signal_handler.rs",
          "name": "signal_tests::test_setup_interrupt_handlers",
          "line": 185
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/handlers/claude.rs:test_claude_handler_schema:216": {
        "id": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "test_claude_handler_schema",
          "line": 216
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/execution/claude.rs:test_claude_executor_version:207": {
        "id": {
          "file": "./src/cook/execution/claude.rs",
          "name": "test_claude_executor_version",
          "line": 207
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/cook/execution/mapreduce_tests.rs:test_mapreduce_config_defaults:37": {
        "id": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_mapreduce_config_defaults",
          "line": 37
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/cook/tests.rs:workflow_parsing_tests::test_parse_simple_workflow_yaml:244": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "workflow_parsing_tests::test_parse_simple_workflow_yaml",
          "line": 244
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 4
      },
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::get_create_count:86": {
        "id": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::get_create_count",
          "line": 86
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/orchestrator.rs:test_command_arg_detection:2218": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_command_arg_detection",
          "line": 2218
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/abstractions/git.rs:real_git_tests::test_git_command_success:442": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_git_command_success",
          "line": 442
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/git_ops.rs:tests::test_stage_all_changes_no_changes:286": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_stage_all_changes_no_changes",
          "line": 286
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/git_ops.rs:tests::test_create_commit_no_staged_changes:323": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_no_staged_changes",
          "line": 323
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/mod_tests.rs:validate_arguments:57": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "validate_arguments",
          "line": 57
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/command_parser.rs:test_parse_command_string_simple:207": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "test_parse_command_string_simple",
          "line": 207
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/testing/mocks/fs.rs:tests::test_mock_fs_builder:236": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_builder",
          "line": 236
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::start_spinner:418": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::start_spinner",
          "line": 418
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/session/tracker.rs:SessionTrackerImpl::save_state:103": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::save_state",
          "line": 103
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 28
      },
      "./src/cook/retry.rs:test_execute_with_retry_non_transient_failure:298": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_execute_with_retry_non_transient_failure",
          "line": 298
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/config/command.rs:test_analysis_config_serialization:684": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "test_analysis_config_serialization",
          "line": 684
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::matches_glob_pattern:732": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::matches_glob_pattern",
          "line": 732
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 18
      },
      "./src/cook/coordinators/session_tests.rs:test_get_session_info:151": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "test_get_session_info",
          "line": 151
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 24
      },
      "./src/cook/workflow/executor.rs:test_json_to_attribute_value_static_object:1507": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "test_json_to_attribute_value_static_object",
          "line": 1507
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 23
      },
      "./src/cook/coordinators/execution_tests.rs:tests::test_execute_claude_failure:137": {
        "id": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_claude_failure",
          "line": 137
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/loader.rs:tests::test_load_with_no_config_uses_defaults:242": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_no_config_uses_defaults",
          "line": 242
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/interaction/display.rs:MockProgressDisplay::iteration_end:405": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::iteration_end",
          "line": 405
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/context.rs:ExecutionContext::add_metadata:100": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::add_metadata",
          "line": 100
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/worktree/manager.rs:tests::test_cleanup_config_defaults:942": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_cleanup_config_defaults",
          "line": 942
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/execution/mapreduce.rs:ProgressTracker::complete_item:183": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "ProgressTracker::complete_item",
          "line": 183
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/mod.rs:test_structured_workflow_config_parsing:187": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_structured_workflow_config_parsing",
          "line": 187
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 29
      },
      "./src/simple_state/tests.rs:test_cache_cleanup:277": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_cache_cleanup",
          "line": 277
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 27
      },
      "./src/config/command_validator.rs:tests::test_validate_option_types:473": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_option_types",
          "line": 473
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/git/mod.rs:GitCommandRunner::is_repository:125": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::is_repository",
          "line": 125
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/cook/orchestrator.rs:test_detect_structured_workflow::<closure@44>:1859": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_detect_structured_workflow::<closure@44>",
          "line": 1859
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/orchestrator.rs:tests::test_setup_environment_basic:1750": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_setup_environment_basic",
          "line": 1750
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/git/parsers.rs:tests::test_parse_status_output_renamed:279": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_status_output_renamed",
          "line": 279
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/abstractions/git.rs:RealGitOperations::stage_all_changes:131": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::stage_all_changes",
          "line": 131
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 4
      },
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::cleanup_all:138": {
        "id": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_all",
          "line": 138
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 9
      },
      "./src/commands/attributes.rs:AttributeSchema::add_optional:123": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/interaction/prompts.rs:test_validate_choice_input_valid_single_digit:223": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "test_validate_choice_input_valid_single_digit",
          "line": 223
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/worktree/manager.rs:WorktreeManager::cleanup_all_sessions:572": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_all_sessions",
          "line": 572
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 9
      },
      "./src/config/command.rs:tests::verify_implement_spec_command:878": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::verify_implement_spec_command",
          "line": 878
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 1
      },
      "./src/commands/registry.rs:TestHandler::name:149": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "TestHandler::name",
          "line": 149
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/workflow/executor.rs:test_json_to_attribute_value_static_string:1431": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "test_json_to_attribute_value_static_string",
          "line": 1431
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/retry.rs:additional_tests::test_execute_with_retry_verbose_output:476": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_verbose_output",
          "line": 476
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/commands/context.rs:tests::test_env_vars:164": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_env_vars",
          "line": 164
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/command_parser.rs:test_parse_command_with_variable:152": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "test_parse_command_with_variable",
          "line": 152
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/mod.rs:tests::test_command_serialization_roundtrip:369": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_serialization_roundtrip",
          "line": 369
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/config/loader.rs:tests::test_load_from_path_invalid_yaml:307": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_from_path_invalid_yaml",
          "line": 307
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/commands/handlers/cargo.rs:CargoHandler::examples:215": {
        "id": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::examples",
          "line": 215
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/retry.rs:tests::test_transient_error_detection:210": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_transient_error_detection",
          "line": 210
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::json_to_attribute_value:1263": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::json_to_attribute_value",
          "line": 1263
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 11,
        "_lines": 27
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::get_messages:488": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 488
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/claude.rs:MockClaudeClient::get_call_count:102": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::get_call_count",
          "line": 102
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/execution/claude.rs:ClaudeExecutorImpl::check_claude_cli:98": {
        "id": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::check_claude_cli",
          "line": 98
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 16
      },
      "./src/cook/mod_tests.rs:check_for_changes:94": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "check_for_changes",
          "line": 94
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 4
      },
      "./src/cook/interaction/prompts.rs:test_validate_choice_input_single_choice:265": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "test_validate_choice_input_single_choice",
          "line": 265
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/workflow/executor_tests.rs:MockClaudeExecutor::execute_claude_command:47": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockClaudeExecutor::execute_claude_command",
          "line": 47
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/commands/result.rs:test_from_output:191": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "test_from_output",
          "line": 191
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/retry.rs:tests::test_execute_with_retry_command_not_found:288": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_command_not_found",
          "line": 288
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/session/config.rs:test_execution_mode:77": {
        "id": {
          "file": "./src/session/config.rs",
          "name": "test_execution_mode",
          "line": 77
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/cook/coordinators/workflow_tests.rs:MockSpinner::update_message:79": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockSpinner::update_message",
          "line": 79
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 1
      },
      "./src/cook/signal_handler.rs:signal_tests::test_update_interrupted_state_error_handling:199": {
        "id": {
          "file": "./src/cook/signal_handler.rs",
          "name": "signal_tests::test_update_interrupted_state_error_handling",
          "line": 199
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/display.rs:test_step_display:597": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "test_step_display",
          "line": 597
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/testing/mod.rs:test_helpers::setup_test_project:263": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "test_helpers::setup_test_project",
          "line": 263
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/abstractions/git.rs:MockGitOperations::create_commit:311": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::create_commit",
          "line": 311
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/git/mod.rs:test_list_files:577": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "test_list_files",
          "line": 577
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 22
      },
      "./src/cook/interaction/prompts.rs:tests::test_format_choice_prompt:271": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_format_choice_prompt",
          "line": 271
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/abstractions/claude.rs:MockClaudeClient::execute_command:615": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 615
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 22
      },
      "./src/cook/mod.rs:run_improvement_loop:386": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "run_improvement_loop",
          "line": 386
        },
        "is_entry_point": true,
        "is_test": false,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/coordinators/session_tests.rs:test_complete_session_success:105": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "test_complete_session_success",
          "line": 105
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 23
      },
      "./src/commands/handlers/claude.rs:ClaudeHandler::description:184": {
        "id": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::description",
          "line": 184
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/command_validator.rs:test_validate_command_valid:491": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "test_validate_command_valid",
          "line": 491
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/cook/interaction/mod.rs:test_display_formatting:422": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "test_display_formatting",
          "line": 422
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/cook/mod_tests.rs:test_run_command_with_timeout:539": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_run_command_with_timeout",
          "line": 539
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::get_messages:35": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 35
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/dynamic_registry.rs:test_check_value_type:644": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_check_value_type",
          "line": 644
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 71
      },
      "./src/testing/mocks/subprocess.rs:tests::test_mock_subprocess_history:162": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_history",
          "line": 162
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/session/adapter.rs:SessionManagerAdapter::convert_state:43": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::convert_state",
          "line": 43
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 38
      },
      "./src/subprocess/adapter.rs:create_output:67": {
        "id": {
          "file": "./src/subprocess/adapter.rs",
          "name": "create_output",
          "line": 67
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/session/storage.rs:test_file_storage:154": {
        "id": {
          "file": "./src/session/storage.rs",
          "name": "test_file_storage",
          "line": 154
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 32
      },
      "./src/config/loader.rs:test_load_from_path_nonexistent_file:320": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "test_load_from_path_nonexistent_file",
          "line": 320
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 15
      },
      "./src/init/templates.rs:get_templates_by_names:52": {
        "id": {
          "file": "./src/init/templates.rs",
          "name": "get_templates_by_names",
          "line": 52
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/testing/mocks/git.rs:MockGitOperationsBuilder::build:87": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::build",
          "line": 87
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/git/mod.rs:tests::test_get_current_branch:435": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_current_branch",
          "line": 435
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/init/mod.rs:test_run_init_not_git_repo:351": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "test_run_init_not_git_repo",
          "line": 351
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/cook/orchestrator.rs:TestMockGitOperations::is_git_repo:1534": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::is_git_repo",
          "line": 1534
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/fixtures/mod.rs:Fixtures::successful_claude:37": {
        "id": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::successful_claude",
          "line": 37
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/config/metadata_parser.rs:MetadataParser::new:19": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::new",
          "line": 19
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::display_warning:403": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::display_warning",
          "line": 403
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/git/scenario.rs:test_scenario_mock_custom_response:592": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "test_scenario_mock_custom_response",
          "line": 592
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/commands/context.rs:tests::test_with_executor:191": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_with_executor",
          "line": 191
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/scoring/mod.rs:ProjectHealthScore::get_improvement_suggestions:125": {
        "id": {
          "file": "./src/scoring/mod.rs",
          "name": "ProjectHealthScore::get_improvement_suggestions",
          "line": 125
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 12,
        "_lines": 47
      },
      "./src/cook/interaction/display.rs:tests::test_debug_output:629": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_debug_output",
          "line": 629
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/fixtures/mod.rs:Fixtures::clean_git_repo:17": {
        "id": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::clean_git_repo",
          "line": 17
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/abstractions/claude.rs:MockClaudeClient::add_response:577": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_response",
          "line": 577
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/dynamic_registry.rs:test_validate_json_value_type_enum:560": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_validate_json_value_type_enum",
          "line": 560
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 57
      },
      "./src/commands/handlers/file.rs:test_file_handler_schema:309": {
        "id": {
          "file": "./src/commands/handlers/file.rs",
          "name": "test_file_handler_schema",
          "line": 309
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/git_ops.rs:tests::create_commit_in_dir:118": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_commit_in_dir",
          "line": 118
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 2
      },
      "./src/cook/retry.rs:additional_tests::test_execute_with_retry_io_error_recovery:432": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_io_error_recovery",
          "line": 432
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mocks/claude.rs:MockClaudeClient::implement_spec:201": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::implement_spec",
          "line": 201
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 5,
        "_lines": 20
      },
      "./src/worktree/manager.rs:WorktreeManager::new::<closure@5>:107": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new::<closure@5>",
          "line": 107
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/retry.rs:tests::test_error_formatting_with_stdout_only:249": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting_with_stdout_only",
          "line": 249
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/coordinators/workflow_tests.rs:tests::test_should_continue_at_limit:210": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_at_limit",
          "line": 210
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/git/scenario.rs:GitScenarioMock::with_merge_conflict:108": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_merge_conflict",
          "line": 108
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 21
      },
      "./src/git/scenario.rs:GitScenarioMock::with_detached_head:130": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_detached_head",
          "line": 130
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 17
      },
      "./src/testing/helpers/assertions.rs:tests::test_assert_err_macro:213": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_err_macro",
          "line": 213
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::format_duration:131": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::format_duration",
          "line": 131
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 15
      },
      "./src/cook/coordinators/execution_tests.rs:TestClaudeExecutor::get_claude_version:70": {
        "id": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "TestClaudeExecutor::get_claude_version",
          "line": 70
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/fixtures/mod.rs:Fixtures::dirty_git_repo:25": {
        "id": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::dirty_git_repo",
          "line": 25
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/testing/mocks/claude.rs:test_mock_claude_builder:249": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "test_mock_claude_builder",
          "line": 249
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_single_step:1144": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 15,
        "_lines": 53
      },
      "./src/config/command_discovery.rs:tests::test_cache_behavior:165": {
        "id": {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_cache_behavior",
          "line": 165
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/cook/interaction/display.rs:tests::test_mock_display:479": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_display",
          "line": 479
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/abstractions/git.rs:RealGitOperations::git_command:88": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 28
      },
      "./src/cook/orchestrator.rs:test_workflow_detects_structured_commands::<closure@47>:1999": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_workflow_detects_structured_commands::<closure@47>",
          "line": 1999
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/git/scenario.rs:GitScenarioMock::is_clean:420": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_clean",
          "line": 420
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 4
      },
      "./src/cook/tests.rs:cook_tests::test_empty_repository:120": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_empty_repository",
          "line": 120
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/config.rs:TestConfigurationBuilder::new:82": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::new",
          "line": 82
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/session/tracker.rs:test_session_state_persistence:214": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "test_session_state_persistence",
          "line": 214
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 26
      },
      "./src/cook/git_ops.rs:check_git_status_in_dir:100": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "check_git_status_in_dir",
          "line": 100
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/init/mod.rs:test_handle_existing_commands_with_conflicts:530": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "test_handle_existing_commands_with_conflicts",
          "line": 530
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/init/mod.rs:test_run_init_create_commands:368": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "test_run_init_create_commands",
          "line": 368
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 33
      },
      "./src/cook/coordinators/workflow.rs:TestCoordinator::should_continue:269": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::should_continue",
          "line": 269
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/claude.rs:MockClaudeClient::check_availability:161": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::check_availability",
          "line": 161
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 7
      },
      "./src/commands/handlers/shell.rs:ShellHandler::execute:45": {
        "id": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 7,
        "_lines": 80
      },
      "./src/cook/workflow/executor.rs:WorkflowContext::interpolate:57": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowContext::interpolate",
          "line": 57
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 22
      },
      "./src/cook/interaction/display.rs:tests::test_verbosity_levels:568": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_verbosity_levels",
          "line": 568
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/config/dynamic_registry.rs:tests::test_edge_cases_json_values:716": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_edge_cases_json_values",
          "line": 716
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/init/templates.rs:tests::test_get_all_templates_success:67": {
        "id": {
          "file": "./src/init/templates.rs",
          "name": "tests::test_get_all_templates_success",
          "line": 67
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 8
      },
      "./src/testing/mod.rs:MockGitBuilder::with_success:136": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::with_success",
          "line": 136
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/mocks/git.rs:test_mock_git_staging:345": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "test_mock_git_staging",
          "line": 345
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/simple_state/tests.rs:test_concurrent_state_access::<closure@10>:161": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_concurrent_state_access::<closure@10>",
          "line": 161
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 9
      },
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::refresh:44": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::refresh",
          "line": 44
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 26
      },
      "./src/config/command_validator.rs:CommandRegistry::validate_argument_type:283": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_argument_type",
          "line": 283
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 9,
        "_lines": 34
      },
      "./src/config/command.rs:debug_command_sequence:847": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "debug_command_sequence",
          "line": 847
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/abstractions/git.rs:MockGitOperations::git_command:279": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 12
      },
      "./src/config/dynamic_registry.rs:test_dynamic_registry_creation:336": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_dynamic_registry_creation",
          "line": 336
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/cook/execution/runner.rs:RealCommandRunner::with_subprocess:39": {
        "id": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::with_subprocess",
          "line": 39
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/commands/registry.rs:CommandRegistry::new:15": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/abstractions/git.rs:MockGitOperations::get_last_commit_message:292": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::get_last_commit_message",
          "line": 292
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/testing/mocks/subprocess.rs:MockSubprocessManager::builder:93": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::builder",
          "line": 93
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/mod.rs:MockSpinnerHandle::update_message:612": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockSpinnerHandle::update_message",
          "line": 612
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 1
      },
      "./src/cook/mod_tests.rs:core_tests::test_extract_spec_from_git:290": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git",
          "line": 290
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/coordinators/workflow_tests.rs:test_should_continue_at_limit:210": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "test_should_continue_at_limit",
          "line": 210
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/git/scenario.rs:GitScenarioMock::default:273": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default",
          "line": 273
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/mod.rs:tests::test_mock_user_interaction:362": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_user_interaction",
          "line": 362
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/abstractions/git.rs:test_stage_all_changes_and_commit:470": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "test_stage_all_changes_and_commit",
          "line": 470
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 18
      },
      "./src/git/mod.rs:test_create_branch:620": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "test_create_branch",
          "line": 620
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 24
      },
      "./src/cook/execution/data_pipeline.rs:Sorter::compare_json_values::<closure@20>:854": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::compare_json_values::<closure@20>",
          "line": 854
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 1
      },
      "./src/config/mapreduce.rs:test_parse_basic_mapreduce_workflow:177": {
        "id": {
          "file": "./src/config/mapreduce.rs",
          "name": "test_parse_basic_mapreduce_workflow",
          "line": 177
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 30
      },
      "./src/cook/session/adapter.rs:SessionManagerAdapter::new:27": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::new",
          "line": 27
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/commands/handlers/file.rs:FileHandler::new:18": {
        "id": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::new",
          "line": 18
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/subprocess/mock.rs:MockProcessRunner::add_response:70": {
        "id": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::add_response",
          "line": 70
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 21
      },
      "./src/cook/mod_tests.rs:test_extract_spec_from_git_error:315": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_extract_spec_from_git_error",
          "line": 315
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/execution/interpolation.rs:test_context_inheritance:449": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "test_context_inheritance",
          "line": 449
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/config/command_parser.rs:tests::test_parse_command_with_slash:124": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_with_slash",
          "line": 124
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/testing/test_mocks.rs:CargoMocks::check_with_warnings:19": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::check_with_warnings",
          "line": 19
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/mod.rs:MockGitBuilder::is_repo:130": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::is_repo",
          "line": 130
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/helpers/mod.rs:tests::test_create_test_repo:153": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "tests::test_create_test_repo",
          "line": 153
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/worktree/test_state.rs:test_state_error_handling::<closure@11>:204": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_error_handling::<closure@11>",
          "line": 204
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/command.rs:tests::test_workflow_command_conversion:573": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_command_conversion",
          "line": 573
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/config/metadata_parser.rs:tests::test_minimal_definition:426": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_minimal_definition",
          "line": 426
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/testing/helpers/mod.rs:count_files:103": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "count_files",
          "line": 103
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 4,
        "_lines": 11
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::display_success:555": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_success",
          "line": 555
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/git/scenario.rs:GitScenarioMock::with_non_repository:148": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_non_repository",
          "line": 148
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 17
      },
      "./src/config/metadata_parser.rs:ArgumentDef::from:305": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "ArgumentDef::from",
          "line": 305
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 12
      },
      "./src/git/scenario.rs:GitScenarioMock::list_files:400": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::list_files",
          "line": 400
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/subprocess/git.rs:GitRunnerImpl::status:52": {
        "id": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 12,
        "_lines": 41
      },
      "./src/config/mod.rs:test_get_global_mmm_dir_path_structure:684": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_get_global_mmm_dir_path_structure",
          "line": 684
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/signal_handler.rs:tests::test_update_interrupted_state:122": {
        "id": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::test_update_interrupted_state",
          "line": 122
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/commands/result.rs:CommandError::from:165": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "CommandError::from",
          "line": 165
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/session/adapter.rs:tests::test_error_handling:366": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_error_handling",
          "line": 366
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/simple_state/tests.rs:test_history_retrieval:131": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_history_retrieval",
          "line": 131
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 16
      },
      "./src/subprocess/claude.rs:ClaudeRunnerImpl::new:25": {
        "id": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::new",
          "line": 25
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/helpers/mod.rs:tests::test_dirs_equal_missing_nested_file:260": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "tests::test_dirs_equal_missing_nested_file",
          "line": 260
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/config/dynamic_registry.rs:tests::test_get_type_name:618": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_get_type_name",
          "line": 618
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/worktree/test_state.rs:test_state_file_creation:38": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_file_creation",
          "line": 38
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 7,
        "_lines": 32
      },
      "./src/git/scenario.rs:GitScenarioMock::with_clean_repo:68": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_clean_repo",
          "line": 68
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 17
      },
      "./src/git/parsers.rs:parse_status_line:56": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_line",
          "line": 56
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 10,
        "_lines": 44
      },
      "./src/cook/workflow/executor_tests.rs:test_determine_command_type_legacy_name:682": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_determine_command_type_legacy_name",
          "line": 682
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 24
      },
      "./src/commands/handlers/claude.rs:ClaudeHandler::schema:27": {
        "id": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::schema",
          "line": 27
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 15
      },
      "./src/git/scenario.rs:test_scenario_mock_non_repository:582": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "test_scenario_mock_non_repository",
          "line": 582
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/session/config.rs:ExecutionMode::worktree_name:45": {
        "id": {
          "file": "./src/session/config.rs",
          "name": "ExecutionMode::worktree_name",
          "line": 45
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/cook/session/adapter.rs:adapter_tests::test_complete_session_lifecycle:416": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_complete_session_lifecycle",
          "line": 416
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 8
      },
      "./src/cook/coordinators/environment.rs:DefaultEnvironmentCoordinator::verify_git_repository:79": {
        "id": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::verify_git_repository",
          "line": 79
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/git/error.rs:GitError::is_recoverable:69": {
        "id": {
          "file": "./src/git/error.rs",
          "name": "GitError::is_recoverable",
          "line": 69
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 10
      },
      "./src/git/parsers.rs:finalize_worktree:195": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "finalize_worktree",
          "line": 195
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_handler_command:765": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 7,
        "_lines": 56
      },
      "./src/cook/workflow/executor_tests.rs:MockClaudeExecutor::new:29": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockClaudeExecutor::new",
          "line": 29
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::get_worktree_commits:818": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_worktree_commits",
          "line": 818
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 21
      },
      "./src/worktree/manager.rs:WorktreeManager::update_session_state:222": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 22
      },
      "./src/cook/orchestrator.rs:test_arg_resolution_only_for_commands_with_args:2060": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 4,
        "_lines": 157
      },
      "./src/abstractions/claude.rs:MockClaudeClient::code_review:646": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 646
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 17
      },
      "./src/cook/mod.rs:load_playbook_with_mapreduce:225": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook_with_mapreduce",
          "line": 225
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 13,
        "_lines": 94
      },
      "./src/git/parsers.rs:test_parse_status_output_conflict:290": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "test_parse_status_output_conflict",
          "line": 290
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/execution/data_pipeline.rs:Sorter::parse:754": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::parse",
          "line": 754
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 9,
        "_lines": 36
      },
      "./src/worktree/test_state.rs:setup_test_repo:7": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 6,
        "_lines": 22
      },
      "./src/subprocess/tests.rs:subprocess_tests::test_git_runner:124": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_git_runner",
          "line": 124
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/session/timing.rs:tests::test_format_duration:141": {
        "id": {
          "file": "./src/session/timing.rs",
          "name": "tests::test_format_duration",
          "line": 141
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::default:66": {
        "id": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::default",
          "line": 66
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/command.rs:Command::from_string:419": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "Command::from_string",
          "line": 419
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 13
      },
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_option_value:213": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_option_value",
          "line": 213
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/simple_state/state.rs:StateManager::load_or_create:98": {
        "id": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::load_or_create",
          "line": 98
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 42
      },
      "./src/config/loader.rs:tests::test_load_with_explicit_path_yaml:161": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_explicit_path_yaml",
          "line": 161
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/testing/mocks/git.rs:tests::test_mock_git_dirty_status:334": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_dirty_status",
          "line": 334
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/git/types.rs:GitStatus::new:30": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 14
      },
      "./src/cook/retry.rs:tests::test_error_formatting_empty_outputs:268": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting_empty_outputs",
          "line": 268
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/git/parsers.rs:tests::test_parse_worktree_list:324": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_worktree_list",
          "line": 324
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/config/dynamic_registry.rs:tests::test_command_discovery_and_validation:351": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_command_discovery_and_validation",
          "line": 351
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/testing/mocks/fs.rs:test_mock_fs_errors:252": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "test_mock_fs_errors",
          "line": 252
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 20
      },
      "./src/subprocess/tests.rs:subprocess_tests::test_subprocess_manager:105": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/session/tests.rs:test_concurrent_sessions:53": {
        "id": {
          "file": "./src/session/tests.rs",
          "name": "test_concurrent_sessions",
          "line": 53
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 4,
        "_lines": 51
      },
      "./src/testing/mocks/git.rs:MockGitOperations::is_git_repo:219": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::is_git_repo",
          "line": 219
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/session/adapter.rs:tests::test_session_lifecycle:341": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_session_lifecycle",
          "line": 341
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::with_test_config:118": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::with_test_config",
          "line": 118
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 23
      },
      "./src/cook/interaction/display.rs:test_command_output_display:620": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "test_command_output_display",
          "line": 620
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/testing/mocks/workflow.rs:MockWorkflowExecutor::execute_workflow:73": {
        "id": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::execute_workflow",
          "line": 73
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 18
      },
      "./src/cook/execution/interpolation.rs:value_to_string:336": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "value_to_string",
          "line": 336
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 13
      },
      "./src/git/scenario.rs:test_scenario_mock_commit_nothing_to_commit:623": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "test_scenario_mock_commit_nothing_to_commit",
          "line": 623
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/cook/git_ops.rs:test_stage_all_changes_success:265": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "test_stage_all_changes_success",
          "line": 265
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 20
      },
      "./src/commands/result.rs:tests::test_with_duration:202": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "tests::test_with_duration",
          "line": 202
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/commands/result.rs:CommandError::fmt:143": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "CommandError::fmt",
          "line": 143
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 7,
        "_lines": 11
      },
      "./src/cook/interaction/display.rs:test_progress_display_warning:521": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "test_progress_display_warning",
          "line": 521
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/abstractions/claude.rs:RealClaudeClient::is_transient_error:316": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::is_transient_error",
          "line": 316
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 19
      },
      "./src/cook/git_ops.rs:test_git_mutex_prevents_races::<closure@12>:127": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "test_git_mutex_prevents_races::<closure@12>",
          "line": 127
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/init/mod.rs:test_run_init_specific_commands:478": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "test_run_init_specific_commands",
          "line": 478
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 34
      },
      "./src/testing/test_mocks.rs:TestMockSetup::setup_successful_analysis::<closure@13>:183": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis::<closure@13>",
          "line": 183
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 4
      },
      "./src/worktree/tests.rs:test_list_interrupted_sessions_all_interrupted::<closure@16>:261": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted::<closure@16>",
          "line": 261
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/command.rs:debug_workflow_parsing_error:837": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "debug_workflow_parsing_error",
          "line": 837
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 9
      },
      "./src/config/command_validator.rs:tests::test_validate_valid_command:431": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_valid_command",
          "line": 431
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_workflow::<closure@7>:259": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow::<closure@7>",
          "line": 259
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/interaction/mod.rs:MockSpinnerHandle::update_message:332": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockSpinnerHandle::update_message",
          "line": 332
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/coordinators/workflow.rs:test_normalize_command_string_with_slash:402": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "test_normalize_command_string_with_slash",
          "line": 402
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/mod.rs:test_load_workflow_default:427": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "test_load_workflow_default",
          "line": 427
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 37
      },
      "./src/cook/coordinators/execution_tests.rs:test_check_command_available:180": {
        "id": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "test_check_command_available",
          "line": 180
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/subprocess/git.rs:test_git_parse_errors:270": {
        "id": {
          "file": "./src/subprocess/git.rs",
          "name": "test_git_parse_errors",
          "line": 270
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 17
      },
      "./src/commands/handlers/shell.rs:ShellHandler::description:126": {
        "id": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::description",
          "line": 126
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/retry.rs:test_check_claude_cli_fallback:417": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_check_claude_cli_fallback",
          "line": 417
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/config/mod.rs:Config::new:103": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/tests.rs:test_successful_improvement_loop:15": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_successful_improvement_loop",
          "line": 15
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 34
      },
      "./src/cook/mod_tests.rs:core_tests::should_continue_iteration:131": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::should_continue_iteration",
          "line": 131
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 3
      },
      "./src/testing/test_mocks.rs:GitMocks::status_clean:118": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "GitMocks::status_clean",
          "line": 118
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/worktree/test_state.rs:test_validate_initial_state_wrong_worktree_name:410": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_validate_initial_state_wrong_worktree_name",
          "line": 410
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 27
      },
      "./src/testing/helpers/assertions.rs:tests::test_assert_file_contains:178": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_file_contains",
          "line": 178
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/mod_tests.rs:core_tests::check_for_changes:94": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::check_for_changes",
          "line": 94
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 2
      },
      "./src/config/command_discovery.rs:CommandDiscovery::scan_commands::<closure@2>:40": {
        "id": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::scan_commands::<closure@2>",
          "line": 40
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/mod.rs:TestContext::new:34": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::new",
          "line": 34
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 14
      },
      "./src/worktree/tests.rs:test_list_interrupted_sessions_all_interrupted::<closure@15>:256": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted::<closure@15>",
          "line": 256
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/coordinators/execution_tests.rs:TestClaudeExecutor::check_claude_cli:66": {
        "id": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "TestClaudeExecutor::check_claude_cli",
          "line": 66
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/git/types.rs:GitStatus::all_changed_files:70": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::all_changed_files",
          "line": 70
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::iteration_end:287": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::iteration_end",
          "line": 287
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/session/state.rs:SessionState::increment_iteration:100": {
        "id": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::increment_iteration",
          "line": 100
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mocks/git.rs:GitCommandType::classify:21": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "GitCommandType::classify",
          "line": 21
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 5,
        "_lines": 10
      },
      "./src/commands/handlers/cargo.rs:CargoHandler::description:211": {
        "id": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::description",
          "line": 211
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/config.rs:TestConfigurations::test_mode:148": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/session/mod.rs:SessionId::fmt:54": {
        "id": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::fmt",
          "line": 54
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/worktree.rs:MockWorktreeManagerBuilder::fail_on_create:35": {
        "id": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManagerBuilder::fail_on_create",
          "line": 35
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mocks/worktree.rs:MockWorktreeManagerBuilder::new:22": {
        "id": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManagerBuilder::new",
          "line": 22
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/execution/data_pipeline.rs:test_sorter_multiple_fields:987": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "test_sorter_multiple_fields",
          "line": 987
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/worktree/manager.rs:WorktreeManager::merge_session::<closure@12>:463": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session::<closure@12>",
          "line": 463
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/git/mod.rs:tests::test_switch_branch:645": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_switch_branch",
          "line": 645
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/init/templates.rs:test_get_all_templates_success:67": {
        "id": {
          "file": "./src/init/templates.rs",
          "name": "test_get_all_templates_success",
          "line": 67
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 21
      },
      "./src/testing/mod.rs:TestContext::temp_path:97": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::temp_path",
          "line": 97
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/coordinators/workflow_tests.rs:tests::test_display_progress:282": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_display_progress",
          "line": 282
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/testing/mod.rs:MockClaudeBuilder::default:159": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::default",
          "line": 159
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/git_ops.rs:test_check_git_status_success:338": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "test_check_git_status_success",
          "line": 338
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/mod_tests.rs:test_git_command_exists:326": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_git_command_exists",
          "line": 326
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/mocks/fs.rs:test_mock_fs_builder:236": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "test_mock_fs_builder",
          "line": 236
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/testing/mocks/session.rs:MockSessionManager::default:21": {
        "id": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::default",
          "line": 21
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/tests.rs:cook_tests::test_worktree_creation_failure:91": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_worktree_creation_failure",
          "line": 91
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/mocks/workflow.rs:MockWorkflowExecutor::execute_step:55": {
        "id": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::execute_step",
          "line": 55
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 17
      },
      "./src/commands/mod.rs:test_command_handler_builder:116": {
        "id": {
          "file": "./src/commands/mod.rs",
          "name": "test_command_handler_builder",
          "line": 116
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/config/command.rs:tests::test_command_creation:527": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_creation",
          "line": 527
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::display_info:116": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_info",
          "line": 116
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::get:71": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::get",
          "line": 71
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/orchestrator.rs:DirGuard::drop:2482": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/git/scenario.rs:GitScenarioMock::set_scenario:60": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::set_scenario",
          "line": 60
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/mod_tests.rs:test_extract_spec_from_git:290": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_extract_spec_from_git",
          "line": 290
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/cook/execution/interpolation.rs:InterpolationEngine::parse_template:87": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_template",
          "line": 87
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 33
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::start_spinner:263": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::start_spinner",
          "line": 263
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::verbosity:108": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::verbosity",
          "line": 108
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::create_default_workflow_step:100": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::create_default_workflow_step",
          "line": 100
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 18
      },
      "./src/commands/registry.rs:CommandRegistry::register_sync:50": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::register_sync",
          "line": 50
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 22
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_claude_command:822": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_claude_command",
          "line": 822
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 19
      },
      "./src/testing/helpers/mod.rs:tests::test_dirs_equal_nonexistent_dir:278": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "tests::test_dirs_equal_nonexistent_dir",
          "line": 278
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/registry.rs:TestHandler::description:165": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "TestHandler::description",
          "line": 165
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/workflow/executor_tests.rs:test_execute_step_with_env_interpolation:1163": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_execute_step_with_env_interpolation",
          "line": 1163
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 45
      },
      "./src/worktree/test_state.rs:test_validate_initial_state_wrong_branch:382": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_validate_initial_state_wrong_branch",
          "line": 382
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 27
      },
      "./src/git/mod.rs:GitCommandRunner::commit:254": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::commit",
          "line": 254
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 18
      },
      "./src/config/command_validator.rs:tests::test_apply_defaults:461": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_apply_defaults",
          "line": 461
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/mocks/git.rs:test_mock_git_dirty_status:334": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "test_mock_git_dirty_status",
          "line": 334
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/git/mod.rs:GitCommandRunner::is_clean:204": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::is_clean",
          "line": 204
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 4
      },
      "./src/cook/signal_handler.rs:update_interrupted_state::<closure@3>:53": {
        "id": {
          "file": "./src/cook/signal_handler.rs",
          "name": "update_interrupted_state::<closure@3>",
          "line": 53
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/worktree/manager.rs:WorktreeManager::filter_sessions_by_status:48": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::filter_sessions_by_status",
          "line": 48
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 12
      },
      "./src/testing/mocks/subprocess.rs:MockSubprocessManagerBuilder::with_default_response:55": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::with_default_response",
          "line": 55
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/command.rs:test_command_creation:527": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "test_command_creation",
          "line": 527
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/session/state.rs:tests::test_session_progress:455": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "tests::test_session_progress",
          "line": 455
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/mod_tests.rs:ensure_mmm_directory:62": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "ensure_mmm_directory",
          "line": 62
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 5
      },
      "./src/testing/mocks/git.rs:MockGitOperations::get_last_commit_message:194": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_last_commit_message",
          "line": 194
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/retry.rs:test_transient_error_case_insensitive:226": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_transient_error_case_insensitive",
          "line": 226
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/mocks/git.rs:MockGitOperations::get_commits:135": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_commits",
          "line": 135
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/session/state.rs:SessionProgress::complete_iteration:393": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::complete_iteration",
          "line": 393
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/cook/mod_tests.rs:core_tests::test_load_playbook_without_commands_wrapper:217": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_load_playbook_without_commands_wrapper",
          "line": 217
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/config/command.rs:CommandArg::serialize:25": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::serialize",
          "line": 25
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 9
      },
      "./src/config/metadata_parser.rs:MetadataParser::extract_description:93": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_description",
          "line": 93
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 7,
        "_lines": 33
      },
      "./src/commands/handlers/file.rs:test_file_exists:363": {
        "id": {
          "file": "./src/commands/handlers/file.rs",
          "name": "test_file_exists",
          "line": 363
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 22
      },
      "./src/config/mod.rs:test_command_validation:292": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_command_validation",
          "line": 292
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 27
      },
      "./src/git/mod.rs:GitCommandRunner::list_worktrees:349": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::list_worktrees",
          "line": 349
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 11
      },
      "./src/cook/mod_tests.rs:test_handle_worktree_merge:456": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_handle_worktree_merge",
          "line": 456
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 19
      },
      "./src/cook/session/tracker.rs:tests::test_session_updates:241": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_updates",
          "line": 241
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/config/command.rs:test_workflow_config_with_new_syntax:804": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "test_workflow_config_with_new_syntax",
          "line": 804
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/subprocess/git.rs:git_error_tests::test_git_parse_errors:270": {
        "id": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_parse_errors",
          "line": 270
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/signal_handler.rs:setup_interrupt_handlers:13": {
        "id": {
          "file": "./src/cook/signal_handler.rs",
          "name": "setup_interrupt_handlers",
          "line": 13
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 37
      },
      "./src/cook/workflow/executor_tests.rs:test_determine_command_type_claude:602": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_determine_command_type_claude",
          "line": 602
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 24
      },
      "./src/worktree/manager.rs:tests::test_claude_merge_command_construction:853": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_claude_merge_command_construction",
          "line": 853
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/orchestrator.rs:TestMockGitOperations::new:1509": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::new",
          "line": 1509
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/git/types.rs:GitStatus::has_conflicts:65": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::has_conflicts",
          "line": 65
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/coordinators/workflow.rs:test_extract_workflow_step_command_test:360": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "test_extract_workflow_step_command_test",
          "line": 360
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 22
      },
      "./src/session/mod.rs:SessionId::as_str:42": {
        "id": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/mapreduce.rs:tests::test_parse_basic_mapreduce_workflow:177": {
        "id": {
          "file": "./src/config/mapreduce.rs",
          "name": "tests::test_parse_basic_mapreduce_workflow",
          "line": 177
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/git_ops.rs:test_create_commit_success:300": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "test_create_commit_success",
          "line": 300
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 22
      },
      "./src/testing/mocks/git.rs:MockGitOperationsBuilder::with_commit_message:77": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_commit_message",
          "line": 77
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mocks/subprocess.rs:test_mock_subprocess_default_response:179": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "test_mock_subprocess_default_response",
          "line": 179
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/tests.rs:test_parse_workflow_with_commit_required:370": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_parse_workflow_with_commit_required",
          "line": 370
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 28
      },
      "./src/cook/execution/claude.rs:tests::test_claude_executor_version:207": {
        "id": {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_version",
          "line": 207
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/simple_state/tests.rs:test::test_state_corruption_recovery:104": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_corruption_recovery",
          "line": 104
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/git/mod.rs:tests::test_create_branch:620": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_create_branch",
          "line": 620
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::command_output:590": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::command_output",
          "line": 590
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::step_end:301": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::step_end",
          "line": 301
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::prompt_text:49": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::prompt_text",
          "line": 49
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/git_ops.rs:tests::stage_all_changes_in_dir:112": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::stage_all_changes_in_dir",
          "line": 112
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 2
      },
      "./src/cook/execution/interpolation.rs:tests::test_array_indexing:408": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_array_indexing",
          "line": 408
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/config/command_parser.rs:tests::test_parse_command_with_options:141": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_with_options",
          "line": 141
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/abstractions/exit_status.rs:tests::test_from_raw_failure:41": {
        "id": {
          "file": "./src/abstractions/exit_status.rs",
          "name": "tests::test_from_raw_failure",
          "line": 41
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/helpers/assertions.rs:assert_files_equal:89": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_files_equal",
          "line": 89
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 15
      },
      "./src/cook/session/tracker.rs:tests::test_session_tracker_basic:188": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_tracker_basic",
          "line": 188
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/commands/context.rs:tests::test_metadata:172": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_metadata",
          "line": 172
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/helpers/mod.rs:dirs_equal:115": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "dirs_equal",
          "line": 115
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 6,
        "_lines": 33
      },
      "./src/abstractions/git.rs:MockGitOperations::stage_all_changes:306": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::stage_all_changes",
          "line": 306
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 4
      },
      "./src/cook/coordinators/workflow_tests.rs:tests::test_execute_workflow_stops_at_max_iterations:500": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_stops_at_max_iterations",
          "line": 500
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/commands/handlers/shell.rs:ShellHandler::examples:130": {
        "id": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::examples",
          "line": 130
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::error:194": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::error",
          "line": 194
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/session/persistence.rs:test_persisted_session:62": {
        "id": {
          "file": "./src/session/persistence.rs",
          "name": "test_persisted_session",
          "line": 62
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 42
      },
      "./src/git/mod.rs:GitCommandRunner::get_last_commit_message:200": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_last_commit_message",
          "line": 200
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/retry.rs:tests::test_error_formatting_rate_limit:262": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting_rate_limit",
          "line": 262
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/config/dynamic_registry.rs:test_apply_definition_defaults_all_metadata_unset:767": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_apply_definition_defaults_all_metadata_unset",
          "line": 767
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 40
      },
      "./src/worktree/test_state.rs:test_merge_updates_state::<closure@9>:175": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state::<closure@9>",
          "line": 175
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/mapreduce.rs:default_max_parallel:78": {
        "id": {
          "file": "./src/config/mapreduce.rs",
          "name": "default_max_parallel",
          "line": 78
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/prompts.rs:tests::test_format_choice_prompt_empty:281": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_format_choice_prompt_empty",
          "line": 281
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::get_session:134": {
        "id": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::get_session",
          "line": 134
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/workflow/executor.rs:test_json_to_attribute_value_static_large_numbers:1575": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "test_json_to_attribute_value_static_large_numbers",
          "line": 1575
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/cook/tests.rs:test_spec_id_extraction:130": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_spec_id_extraction",
          "line": 130
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/cook/session/migration.rs:test_migration_example:153": {
        "id": {
          "file": "./src/cook/session/migration.rs",
          "name": "test_migration_example",
          "line": 153
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::iteration_end:251": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::iteration_end",
          "line": 251
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 13
      },
      "./src/worktree/manager.rs:tests::test_detect_mergeable_sessions_empty:1018": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 7
      },
      "./src/session/timing.rs:TimingTracker::current_command_duration:64": {
        "id": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::current_command_duration",
          "line": 64
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/subprocess/tests.rs:subprocess_tests::test_production_runner_command_not_found:30": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_command_not_found",
          "line": 30
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/interaction/display.rs:MockProgressDisplay::get_messages:349": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::get_messages",
          "line": 349
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/commands/context.rs:ExecutionContext::full_env:131": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::full_env",
          "line": 131
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/execution/data_pipeline.rs:tests::test_sorter_multiple_fields:987": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_sorter_multiple_fields",
          "line": 987
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/subprocess/tests.rs:test_production_runner_command_not_found:30": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "test_production_runner_command_not_found",
          "line": 30
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/config/command.rs:WorkflowStepCommand::deserialize:277": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "WorkflowStepCommand::deserialize",
          "line": 277
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 63
      },
      "./src/testing/mocks/claude.rs:MockClaudeClient::new:88": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 88
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/workflow/executor.rs:tests::test_get_current_head_in_worktree:1633": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/worktree/test_state.rs:test_validate_initial_state_non_zero_iterations:298": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_validate_initial_state_non_zero_iterations",
          "line": 298
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 27
      },
      "./src/cook/mod_tests.rs:test_create_session_state_with_focus:400": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_create_session_state_with_focus",
          "line": 400
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/worktree/manager.rs:test_update_checkpoint_success::<closure@39>:1095": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "test_update_checkpoint_success::<closure@39>",
          "line": 1095
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/commands/handlers/claude.rs:test_claude_handler_dry_run:268": {
        "id": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "test_claude_handler_dry_run",
          "line": 268
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::new:91": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::new",
          "line": 91
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::display_success:136": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_success",
          "line": 136
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/subprocess/mod.rs:SubprocessManager::production:119": {
        "id": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 16
      },
      "./src/subprocess/mock.rs:MockCommandConfig::returns_stdout:149": {
        "id": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::verbosity:472": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::verbosity",
          "line": 472
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/mod_tests.rs:core_tests::test_validate_arguments:332": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_validate_arguments",
          "line": 332
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 4
      },
      "./src/cook/session/tracker.rs:SessionTrackerImpl::load_state:132": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::load_state",
          "line": 132
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 5
      },
      "./src/commands/handlers/git.rs:tests::test_git_commit_dry_run:281": {
        "id": {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_commit_dry_run",
          "line": 281
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/testing/mocks/git.rs:test_git_command_type_classify_log:250": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "test_git_command_type_classify_log",
          "line": 250
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/cook/coordinators/execution_tests.rs:test_execute_claude_success:117": {
        "id": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "test_execute_claude_success",
          "line": 117
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/abstractions/claude.rs:MockClaudeClient::check_availability:638": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::check_availability",
          "line": 638
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 7
      },
      "./src/commands/handlers/cargo.rs:tests::test_cargo_handler_schema:244": {
        "id": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_handler_schema",
          "line": 244
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/orchestrator.rs:test_process_glob_pattern_recursive:2435": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_process_glob_pattern_recursive",
          "line": 2435
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 6,
        "_lines": 32
      },
      "./src/config/loader.rs:test_new_creates_default_config:147": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "test_new_creates_default_config",
          "line": 147
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 13
      },
      "./src/cook/workflow/executor_tests.rs:MockMetricsCoordinator::store_metrics:319": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockMetricsCoordinator::store_metrics",
          "line": 319
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/interaction/display.rs:test_progress_display_info:513": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "test_progress_display_info",
          "line": 513
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/retry.rs:test_execute_with_retry_max_attempts_reached:403": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_execute_with_retry_max_attempts_reached",
          "line": 403
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/commands/handlers/shell.rs:tests::test_shell_handler_schema:158": {
        "id": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_schema",
          "line": 158
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/mocks/claude.rs:MockClaudeClientBuilder::fail_after:56": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::fail_after",
          "line": 56
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::prepare_environment_variables:1206": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::prepare_environment_variables",
          "line": 1206
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 24
      },
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_large_numbers:1575": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_large_numbers",
          "line": 1575
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/orchestrator.rs:tests::test_command_arg_detection:2218": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_command_arg_detection",
          "line": 2218
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/commands/attributes.rs:AttributeValue::as_bool:36": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_bool",
          "line": 36
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/testing/config.rs:tests::test_builder_with_all_options:199": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_builder_with_all_options",
          "line": 199
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/abstractions/git.rs:test_mock_git_error:382": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "test_mock_git_error",
          "line": 382
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/interaction/prompts.rs:MockPrompter::prompt_choice:167": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "MockPrompter::prompt_choice",
          "line": 167
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 13
      },
      "./src/cook/orchestrator.rs:tests::test_file_pattern_validation:2041": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_file_pattern_validation",
          "line": 2041
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 2
      },
      "./src/testing/test_mocks.rs:GitMocks::status_dirty:123": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "GitMocks::status_dirty",
          "line": 123
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/testing/mocks/fs.rs:MockFileSystem::read_file:56": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::read_file",
          "line": 56
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 16
      },
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::build:206": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::build",
          "line": 206
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/simple_state/tests.rs:test::test_session_recording:38": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_recording",
          "line": 38
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/execution/data_pipeline.rs:tests::test_json_path_nested:915": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_json_path_nested",
          "line": 915
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/dynamic_registry.rs:test_apply_definition_defaults_metadata_already_set:808": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_apply_definition_defaults_metadata_already_set",
          "line": 808
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 40
      },
      "./src/cook/execution/interpolation.rs:InterpolationEngine::parse_path:137": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_path",
          "line": 137
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 9,
        "_lines": 42
      },
      "./src/session/manager.rs:tests::test_concurrent_sessions:393": {
        "id": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_concurrent_sessions",
          "line": 393
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/commands/result.rs:tests::test_to_result:208": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "tests::test_to_result",
          "line": 208
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/mod.rs:cook_tests::test_load_workflow_default:427": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_load_workflow_default",
          "line": 427
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/retry.rs:check_claude_cli:151": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "check_claude_cli",
          "line": 151
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 10
      },
      "./src/abstractions/claude.rs:tests::test_mock_claude_error_response:746": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_error_response",
          "line": 746
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/coordinators/workflow.rs:TestCoordinator::display_progress:233": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::display_progress",
          "line": 233
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 1
      },
      "./src/subprocess/mock.rs:MockProcessRunner::get_call_history:60": {
        "id": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_call_history",
          "line": 60
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/execution/interpolation.rs:tests::test_basic_interpolation:374": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_basic_interpolation",
          "line": 374
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/git/types.rs:CommitId::hash:186": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "CommitId::hash",
          "line": 186
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mocks/git.rs:tests::test_mock_git_staging:345": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_staging",
          "line": 345
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/subprocess/mock.rs:MockCommandConfig::returns_exit_code:159": {
        "id": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 8
      },
      "./src/subprocess/mock.rs:MockCommandConfig::returns_stderr:154": {
        "id": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stderr",
          "line": 154
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/mod.rs:tests::test_get_claude_api_key_from_config:432": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_claude_api_key_from_config",
          "line": 432
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/coordinators/workflow_tests.rs:tests::test_execute_workflow_empty_commands:529": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_empty_commands",
          "line": 529
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/coordinators/environment.rs:DefaultEnvironmentCoordinator::prepare_environment:121": {
        "id": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::prepare_environment",
          "line": 121
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 27
      },
      "./src/testing/helpers/mod.rs:create_file:34": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_file",
          "line": 34
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 4,
        "_lines": 9
      },
      "./src/cook/execution/interpolation.rs:tests::test_undefined_variable_non_strict:440": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_undefined_variable_non_strict",
          "line": 440
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::extract_input_from_path:1005": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::extract_input_from_path",
          "line": 1005
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 14
      },
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::new:59": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 10
      },
      "./src/session/timing.rs:TimingTracker::is_iteration_in_progress:69": {
        "id": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::is_iteration_in_progress",
          "line": 69
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mod.rs:TestFixtures::clean_repo_git:201": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::clean_repo_git",
          "line": 201
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/abstractions/claude.rs:tests::test_add_success_response:783": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_add_success_response",
          "line": 783
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/execution/runner.rs:test_command_with_context:140": {
        "id": {
          "file": "./src/cook/execution/runner.rs",
          "name": "test_command_with_context",
          "line": 140
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/cook/coordinators/execution.rs:DefaultExecutionCoordinator::execute_claude:125": {
        "id": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_claude",
          "line": 125
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 33
      },
      "./src/commands/registry.rs:CommandRegistry::get:73": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::get",
          "line": 73
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/config/command_parser.rs:tests::test_parse_command_string_empty:231": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_string_empty",
          "line": 231
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/session/state.rs:SessionProgress::all_commits:374": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::all_commits",
          "line": 374
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/git_ops.rs:create_test_commit:209": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "create_test_commit",
          "line": 209
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 27
      },
      "./src/commands/handlers/shell.rs:ShellHandler::schema:27": {
        "id": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::schema",
          "line": 27
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 17
      },
      "./src/cook/interaction/display.rs:tests::test_mock_spinner:498": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_spinner",
          "line": 498
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::prompt_text:507": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::prompt_text",
          "line": 507
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 11
      },
      "./src/config/command_parser.rs:test_parse_empty_command:179": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "test_parse_empty_command",
          "line": 179
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/coordinators/workflow_tests.rs:tests::test_execute_workflow_structured_commands:373": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_structured_commands",
          "line": 373
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/session/tracker.rs:test_atomic_save_prevents_corruption:273": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "test_atomic_save_prevents_corruption",
          "line": 273
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 6,
        "_lines": 61
      },
      "./src/cook/coordinators/session_tests.rs:tests::test_get_session_info:151": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_get_session_info",
          "line": 151
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/git/types.rs:GitStatus::has_unstaged_changes:60": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::has_unstaged_changes",
          "line": 60
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 4
      },
      "./src/cook/coordinators/workflow.rs:test_convert_to_workflow_step_integration:434": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "test_convert_to_workflow_step_integration",
          "line": 434
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/simple_state/tests.rs:test_invalid_root_directory:247": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_invalid_root_directory",
          "line": 247
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/handlers/cargo.rs:tests::test_cargo_dry_run:322": {
        "id": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_dry_run",
          "line": 322
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/tests.rs:test_simplified_output_syntax:399": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_simplified_output_syntax",
          "line": 399
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 23
      },
      "./src/cook/orchestrator.rs:test_prerequisites_check_no_git:1656": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_prerequisites_check_no_git",
          "line": 1656
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 47
      },
      "./src/git/scenario.rs:tests::test_scenario_mock_non_repository:582": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_non_repository",
          "line": 582
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/config/dynamic_registry.rs:tests::test_permissive_validation:389": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_permissive_validation",
          "line": 389
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/coordinators/workflow_tests.rs:tests::test_execute_workflow_simple_commands:304": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_simple_commands",
          "line": 304
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/coordinators/environment_tests.rs:tests::test_verify_git_repository_success:14": {
        "id": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_success",
          "line": 14
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/testing/test_mocks.rs:TestMockSetup::setup_metrics_collection::<closure@25>:317": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection::<closure@25>",
          "line": 317
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 4
      },
      "./src/cook/interaction/display.rs:SimpleSpinnerHandle::new:302": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "SimpleSpinnerHandle::new",
          "line": 302
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/mod.rs:load_playbook:320": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 10,
        "_lines": 64
      },
      "./src/subprocess/runner.rs:TokioProcessRunner::run::<closure@5>:134": {
        "id": {
          "file": "./src/subprocess/runner.rs",
          "name": "TokioProcessRunner::run::<closure@5>",
          "line": 134
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 7
      },
      "./src/testing/config.rs:TestConfigurationBuilder::add_arg:125": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::add_arg",
          "line": 125
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/workflow/executor_tests.rs:MockAnalysisCoordinator::clear_cache:266": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockAnalysisCoordinator::clear_cache",
          "line": 266
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::iteration_start:562": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::iteration_start",
          "line": 562
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/orchestrator.rs:test_auto_accept_worktree_merge:2238": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_auto_accept_worktree_merge",
          "line": 2238
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 80
      },
      "./src/testing/mocks/config.rs:MockConfigLoaderBuilder::new:21": {
        "id": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoaderBuilder::new",
          "line": 21
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/execution/runner.rs:MockCommandRunner::run_with_context:199": {
        "id": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::run_with_context",
          "line": 199
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/mod_tests.rs:core_tests::test_check_for_changes:422": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_check_for_changes",
          "line": 422
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/workflow/executor_tests.rs:MockAnalysisCoordinator::get_cached_analysis:259": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockAnalysisCoordinator::get_cached_analysis",
          "line": 259
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/subprocess/runner.rs:ExitStatus::success:38": {
        "id": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::success",
          "line": 38
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/display.rs:VerbosityLevel::from_args:19": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "VerbosityLevel::from_args",
          "line": 19
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 13
      },
      "./src/cook/interaction/prompts.rs:tests::test_format_choice_prompt_single:288": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_format_choice_prompt_single",
          "line": 288
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/coordinators/session.rs:DefaultSessionCoordinator::get_session_info:101": {
        "id": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::get_session_info",
          "line": 101
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 16
      },
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::new:72": {
        "id": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::new",
          "line": 72
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/worktree/manager.rs:WorktreeManager::load_state_from_file:61": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::load_state_from_file",
          "line": 61
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 12
      },
      "./src/subprocess/git.rs:git_error_tests::test_git_command_failure:249": {
        "id": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_command_failure",
          "line": 249
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 7
      },
      "./src/session/manager.rs:InMemorySessionManager::start_session:185": {
        "id": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 11
      },
      "./src/subprocess/adapter.rs:MockSubprocessExecutor::default:105": {
        "id": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::default",
          "line": 105
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/dynamic_registry.rs:tests::test_apply_definition_defaults_mixed_options:988": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_mixed_options",
          "line": 988
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/testing/helpers/mod.rs:test_dirs_equal_identical_dirs:179": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "test_dirs_equal_identical_dirs",
          "line": 179
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/commands/registry.rs:CommandRegistry::clone:129": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/subprocess/adapter.rs:create_exit_status:77": {
        "id": {
          "file": "./src/subprocess/adapter.rs",
          "name": "create_exit_status",
          "line": 77
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/coordinators/session_tests.rs:tests::test_track_iteration:79": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_track_iteration",
          "line": 79
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 8
      },
      "./src/session/manager.rs:InMemorySessionManager::record_event:197": {
        "id": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 15
      },
      "./src/testing/mocks/config.rs:MockConfigLoader::builder:66": {
        "id": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::builder",
          "line": 66
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/coordinators/execution.rs:DefaultExecutionCoordinator::check_command_available:188": {
        "id": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::check_command_available",
          "line": 188
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 11
      },
      "./src/cook/execution/data_pipeline.rs:test_filter_regex_matching:1036": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "test_filter_regex_matching",
          "line": 1036
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 30
      },
      "./src/cook/execution/interpolation.rs:test_array_indexing:408": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "test_array_indexing",
          "line": 408
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/coordinators/workflow_tests.rs:test_workflow_context_with_variables:127": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "test_workflow_context_with_variables",
          "line": 127
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/cook/workflow/executor_tests.rs:MockSessionManager::complete_session:109": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::complete_session",
          "line": 109
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/context.rs:ExecutionContext::new:38": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/coordinators/workflow.rs:tests::test_extract_workflow_step_command_test:360": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_workflow_step_command_test",
          "line": 360
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/coordinators/environment_tests.rs:test_verify_git_repository_not_a_repo:35": {
        "id": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "test_verify_git_repository_not_a_repo",
          "line": 35
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/abstractions/claude.rs:RealClaudeClient::code_review:464": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::code_review",
          "line": 464
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 27
      },
      "./src/session/events.rs:LoggingObserver::new:106": {
        "id": {
          "file": "./src/session/events.rs",
          "name": "LoggingObserver::new",
          "line": 106
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/abstractions/claude.rs:MockClaudeClient::default:608": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::default",
          "line": 608
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/execution/mapreduce.rs:default_retry:63": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "default_retry",
          "line": 63
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::setup_environment:216": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::setup_environment",
          "line": 216
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 25
      },
      "./src/testing/helpers/mod.rs:test_create_test_repo:153": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "test_create_test_repo",
          "line": 153
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_array:1473": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_array",
          "line": 1473
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/display.rs:MockProgressDisplay::step_end:419": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::step_end",
          "line": 419
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/execution/runner.rs:tests::test_command_with_context:140": {
        "id": {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_command_with_context",
          "line": 140
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/retry.rs:test_check_claude_cli_when_missing:346": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_check_claude_cli_when_missing",
          "line": 346
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/coordinators/workflow_tests.rs:tests::test_workflow_context_with_variables:127": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_workflow_context_with_variables",
          "line": 127
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_workflow_command:1096": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 65
      },
      "./src/testing/mocks/claude.rs:MockClaudeClientBuilder::with_response:34": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_response",
          "line": 34
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/abstractions/git.rs:RealGitOperations::default:81": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::default",
          "line": 81
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/fs.rs:MockFileSystem::exists:88": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 6
      },
      "./src/config/command.rs:tests::test_workflow_command_with_workflow_step:754": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_command_with_workflow_step",
          "line": 754
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 4
      },
      "./src/cook/mod_tests.rs:core_tests::test_should_continue_iteration:502": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_should_continue_iteration",
          "line": 502
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/testing/helpers/mod.rs:tests::test_dirs_equal_different_files:197": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "tests::test_dirs_equal_different_files",
          "line": 197
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/config/mapreduce.rs:default_mode:32": {
        "id": {
          "file": "./src/config/mapreduce.rs",
          "name": "default_mode",
          "line": 32
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/dynamic_registry.rs:test_validate_json_value_type_boolean:498": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_validate_json_value_type_boolean",
          "line": 498
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 32
      },
      "./src/session/manager.rs:tests::test_session_lifecycle:344": {
        "id": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_session_lifecycle",
          "line": 344
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/session/storage.rs:InMemoryStorage::load:134": {
        "id": {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::load",
          "line": 134
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/commands/handlers/git.rs:GitHandler::name:23": {
        "id": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::name",
          "line": 23
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_handler_command:1367": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_handler_command",
          "line": 1367
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 37
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::add_text_response:200": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::add_text_response",
          "line": 200
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/command_parser.rs:test_parse_command_with_slash:124": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "test_parse_command_with_slash",
          "line": 124
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/config/command.rs:tests::test_analysis_config_serialization:684": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::test_analysis_config_serialization",
          "line": 684
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/coordinators/session_tests.rs:tests::test_complete_session_success:105": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_success",
          "line": 105
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/mod_tests.rs:test_run_analysis_with_coverage:272": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_run_analysis_with_coverage",
          "line": 272
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/commands/context.rs:test_context_builder_pattern:152": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "test_context_builder_pattern",
          "line": 152
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/config/dynamic_registry.rs:test_validate_json_value_type_path:531": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_validate_json_value_type_path",
          "line": 531
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 28
      },
      "./src/cook/interaction/display.rs:MockSpinnerHandle::new:450": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockSpinnerHandle::new",
          "line": 450
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/git/scenario.rs:GitScenarioMock::remove_worktree:494": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::remove_worktree",
          "line": 494
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/git/scenario.rs:GitScenarioMock::commit:455": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::commit",
          "line": 455
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 13
      },
      "./src/cook/workflow/executor_tests.rs:MockMetricsCoordinator::new:277": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockMetricsCoordinator::new",
          "line": 277
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/retry.rs:is_transient_error:125": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "is_transient_error",
          "line": 125
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 22
      },
      "./src/cook/workflow/executor_tests.rs:test_determine_command_type_shell:627": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_determine_command_type_shell",
          "line": 627
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 24
      },
      "./src/testing/helpers/mod.rs:tests::test_count_files:308": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "tests::test_count_files",
          "line": 308
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/testing/mocks/subprocess.rs:test_mock_subprocess_builder:147": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "test_mock_subprocess_builder",
          "line": 147
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/commands/handlers/shell.rs:tests::test_shell_handler_execute:168": {
        "id": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_execute",
          "line": 168
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/worktree/manager.rs:WorktreeManager::get_session_state:245": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_session_state",
          "line": 245
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 6
      },
      "./src/cook/workflow/executor.rs:test_json_to_attribute_value_static_boolean_true:1452": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "test_json_to_attribute_value_static_boolean_true",
          "line": 1452
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/workflow/executor_tests.rs:MockSpinnerHandle::update_message:352": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSpinnerHandle::update_message",
          "line": 352
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 1
      },
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_strict:118": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_strict",
          "line": 118
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 12,
        "_lines": 52
      },
      "./src/testing/mocks/git.rs:test_git_command_with_classifier:369": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "test_git_command_with_classifier",
          "line": 369
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 32
      },
      "./src/cook/coordinators/workflow_tests.rs:tests::test_execute_workflow_with_variables:337": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_with_variables",
          "line": 337
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/worktree/test_state.rs:test_merge_updates_state:155": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 11,
        "_lines": 42
      },
      "./src/init/mod.rs:install_command:222": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "install_command",
          "line": 222
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 22
      },
      "./src/config/command.rs:tests::test_analysis_config_with_defaults:721": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::test_analysis_config_with_defaults",
          "line": 721
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/interaction/prompts.rs:test_mock_prompter_text:194": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "test_mock_prompter_text",
          "line": 194
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/testing/mocks/subprocess.rs:MockSubprocessManager::reset_history:137": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::reset_history",
          "line": 137
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_is_test_mode_no_changes_command:904": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_test_mode_no_changes_command",
          "line": 904
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/retry.rs:test_check_claude_cli_error_cases:530": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_check_claude_cli_error_cases",
          "line": 530
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 16
      },
      "./src/testing/fixtures/mod.rs:Fixtures::rust_project_fs:68": {
        "id": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::rust_project_fs",
          "line": 68
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/test_mocks.rs:TestMockSetup::setup_analysis_with_failures:237": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 26
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_execute_shell_command_success:1036": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_shell_command_success",
          "line": 1036
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/abstractions/git.rs:real_git_tests::test_git_command_failure:455": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_git_command_failure",
          "line": 455
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/coordinators/workflow.rs:TestCoordinator::execute_workflow:261": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::execute_workflow",
          "line": 261
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::iteration_start:218": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::iteration_start",
          "line": 218
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 32
      },
      "./src/testing/mod.rs:test_context_creation:297": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "test_context_creation",
          "line": 297
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/coordinators/environment.rs:DefaultEnvironmentCoordinator::load_configuration:86": {
        "id": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::load_configuration",
          "line": 86
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 16
      },
      "./src/config/loader.rs:test_load_from_path_invalid_yaml:307": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "test_load_from_path_invalid_yaml",
          "line": 307
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 4,
        "_lines": 12
      },
      "./src/cook/signal_handler.rs:tests::create_test_session_state:87": {
        "id": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_session_state",
          "line": 87
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/session/tracker.rs:tests::test_session_state_persistence:214": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_state_persistence",
          "line": 214
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/cook/session/state.rs:SessionState::new:56": {
        "id": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::new",
          "line": 56
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 19
      },
      "./src/config/command.rs:verify_implement_spec_command:878": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "verify_implement_spec_command",
          "line": 878
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 11
      },
      "./src/cook/interaction/prompts.rs:test_mock_prompter_choice:214": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "test_mock_prompter_choice",
          "line": 214
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/testing/test_mocks.rs:TarpaulinMocks::coverage_report_poor:76": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TarpaulinMocks::coverage_report_poor",
          "line": 76
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::step_end:92": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::step_end",
          "line": 92
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 1
      },
      "./src/config/command_parser.rs:expand_variables:77": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "expand_variables",
          "line": 77
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 19
      },
      "./src/worktree/tests.rs:test_list_interrupted_sessions_none_interrupted::<closure@18>:296": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted::<closure@18>",
          "line": 296
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::generate_session_id:141": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::generate_session_id",
          "line": 141
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::prompt_text:90": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_text",
          "line": 90
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 7,
        "_lines": 16
      },
      "./src/commands/attributes.rs:AttributeSchema::name:180": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::name",
          "line": 180
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/orchestrator.rs:tests::create_test_orchestrator_with_config:1612": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator_with_config",
          "line": 1612
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 13
      },
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::format_invalid_choice_message:73": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::format_invalid_choice_message",
          "line": 73
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mocks/fs.rs:MockFileSystem::add_directory:41": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_directory",
          "line": 41
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::step_start:90": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::step_start",
          "line": 90
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 1
      },
      "./src/cook/git_ops.rs:git_command:27": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "git_command",
          "line": 27
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 12
      },
      "./src/testing/helpers/mod.rs:test_dirs_equal_with_subdirs_only:291": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "test_dirs_equal_with_subdirs_only",
          "line": 291
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/cook/coordinators/session_tests.rs:tests::test_start_session:12": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session",
          "line": 12
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/coordinators/workflow_tests.rs:test_should_continue_beyond_limit:232": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "test_should_continue_beyond_limit",
          "line": 232
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 26
      },
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::display_info:57": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::display_info",
          "line": 57
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::get_cleanup_count:90": {
        "id": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::get_cleanup_count",
          "line": 90
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/commands/handlers/mod.rs:tests::test_all_handlers:31": {
        "id": {
          "file": "./src/commands/handlers/mod.rs",
          "name": "tests::test_all_handlers",
          "line": 31
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_claude_command:1291": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_claude_command",
          "line": 1291
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 33
      },
      "./src/commands/attributes.rs:tests::test_schema_defaults:237": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_defaults",
          "line": 237
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/orchestrator.rs:test_find_files_matching_pattern:1870": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_find_files_matching_pattern",
          "line": 1870
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 79
      },
      "./src/session/timing.rs:test_timing_tracker:115": {
        "id": {
          "file": "./src/session/timing.rs",
          "name": "test_timing_tracker",
          "line": 115
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 25
      },
      "./src/worktree/tests.rs:test_list_interrupted_sessions_none_interrupted::<closure@19>:300": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted::<closure@19>",
          "line": 300
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/coordinators/workflow.rs:tests::test_extract_workflow_step_command_priority:447": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_workflow_step_command_priority",
          "line": 447
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/coordinators/workflow.rs:TestCoordinator::should_continue:225": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::should_continue",
          "line": 225
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/execution/mapreduce_tests.rs:test_agent_context_creation:54": {
        "id": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_agent_context_creation",
          "line": 54
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 23
      },
      "./src/init/mod.rs:tests::test_run_init_create_commands:368": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_create_commands",
          "line": 368
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/testing/config.rs:test_default_configuration:188": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "test_default_configuration",
          "line": 188
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::display_error:65": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::display_error",
          "line": 65
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/commands/attributes.rs:AttributeSchema::defaults:195": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::defaults",
          "line": 195
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/abstractions/git.rs:tests::test_real_git_operations_is_git_repo:398": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/config/metadata_parser.rs:create_test_file:341": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "create_test_file",
          "line": 341
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/session/adapter.rs:SessionManagerAdapter::complete_session:218": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::complete_session",
          "line": 218
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 15
      },
      "./src/commands/attributes.rs:AttributeValue::from:90": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::from",
          "line": 90
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_determine_command_type_test:652": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_test",
          "line": 652
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::is_test_mode_no_changes_command:1364": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::is_test_mode_no_changes_command",
          "line": 1364
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 16
      },
      "./src/cook/interaction/display.rs:MockProgressDisplay::info:355": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::info",
          "line": 355
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/command_validator.rs:CommandRegistry::register_built_in_commands:78": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register_built_in_commands",
          "line": 78
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 139
      },
      "./src/testing/mocks/git.rs:test_mock_git_commits:356": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "test_mock_git_commits",
          "line": 356
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/config/mapreduce.rs:tests::test_parse_timeout_formats:208": {
        "id": {
          "file": "./src/config/mapreduce.rs",
          "name": "tests::test_parse_timeout_formats",
          "line": 208
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/helpers/mod.rs:tests::test_file_contains:169": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "tests::test_file_contains",
          "line": 169
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/simple_state/tests.rs:test::test_session_record_edge_cases:189": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_record_edge_cases",
          "line": 189
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/testing/mocks/git.rs:MockGitOperations::git_command:149": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 149
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 6,
        "_lines": 34
      },
      "./src/cook/workflow/executor.rs:test_json_to_attribute_value_static_array:1473": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "test_json_to_attribute_value_static_array",
          "line": 1473
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/cook/workflow/executor_tests.rs:MockMetricsCoordinator::load_history:327": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockMetricsCoordinator::load_history",
          "line": 327
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/worktree/manager.rs:test_merge_session_success:874": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "test_merge_session_success",
          "line": 874
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_context_interpolation_priority:583": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_context_interpolation_priority",
          "line": 583
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/subprocess/tests.rs:subprocess_tests::test_process_command_builder:158": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/tests.rs:test_parse_structured_workflow_with_outputs:262": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_parse_structured_workflow_with_outputs",
          "line": 262
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 29
      },
      "./src/session/manager.rs:InMemorySessionManager::complete_session:229": {
        "id": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 13
      },
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_integer:1438": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_integer",
          "line": 1438
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/worktree/test_state.rs:test_state_error_handling:198": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_error_handling",
          "line": 198
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 15
      },
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::display_info:375": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::display_info",
          "line": 375
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::merge_agent_to_parent:881": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_agent_to_parent",
          "line": 881
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 41
      },
      "./src/cook/coordinators/workflow.rs:tests::test_extract_command_string_simple:286": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_command_string_simple",
          "line": 286
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/abstractions/claude.rs:tests::test_mock_claude_unavailable:732": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_unavailable",
          "line": 732
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/git/types.rs:CommitId::short_hash:191": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "CommitId::short_hash",
          "line": 191
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 8
      },
      "./src/testing/mocks/config.rs:MockConfigLoader::get_config:81": {
        "id": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/abstractions/git.rs:MockGitOperations::default:272": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::default",
          "line": 272
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/command_parser.rs:expand_string:95": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "expand_string",
          "line": 95
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 14
      },
      "./src/cook/mod.rs:cook_tests::test_yaml_error_messages:626": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_yaml_error_messages",
          "line": 626
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/session/storage.rs:FileSessionStorage::session_path:37": {
        "id": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::session_path",
          "line": 37
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/execution/interpolation.rs:test_mixed_segments:510": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "test_mixed_segments",
          "line": 510
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/commands/handlers/claude.rs:ClaudeHandler::new:16": {
        "id": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::new",
          "line": 16
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/git/mod.rs:GitCommandRunner::stage_files:222": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::stage_files",
          "line": 222
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 21
      },
      "./src/cook/execution/data_pipeline.rs:Sorter::compare_items:796": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::compare_items",
          "line": 796
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 20
      },
      "./src/cook/workflow/executor_tests.rs:create_test_executor:479": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "create_test_executor",
          "line": 479
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 32
      },
      "./src/testing/mocks/claude.rs:tests::test_mock_claude_builder:249": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_builder",
          "line": 249
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/retry.rs:should_retry_output:84": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "should_retry_output",
          "line": 84
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 13
      },
      "./src/init/templates.rs:tests::test_get_templates_by_names:89": {
        "id": {
          "file": "./src/init/templates.rs",
          "name": "tests::test_get_templates_by_names",
          "line": 89
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/testing/config.rs:TestConfigurations::full_test:169": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::full_test",
          "line": 169
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/commands/handlers/git.rs:test_git_handler_schema:240": {
        "id": {
          "file": "./src/commands/handlers/git.rs",
          "name": "test_git_handler_schema",
          "line": 240
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/session/storage.rs:tests::test_file_storage:154": {
        "id": {
          "file": "./src/session/storage.rs",
          "name": "tests::test_file_storage",
          "line": 154
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/config/command_parser.rs:tests::test_parse_empty_command:179": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_empty_command",
          "line": 179
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/cook/mod_tests.rs:git_command_exists:48": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "git_command_exists",
          "line": 48
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/interaction/display.rs:tests::test_progress_display_info:513": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_info",
          "line": 513
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::step_end:152": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::step_end",
          "line": 152
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/retry.rs:tests::test_execute_with_retry_max_attempts_reached:403": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_max_attempts_reached",
          "line": 403
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/execution/runner.rs:test_real_command_runner:127": {
        "id": {
          "file": "./src/cook/execution/runner.rs",
          "name": "test_real_command_runner",
          "line": 127
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/config/command_validator.rs:CommandRegistry::apply_defaults:366": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::apply_defaults",
          "line": 366
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 8,
        "_lines": 30
      },
      "./src/cook/tests.rs:workflow_parsing_tests::test_load_playbook_structure:423": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "workflow_parsing_tests::test_load_playbook_structure",
          "line": 423
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 7
      },
      "./src/main.rs:handle_merge_command:269": {
        "id": {
          "file": "./src/main.rs",
          "name": "handle_merge_command",
          "line": 269
        },
        "is_entry_point": true,
        "is_test": false,
        "complexity": 15,
        "_lines": 54
      },
      "./src/commands/handlers/file.rs:FileHandler::examples:286": {
        "id": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::examples",
          "line": 286
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/retry.rs:test_execute_with_retry_command_not_found:288": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_execute_with_retry_command_not_found",
          "line": 288
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/interaction/mod.rs:MockSpinnerHandle::success:613": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockSpinnerHandle::success",
          "line": 613
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 1
      },
      "./src/git/mod.rs:tests::test_is_repository_success:389": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_repository_success",
          "line": 389
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::display_progress:382": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::display_progress",
          "line": 382
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/orchestrator.rs:TestMockGitOperations::switch_branch:1562": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::switch_branch",
          "line": 1562
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/git/mod.rs:tests::test_get_current_branch_detached_head:455": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_current_branch_detached_head",
          "line": 455
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/tests.rs:test_concurrent_git_operations::<closure@22>:532": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "test_concurrent_git_operations::<closure@22>",
          "line": 532
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::step_end:583": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::step_end",
          "line": 583
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/session/adapter.rs:test_complete_session_lifecycle:416": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "test_complete_session_lifecycle",
          "line": 416
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 31
      },
      "./src/testing/mocks/config.rs:MockConfigLoader::default:53": {
        "id": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::default",
          "line": 53
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/helpers/mod.rs:tests::test_dirs_equal_different_content:213": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "tests::test_dirs_equal_different_content",
          "line": 213
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/coordinators/session_tests.rs:tests::test_complete_session_failure:129": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_failure",
          "line": 129
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/subprocess/mod.rs:SubprocessManager::claude:183": {
        "id": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::claude",
          "line": 183
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 16
      },
      "./src/commands/handlers/file.rs:test_file_dry_run:386": {
        "id": {
          "file": "./src/commands/handlers/file.rs",
          "name": "test_file_dry_run",
          "line": 386
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/cook/coordinators/session_tests.rs:test_track_iteration:79": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "test_track_iteration",
          "line": 79
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 25
      },
      "./src/subprocess/builder.rs:ProcessCommandBuilder::envs:47": {
        "id": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::envs",
          "line": 47
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 13
      },
      "./src/main.rs:display_worktree_session_legacy:248": {
        "id": {
          "file": "./src/main.rs",
          "name": "display_worktree_session_legacy",
          "line": 248
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::iteration_end:569": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::iteration_end",
          "line": 569
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/command_parser.rs:test_parse_simple_command:116": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "test_parse_simple_command",
          "line": 116
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/session/migration.rs:create_full_featured_manager:14": {
        "id": {
          "file": "./src/cook/session/migration.rs",
          "name": "create_full_featured_manager",
          "line": 14
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 19
      },
      "./src/commands/attributes.rs:AttributeSchema::validate:143": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::validate",
          "line": 143
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 27
      },
      "./src/cook/workflow/executor_tests.rs:MockSpinnerHandle::fail:354": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSpinnerHandle::fail",
          "line": 354
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 1
      },
      "./src/cook/execution/runner.rs:MockCommandRunner::default:167": {
        "id": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::default",
          "line": 167
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/mod_tests.rs:core_tests::extract_spec_from_git:39": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::extract_spec_from_git",
          "line": 39
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 2
      },
      "./src/git/parsers.rs:parse_status_line_entry:22": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_line_entry",
          "line": 22
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 7,
        "_lines": 11
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_workflow_with_args:878": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 57
      },
      "./src/abstractions/git.rs:real_git_tests::test_get_current_branch:489": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_get_current_branch",
          "line": 489
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 5,
        "_lines": 4
      },
      "./src/commands/attributes.rs:AttributeSchema::add_optional_with_default:130": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 12
      },
      "./src/git/mod.rs:test_is_clean:600": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "test_is_clean",
          "line": 600
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/cook/tests.rs:workflow_parsing_tests::test_parse_workflow_with_multiple_outputs:343": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "workflow_parsing_tests::test_parse_workflow_with_multiple_outputs",
          "line": 343
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 3
      },
      "./src/config/command_parser.rs:test_parse_command_string_empty:231": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "test_parse_command_string_empty",
          "line": 231
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/coordinators/session.rs:DefaultSessionCoordinator::complete_session:86": {
        "id": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::complete_session",
          "line": 86
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 14
      },
      "./src/cook/coordinators/session_tests.rs:test_start_session:12": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "test_start_session",
          "line": 12
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/cook/workflow/executor_tests.rs:MockMetricsCoordinator::collect_all:292": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockMetricsCoordinator::collect_all",
          "line": 292
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 26
      },
      "./src/commands/registry.rs:CommandRegistry::default:123": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::default",
          "line": 123
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/workflow.rs:MockWorkflowExecutor::execute:103": {
        "id": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::execute",
          "line": 103
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 16
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_mapreduce:1274": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_mapreduce",
          "line": 1274
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 67
      },
      "./src/cook/coordinators/workflow_tests.rs:test_prompt_user:259": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "test_prompt_user",
          "line": 259
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 22
      },
      "./src/cook/coordinators/workflow.rs:tests::test_extract_command_string_simple_object:309": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_command_string_simple_object",
          "line": 309
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/simple_state/tests.rs:test::test_state_manager_creation:10": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_manager_creation",
          "line": 10
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mocks/session.rs:MockSessionManager::was_start_called:54": {
        "id": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::was_start_called",
          "line": 54
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/git/parsers.rs:parse_renamed_line:101": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "parse_renamed_line",
          "line": 101
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 17
      },
      "./src/cook/interaction/display.rs:tests::test_spinner_lifecycle:536": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_spinner_lifecycle",
          "line": 536
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/dynamic_registry.rs:tests::test_validate_json_value_type_string:444": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_string",
          "line": 444
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/commands/handlers/cargo.rs:CargoHandler::new:16": {
        "id": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::new",
          "line": 16
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/session/tracker.rs:SessionTrackerImpl::save_state::<closure@7>:124": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::save_state::<closure@7>",
          "line": 124
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/execution/data_pipeline.rs:JsonPath::select:275": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 15,
        "_lines": 49
      },
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::iteration_start:422": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::iteration_start",
          "line": 422
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/command.rs:Command::with_retries:446": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "Command::with_retries",
          "line": 446
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/handlers/claude.rs:tests::test_claude_handler_dry_run:268": {
        "id": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_dry_run",
          "line": 268
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/commands/handlers/git.rs:GitHandler::execute::<closure@4>:89": {
        "id": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute::<closure@4>",
          "line": 89
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/signal_handler.rs:tests::test_termination_interrupt:154": {
        "id": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::test_termination_interrupt",
          "line": 154
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/config/loader.rs:test_concurrent_access:336": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "test_concurrent_access",
          "line": 336
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 4,
        "_lines": 22
      },
      "./src/simple_state/tests.rs:test_state_file_permissions:228": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_state_file_permissions",
          "line": 228
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/git/scenario.rs:GitScenarioMock::switch_branch:474": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::switch_branch",
          "line": 474
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 4
      },
      "./src/testing/mocks/session.rs:MockSessionManager::complete_session:106": {
        "id": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::complete_session",
          "line": 106
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 12
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_execute_step_with_capture_output:1122": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_step_with_capture_output",
          "line": 1122
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/mod_tests.rs:core_tests::test_save_checkpoint:523": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_save_checkpoint",
          "line": 523
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/execution/interpolation.rs:InterpolationContext::set_path:237": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set_path",
          "line": 237
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 16
      },
      "./src/simple_state/types.rs:SessionRecord::new:40": {
        "id": {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::new",
          "line": 40
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/interaction/mod.rs:MockSpinnerHandle::fail:346": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockSpinnerHandle::fail",
          "line": 346
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/context.rs:ExecutionContext::is_in_session:126": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::is_in_session",
          "line": 126
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/workflow/executor_tests.rs:test_get_step_display_name_shell:790": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_get_step_display_name_shell",
          "line": 790
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 24
      },
      "./src/abstractions/claude.rs:RealClaudeClient::new:303": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::new",
          "line": 303
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 20
      },
      "./src/config/command.rs:tests::test_command_with_analysis_config:698": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_with_analysis_config",
          "line": 698
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/git/types.rs:GitDiff::default:121": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::default",
          "line": 121
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/fs.rs:MockFileSystem::default:17": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::default",
          "line": 17
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/git.rs:tests::test_git_command_type_classify_edge_cases:300": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_type_classify_edge_cases",
          "line": 300
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/session/manager.rs:InMemorySessionManager::get_progress:221": {
        "id": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_progress",
          "line": 221
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/cook/execution/interpolation.rs:tests::test_literal_segments:499": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_literal_segments",
          "line": 499
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 4
      },
      "./src/config/dynamic_registry.rs:tests::test_validate_json_value_type_path:531": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_path",
          "line": 531
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/commands/context.rs:ExecutionContext::with_working_dir:110": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_working_dir",
          "line": 110
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/mocks/git.rs:MockGitOperations::check_git_status:202": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::check_git_status",
          "line": 202
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/mod_tests.rs:core_tests::test_generate_session_id:409": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_generate_session_id",
          "line": 409
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/execution/data_pipeline.rs:tests::test_sorter_single_field:970": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_sorter_single_field",
          "line": 970
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/git/mod.rs:tests::test_get_status:555": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_status",
          "line": 555
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute:318": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 35
      },
      "./src/init/mod.rs:tests::test_get_templates:340": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_get_templates",
          "line": 340
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/git/mod.rs:GitCommandRunner::run_git_command:106": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 16
      },
      "./src/cook/workflow/executor_tests.rs:test_get_step_display_name_unnamed:845": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_get_step_display_name_unnamed",
          "line": 845
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 24
      },
      "./src/commands/attributes.rs:test_schema_validation:217": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "test_schema_validation",
          "line": 217
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/cook/git_ops.rs:tests::test_create_commit_success:300": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_success",
          "line": 300
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/workflow/executor.rs:test_json_to_attribute_value_static_float:1445": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "test_json_to_attribute_value_static_float",
          "line": 1445
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/execution/runner.rs:RealCommandRunner::new:31": {
        "id": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::new",
          "line": 31
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/mocks/claude.rs:test_call_counting:291": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "test_call_counting",
          "line": 291
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/subprocess/adapter.rs:MockSubprocessExecutor::execute:141": {
        "id": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::execute",
          "line": 141
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 31
      },
      "./src/config/mapreduce.rs:MapReduceWorkflowConfig::to_map_phase:135": {
        "id": {
          "file": "./src/config/mapreduce.rs",
          "name": "MapReduceWorkflowConfig::to_map_phase",
          "line": 135
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 17
      },
      "./src/commands/context.rs:test_with_executor:191": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "test_with_executor",
          "line": 191
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/config/mod.rs:test_get_claude_api_key_precedence:408": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_get_claude_api_key_precedence",
          "line": 408
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 23
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::get_current_head:1206": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_current_head",
          "line": 1206
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 17
      },
      "./src/worktree/manager.rs:tests::test_cleanup_session_after_merge_not_merged:969": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_cleanup_session_after_merge_not_merged",
          "line": 969
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/git/scenario.rs:GitScenarioMock::init_repository:428": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::init_repository",
          "line": 428
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 4
      },
      "./src/worktree/tests.rs:test_list_interrupted_sessions_with_mixed_states::<closure@13>:224": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states::<closure@13>",
          "line": 224
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/commands/handlers/file.rs:FileHandler::default:297": {
        "id": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::default",
          "line": 297
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/workflow/executor_tests.rs:MockSessionManager::new:81": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/attributes.rs:tests::test_attribute_value_conversions:205": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_attribute_value_conversions",
          "line": 205
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/retry.rs:tests::test_error_formatting_no_exit_code:241": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting_no_exit_code",
          "line": 241
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/orchestrator.rs:DirGuard::drop:2639": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2639
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/commands/mod.rs:MockHandler::execute:102": {
        "id": {
          "file": "./src/commands/mod.rs",
          "name": "MockHandler::execute",
          "line": 102
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/config/command.rs:Command::with_arg:432": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "Command::with_arg",
          "line": 432
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/abstractions/git.rs:tests::test_mock_git_error:382": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_error",
          "line": 382
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/execution/mapreduce_tests.rs:test_agent_context_update_with_output:78": {
        "id": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_agent_context_update_with_output",
          "line": 78
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 29
      },
      "./src/cook/retry.rs:tests::test_execute_with_retry_success:276": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_success",
          "line": 276
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/subprocess/tests.rs:subprocess_tests::test_production_runner_failure:20": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_failure",
          "line": 20
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/git/scenario.rs:GitScenarioMock::get_command_log:175": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_command_log",
          "line": 175
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/interaction/mod.rs:test_error_handling:436": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "test_error_handling",
          "line": 436
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/cook/git_ops.rs:test_create_commit_no_staged_changes:323": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "test_create_commit_no_staged_changes",
          "line": 323
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::supports_unicode:105": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::supports_unicode",
          "line": 105
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 16
      },
      "./src/commands/result.rs:CommandError::from:159": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "CommandError::from",
          "line": 159
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/commands/attributes.rs:test_attribute_value_conversions:205": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "test_attribute_value_conversions",
          "line": 205
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/workflow/executor_tests.rs:test_execute_claude_command:995": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_execute_claude_command",
          "line": 995
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 40
      },
      "./src/config/command_discovery.rs:CommandDiscovery::new:19": {
        "id": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::new",
          "line": 19
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/simple_state/cache.rs:CacheManager::exists:128": {
        "id": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::exists",
          "line": 128
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 19
      },
      "./src/cook/execution/interpolation.rs:InterpolationContext::merge:328": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::merge",
          "line": 328
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/cook/workflow/executor_tests.rs:MockAnalysisCoordinator::save_analysis:198": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockAnalysisCoordinator::save_analysis",
          "line": 198
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/testing/config.rs:TestConfigurationBuilder::track_focus:113": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::track_focus",
          "line": 113
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/config/loader.rs:ConfigLoader::load_from_path::<closure@5>:94": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_from_path::<closure@5>",
          "line": 94
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/mod_tests.rs:core_tests::generate_session_id:90": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::generate_session_id",
          "line": 90
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 1
      },
      "./src/subprocess/tests.rs:subprocess_tests::test_mock_runner_basic:56": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/git/mod.rs:test_commit_success:501": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "test_commit_success",
          "line": 501
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 5,
        "_lines": 30
      },
      "./src/commands/context.rs:ExecutionContext::test:55": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::test",
          "line": 55
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/config/mapreduce.rs:MapReduceWorkflowConfig::is_mapreduce:160": {
        "id": {
          "file": "./src/config/mapreduce.rs",
          "name": "MapReduceWorkflowConfig::is_mapreduce",
          "line": 160
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/simple_state/tests.rs:test_state_corruption_recovery::<closure@6>:120": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_state_corruption_recovery::<closure@6>",
          "line": 120
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/git/scenario.rs:GitScenarioMock::when_command:166": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::when_command",
          "line": 166
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_shell_with_retry:891": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_with_retry",
          "line": 891
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 17,
        "_lines": 128
      },
      "./src/commands/handlers/cargo.rs:CargoHandler::execute:62": {
        "id": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 19,
        "_lines": 148
      },
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::list_commands:299": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::list_commands",
          "line": 299
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 14
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::new:472": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::new",
          "line": 472
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/coordinators/session_tests.rs:test_resume_session:176": {
        "id": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "test_resume_session",
          "line": 176
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 33
      },
      "./src/cook/git_ops.rs:stage_all_changes:51": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "stage_all_changes",
          "line": 51
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_reduce_phase:955": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 12,
        "_lines": 101
      },
      "./src/cook/session/tracker.rs:SessionTrackerImpl::start_session:31": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::start_session",
          "line": 31
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/registry.rs:tests::test_registry_execute:203": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_execute",
          "line": 203
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/worktree/tests.rs:test_create_session_with_generated_name:55": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 6,
        "_lines": 25
      },
      "./src/cook/mod_tests.rs:core_tests::create_session_state:68": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::create_session_state",
          "line": 68
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 1
      },
      "./src/config/loader.rs:ConfigLoader::load_with_explicit_path:31": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_with_explicit_path",
          "line": 31
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 25
      },
      "./src/config/mod.rs:test_get_claude_api_key_from_env:441": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_get_claude_api_key_from_env",
          "line": 441
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 20
      },
      "./src/cook/execution/runner.rs:MockCommandRunner::run_command:186": {
        "id": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::run_command",
          "line": 186
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 12
      },
      "./src/cook/git_ops.rs:test_stage_all_changes_no_changes:286": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "test_stage_all_changes_no_changes",
          "line": 286
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/cook/orchestrator.rs:tests::test_execute_structured_workflow_success:2468": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_execute_structured_workflow_success",
          "line": 2468
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::clone_executor:1481": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::clone_executor",
          "line": 1481
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 13
      },
      "./src/cook/mod.rs:load_workflow_with_mapreduce:204": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "load_workflow_with_mapreduce",
          "line": 204
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 10
      },
      "./src/worktree/test_state.rs:test_validate_initial_state_already_merged:326": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_validate_initial_state_already_merged",
          "line": 326
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 27
      },
      "./src/git/mod.rs:test_is_repository_failure:415": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "test_is_repository_failure",
          "line": 415
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/cook/execution/interpolation.rs:test_complex_json_interpolation:472": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "test_complex_json_interpolation",
          "line": 472
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 26
      },
      "./src/cook/workflow/executor_tests.rs:test_determine_command_type_test:652": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_determine_command_type_test",
          "line": 652
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 29
      },
      "./src/subprocess/mock.rs:MockProcessRunner::default:188": {
        "id": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::default",
          "line": 188
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_command:78": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_command",
          "line": 78
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 15
      },
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::with_file:161": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_file",
          "line": 161
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/mod.rs:tests::test_merge_env_vars_editor_fallback:601": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_merge_env_vars_editor_fallback",
          "line": 601
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 19
      },
      "./src/commands/result.rs:CommandResult::with_duration:78": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/execution/runner.rs:tests::test_real_command_runner:127": {
        "id": {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_real_command_runner",
          "line": 127
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/commands/result.rs:test_to_result:208": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "test_to_result",
          "line": 208
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/workflow/executor_tests.rs:test_shell_command_with_on_failure_fail_workflow:1278": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_shell_command_with_on_failure_fail_workflow",
          "line": 1278
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 60
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::with_verbosity:98": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::with_verbosity",
          "line": 98
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/execution/data_pipeline.rs:DataPipeline::apply_field_mapping:141": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::apply_field_mapping",
          "line": 141
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 12
      },
      "./src/cook/coordinators/workflow.rs:tests::test_convert_to_workflow_step_integration:434": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_convert_to_workflow_step_integration",
          "line": 434
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/command.rs:parse_test_workflow_config:813": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "parse_test_workflow_config",
          "line": 813
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 23
      },
      "./src/git/mod.rs:test_get_current_branch_detached_head:455": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "test_get_current_branch_detached_head",
          "line": 455
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 22
      },
      "./src/cook/orchestrator.rs:TestMockGitOperations::set_is_git_repo:1515": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::set_is_git_repo",
          "line": 1515
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/retry.rs:tests::test_format_subprocess_error_unauthorized_variations:380": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_format_subprocess_error_unauthorized_variations",
          "line": 380
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 2
      },
      "./src/cook/coordinators/execution.rs:DefaultExecutionCoordinator::new:78": {
        "id": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::new",
          "line": 78
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 12
      },
      "./src/cook/interaction/display.rs:tests::test_step_display:597": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_step_display",
          "line": 597
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/test_mocks.rs:CargoMocks::check_success:13": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::check_success",
          "line": 13
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/retry.rs:test_transient_error_detection:210": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_transient_error_detection",
          "line": 210
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/commands/registry.rs:tests::test_registry_registration:171": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_registration",
          "line": 171
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/handlers/cargo.rs:test_cargo_handler_schema:244": {
        "id": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "test_cargo_handler_schema",
          "line": 244
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/commands/handlers/mod.rs:test_all_handlers:31": {
        "id": {
          "file": "./src/commands/handlers/mod.rs",
          "name": "test_all_handlers",
          "line": 31
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/config/command.rs:test_commit_required_field:605": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "test_commit_required_field",
          "line": 605
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 39
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::is_focus_tracking_test:1359": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::is_focus_tracking_test",
          "line": 1359
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/mod_tests.rs:should_continue_iteration:131": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "should_continue_iteration",
          "line": 131
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 11
      },
      "./src/git/scenario.rs:GitScenarioMock::get_last_commit_message:416": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_last_commit_message",
          "line": 416
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/git/scenario.rs:GitScenario::default:279": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenario::default",
          "line": 279
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 14
      },
      "./src/git/mod.rs:test_commit_success::<closure@29>:513": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "test_commit_success::<closure@29>",
          "line": 513
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 1
      },
      "./src/cook/execution/interpolation.rs:test_undefined_variable_non_strict:440": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "test_undefined_variable_non_strict",
          "line": 440
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/mod_tests.rs:test_format_session_summary:476": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_format_session_summary",
          "line": 476
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/session/state.rs:tests::test_session_state_transitions:422": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "tests::test_session_state_transitions",
          "line": 422
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/testing/mocks/git.rs:tests::test_git_command_with_classifier:369": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_with_classifier",
          "line": 369
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/cook/orchestrator.rs:create_test_orchestrator_with_config:1612": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "create_test_orchestrator_with_config",
          "line": 1612
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 43
      },
      "./src/git/scenario.rs:tests::test_scenario_mock_commit_nothing_to_commit:623": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_commit_nothing_to_commit",
          "line": 623
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::verbosity:290": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::verbosity",
          "line": 290
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/execution/interpolation.rs:tests::test_context_inheritance:449": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_context_inheritance",
          "line": 449
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/coordinators/environment.rs:DefaultEnvironmentCoordinator::setup_worktree:103": {
        "id": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::setup_worktree",
          "line": 103
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 17
      },
      "./src/init/mod.rs:tests::test_handle_existing_commands_with_conflicts:530": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_handle_existing_commands_with_conflicts",
          "line": 530
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/config/command.rs:WorkflowCommand::to_command:344": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 17,
        "_lines": 58
      },
      "./src/subprocess/git.rs:test_git_command_failure:249": {
        "id": {
          "file": "./src/subprocess/git.rs",
          "name": "test_git_command_failure",
          "line": 249
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 20
      },
      "./src/commands/mod.rs:MockHandler::name:94": {
        "id": {
          "file": "./src/commands/mod.rs",
          "name": "MockHandler::name",
          "line": 94
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/commands/context.rs:ExecutionContext::resolve_path:117": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::resolve_path",
          "line": 117
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 8
      },
      "./src/commands/result.rs:test_command_error_display:217": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "test_command_error_display",
          "line": 217
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::prompt_yes_no:80": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_yes_no",
          "line": 80
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 9
      },
      "./src/config/command.rs:tests::verify_coverage_command:865": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::verify_coverage_command",
          "line": 865
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 1
      },
      "./src/abstractions/git.rs:RealGitOperations::git_command_in_dir:162": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command_in_dir",
          "line": 162
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 36
      },
      "./src/cook/execution/runner.rs:RealCommandRunner::default:45": {
        "id": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::default",
          "line": 45
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_nested_object:1531": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_nested_object",
          "line": 1531
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 4,
        "_lines": 3
      },
      "./src/testing/helpers/mod.rs:tests::test_dirs_equal_identical_dirs:179": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "tests::test_dirs_equal_identical_dirs",
          "line": 179
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/testing/mocks/fs.rs:MockFileSystem::is_file:95": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::is_file",
          "line": 95
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/loader.rs:ConfigLoader::load_from_path::<closure@3>:68": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_from_path::<closure@3>",
          "line": 68
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/session/tracker.rs:SessionTrackerImpl::complete_session:90": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::complete_session",
          "line": 90
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/commands/attributes.rs:AttributeSchema::new:106": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/tests.rs:cook_tests::test_focus_directive:164": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_focus_directive",
          "line": 164
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::cleanup_session:116": {
        "id": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 9
      },
      "./src/simple_state/tests.rs:test::test_cache_expiration:86": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_expiration",
          "line": 86
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/commands/result.rs:CommandResult::error_message:94": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error_message",
          "line": 94
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mocks/subprocess.rs:tests::test_mock_subprocess_builder:147": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_builder",
          "line": 147
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/metadata_parser.rs:MetadataParser::extract_options_section:132": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_options_section",
          "line": 132
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/commands/handlers/claude.rs:test_claude_handler_execute:226": {
        "id": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "test_claude_handler_execute",
          "line": 226
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 41
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::json_to_attribute_value_static:241": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 11,
        "_lines": 28
      },
      "./src/testing/mod.rs:MockGitBuilder::default:116": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::default",
          "line": 116
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mocks/fs.rs:tests::test_mock_fs_project_structure:273": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_project_structure",
          "line": 273
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/session/state.rs:SessionProgress::record_command_timing:401": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::record_command_timing",
          "line": 401
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/cook/orchestrator.rs:test_workflow_detects_structured_commands:1950": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_workflow_detects_structured_commands",
          "line": 1950
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 63
      },
      "./src/config/command.rs:test_default_cache_duration:716": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "test_default_cache_duration",
          "line": 716
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/session/events.rs:SessionEvent::description:33": {
        "id": {
          "file": "./src/session/events.rs",
          "name": "SessionEvent::description",
          "line": 33
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 9,
        "_lines": 27
      },
      "./src/testing/mocks/fs.rs:MockFileSystem::is_dir:100": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::is_dir",
          "line": 100
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mocks/config.rs:MockConfigLoader::load_with_explicit_path:70": {
        "id": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::load_with_explicit_path",
          "line": 70
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 10
      },
      "./src/commands/handlers/file.rs:tests::test_file_dry_run:386": {
        "id": {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_dry_run",
          "line": 386
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::extract_command_string:69": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_command_string",
          "line": 69
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 10
      },
      "./src/testing/mocks/fs.rs:MockFileSystem::set_write_error:51": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::set_write_error",
          "line": 51
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/helpers/mod.rs:tests::test_dirs_equal_with_subdirs_only:291": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "tests::test_dirs_equal_with_subdirs_only",
          "line": 291
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/worktree/tests.rs:test_list_interrupted_sessions_with_mixed_states::<closure@11>:216": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states::<closure@11>",
          "line": 216
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/execution/claude.rs:ClaudeExecutorImpl::with_test_config:45": {
        "id": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::with_test_config",
          "line": 45
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/subprocess/tests.rs:subprocess_tests::test_production_runner_timeout:43": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_timeout",
          "line": 43
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/abstractions/git.rs:MockGitOperations::git_command_in_dir:342": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command_in_dir",
          "line": 342
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/session/timing.rs:TimingTracker::complete_iteration:35": {
        "id": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::complete_iteration",
          "line": 35
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/test_mocks.rs:TestMockSetup::setup_successful_analysis::<closure@16>:220": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis::<closure@16>",
          "line": 220
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 4
      },
      "./src/abstractions/claude.rs:test_transient_error_detection:758": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "test_transient_error_detection",
          "line": 758
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/simple_state/tests.rs:test::test_history_retrieval:131": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_retrieval",
          "line": 131
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 5
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::validate_parent_state:923": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::validate_parent_state",
          "line": 923
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 31
      },
      "./src/cook/mod_tests.rs:test_run_analysis:247": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_run_analysis",
          "line": 247
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 24
      },
      "./src/cook/workflow/executor_tests.rs:MockClaudeExecutor::get_claude_version:70": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockClaudeExecutor::get_claude_version",
          "line": 70
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::check_prerequisites:196": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::check_prerequisites",
          "line": 196
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 19
      },
      "./src/git/mod.rs:GitCommandRunner::remove_worktree:334": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::remove_worktree",
          "line": 334
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 14
      },
      "./src/testing/config.rs:TestConfigurationBuilder::build:131": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::build",
          "line": 131
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/workflow/executor_tests.rs:MockSessionManager::update_session:95": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::update_session",
          "line": 95
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 9
      },
      "./src/config/mapreduce.rs:parse_mapreduce_workflow:166": {
        "id": {
          "file": "./src/config/mapreduce.rs",
          "name": "parse_mapreduce_workflow",
          "line": 166
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/workflow/executor_tests.rs:MockMetricsCoordinator::generate_report:331": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockMetricsCoordinator::generate_report",
          "line": 331
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_determine_command_type_claude:602": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_claude",
          "line": 602
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/commands/context.rs:tests::test_context_builder_pattern:152": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_context_builder_pattern",
          "line": 152
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/mod.rs:tests::test_get_claude_api_key_from_env:441": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_claude_api_key_from_env",
          "line": 441
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 9
      },
      "./src/cook/retry.rs:tests::test_execute_with_retry_exhausted_retries:310": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_exhausted_retries",
          "line": 310
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/testing/helpers/mod.rs:test_dirs_equal_empty_dirs:229": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "test_dirs_equal_empty_dirs",
          "line": 229
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/testing/helpers/assertions.rs:test_assert_file_contains:178": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "test_assert_file_contains",
          "line": 178
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/testing/mocks/subprocess.rs:MockSubprocessManagerBuilder::with_command_response:27": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::with_command_response",
          "line": 27
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/session/events.rs:test_event_descriptions:126": {
        "id": {
          "file": "./src/session/events.rs",
          "name": "test_event_descriptions",
          "line": 126
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 22
      },
      "./src/commands/result.rs:CommandResult::is_success:84": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::is_success",
          "line": 84
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/mod_tests.rs:test_load_playbook_without_commands_wrapper:217": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_load_playbook_without_commands_wrapper",
          "line": 217
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 29
      },
      "./src/testing/mod.rs:TestFixtures::rate_limited_claude:236": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::rate_limited_claude",
          "line": 236
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/worktree/manager.rs:WorktreeManager::cleanup_session_after_merge:766": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 13,
        "_lines": 61
      },
      "./src/session/timing.rs:TimingTracker::new:21": {
        "id": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::new",
          "line": 21
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/git/scenario.rs:GitScenarioMock::list_worktrees:500": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::list_worktrees",
          "line": 500
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_handler_command::<closure@12>:774": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command::<closure@12>",
          "line": 774
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/abstractions/claude.rs:MockClaudeClient::new:568": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/workflow/executor.rs:test_get_current_head_in_regular_repo:1588": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "test_get_current_head_in_regular_repo",
          "line": 1588
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 44
      },
      "./src/commands/attributes.rs:AttributeSchema::add_required:116": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_required",
          "line": 116
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/interaction/prompts.rs:tests::test_mock_prompter_text:194": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_mock_prompter_text",
          "line": 194
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/git/scenario.rs:test_scenario_mock_detached_head:569": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "test_scenario_mock_detached_head",
          "line": 569
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/cook/session/tracker.rs:SessionTrackerImpl::new:17": {
        "id": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/worktree/tests.rs:test_list_sessions:98": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_sessions",
          "line": 98
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 8,
        "_lines": 20
      },
      "./src/cook/interaction/prompts.rs:test_validate_choice_input_valid_multi_digit:230": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "test_validate_choice_input_valid_multi_digit",
          "line": 230
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/git/types.rs:GitDiff::new:101": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::new",
          "line": 101
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::should_stop_early_in_test_mode::<closure@24>:1351": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::should_stop_early_in_test_mode::<closure@24>",
          "line": 1351
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/cook/workflow/executor.rs:test_get_current_head_in_worktree:1633": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "test_get_current_head_in_worktree",
          "line": 1633
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 82
      },
      "./src/simple_state/tests.rs:test_session_record_edge_cases:189": {
        "id": {
          "file": "./src/simple_state/tests.rs",
          "name": "test_session_record_edge_cases",
          "line": 189
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/simple_state/cache.rs:CacheManager::with_config:27": {
        "id": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::with_config",
          "line": 27
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 8
      },
      "./src/testing/mocks/fs.rs:MockFileSystem::add_file:36": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_file",
          "line": 36
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/session/timing.rs:TimingTracker::default:80": {
        "id": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::default",
          "line": 80
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/commands/registry.rs:TestHandler::execute:157": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "TestHandler::execute",
          "line": 157
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/execution/data_pipeline.rs:tests::test_pipeline_complete:1009": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_pipeline_complete",
          "line": 1009
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/session/state.rs:SessionState::add_files_changed:95": {
        "id": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::add_files_changed",
          "line": 95
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/test_mocks.rs:TestMockSetup::setup_analysis_with_failures::<closure@18>:240": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures::<closure@18>",
          "line": 240
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 4
      },
      "./src/cook/interaction/display.rs:MockProgressDisplay::new:342": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::new",
          "line": 342
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/session/adapter.rs:test_error_handling:366": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "test_error_handling",
          "line": 366
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/config/command.rs:tests::verify_lint_command:890": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::verify_lint_command",
          "line": 890
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 1
      },
      "./src/cook/interaction/prompts.rs:test_mock_prompter_yes_no:183": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "test_mock_prompter_yes_no",
          "line": 183
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/session/config.rs:SessionConfig::default:18": {
        "id": {
          "file": "./src/session/config.rs",
          "name": "SessionConfig::default",
          "line": 18
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/execution/mod.rs:ExecutionContext::default:37": {
        "id": {
          "file": "./src/cook/execution/mod.rs",
          "name": "ExecutionContext::default",
          "line": 37
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 9
      },
      "./src/simple_state/state.rs:StateManager::with_root:31": {
        "id": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 8
      },
      "./src/testing/config.rs:TestConfiguration::should_simulate_no_changes:54": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::should_simulate_no_changes",
          "line": 54
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/test_mocks.rs:TestMockSetup::setup_successful_analysis:180": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 5,
        "_lines": 56
      },
      "./src/config/loader.rs:ConfigLoader::load_from_path:54": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_from_path",
          "line": 54
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 13,
        "_lines": 61
      },
      "./src/cook/interaction/display.rs:tests::test_format_duration:638": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_format_duration",
          "line": 638
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/loader.rs:ConfigLoader::new:19": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/testing/mocks/fs.rs:test_mock_fs_basic_operations:216": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "test_mock_fs_basic_operations",
          "line": 216
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::create_test_executor_with_config:513": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/testing/mocks/fs.rs:MockFileSystem::builder:32": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::builder",
          "line": 32
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/git/mod.rs:tests::test_list_files:577": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_list_files",
          "line": 577
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/mod_tests.rs:test_load_playbook_invalid_format:195": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "test_load_playbook_invalid_format",
          "line": 195
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/cook/execution/data_pipeline.rs:Sorter::sort:791": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::sort",
          "line": 791
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/testing/mocks/git.rs:MockGitOperations::create_worktree:223": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::create_worktree",
          "line": 223
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/display.rs:test_mock_display:479": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "test_mock_display",
          "line": 479
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/worktree/tests.rs:test_load_state_from_file:410": {
        "id": {
          "file": "./src/worktree/tests.rs",
          "name": "test_load_state_from_file",
          "line": 410
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 56
      },
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::iteration_end:144": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::iteration_end",
          "line": 144
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/commands/registry.rs:CommandRegistry::validate:101": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::validate",
          "line": 101
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 14
      },
      "./src/config/command.rs:tests::test_command_serialization:593": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_serialization",
          "line": 593
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/mod_tests.rs:format_session_summary:112": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "format_session_summary",
          "line": 112
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 18
      },
      "./src/subprocess/builder.rs:ProcessCommandBuilder::args:31": {
        "id": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/interaction/display.rs:test_simple_spinner_handle_fail:560": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "test_simple_spinner_handle_fail",
          "line": 560
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/subprocess/tests.rs:test_git_runner:124": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "test_git_runner",
          "line": 124
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 17
      },
      "./src/worktree/manager.rs:WorktreeManager::update_checkpoint::<closure@19>:607": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_checkpoint::<closure@19>",
          "line": 607
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::prompt_choice:107": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_choice",
          "line": 107
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 7,
        "_lines": 18
      },
      "./src/git/parsers.rs:test_parse_diff_output:301": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "test_parse_diff_output",
          "line": 301
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 22
      },
      "./src/session/storage.rs:InMemoryStorage::new:116": {
        "id": {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::new",
          "line": 116
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/test_mocks.rs:TestMockSetup::setup_metrics_collection::<closure@23>:298": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection::<closure@23>",
          "line": 298
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 3
      },
      "./src/init/mod.rs:validate_project_structure:245": {
        "id": {
          "file": "./src/init/mod.rs",
          "name": "validate_project_structure",
          "line": 245
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 26
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_step:602": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 35,
        "_lines": 162
      },
      "./src/commands/attributes.rs:AttributeValue::as_string:20": {
        "id": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/session/state.rs:test_session_state_transitions:422": {
        "id": {
          "file": "./src/session/state.rs",
          "name": "test_session_state_transitions",
          "line": 422
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 32
      },
      "./src/config/command.rs:default_true:5": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "default_true",
          "line": 5
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/config/dynamic_registry.rs:test_list_commands:419": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_list_commands",
          "line": 419
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 24
      },
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::display_progress:53": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::display_progress",
          "line": 53
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/worktree/manager.rs:test_claude_merge_command_construction:853": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "test_claude_merge_command_construction",
          "line": 853
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 20
      },
      "./src/cook/interaction/mod.rs:MockUserInteraction::verbosity:604": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::verbosity",
          "line": 604
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/execution/claude.rs:ClaudeExecutorImpl::get_claude_version:115": {
        "id": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::get_claude_version",
          "line": 115
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 12
      },
      "./src/git/mod.rs:GitCommandRunner::stage_all:244": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::stage_all",
          "line": 244
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 9
      },
      "./src/config/command.rs:Command::with_timeout:453": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "Command::with_timeout",
          "line": 453
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/git_ops.rs:mock_tests::test_stage_all_changes_with_mock:430": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "mock_tests::test_stage_all_changes_with_mock",
          "line": 430
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 4
      },
      "./src/cook/execution/data_pipeline.rs:test_filter_comparison:933": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "test_filter_comparison",
          "line": 933
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/coordinators/execution_tests.rs:tests::test_execute_with_retry:154": {
        "id": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_with_retry",
          "line": 154
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/cook/git_ops.rs:create_temp_git_repo:182": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "create_temp_git_repo",
          "line": 182
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 26
      },
      "./src/abstractions/claude.rs:RealClaudeClient::implement_spec:492": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::implement_spec",
          "line": 492
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 34
      },
      "./src/config/dynamic_registry.rs:test_apply_definition_defaults_options_with_defaults:889": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_apply_definition_defaults_options_with_defaults",
          "line": 889
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 46
      },
      "./src/commands/mod.rs:tests::test_handler_validation:131": {
        "id": {
          "file": "./src/commands/mod.rs",
          "name": "tests::test_handler_validation",
          "line": 131
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/git/mod.rs:GitCommandRunner::create_worktree:318": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::create_worktree",
          "line": 318
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 15
      },
      "./src/cook/workflow/executor.rs:tests::test_get_current_head:1414": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head",
          "line": 1414
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 3
      },
      "./src/cook/orchestrator.rs:tests::test_process_glob_pattern_matches_files:2411": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_process_glob_pattern_matches_files",
          "line": 2411
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/testing/test_mocks.rs:TestMockSetup::setup_metrics_collection::<closure@21>:279": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection::<closure@21>",
          "line": 279
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 3
      },
      "./src/config/command_validator.rs:tests::test_validate_command_valid:491": {
        "id": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_command_valid",
          "line": 491
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::check_value_type:256": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::check_value_type",
          "line": 256
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 17
      },
      "./src/cook/execution/interpolation.rs:InterpolationContext::child:224": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::child",
          "line": 224
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/execution/interpolation.rs:InterpolationContext::resolve_path:254": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_path",
          "line": 254
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 18
      },
      "./src/cook/orchestrator.rs:test_worktree_cleanup_after_merge:2319": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_worktree_cleanup_after_merge",
          "line": 2319
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 91
      },
      "./src/cook/retry.rs:test_execute_with_retry_success:276": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_execute_with_retry_success",
          "line": 276
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/abstractions/claude.rs:tests::test_add_error_response:770": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_add_error_response",
          "line": 770
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/config/loader.rs:tests::test_new_creates_default_config:147": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_new_creates_default_config",
          "line": 147
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/session/manager.rs:InMemorySessionManager::apply_event:85": {
        "id": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 12,
        "_lines": 83
      },
      "./src/config/command_parser.rs:test_expand_variables:159": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "test_expand_variables",
          "line": 159
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/subprocess/tests.rs:subprocess_tests::test_mock_runner_multiple_calls:76": {
        "id": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::run:148": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::run",
          "line": 148
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 10,
        "_lines": 47
      },
      "./src/cook/coordinators/workflow.rs:test_create_default_workflow_step:414": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "test_create_default_workflow_step",
          "line": 414
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/commands/context.rs:ExecutionContext::add_env_vars:95": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::add_env_vars",
          "line": 95
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/commands/registry.rs:TestHandler::schema:153": {
        "id": {
          "file": "./src/commands/registry.rs",
          "name": "TestHandler::schema",
          "line": 153
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/test_mocks.rs:CargoMocks::test_success:38": {
        "id": {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::test_success",
          "line": 38
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/abstractions/git.rs:test_real_git_operations_is_git_repo:398": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "test_real_git_operations_is_git_repo",
          "line": 398
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 37
      },
      "./src/config/command.rs:tests::test_default_cache_duration:716": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "tests::test_default_cache_duration",
          "line": 716
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 1
      },
      "./src/commands/mod.rs:MockHandler::description:110": {
        "id": {
          "file": "./src/commands/mod.rs",
          "name": "MockHandler::description",
          "line": 110
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/command.rs:Command::new:405": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 12
      },
      "./src/config/command_parser.rs:test_parse_command_with_args:130": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "test_parse_command_with_args",
          "line": 130
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::default:149": {
        "id": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::default",
          "line": 149
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/mod.rs:test_helpers::create_test_file:275": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "test_helpers::create_test_file",
          "line": 275
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 4
      },
      "./src/testing/mod.rs:test_fixtures:334": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "test_fixtures",
          "line": 334
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/testing/mod.rs:TestContext::create_test_file:102": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::create_test_file",
          "line": 102
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 7
      },
      "./src/git/types.rs:CommitId::fmt:206": {
        "id": {
          "file": "./src/git/types.rs",
          "name": "CommitId::fmt",
          "line": 206
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/abstractions/claude.rs:RealClaudeClient::with_subprocess:311": {
        "id": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::with_subprocess",
          "line": 311
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/commands/mod.rs:MockHandler::schema:98": {
        "id": {
          "file": "./src/commands/mod.rs",
          "name": "MockHandler::schema",
          "line": 98
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/config/command_discovery.rs:CommandDiscovery::clear_cache:104": {
        "id": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::clear_cache",
          "line": 104
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/interaction/prompts.rs:tests::test_validate_choice_input_valid_multi_digit:230": {
        "id": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_validate_choice_input_valid_multi_digit",
          "line": 230
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/config/mod.rs:tests::test_variable_expansion:320": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_variable_expansion",
          "line": 320
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/testing/mod.rs:TestFixtures::successful_claude:223": {
        "id": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::successful_claude",
          "line": 223
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 12
      },
      "./src/config/dynamic_registry.rs:tests::test_apply_definition_defaults_metadata_already_set:808": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_metadata_already_set",
          "line": 808
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 13
      },
      "./src/commands/result.rs:CommandResult::from_output:60": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::from_output",
          "line": 60
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 5,
        "_lines": 17
      },
      "./src/cook/execution/data_pipeline.rs:Sorter::compare_values:817": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::compare_values",
          "line": 817
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 6,
        "_lines": 20
      },
      "./src/cook/orchestrator.rs:test_execute_structured_workflow_success:2468": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "test_execute_structured_workflow_success",
          "line": 2468
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 71
      },
      "./src/session/tests.rs:CountingObserver::on_event:184": {
        "id": {
          "file": "./src/session/tests.rs",
          "name": "CountingObserver::on_event",
          "line": 184
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/abstractions/exit_status.rs:tests::test_from_raw_success:25": {
        "id": {
          "file": "./src/abstractions/exit_status.rs",
          "name": "tests::test_from_raw_success",
          "line": 25
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/git_ops.rs:tests::test_get_last_commit_message_success:237": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_get_last_commit_message_success",
          "line": 237
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/command_discovery.rs:test_needs_refresh:196": {
        "id": {
          "file": "./src/config/command_discovery.rs",
          "name": "test_needs_refresh",
          "line": 196
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/testing/helpers/assertions.rs:test_assert_file_exists:163": {
        "id": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "test_assert_file_exists",
          "line": 163
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/git/mod.rs:test_get_current_branch:435": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "test_get_current_branch",
          "line": 435
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 19
      },
      "./src/subprocess/mod.rs:SubprocessManager::runner:149": {
        "id": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/tests.rs:cook_tests::test_spec_id_extraction:130": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_spec_id_extraction",
          "line": 130
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/simple_state/state.rs:StateManager::new:18": {
        "id": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 3,
        "_lines": 12
      },
      "./src/cook/interaction/display.rs:MockSpinnerHandle::fail:470": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockSpinnerHandle::fail",
          "line": 470
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_boolean_false:1459": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_boolean_false",
          "line": 1459
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/git/parsers.rs:test_parse_status_output_with_changes:258": {
        "id": {
          "file": "./src/git/parsers.rs",
          "name": "test_parse_status_output_with_changes",
          "line": 258
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 20
      },
      "./src/cook/execution/mapreduce_tests.rs:test_map_phase_configuration:186": {
        "id": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_map_phase_configuration",
          "line": 186
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 40
      },
      "./src/cook/interaction/display.rs:MockProgressDisplay::error:369": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::error",
          "line": 369
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/config/dynamic_registry.rs:test_command_discovery_and_validation:351": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_command_discovery_and_validation",
          "line": 351
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 37
      },
      "./src/cook/execution/interpolation.rs:test_default_values:420": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "test_default_values",
          "line": 420
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::handle_on_failure:1405": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::handle_on_failure",
          "line": 1405
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 36
      },
      "./src/git/mod.rs:tests::test_stage_all:478": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_stage_all",
          "line": 478
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::step_end:443": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::step_end",
          "line": 443
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/tests.rs:retry_tests::test_comprehensive_transient_errors:459": {
        "id": {
          "file": "./src/cook/tests.rs",
          "name": "retry_tests::test_comprehensive_transient_errors",
          "line": 459
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 3,
        "_lines": 4
      },
      "./src/cook/execution/mapreduce_tests.rs:test_agent_result_serialization:160": {
        "id": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_agent_result_serialization",
          "line": 160
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 25
      },
      "./src/cook/execution/mapreduce_tests.rs:test_interpolation_with_arrays:393": {
        "id": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_arrays",
          "line": 393
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 29
      },
      "./src/cook/execution/mapreduce.rs:AgentContext::new:221": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::new",
          "line": 221
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 19
      },
      "./src/cook/execution/interpolation.rs:test_nested_property_access:387": {
        "id": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "test_nested_property_access",
          "line": 387
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 20
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_shell_command_with_on_failure_fail_workflow:1278": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_shell_command_with_on_failure_fail_workflow",
          "line": 1278
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 11
      },
      "./src/cook/interaction/mod.rs:tests::test_default_user_interaction_creation:355": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_default_user_interaction_creation",
          "line": 355
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 2
      },
      "./src/testing/mocks/git.rs:tests::test_git_command_type_classify_log:250": {
        "id": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_type_classify_log",
          "line": 250
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/execution/data_pipeline.rs:test_sorter_single_field:970": {
        "id": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "test_sorter_single_field",
          "line": 970
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 16
      },
      "./src/commands/context.rs:tests::test_path_resolution:180": {
        "id": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_path_resolution",
          "line": 180
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/git/mod.rs:GitCommandRunner::create_branch:273": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::create_branch",
          "line": 273
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 4,
        "_lines": 12
      },
      "./src/config/dynamic_registry.rs:test_apply_definition_defaults_mixed_options:988": {
        "id": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "test_apply_definition_defaults_mixed_options",
          "line": 988
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 55
      },
      "./src/config/command_parser.rs:test_parse_complex_command:185": {
        "id": {
          "file": "./src/config/command_parser.rs",
          "name": "test_parse_complex_command",
          "line": 185
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 21
      },
      "./src/testing/mocks/worktree.rs:MockWorktreeManagerBuilder::build:45": {
        "id": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManagerBuilder::build",
          "line": 45
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 9
      },
      "./src/worktree/test_state.rs:test_validate_initial_state_wrong_max_iterations:438": {
        "id": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_validate_initial_state_wrong_max_iterations",
          "line": 438
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 27
      },
      "./src/git/mod.rs:tests::test_commit_success:501": {
        "id": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 10
      },
      "./src/config/metadata_parser.rs:MetadataParser::parse_options:196": {
        "id": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_options",
          "line": 196
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 8,
        "_lines": 35
      },
      "./src/abstractions/git.rs:MockGitOperations::switch_branch:337": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::switch_branch",
          "line": 337
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 4
      },
      "./src/commands/result.rs:CommandResult::error:47": {
        "id": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 12
      },
      "./src/cook/mod.rs:test_run_improvement_loop:666": {
        "id": {
          "file": "./src/cook/mod.rs",
          "name": "test_run_improvement_loop",
          "line": 666
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 48
      },
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_get_step_display_name_test:815": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_test",
          "line": 815
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/testing/mocks/claude.rs:MockClaudeClientBuilder::with_success:39": {
        "id": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/workflow/executor_tests.rs:test_determine_command_type_multiple_error:707": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_determine_command_type_multiple_error",
          "line": 707
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 28
      },
      "./src/cook/coordinators/execution_tests.rs:TestClaudeExecutor::execute_claude_command:49": {
        "id": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "TestClaudeExecutor::execute_claude_command",
          "line": 49
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 16
      },
      "./src/config/command.rs:CommandArg::resolve::<closure@6>:59": {
        "id": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::resolve::<closure@6>",
          "line": 59
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/coordinators/workflow_tests.rs:test_execute_workflow_with_variables:337": {
        "id": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "test_execute_workflow_with_variables",
          "line": 337
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 35
      },
      "./src/cook/orchestrator.rs:tests::test_detect_structured_workflow:1789": {
        "id": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_detect_structured_workflow",
          "line": 1789
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 14
      },
      "./src/cook/git_ops.rs:test_git_mutex_prevents_races:124": {
        "id": {
          "file": "./src/cook/git_ops.rs",
          "name": "test_git_mutex_prevents_races",
          "line": 124
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 19
      },
      "./src/testing/config.rs:TestConfiguration::get_arg:59": {
        "id": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::get_arg",
          "line": 59
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/retry.rs:test_error_formatting_no_exit_code:241": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "test_error_formatting_no_exit_code",
          "line": 241
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/retry.rs:additional_tests::test_format_subprocess_error_all_hints:442": {
        "id": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_format_subprocess_error_all_hints",
          "line": 442
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 2,
        "_lines": 2
      },
      "./src/session/timing.rs:TimingTracker::current_iteration_duration:59": {
        "id": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::current_iteration_duration",
          "line": 59
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/cook/workflow/executor.rs:WorkflowExecutor::json_to_attribute_value:237": {
        "id": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value",
          "line": 237
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 4
      },
      "./src/simple_state/cache.rs:CacheManager::cache_path:121": {
        "id": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::cache_path",
          "line": 121
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/interaction/display.rs:test_format_duration:638": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "test_format_duration",
          "line": 638
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 15
      },
      "./src/testing/helpers/mod.rs:create_test_repo:10": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_test_repo",
          "line": 10
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 5,
        "_lines": 23
      },
      "./src/config/loader.rs:test_load_from_path_unsupported_format:290": {
        "id": {
          "file": "./src/config/loader.rs",
          "name": "test_load_from_path_unsupported_format",
          "line": 290
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 4,
        "_lines": 16
      },
      "./src/config/mod.rs:test_variable_expansion:320": {
        "id": {
          "file": "./src/config/mod.rs",
          "name": "test_variable_expansion",
          "line": 320
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 29
      },
      "./src/cook/interaction/display.rs:SimpleSpinnerHandle::update_message:311": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "SimpleSpinnerHandle::update_message",
          "line": 311
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 5
      },
      "./src/cook/workflow/executor_tests.rs:test_context_interpolation_priority:583": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_context_interpolation_priority",
          "line": 583
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 18
      },
      "./src/testing/helpers/mod.rs:tests::test_create_rust_project:159": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "tests::test_create_rust_project",
          "line": 159
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 5
      },
      "./src/cook/session/adapter.rs:SessionManagerAdapter::update_session:104": {
        "id": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::update_session",
          "line": 104
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 21,
        "_lines": 113
      },
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_handler_command::<closure@32>:1391": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_handler_command::<closure@32>",
          "line": 1391
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      },
      "./src/cook/mod_tests.rs:update_session_metrics:99": {
        "id": {
          "file": "./src/cook/mod_tests.rs",
          "name": "update_session_metrics",
          "line": 99
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/testing/helpers/mod.rs:create_rust_project:44": {
        "id": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_rust_project",
          "line": 44
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 6,
        "_lines": 36
      },
      "./src/cook/workflow/executor_tests.rs:MockClaudeExecutor::get_calls:40": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockClaudeExecutor::get_calls",
          "line": 40
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/cook/interaction/display.rs:MockProgressDisplay::success:383": {
        "id": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::success",
          "line": 383
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/workflow/executor_tests.rs:test_workflow_execution_single_iteration:1061": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "test_workflow_execution_single_iteration",
          "line": 1061
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 60
      },
      "./src/testing/mocks/subprocess.rs:tests::test_mock_subprocess_default_response:179": {
        "id": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_default_response",
          "line": 179
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 3
      },
      "./src/worktree/manager.rs:WorktreeManager::get_worktree_for_branch:582": {
        "id": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_worktree_for_branch",
          "line": 582
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/abstractions/git.rs:RealGitOperations::get_current_branch:208": {
        "id": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::get_current_branch",
          "line": 208
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 6
      },
      "./src/cook/execution/mapreduce.rs:ProgressTracker::finish:187": {
        "id": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "ProgressTracker::finish",
          "line": 187
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 7
      },
      "./src/cook/coordinators/workflow.rs:TestCoordinator::prompt_user:273": {
        "id": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::prompt_user",
          "line": 273
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 3
      },
      "./src/git/scenario.rs:GitScenarioMock::prune_worktrees:507": {
        "id": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::prune_worktrees",
          "line": 507
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 2,
        "_lines": 4
      },
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::display_error:396": {
        "id": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::display_error",
          "line": 396
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 6
      },
      "./src/cook/interaction/mod.rs:tests::test_spinner_handle:404": {
        "id": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_spinner_handle",
          "line": 404
        },
        "is_entry_point": false,
        "is_test": true,
        "complexity": 1,
        "_lines": 8
      },
      "./src/cook/execution/claude.rs:ClaudeExecutorImpl::new:37": {
        "id": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::new",
          "line": 37
        },
        "is_entry_point": false,
        "is_test": false,
        "complexity": 1,
        "_lines": 7
      }
    },
    "edges": [
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::suppress_stderr",
          "line": 77
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "select_templates",
          "line": 107
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "select_templates",
          "line": 107
        },
        "callee": {
          "file": "./src/init/templates.rs",
          "name": "get_templates_by_names",
          "line": 52
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "select_templates",
          "line": 107
        },
        "callee": {
          "file": "./src/init/templates.rs",
          "name": "get_all_templates",
          "line": 17
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "handle_existing_commands",
          "line": 126
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "handle_existing_commands",
          "line": 126
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "handle_existing_commands",
          "line": 126
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "handle_existing_commands",
          "line": 126
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "SessionState::is_terminal",
          "line": 114
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "handle_existing_commands",
          "line": 126
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::read_line",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "install_templates",
          "line": 178
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "install_command",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "install_command",
          "line": 222
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "validate_project_structure",
          "line": 245
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "validate_project_structure",
          "line": 245
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "validate_project_structure",
          "line": 245
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "initialize_directories",
          "line": 272
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "initialize_directories",
          "line": 272
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "validate_project_structure",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "select_templates",
          "line": 107
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "handle_existing_commands",
          "line": 126
        },
        "call_type": "Delegate"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "install_templates",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "display_installation_summary",
          "line": 201
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_is_git_repository",
          "line": 314
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_is_git_repository",
          "line": 314
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_is_git_repository",
          "line": 314
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_is_git_repository",
          "line": 314
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_is_git_repository",
          "line": 314
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_is_git_repository",
          "line": 314
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_is_git_repository",
          "line": 314
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_get_templates",
          "line": 340
        },
        "callee": {
          "file": "./src/init/templates.rs",
          "name": "get_all_templates",
          "line": 17
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_get_templates",
          "line": 340
        },
        "callee": {
          "file": "./src/init/templates.rs",
          "name": "get_templates_by_names",
          "line": 52
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_not_git_repo",
          "line": 351
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_create_commands",
          "line": 368
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_create_commands",
          "line": 368
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_create_commands",
          "line": 368
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_create_commands",
          "line": 368
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_create_commands",
          "line": 368
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_create_commands",
          "line": 368
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_create_commands",
          "line": 368
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_create_commands",
          "line": 368
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_with_existing_commands",
          "line": 402
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_with_existing_commands",
          "line": 402
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_with_existing_commands",
          "line": 402
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_with_existing_commands",
          "line": 402
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_with_existing_commands",
          "line": 402
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_with_existing_commands",
          "line": 402
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_with_existing_commands",
          "line": 402
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_with_existing_commands",
          "line": 402
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_force_overwrite",
          "line": 440
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_force_overwrite",
          "line": 440
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_force_overwrite",
          "line": 440
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_force_overwrite",
          "line": 440
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_force_overwrite",
          "line": 440
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_force_overwrite",
          "line": 440
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_force_overwrite",
          "line": 440
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_force_overwrite",
          "line": 440
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_specific_commands",
          "line": 478
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_specific_commands",
          "line": 478
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_specific_commands",
          "line": 478
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_specific_commands",
          "line": 478
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_specific_commands",
          "line": 478
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_specific_commands",
          "line": 478
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_specific_commands",
          "line": 478
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_specific_commands",
          "line": 478
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_handle_existing_commands_no_tty",
          "line": 513
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "handle_existing_commands",
          "line": 126
        },
        "call_type": "Delegate"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_handle_existing_commands_with_conflicts",
          "line": 530
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "handle_existing_commands",
          "line": 126
        },
        "call_type": "Delegate"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_not_git_repo",
          "line": 550
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_not_git_repo",
          "line": 550
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "validate_project_structure",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_with_symlinks",
          "line": 565
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_with_symlinks",
          "line": 565
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_with_symlinks",
          "line": 565
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_with_symlinks",
          "line": 565
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_with_symlinks",
          "line": 565
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_with_symlinks",
          "line": 565
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_with_symlinks",
          "line": 565
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_with_symlinks",
          "line": 565
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "validate_project_structure",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_success",
          "line": 602
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_success",
          "line": 602
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_success",
          "line": 602
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_success",
          "line": 602
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_success",
          "line": 602
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_success",
          "line": 602
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_success",
          "line": 602
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_success",
          "line": 602
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_already_initialized",
          "line": 634
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_already_initialized",
          "line": 634
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_already_initialized",
          "line": 634
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_already_initialized",
          "line": 634
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_already_initialized",
          "line": 634
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_already_initialized",
          "line": 634
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_already_initialized",
          "line": 634
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_already_initialized",
          "line": 634
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/templates.rs",
          "name": "get_templates_by_names",
          "line": 52
        },
        "callee": {
          "file": "./src/init/templates.rs",
          "name": "get_all_templates",
          "line": 17
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/templates.rs",
          "name": "get_templates_by_names",
          "line": 52
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/templates.rs",
          "name": "tests::test_get_all_templates_success",
          "line": 67
        },
        "callee": {
          "file": "./src/init/templates.rs",
          "name": "get_all_templates",
          "line": 17
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/templates.rs",
          "name": "tests::test_get_templates_by_names",
          "line": 89
        },
        "callee": {
          "file": "./src/init/templates.rs",
          "name": "get_templates_by_names",
          "line": 52
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/init/templates.rs",
          "name": "tests::test_get_templates_by_names",
          "line": 89
        },
        "callee": {
          "file": "./src/init/templates.rs",
          "name": "get_templates_by_names",
          "line": 52
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mapreduce.rs",
          "name": "deserialize_timeout",
          "line": 97
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mapreduce.rs",
          "name": "deserialize_timeout",
          "line": 97
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mapreduce.rs",
          "name": "deserialize_timeout",
          "line": 97
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mapreduce.rs",
          "name": "MapReduceWorkflowConfig::to_reduce_phase",
          "line": 153
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mapreduce.rs",
          "name": "tests::test_parse_basic_mapreduce_workflow",
          "line": 177
        },
        "callee": {
          "file": "./src/config/mapreduce.rs",
          "name": "parse_mapreduce_workflow",
          "line": 166
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mapreduce.rs",
          "name": "tests::test_parse_timeout_formats",
          "line": 208
        },
        "callee": {
          "file": "./src/config/mapreduce.rs",
          "name": "parse_mapreduce_workflow",
          "line": 166
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mapreduce.rs",
          "name": "tests::test_parse_timeout_formats",
          "line": 208
        },
        "callee": {
          "file": "./src/config/mapreduce.rs",
          "name": "parse_mapreduce_workflow",
          "line": 166
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_command_file",
          "line": 32
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_frontmatter",
          "line": 48
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_command_file",
          "line": 32
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_sections",
          "line": 66
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_command_file",
          "line": 32
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::create_minimal_definition",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_frontmatter",
          "line": 48
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_frontmatter",
          "line": 48
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_frontmatter",
          "line": 48
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::convert_frontmatter_to_definition",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_sections",
          "line": 66
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_variables_section",
          "line": 127
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_sections",
          "line": 66
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_options_section",
          "line": 132
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_sections",
          "line": 66
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_sections",
          "line": 66
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_description",
          "line": 93
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_sections",
          "line": 66
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_variables_to_args",
          "line": 165
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_sections",
          "line": 66
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_options",
          "line": 196
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::create_minimal_definition",
          "line": 81
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::create_minimal_definition",
          "line": 81
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_description",
          "line": 93
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_description",
          "line": 93
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_variables_section",
          "line": 127
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_section",
          "line": 137
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_options_section",
          "line": 132
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_section",
          "line": 137
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_section",
          "line": 137
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_variables_to_args",
          "line": 165
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_variables_to_args",
          "line": 165
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_variables_to_args",
          "line": 165
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_variables_to_args",
          "line": 165
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::convert_frontmatter_to_definition",
          "line": 232
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::convert_frontmatter_to_definition",
          "line": 232
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_description",
          "line": 93
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::convert_frontmatter_to_definition",
          "line": 232
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::default",
          "line": 269
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_parse_frontmatter",
          "line": 351
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::create_test_file",
          "line": 341
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_parse_frontmatter",
          "line": 351
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_parse_frontmatter",
          "line": 351
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_command_file",
          "line": 32
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_parse_sections",
          "line": 390
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::create_test_file",
          "line": 341
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_parse_sections",
          "line": 390
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_parse_sections",
          "line": 390
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_command_file",
          "line": 32
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_minimal_definition",
          "line": 426
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::create_test_file",
          "line": 341
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_minimal_definition",
          "line": 426
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_minimal_definition",
          "line": 426
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_command_file",
          "line": 32
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_extract_description_multiline",
          "line": 448
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_extract_description_multiline",
          "line": 448
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_description",
          "line": 93
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::deserialize",
          "line": 38
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::resolve",
          "line": 56
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::resolve",
          "line": 56
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "WorkflowStepCommand::deserialize",
          "line": 277
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "WorkflowStepCommand::deserialize",
          "line": 277
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::from_string",
          "line": 419
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::from_string",
          "line": 419
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "Command::from_string",
          "line": 419
        },
        "callee": {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "Command::from_string",
          "line": 419
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "Command::with_arg",
          "line": 432
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "Command::deserialize",
          "line": 474
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "Command::deserialize",
          "line": 474
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_creation",
          "line": 527
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::with_timeout",
          "line": 453
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_creation",
          "line": 527
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::with_retries",
          "line": 446
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_creation",
          "line": 527
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::with_option",
          "line": 439
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_creation",
          "line": 527
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::with_arg",
          "line": 432
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_creation",
          "line": 527
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_from_string",
          "line": 546
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::from_string",
          "line": 419
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_from_string",
          "line": 546
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::from_string",
          "line": 419
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_from_string",
          "line": 546
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::from_string",
          "line": 419
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_from_string",
          "line": 546
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::from_string",
          "line": 419
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_command_conversion",
          "line": 573
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_command_conversion",
          "line": 573
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_command_conversion",
          "line": 573
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_command_conversion",
          "line": 573
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_serialization",
          "line": 593
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::with_option",
          "line": 439
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_serialization",
          "line": 593
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_commit_required_field",
          "line": 605
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_commit_required_field",
          "line": 605
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_commit_required_field",
          "line": 605
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_commit_required_field",
          "line": 605
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_with_analysis_config",
          "line": 698
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_config_with_new_syntax",
          "line": 804
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "tests::parse_test_workflow_config",
          "line": 813
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_config_with_new_syntax",
          "line": 804
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "tests::verify_coverage_command",
          "line": 865
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_config_with_new_syntax",
          "line": 804
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "tests::verify_implement_spec_command",
          "line": 878
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_config_with_new_syntax",
          "line": 804
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "tests::verify_lint_command",
          "line": 890
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::parse_test_workflow_config",
          "line": 813
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "tests::debug_workflow_parsing_error",
          "line": 837
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::debug_workflow_parsing_error",
          "line": 837
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::debug_workflow_parsing_error",
          "line": 837
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "tests::debug_command_sequence",
          "line": 847
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::debug_command_sequence",
          "line": 847
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "tests::try_parse_as",
          "line": 855
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::debug_command_sequence",
          "line": 847
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "tests::try_parse_as",
          "line": 855
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command.rs",
          "name": "tests::try_parse_as",
          "line": 855
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "GlobalConfig::default",
          "line": 89
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "get_global_mmm_dir",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "GlobalConfig::default",
          "line": 89
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "Config::merge_env_vars",
          "line": 111
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "Config::get_spec_dir",
          "line": 148
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_structured_workflow_config_parsing",
          "line": 187
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_structured_workflow_config_parsing",
          "line": 187
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_mixed_workflow_config",
          "line": 217
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_string_parsing",
          "line": 244
        },
        "callee": {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_validation",
          "line": 292
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_validation",
          "line": 292
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_validation",
          "line": 292
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::with_arg",
          "line": 432
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_validation",
          "line": 292
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_validation",
          "line": 292
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_validation",
          "line": 292
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_validation",
          "line": 292
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_variable_expansion",
          "line": 320
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::with_env",
          "line": 466
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_variable_expansion",
          "line": 320
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::with_option",
          "line": 439
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_variable_expansion",
          "line": 320
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::with_arg",
          "line": 432
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_variable_expansion",
          "line": 320
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_variable_expansion",
          "line": 320
        },
        "callee": {
          "file": "./src/config/command_parser.rs",
          "name": "expand_variables",
          "line": 77
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_metadata_defaults",
          "line": 350
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_metadata_defaults",
          "line": 350
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "apply_command_defaults",
          "line": 411
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_serialization_roundtrip",
          "line": 369
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::with_env",
          "line": 466
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_serialization_roundtrip",
          "line": 369
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::with_continue_on_error",
          "line": 460
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_serialization_roundtrip",
          "line": 369
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::with_timeout",
          "line": 453
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_serialization_roundtrip",
          "line": 369
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::with_retries",
          "line": 446
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_serialization_roundtrip",
          "line": 369
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::with_option",
          "line": 439
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_serialization_roundtrip",
          "line": 369
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::with_arg",
          "line": 432
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_serialization_roundtrip",
          "line": 369
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_config_new_creates_defaults",
          "line": 397
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_claude_api_key_precedence",
          "line": 408
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_claude_api_key_from_config",
          "line": 432
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "Config::get_claude_api_key",
          "line": 133
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_claude_api_key_from_env",
          "line": 441
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "Config::merge_env_vars",
          "line": 111
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_claude_api_key_from_env",
          "line": 441
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "Config::get_claude_api_key",
          "line": 133
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_claude_api_key_config_precedence_over_env",
          "line": 462
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "Config::merge_env_vars",
          "line": 111
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_claude_api_key_config_precedence_over_env",
          "line": 462
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "Config::get_claude_api_key",
          "line": 133
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_auto_commit_precedence",
          "line": 495
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_spec_dir",
          "line": 519
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_merge_env_vars",
          "line": 539
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_merge_env_vars",
          "line": 539
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "Config::merge_env_vars",
          "line": 111
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_merge_env_vars_editor_fallback",
          "line": 601
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_merge_env_vars_editor_fallback",
          "line": 601
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "Config::merge_env_vars",
          "line": 111
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_merge_env_vars_editor_fallback",
          "line": 601
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_merge_env_vars_editor_fallback",
          "line": 601
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "Config::merge_env_vars",
          "line": 111
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_global_config_default",
          "line": 659
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "GlobalConfig::default",
          "line": 89
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_global_mmm_dir_success",
          "line": 673
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "get_global_mmm_dir",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_global_mmm_dir_path_structure",
          "line": 684
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "get_global_mmm_dir",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "expand_variables",
          "line": 77
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "expand_variables",
          "line": 77
        },
        "callee": {
          "file": "./src/config/command_parser.rs",
          "name": "expand_string",
          "line": 95
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "expand_variables",
          "line": 77
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "expand_variables",
          "line": 77
        },
        "callee": {
          "file": "./src/config/command_parser.rs",
          "name": "expand_string",
          "line": 95
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "expand_string",
          "line": 95
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "expand_string",
          "line": 95
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "expand_string",
          "line": 95
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_simple_command",
          "line": 116
        },
        "callee": {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_with_slash",
          "line": 124
        },
        "callee": {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_with_args",
          "line": 130
        },
        "callee": {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_with_options",
          "line": 141
        },
        "callee": {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_with_variable",
          "line": 152
        },
        "callee": {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_expand_variables",
          "line": 159
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::with_option",
          "line": 439
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_expand_variables",
          "line": 159
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::with_arg",
          "line": 432
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_expand_variables",
          "line": 159
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_expand_variables",
          "line": 159
        },
        "callee": {
          "file": "./src/config/command_parser.rs",
          "name": "expand_variables",
          "line": 77
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_complex_command",
          "line": 185
        },
        "callee": {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_string_simple",
          "line": 207
        },
        "callee": {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_string_with_variables",
          "line": 219
        },
        "callee": {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_string_empty",
          "line": 231
        },
        "callee": {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::scan_commands",
          "line": 34
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::scan_commands",
          "line": 34
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_scan_empty_directory",
          "line": 126
        },
        "callee": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_scan_empty_directory",
          "line": 126
        },
        "callee": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::scan_commands",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_scan_commands_filters_correctly",
          "line": 138
        },
        "callee": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_scan_commands_filters_correctly",
          "line": 138
        },
        "callee": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::scan_commands",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_cache_behavior",
          "line": 165
        },
        "callee": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_cache_behavior",
          "line": 165
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_cache_behavior",
          "line": 165
        },
        "callee": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::scan_commands",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_cache_behavior",
          "line": 165
        },
        "callee": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::scan_commands",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_cache_behavior",
          "line": 165
        },
        "callee": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::scan_commands",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_needs_refresh",
          "line": 196
        },
        "callee": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_needs_refresh",
          "line": 196
        },
        "callee": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::scan_commands",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_needs_refresh",
          "line": 196
        },
        "callee": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::clear_cache",
          "line": 104
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::default",
          "line": 64
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::new",
          "line": 70
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register_built_in_commands",
          "line": 78
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register",
          "line": 218
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register_built_in_commands",
          "line": 78
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register",
          "line": 218
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register_built_in_commands",
          "line": 78
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register",
          "line": 218
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register_built_in_commands",
          "line": 78
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register",
          "line": 218
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register_built_in_commands",
          "line": 78
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register",
          "line": 218
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register",
          "line": 218
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_command",
          "line": 226
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_command",
          "line": 226
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::is_variable",
          "line": 50
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_command",
          "line": 226
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_argument_type",
          "line": 283
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_command",
          "line": 226
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_option_value",
          "line": 318
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_argument_type",
          "line": 283
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_argument_type",
          "line": 283
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_argument_type",
          "line": 283
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_option_value",
          "line": 318
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::apply_defaults",
          "line": 366
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::apply_defaults",
          "line": 366
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::apply_defaults",
          "line": 366
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "validate_command",
          "line": 406
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_command",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "apply_command_defaults",
          "line": 411
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_defaults",
          "line": 94
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_registry_initialization",
          "line": 420
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_valid_command",
          "line": 431
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_valid_command",
          "line": 431
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_valid_command",
          "line": 431
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_missing_required_args",
          "line": 445
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_missing_required_args",
          "line": 445
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_unknown_command",
          "line": 453
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_unknown_command",
          "line": 453
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_apply_defaults",
          "line": 461
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_apply_defaults",
          "line": 461
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_apply_defaults",
          "line": 461
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::apply_defaults",
          "line": 366
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_option_types",
          "line": 473
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_option_types",
          "line": 473
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_command_valid",
          "line": 491
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "validate_command",
          "line": 406
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_command_invalid_name",
          "line": 508
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "validate_command",
          "line": 406
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_command_empty_command",
          "line": 527
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "validate_command",
          "line": 406
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        "callee": {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_with_explicit_path",
          "line": 31
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_from_path",
          "line": 54
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_with_explicit_path",
          "line": 31
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_with_explicit_path",
          "line": 31
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_from_path",
          "line": 54
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_from_path",
          "line": 54
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_from_path",
          "line": 54
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_project",
          "line": 115
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::get_config",
          "line": 131
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_new_creates_default_config",
          "line": 147
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_new_creates_default_config",
          "line": 147
        },
        "callee": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_explicit_path_yaml",
          "line": 161
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_explicit_path_yaml",
          "line": 161
        },
        "callee": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::load_with_explicit_path",
          "line": 70
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_explicit_path_yaml",
          "line": 161
        },
        "callee": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_explicit_path_nested_workflow",
          "line": 187
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_explicit_path_nested_workflow",
          "line": 187
        },
        "callee": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::load_with_explicit_path",
          "line": 70
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_explicit_path_nested_workflow",
          "line": 187
        },
        "callee": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_default_path",
          "line": 215
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_default_path",
          "line": 215
        },
        "callee": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::load_with_explicit_path",
          "line": 70
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_default_path",
          "line": 215
        },
        "callee": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_no_config_uses_defaults",
          "line": 242
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_no_config_uses_defaults",
          "line": 242
        },
        "callee": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::load_with_explicit_path",
          "line": 70
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_no_config_uses_defaults",
          "line": 242
        },
        "callee": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_project_config",
          "line": 257
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_project_config",
          "line": 257
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_project",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_project_config",
          "line": 257
        },
        "callee": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_from_path_unsupported_format",
          "line": 290
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_from_path_unsupported_format",
          "line": 290
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_from_path",
          "line": 54
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_from_path_invalid_yaml",
          "line": 307
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_from_path_invalid_yaml",
          "line": 307
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_from_path",
          "line": 54
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_from_path_nonexistent_file",
          "line": 320
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_from_path_nonexistent_file",
          "line": 320
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_from_path",
          "line": 54
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_concurrent_access",
          "line": 336
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/loader.rs",
          "name": "tests::test_concurrent_access",
          "line": 336
        },
        "callee": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        "callee": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::refresh",
          "line": 44
        },
        "callee": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::scan_commands",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::refresh",
          "line": 44
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_command_file",
          "line": 32
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::refresh",
          "line": 44
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::refresh",
          "line": 44
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::create_minimal_definition",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::refresh",
          "line": 44
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_command",
          "line": 78
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_against_definition",
          "line": 103
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_command",
          "line": 78
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "validate_command",
          "line": 406
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_defaults",
          "line": 94
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_against_definition",
          "line": 103
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_against_definition",
          "line": 103
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_against_definition",
          "line": 103
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_strict",
          "line": 118
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_strict",
          "line": 118
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::is_variable",
          "line": 50
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_strict",
          "line": 118
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_argument_type",
          "line": 171
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_strict",
          "line": 118
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_option_value",
          "line": 213
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_argument_type",
          "line": 171
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_argument_type",
          "line": 171
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_argument_type",
          "line": 171
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_option_value",
          "line": 213
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::get_type_name",
          "line": 243
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::check_value_type",
          "line": 256
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::check_value_type",
          "line": 256
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::list_commands",
          "line": 299
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::sort",
          "line": 791
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::default",
          "line": 315
        },
        "callee": {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::default",
          "line": 315
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_dynamic_registry_creation",
          "line": 336
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_command_discovery_and_validation",
          "line": 351
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_command_discovery_and_validation",
          "line": 351
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_permissive_validation",
          "line": 389
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_permissive_validation",
          "line": 389
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_list_commands",
          "line": 419
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_list_commands",
          "line": 419
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::list_commands",
          "line": 397
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_string",
          "line": 444
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_string",
          "line": 444
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_string",
          "line": 444
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_integer",
          "line": 471
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_integer",
          "line": 471
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_integer",
          "line": 471
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_boolean",
          "line": 498
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_boolean",
          "line": 498
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_boolean",
          "line": 498
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_boolean",
          "line": 498
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_path",
          "line": 531
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_path",
          "line": 531
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_path",
          "line": 531
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_path",
          "line": 531
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_enum",
          "line": 560
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_enum",
          "line": 560
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_enum",
          "line": 560
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_enum",
          "line": 560
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_enum",
          "line": 560
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_enum",
          "line": 560
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_enum",
          "line": 560
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_enum",
          "line": 560
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_enum",
          "line": 560
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_enum",
          "line": 560
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_edge_cases_json_values",
          "line": 716
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_all_metadata_unset",
          "line": 767
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_all_metadata_unset",
          "line": 767
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_all_metadata_unset",
          "line": 767
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_metadata_already_set",
          "line": 808
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_metadata_already_set",
          "line": 808
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_metadata_already_set",
          "line": 808
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_partial_metadata",
          "line": 849
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_partial_metadata",
          "line": 849
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_partial_metadata",
          "line": 849
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_options_with_defaults",
          "line": 889
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_options_with_defaults",
          "line": 889
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_options_with_defaults",
          "line": 889
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_options_already_set",
          "line": 936
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_options_already_set",
          "line": 936
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_options_already_set",
          "line": 936
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_mixed_options",
          "line": 988
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_mixed_options",
          "line": 988
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_mixed_options",
          "line": 988
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_no_defaults",
          "line": 1044
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_no_defaults",
          "line": 1044
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_no_defaults",
          "line": 1044
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_file_creation",
          "line": 38
        },
        "callee": {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_file_creation",
          "line": 38
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_file_creation",
          "line": 38
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_file_creation",
          "line": 38
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_file_creation",
          "line": 38
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_file_creation",
          "line": 38
        },
        "callee": {
          "file": "./src/worktree/test_state.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_updates",
          "line": 71
        },
        "callee": {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_updates",
          "line": 71
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_updates",
          "line": 71
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_updates",
          "line": 71
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_updates",
          "line": 71
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_updates",
          "line": 71
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_updates",
          "line": 71
        },
        "callee": {
          "file": "./src/worktree/test_state.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_gitignore_creation",
          "line": 106
        },
        "callee": {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_gitignore_creation",
          "line": 106
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_gitignore_creation",
          "line": 106
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_gitignore_creation",
          "line": 106
        },
        "callee": {
          "file": "./src/worktree/test_state.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        "callee": {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        "callee": {
          "file": "./src/worktree/test_state.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        "callee": {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        "callee": {
          "file": "./src/worktree/test_state.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_error_handling",
          "line": 198
        },
        "callee": {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_error_handling",
          "line": 198
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_error_handling",
          "line": 198
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_error_handling",
          "line": 198
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_error_handling",
          "line": 198
        },
        "callee": {
          "file": "./src/worktree/test_state.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::collect_all_states",
          "line": 72
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::collect_all_states",
          "line": 72
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::load_state_from_file",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "callee": {
          "file": "./src/worktree/mod.rs",
          "name": "WorktreeSession::new",
          "line": 144
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::save_session_state",
          "line": 184
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::save_session_state",
          "line": 184
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::save_session_state",
          "line": 184
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::save_session_state",
          "line": 184
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "callee": {
          "file": "./src/worktree/mod.rs",
          "name": "WorktreeSession::new",
          "line": 144
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "callee": {
          "file": "./src/worktree/mod.rs",
          "name": "WorktreeSession::new",
          "line": 144
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::env",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_cleanup_config",
          "line": 828
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_all_sessions",
          "line": 572
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_all_sessions",
          "line": 572
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_worktree_for_branch",
          "line": 582
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_checkpoint",
          "line": 591
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_checkpoint",
          "line": 603
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::load_session_state",
          "line": 615
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_session_state",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::restore_session",
          "line": 620
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::load_session_state",
          "line": 615
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::restore_session",
          "line": 620
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::restore_session",
          "line": 620
        },
        "callee": {
          "file": "./src/worktree/mod.rs",
          "name": "WorktreeSession::new",
          "line": 144
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::restore_session",
          "line": 620
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::restore_session",
          "line": 620
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_interrupted_sessions",
          "line": 640
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::collect_all_states",
          "line": 72
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_interrupted_sessions",
          "line": 640
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::filter_sessions_by_status",
          "line": 48
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::mark_session_abandoned",
          "line": 650
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_last_successful_command",
          "line": 658
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::load_session_state",
          "line": 615
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::is_branch_merged",
          "line": 669
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::is_branch_merged",
          "line": 669
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::is_branch_merged",
          "line": 669
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::is_branch_merged",
          "line": 669
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::is_branch_merged",
          "line": 669
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::is_branch_merged",
          "line": 669
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::is_branch_merged",
          "line": 669
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_session_state",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::is_branch_merged",
          "line": 669
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_merged_sessions",
          "line": 727
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_merged_sessions",
          "line": 727
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_session_state",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_cleanup_config",
          "line": 828
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_claude_merge_command_construction",
          "line": 853
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_claude_merge_command_construction",
          "line": 853
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_merge_session_success",
          "line": 874
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_merge_session_success",
          "line": 874
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_merge_session_success",
          "line": 874
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_merge_session_claude_cli_failure",
          "line": 892
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_merge_session_claude_cli_failure",
          "line": 892
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_merge_session_claude_cli_failure",
          "line": 892
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_cleanup_config_defaults",
          "line": 942
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "CleanupConfig::default",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_get_cleanup_config_from_env",
          "line": 951
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_cleanup_config",
          "line": 828
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_cleanup_session_after_merge_not_merged",
          "line": 969
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_cleanup_session_after_merge_not_merged",
          "line": 969
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_cleanup_session_after_merge_not_merged",
          "line": 969
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_success",
          "line": 1046
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_success",
          "line": 1046
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_success",
          "line": 1046
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_checkpoint",
          "line": 603
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_success",
          "line": 1046
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_session_state",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_increments_iteration",
          "line": 1109
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_increments_iteration",
          "line": 1109
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_increments_iteration",
          "line": 1109
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_checkpoint",
          "line": 603
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_increments_iteration",
          "line": 1109
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_session_state",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_worktree_manager_creation",
          "line": 37
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_worktree_manager_creation",
          "line": 37
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_worktree_manager_creation",
          "line": 37
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_worktree_manager_creation",
          "line": 37
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_uuid_name",
          "line": 81
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_uuid_name",
          "line": 81
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_uuid_name",
          "line": 81
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_uuid_name",
          "line": 81
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_uuid_name",
          "line": 81
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_uuid_name",
          "line": 81
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_sessions",
          "line": 98
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_sessions",
          "line": 98
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_sessions",
          "line": 98
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_sessions",
          "line": 98
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_sessions",
          "line": 98
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_sessions",
          "line": 98
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_sessions",
          "line": 98
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_sessions",
          "line": 98
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_sessions",
          "line": 98
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_already_merged",
          "line": 177
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_already_merged",
          "line": 177
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_already_merged",
          "line": 177
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_already_merged",
          "line": 177
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_already_merged",
          "line": 177
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_already_merged",
          "line": 177
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_empty",
          "line": 191
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_empty",
          "line": 191
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_empty",
          "line": 191
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_empty",
          "line": 191
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_interrupted_sessions",
          "line": 640
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_empty",
          "line": 191
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_interrupted_sessions",
          "line": 640
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_interrupted_sessions",
          "line": 640
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_interrupted_sessions",
          "line": 640
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        "callee": {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_filter_sessions_by_status",
          "line": 316
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::filter_sessions_by_status",
          "line": 48
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_filter_sessions_by_status",
          "line": 316
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_filter_sessions_by_status",
          "line": 316
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::filter_sessions_by_status",
          "line": 48
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_filter_sessions_by_status",
          "line": 316
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_filter_sessions_by_status",
          "line": 316
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::filter_sessions_by_status",
          "line": 48
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/worktree/tests.rs",
          "name": "test_load_state_from_file",
          "line": 410
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::load_state_from_file",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::default",
          "line": 21
        },
        "callee": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::new",
          "line": 28
        },
        "callee": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::new",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::failing",
          "line": 42
        },
        "callee": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::get_update_calls",
          "line": 49
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::update_session",
          "line": 80
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::update_session",
          "line": 80
        },
        "callee": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::increment_iteration",
          "line": 100
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::update_session",
          "line": 80
        },
        "callee": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::add_files_changed",
          "line": 95
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::complete_session",
          "line": 106
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "IterationTiming::complete",
          "line": 230
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::get_state",
          "line": 119
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::default",
          "line": 19
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::default",
          "line": 82
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::builder",
          "line": 98
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 113
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 113
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 113
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 113
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 113
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 169
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 169
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::implement_spec",
          "line": 201
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::implement_spec",
          "line": 201
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::lint",
          "line": 222
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::lint",
          "line": 222
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_builder",
          "line": 249
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_builder",
          "line": 249
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::with_error",
          "line": 185
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_builder",
          "line": 249
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_builder",
          "line": 249
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_builder",
          "line": 249
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::code_review",
          "line": 464
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_builder",
          "line": 249
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::implement_spec",
          "line": 664
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_unavailable",
          "line": 265
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_unavailable",
          "line": 265
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::unavailable",
          "line": 51
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_unavailable",
          "line": 265
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_unavailable",
          "line": 265
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::code_review",
          "line": 464
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_fail_after",
          "line": 275
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_fail_after",
          "line": 275
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::fail_after",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_fail_after",
          "line": 275
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_fail_after",
          "line": 275
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_fail_after",
          "line": 275
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::code_review",
          "line": 464
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_call_counting",
          "line": 291
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_call_counting",
          "line": 291
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_call_counting",
          "line": 291
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_call_counting",
          "line": 291
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::lint",
          "line": 527
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_call_counting",
          "line": 291
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::lint",
          "line": 527
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_call_counting",
          "line": 291
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::reset_call_count",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::default",
          "line": 14
        },
        "callee": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::new",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::default",
          "line": 79
        },
        "callee": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::new",
          "line": 85
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::builder",
          "line": 93
        },
        "callee": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::new",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::run_command",
          "line": 97
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::run_command",
          "line": 97
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::get_call_history",
          "line": 124
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::reset_history",
          "line": 137
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::clear",
          "line": 86
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_builder",
          "line": 147
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_builder",
          "line": 147
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::with_error",
          "line": 185
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_builder",
          "line": 147
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_builder",
          "line": 147
        },
        "callee": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::new",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_builder",
          "line": 147
        },
        "callee": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_builder",
          "line": 147
        },
        "callee": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_history",
          "line": 162
        },
        "callee": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::new",
          "line": 85
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_history",
          "line": 162
        },
        "callee": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::run_command",
          "line": 97
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_history",
          "line": 162
        },
        "callee": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::run_command",
          "line": 97
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_history",
          "line": 162
        },
        "callee": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::get_call_history",
          "line": 124
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_default_response",
          "line": 179
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_default_response",
          "line": 179
        },
        "callee": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::with_default_response",
          "line": 55
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_default_response",
          "line": 179
        },
        "callee": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::new",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_default_response",
          "line": 179
        },
        "callee": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoaderBuilder::default",
          "line": 15
        },
        "callee": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoaderBuilder::new",
          "line": 21
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::default",
          "line": 53
        },
        "callee": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::new",
          "line": 59
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::builder",
          "line": 66
        },
        "callee": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoaderBuilder::new",
          "line": 21
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::load_with_explicit_path",
          "line": 70
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "GitCommandType::classify",
          "line": 21
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "GitCommandType::classify",
          "line": 21
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::default",
          "line": 41
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::new",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::default",
          "line": 110
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::builder",
          "line": 127
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::new",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_staged_files",
          "line": 131
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_commits",
          "line": 135
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 149
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "GitCommandType::classify",
          "line": 21
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 149
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 149
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::next_response",
          "line": 139
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::git_command_in_dir",
          "line": 184
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_builder",
          "line": 318
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_builder",
          "line": 318
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_commit_message",
          "line": 77
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_builder",
          "line": 318
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_clean_status",
          "line": 66
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_builder",
          "line": 318
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::is_repo",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_builder",
          "line": 318
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::new",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_dirty_status",
          "line": 334
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_dirty_status",
          "line": 334
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_dirty_status",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_dirty_status",
          "line": 334
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::new",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_dirty_status",
          "line": 334
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::check_git_status",
          "line": 124
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_staging",
          "line": 345
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_staging",
          "line": 345
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::stage_all_changes",
          "line": 306
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_staging",
          "line": 345
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_staged_files",
          "line": 131
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_commits",
          "line": 356
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_commits",
          "line": 356
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::create_commit",
          "line": 213
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_commits",
          "line": 356
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::create_commit",
          "line": 213
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_commits",
          "line": 356
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_commits",
          "line": 135
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_with_classifier",
          "line": 369
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_with_classifier",
          "line": 369
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_commit_message",
          "line": 77
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_with_classifier",
          "line": 369
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_clean_status",
          "line": 66
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_with_classifier",
          "line": 369
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::new",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_with_classifier",
          "line": 369
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_with_classifier",
          "line": 369
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_with_classifier",
          "line": 369
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_with_classifier",
          "line": 369
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::default",
          "line": 21
        },
        "callee": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::failing",
          "line": 37
        },
        "callee": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::get_executed_steps",
          "line": 50
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::execute_step",
          "line": 55
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::execute",
          "line": 103
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::execute_step",
          "line": 120
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::default",
          "line": 17
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::new",
          "line": 23
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::builder",
          "line": 32
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::read_file",
          "line": 56
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::read_file",
          "line": 56
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::read_file",
          "line": 56
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::write_file",
          "line": 73
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::write_file",
          "line": 73
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::list_dir",
          "line": 105
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::is_dir",
          "line": 100
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::list_dir",
          "line": 105
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::list_dir",
          "line": 105
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::get_all_files",
          "line": 138
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::default",
          "line": 149
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::new",
          "line": 23
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_file",
          "line": 161
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_file",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_directory",
          "line": 166
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_directory",
          "line": 41
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_project_structure",
          "line": 171
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_directory",
          "line": 41
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_project_structure",
          "line": 171
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_directory",
          "line": 41
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_project_structure",
          "line": 171
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_directory",
          "line": 41
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_project_structure",
          "line": 171
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_file",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_project_structure",
          "line": 171
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_file",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_project_structure",
          "line": 171
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_file",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_read_error",
          "line": 196
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::set_read_error",
          "line": 46
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_write_error",
          "line": 201
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::set_write_error",
          "line": 51
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_basic_operations",
          "line": 216
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::new",
          "line": 23
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_basic_operations",
          "line": 216
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_file",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_basic_operations",
          "line": 216
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::read_file",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_basic_operations",
          "line": 216
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_directory",
          "line": 41
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_builder",
          "line": 236
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_builder",
          "line": 236
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_file",
          "line": 161
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_builder",
          "line": 236
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_directory",
          "line": 166
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_builder",
          "line": 236
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_file",
          "line": 161
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_builder",
          "line": 236
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_builder",
          "line": 236
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::read_file",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_errors",
          "line": 252
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_errors",
          "line": 252
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_write_error",
          "line": 201
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_errors",
          "line": 252
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_read_error",
          "line": 196
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_errors",
          "line": 252
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_file",
          "line": 161
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_errors",
          "line": 252
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_errors",
          "line": 252
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::read_file",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_errors",
          "line": 252
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::write_file",
          "line": 73
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_errors",
          "line": 252
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::read_file",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_project_structure",
          "line": 273
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_project_structure",
          "line": 273
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_project_structure",
          "line": 171
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_project_structure",
          "line": 273
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_project_structure",
          "line": 273
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::read_file",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_list_dir",
          "line": 289
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_list_dir",
          "line": 289
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_directory",
          "line": 166
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_list_dir",
          "line": 289
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_file",
          "line": 161
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_list_dir",
          "line": 289
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_file",
          "line": 161
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_list_dir",
          "line": 289
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_directory",
          "line": 166
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_list_dir",
          "line": 289
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_list_dir",
          "line": 289
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::list_dir",
          "line": 105
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManagerBuilder::default",
          "line": 16
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManagerBuilder::new",
          "line": 22
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::default",
          "line": 66
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::new",
          "line": 72
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::builder",
          "line": 82
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManagerBuilder::new",
          "line": 22
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::create_session",
          "line": 96
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::create_session",
          "line": 96
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::list_sessions",
          "line": 126
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::get_session",
          "line": 134
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_all",
          "line": 138
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::check_success",
          "line": 13
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::clippy_output",
          "line": 25
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::test_success",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TarpaulinMocks::coverage_report_good",
          "line": 59
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::build_success",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/testing/test_mocks.rs",
          "name": "GitMocks::status_clean",
          "line": 118
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "callee": {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::check_with_warnings",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stderr",
          "line": 154
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "callee": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TarpaulinMocks::coverage_report_poor",
          "line": 76
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::clippy_output",
          "line": 25
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stderr",
          "line": 154
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::build_success",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::check_success",
          "line": 13
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::with_no_changes",
          "line": 153
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::with_no_changes",
          "line": 153
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::no_changes_commands",
          "line": 93
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::with_no_changes",
          "line": 153
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::with_no_changes",
          "line": 153
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::worktree",
          "line": 161
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::worktree",
          "line": 161
        },
        "callee": {
          "file": "./src/session/config.rs",
          "name": "ExecutionMode::worktree_name",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::worktree",
          "line": 161
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::worktree",
          "line": 161
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::full_test",
          "line": 169
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::full_test",
          "line": 169
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::track_focus",
          "line": 113
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::full_test",
          "line": 169
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::skip_commit_validation",
          "line": 107
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::full_test",
          "line": 169
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::full_test",
          "line": 169
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_default_configuration",
          "line": 188
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::new",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_builder_with_all_options",
          "line": 199
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_builder_with_all_options",
          "line": 199
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::add_arg",
          "line": 125
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_builder_with_all_options",
          "line": 199
        },
        "callee": {
          "file": "./src/session/config.rs",
          "name": "ExecutionMode::worktree_name",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_builder_with_all_options",
          "line": 199
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::track_focus",
          "line": 113
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_builder_with_all_options",
          "line": 199
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::skip_commit_validation",
          "line": 107
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_builder_with_all_options",
          "line": 199
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::no_changes_commands",
          "line": 93
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_builder_with_all_options",
          "line": 199
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_builder_with_all_options",
          "line": 199
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_should_simulate_no_changes",
          "line": 218
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_should_simulate_no_changes",
          "line": 218
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::add_no_changes_command",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_should_simulate_no_changes",
          "line": 218
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::add_no_changes_command",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_should_simulate_no_changes",
          "line": 218
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_common_configurations",
          "line": 230
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_common_configurations",
          "line": 230
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::with_no_changes",
          "line": 153
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_common_configurations",
          "line": 230
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::worktree",
          "line": 161
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_common_configurations",
          "line": 230
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::full_test",
          "line": 169
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_common_configurations",
          "line": 230
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::production",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_into_arc",
          "line": 252
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_into_arc",
          "line": 252
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_into_arc",
          "line": 252
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/config.rs",
          "name": "tests::test_into_arc",
          "line": 252
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::into_arc",
          "line": 64
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::new",
          "line": 34
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::new",
          "line": 34
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::with_config",
          "line": 65
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::with_config",
          "line": 65
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::default",
          "line": 116
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::new",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::new",
          "line": 123
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::with_success",
          "line": 136
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::with_error",
          "line": 142
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_error_response",
          "line": 260
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::default",
          "line": 159
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::new",
          "line": 166
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::new",
          "line": 166
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::with_success",
          "line": 179
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_success_response",
          "line": 582
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::with_error",
          "line": 185
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_error_response",
          "line": 592
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::clean_repo_git",
          "line": 201
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::clean_repo_git",
          "line": 201
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::clean_repo_git",
          "line": 201
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::clean_repo_git",
          "line": 201
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::is_repo",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::clean_repo_git",
          "line": 201
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::new",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::dirty_repo_git",
          "line": 212
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::dirty_repo_git",
          "line": 212
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::dirty_repo_git",
          "line": 212
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::dirty_repo_git",
          "line": 212
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::is_repo",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::dirty_repo_git",
          "line": 212
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::new",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::successful_claude",
          "line": 223
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::successful_claude",
          "line": 223
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::successful_claude",
          "line": 223
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::successful_claude",
          "line": 223
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::successful_claude",
          "line": 223
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::is_available",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::successful_claude",
          "line": 223
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::new",
          "line": 166
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::rate_limited_claude",
          "line": 236
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::rate_limited_claude",
          "line": 236
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::with_error",
          "line": 185
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::rate_limited_claude",
          "line": 236
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::is_available",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::rate_limited_claude",
          "line": 236
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::new",
          "line": 166
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::unavailable_claude",
          "line": 245
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "test_helpers::create_test_files",
          "line": 285
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "test_helpers::create_test_file",
          "line": 275
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_context_creation",
          "line": 297
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::new",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_create_test_file",
          "line": 303
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::new",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_create_test_file",
          "line": 303
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::create_test_file",
          "line": 341
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_mock_builders",
          "line": 315
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_mock_builders",
          "line": 315
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_mock_builders",
          "line": 315
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::is_repo",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_mock_builders",
          "line": 315
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::new",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_mock_builders",
          "line": 315
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_mock_builders",
          "line": 315
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_mock_builders",
          "line": 315
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::is_available",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_mock_builders",
          "line": 315
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::new",
          "line": 166
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_fixtures",
          "line": 334
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::clean_repo_git",
          "line": 201
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_fixtures",
          "line": 334
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::dirty_repo_git",
          "line": 212
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_fixtures",
          "line": 334
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::successful_claude",
          "line": 223
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_fixtures",
          "line": 334
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::unavailable_claude",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::clean_git_repo",
          "line": 17
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_commit_message",
          "line": 77
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::clean_git_repo",
          "line": 17
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_clean_status",
          "line": 66
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::clean_git_repo",
          "line": 17
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::is_repo",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::clean_git_repo",
          "line": 17
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::new",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::dirty_git_repo",
          "line": 25
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_commit_message",
          "line": 77
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::dirty_git_repo",
          "line": 25
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_dirty_status",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::dirty_git_repo",
          "line": 25
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::is_repo",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::dirty_git_repo",
          "line": 25
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::new",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::successful_claude",
          "line": 37
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::successful_claude",
          "line": 37
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::successful_claude",
          "line": 37
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::successful_claude",
          "line": 37
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::rate_limited_claude",
          "line": 48
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::with_error",
          "line": 185
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::rate_limited_claude",
          "line": 48
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::unavailable_claude",
          "line": 56
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::unavailable",
          "line": 51
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::unavailable_claude",
          "line": 56
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::git_subprocess",
          "line": 61
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::git_subprocess",
          "line": 61
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::git_subprocess",
          "line": 61
        },
        "callee": {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::new",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::rust_project_fs",
          "line": 68
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_project_structure",
          "line": 171
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::rust_project_fs",
          "line": 68
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::complex_project_fs",
          "line": 73
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_file",
          "line": 161
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::complex_project_fs",
          "line": 73
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_file",
          "line": 161
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::complex_project_fs",
          "line": 73
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_file",
          "line": 161
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::complex_project_fs",
          "line": 73
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_directory",
          "line": 166
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::complex_project_fs",
          "line": 73
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_file",
          "line": 161
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::complex_project_fs",
          "line": 73
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_file",
          "line": 161
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::complex_project_fs",
          "line": 73
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_directory",
          "line": 166
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::complex_project_fs",
          "line": 73
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_project_structure",
          "line": 171
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::complex_project_fs",
          "line": 73
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_contains",
          "line": 63
        },
        "callee": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_exists",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_not_contains",
          "line": 76
        },
        "callee": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_exists",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_files_equal",
          "line": 89
        },
        "callee": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_exists",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_files_equal",
          "line": 89
        },
        "callee": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_exists",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_file_exists",
          "line": 163
        },
        "callee": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_exists",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_file_exists_panic",
          "line": 173
        },
        "callee": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_exists",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_file_contains",
          "line": 178
        },
        "callee": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_contains",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_contains",
          "line": 187
        },
        "callee": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_contains",
          "line": 105
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_contains",
          "line": 187
        },
        "callee": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_not_contains",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_in_range",
          "line": 194
        },
        "callee": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_in_range",
          "line": 134
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_in_range",
          "line": 194
        },
        "callee": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_in_range",
          "line": 134
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_approx_eq",
          "line": 200
        },
        "callee": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_approx_eq",
          "line": 145
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_approx_eq",
          "line": 200
        },
        "callee": {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_approx_eq",
          "line": 145
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_test_repo",
          "line": 10
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_test_repo",
          "line": 10
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_test_repo",
          "line": 10
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_test_repo",
          "line": 10
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_test_repo",
          "line": 10
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_test_repo",
          "line": 10
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_rust_project",
          "line": 44
        },
        "callee": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_file",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_rust_project",
          "line": 44
        },
        "callee": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_file",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_rust_project",
          "line": 44
        },
        "callee": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_file",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "run_command",
          "line": 81
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "run_command",
          "line": 81
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "run_command",
          "line": 81
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "count_files",
          "line": 103
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::is_file",
          "line": 95
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "dirs_equal",
          "line": 115
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::is_file",
          "line": 95
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "dirs_equal",
          "line": 115
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::is_file",
          "line": 95
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "tests::test_create_test_repo",
          "line": 153
        },
        "callee": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_test_repo",
          "line": 10
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "tests::test_create_rust_project",
          "line": 159
        },
        "callee": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_rust_project",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/adapter.rs",
          "name": "RealSubprocessExecutor::execute",
          "line": 33
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/adapter.rs",
          "name": "RealSubprocessExecutor::execute",
          "line": 33
        },
        "callee": {
          "file": "./src/subprocess/adapter.rs",
          "name": "create_output",
          "line": 67
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/adapter.rs",
          "name": "RealSubprocessExecutor::execute",
          "line": 33
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/adapter.rs",
          "name": "create_output",
          "line": 67
        },
        "callee": {
          "file": "./src/subprocess/adapter.rs",
          "name": "create_exit_status",
          "line": 83
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::default",
          "line": 105
        },
        "callee": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::new",
          "line": 112
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::execute",
          "line": 141
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::remove",
          "line": 77
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::check_availability",
          "line": 32
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::check_availability",
          "line": 32
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::check_availability",
          "line": 32
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::check_availability",
          "line": 32
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::check_availability",
          "line": 32
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::env",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::commit",
          "line": 94
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::commit",
          "line": 94
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::commit",
          "line": 94
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::commit",
          "line": 94
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::commit",
          "line": 94
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::commit",
          "line": 94
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::commit",
          "line": 94
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::add",
          "line": 121
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::add",
          "line": 121
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::add",
          "line": 121
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::add",
          "line": 121
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::add",
          "line": 121
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::add",
          "line": 121
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::add",
          "line": 121
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::create_worktree",
          "line": 142
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::create_worktree",
          "line": 142
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::create_worktree",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::create_worktree",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::create_worktree",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::create_worktree",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::create_worktree",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::create_worktree",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::remove_worktree",
          "line": 166
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::remove_worktree",
          "line": 166
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::remove_worktree",
          "line": 166
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::remove_worktree",
          "line": 166
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::remove_worktree",
          "line": 166
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::remove_worktree",
          "line": 166
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::remove_worktree",
          "line": 166
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::current_branch",
          "line": 184
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::current_branch",
          "line": 184
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::current_branch",
          "line": 184
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::current_branch",
          "line": 184
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::current_branch",
          "line": 184
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::current_branch",
          "line": 184
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::current_branch",
          "line": 184
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::log",
          "line": 202
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::log",
          "line": 202
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::log",
          "line": 202
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::log",
          "line": 202
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::log",
          "line": 202
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::log",
          "line": 202
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::log",
          "line": 202
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::run_command",
          "line": 229
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::run_command",
          "line": 229
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::run_command",
          "line": 229
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::run_command",
          "line": 229
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::run_command",
          "line": 229
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_command_failure",
          "line": 249
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::new",
          "line": 29
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_command_failure",
          "line": 249
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_command_failure",
          "line": 249
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_command_failure",
          "line": 249
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stderr",
          "line": 154
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_command_failure",
          "line": 249
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_command_failure",
          "line": 249
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_command_failure",
          "line": 249
        },
        "callee": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::new",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_command_failure",
          "line": 249
        },
        "callee": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_parse_errors",
          "line": 270
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::new",
          "line": 29
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_parse_errors",
          "line": 270
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_parse_errors",
          "line": 270
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_success",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_parse_errors",
          "line": 270
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_parse_errors",
          "line": 270
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_parse_errors",
          "line": 270
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_parse_errors",
          "line": 270
        },
        "callee": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::new",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_parse_errors",
          "line": 270
        },
        "callee": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::log",
          "line": 202
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/runner.rs",
          "name": "TokioProcessRunner::run",
          "line": 85
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/runner.rs",
          "name": "TokioProcessRunner::run",
          "line": 85
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/runner.rs",
          "name": "TokioProcessRunner::run",
          "line": 85
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/runner.rs",
          "name": "TokioProcessRunner::run",
          "line": 85
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/runner.rs",
          "name": "TokioProcessRunner::run",
          "line": 85
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::mock",
          "line": 139
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::new",
          "line": 29
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::mock",
          "line": 139
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_call_history",
          "line": 60
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::reset",
          "line": 64
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::clear",
          "line": 86
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::reset",
          "line": 64
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::clear",
          "line": 86
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_calls",
          "line": 92
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_call_history",
          "line": 60
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::default",
          "line": 188
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::new",
          "line": 29
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_success",
          "line": 7
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_success",
          "line": 7
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_success",
          "line": 7
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_success",
          "line": 7
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_failure",
          "line": 20
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_failure",
          "line": 20
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_failure",
          "line": 20
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_command_not_found",
          "line": 30
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_command_not_found",
          "line": 30
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_command_not_found",
          "line": 30
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_timeout",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_timeout",
          "line": 43
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::timeout",
          "line": 66
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_timeout",
          "line": 43
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_timeout",
          "line": 43
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_timeout",
          "line": 43
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::new",
          "line": 29
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_success",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::new",
          "line": 29
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::times",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_success",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::mock",
          "line": 139
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_success",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_git_runner",
          "line": 124
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::mock",
          "line": 139
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_git_runner",
          "line": 124
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_git_runner",
          "line": 124
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_success",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_git_runner",
          "line": 124
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_git_runner",
          "line": 124
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_git_runner",
          "line": 124
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_git_runner",
          "line": 124
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::git",
          "line": 166
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_git_runner",
          "line": 124
        },
        "callee": {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_claude_runner",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::mock",
          "line": 139
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_claude_runner",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_claude_runner",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_success",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_claude_runner",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_claude_runner",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_claude_runner",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_claude_runner",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::claude",
          "line": 183
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_claude_runner",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::check_availability",
          "line": 32
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::stdin",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::timeout",
          "line": 66
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::envs",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::env",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::complete_session",
          "line": 86
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::update_status",
          "line": 73
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::get_session_info",
          "line": 101
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_with_retry",
          "line": 159
        },
        "callee": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_command",
          "line": 93
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_with_retry",
          "line": 159
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session",
          "line": 12
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session",
          "line": 12
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session",
          "line": 12
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session",
          "line": 12
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session",
          "line": 12
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::get_session_info",
          "line": 101
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session_failure",
          "line": 32
        },
        "callee": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::failing",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session_failure",
          "line": 32
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session_failure",
          "line": 32
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session_failure",
          "line": 32
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_update_status",
          "line": 48
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_update_status",
          "line": 48
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_update_status",
          "line": 48
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_update_status",
          "line": 48
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_update_status",
          "line": 48
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::update_status",
          "line": 73
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_update_status",
          "line": 48
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_track_iteration",
          "line": 79
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_track_iteration",
          "line": 79
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_track_iteration",
          "line": 79
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_track_iteration",
          "line": 79
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_track_iteration",
          "line": 79
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::track_iteration",
          "line": 79
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_success",
          "line": 105
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_success",
          "line": 105
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_success",
          "line": 105
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_success",
          "line": 105
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_success",
          "line": 105
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::track_iteration",
          "line": 79
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_success",
          "line": 105
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::track_iteration",
          "line": 79
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_success",
          "line": 105
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::complete_session",
          "line": 86
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_failure",
          "line": 129
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_failure",
          "line": 129
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_failure",
          "line": 129
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_failure",
          "line": 129
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_failure",
          "line": 129
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::complete_session",
          "line": 86
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_get_session_info",
          "line": 151
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_get_session_info",
          "line": 151
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_get_session_info",
          "line": 151
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_get_session_info",
          "line": 151
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::get_session_info",
          "line": 101
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_get_session_info",
          "line": 151
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_get_session_info",
          "line": 151
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::update_status",
          "line": 73
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_get_session_info",
          "line": 151
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::get_session_info",
          "line": 101
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::track_iteration",
          "line": 79
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::track_iteration",
          "line": 79
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::track_iteration",
          "line": 79
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::resume_session",
          "line": 118
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::complete_session",
          "line": 86
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::resume_session",
          "line": 118
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_session_lifecycle",
          "line": 210
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_session_lifecycle",
          "line": 210
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_session_lifecycle",
          "line": 210
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_session_lifecycle",
          "line": 210
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_session_lifecycle",
          "line": 210
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::update_status",
          "line": 73
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_session_lifecycle",
          "line": 210
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::track_iteration",
          "line": 79
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_session_lifecycle",
          "line": 210
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::complete_session",
          "line": 86
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_session_lifecycle",
          "line": 210
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::get_session_info",
          "line": 101
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_error_propagation",
          "line": 246
        },
        "callee": {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::failing",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_error_propagation",
          "line": 246
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_error_propagation",
          "line": 246
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_success",
          "line": 14
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_success",
          "line": 14
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::is_repo",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_success",
          "line": 14
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::builder",
          "line": 127
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_success",
          "line": 14
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_success",
          "line": 14
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_success",
          "line": 14
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_success",
          "line": 14
        },
        "callee": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::new",
          "line": 64
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_success",
          "line": 14
        },
        "callee": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::verify_git_repository",
          "line": 79
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_not_a_repo",
          "line": 35
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_not_a_repo",
          "line": 35
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::is_repo",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_not_a_repo",
          "line": 35
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::builder",
          "line": 127
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_not_a_repo",
          "line": 35
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_not_a_repo",
          "line": 35
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_not_a_repo",
          "line": 35
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_not_a_repo",
          "line": 35
        },
        "callee": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::new",
          "line": 64
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_not_a_repo",
          "line": 35
        },
        "callee": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::verify_git_repository",
          "line": 79
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_command_string",
          "line": 69
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_command_string",
          "line": 69
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_command_string",
          "line": 69
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_workflow_step_command",
          "line": 80
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_command_string",
          "line": 69
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_workflow_step_command",
          "line": 80
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::convert_to_workflow_step",
          "line": 119
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_command_string",
          "line": 69
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::convert_to_workflow_step",
          "line": 119
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::normalize_command_string",
          "line": 92
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::convert_to_workflow_step",
          "line": 119
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::create_default_workflow_step",
          "line": 100
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_step",
          "line": 128
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::display_progress",
          "line": 187
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::should_continue",
          "line": 169
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::convert_to_workflow_step",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_step",
          "line": 128
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::should_continue",
          "line": 169
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::display_progress",
          "line": 187
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_command_string_simple",
          "line": 286
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_command_string",
          "line": 69
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_command_string_structured",
          "line": 293
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_command_string",
          "line": 69
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_command_string_simple_object",
          "line": 309
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_command_string",
          "line": 69
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_workflow_step_command_claude",
          "line": 322
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_workflow_step_command",
          "line": 80
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_workflow_step_command_shell",
          "line": 341
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_workflow_step_command",
          "line": 80
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_workflow_step_command_test",
          "line": 360
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_workflow_step_command",
          "line": 80
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_workflow_step_command_empty",
          "line": 383
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_workflow_step_command",
          "line": 80
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_normalize_command_string_with_slash",
          "line": 402
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::normalize_command_string",
          "line": 92
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_normalize_command_string_without_slash",
          "line": 408
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::normalize_command_string",
          "line": 92
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_create_default_workflow_step",
          "line": 414
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::create_default_workflow_step",
          "line": 100
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_convert_to_workflow_step_integration",
          "line": 434
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::convert_to_workflow_step",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_convert_to_workflow_step_integration",
          "line": 434
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::convert_to_workflow_step",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_workflow_step_command_priority",
          "line": 447
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_workflow_step_command",
          "line": 80
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_command_success",
          "line": 76
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_command_success",
          "line": 76
        },
        "callee": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::new",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_command_success",
          "line": 76
        },
        "callee": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_command",
          "line": 93
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_command_failure",
          "line": 98
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_command_failure",
          "line": 98
        },
        "callee": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::new",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_command_failure",
          "line": 98
        },
        "callee": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_command",
          "line": 93
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_claude_success",
          "line": 117
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_claude_success",
          "line": 117
        },
        "callee": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::new",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_claude_success",
          "line": 117
        },
        "callee": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_claude",
          "line": 125
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_claude_failure",
          "line": 137
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_claude_failure",
          "line": 137
        },
        "callee": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::new",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_claude_failure",
          "line": 137
        },
        "callee": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_claude",
          "line": 125
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_with_retry",
          "line": 154
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_with_retry",
          "line": 154
        },
        "callee": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::new",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_with_retry",
          "line": 154
        },
        "callee": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_with_retry",
          "line": 159
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_check_command_available",
          "line": 180
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_check_command_available",
          "line": 180
        },
        "callee": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::new",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_check_command_available",
          "line": 180
        },
        "callee": {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::check_command_available",
          "line": 188
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::verify_git_repository",
          "line": 79
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "is_git_repo",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::load_configuration",
          "line": 86
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::load_configuration",
          "line": 86
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::setup_worktree",
          "line": 103
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::setup_worktree",
          "line": 103
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::prepare_environment",
          "line": 121
        },
        "callee": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::verify_git_repository",
          "line": 79
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::prepare_environment",
          "line": 121
        },
        "callee": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::load_configuration",
          "line": 86
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::prepare_environment",
          "line": 121
        },
        "callee": {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::setup_worktree",
          "line": 103
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 35
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::prompt_yes_no",
          "line": 42
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_step",
          "line": 142
        },
        "callee": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_step",
          "line": 142
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_step",
          "line": 142
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_step",
          "line": 142
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_step",
          "line": 142
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_step",
          "line": 128
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_within_limit",
          "line": 188
        },
        "callee": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_within_limit",
          "line": 188
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_within_limit",
          "line": 188
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_within_limit",
          "line": 188
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::should_continue",
          "line": 169
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_at_limit",
          "line": 210
        },
        "callee": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_at_limit",
          "line": 210
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_at_limit",
          "line": 210
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_at_limit",
          "line": 210
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::should_continue",
          "line": 169
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_beyond_limit",
          "line": 232
        },
        "callee": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_beyond_limit",
          "line": 232
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_beyond_limit",
          "line": 232
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_beyond_limit",
          "line": 232
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::should_continue",
          "line": 169
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_prompt_user",
          "line": 259
        },
        "callee": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_prompt_user",
          "line": 259
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_prompt_user",
          "line": 259
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_prompt_user",
          "line": 259
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::prompt_user",
          "line": 183
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_prompt_user",
          "line": 259
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::prompt_user",
          "line": 183
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_prompt_user",
          "line": 259
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::prompt_user",
          "line": 183
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_display_progress",
          "line": 282
        },
        "callee": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_display_progress",
          "line": 282
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_display_progress",
          "line": 282
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_display_progress",
          "line": 282
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::display_progress",
          "line": 187
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_display_progress",
          "line": 282
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::display_progress",
          "line": 187
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_display_progress",
          "line": 282
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::display_progress",
          "line": 187
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_simple_commands",
          "line": 304
        },
        "callee": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_simple_commands",
          "line": 304
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_simple_commands",
          "line": 304
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_simple_commands",
          "line": 304
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_with_variables",
          "line": 337
        },
        "callee": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_with_variables",
          "line": 337
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_with_variables",
          "line": 337
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_with_variables",
          "line": 337
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_structured_commands",
          "line": 373
        },
        "callee": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_structured_commands",
          "line": 373
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_structured_commands",
          "line": 373
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_structured_commands",
          "line": 373
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_workflow_step_commands",
          "line": 428
        },
        "callee": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_workflow_step_commands",
          "line": 428
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_workflow_step_commands",
          "line": 428
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_workflow_step_commands",
          "line": 428
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_stops_at_max_iterations",
          "line": 500
        },
        "callee": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_stops_at_max_iterations",
          "line": 500
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_stops_at_max_iterations",
          "line": 500
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_stops_at_max_iterations",
          "line": 500
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_empty_commands",
          "line": 529
        },
        "callee": {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_empty_commands",
          "line": 529
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_empty_commands",
          "line": 529
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_empty_commands",
          "line": 529
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "git_command",
          "line": 27
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "get_last_commit_message",
          "line": 35
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_last_commit_message",
          "line": 194
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "check_git_status",
          "line": 43
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::check_git_status",
          "line": 124
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "stage_all_changes",
          "line": 51
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::stage_all_changes",
          "line": 306
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "create_commit",
          "line": 62
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::create_commit",
          "line": 213
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "is_git_repo",
          "line": 71
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::is_git_repo",
          "line": 317
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::git_in_dir",
          "line": 84
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::git_in_dir",
          "line": 84
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::git_in_dir",
          "line": 84
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::git_in_dir",
          "line": 84
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::check_git_status_in_dir",
          "line": 100
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::git_in_dir",
          "line": 84
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::get_last_commit_message_in_dir",
          "line": 106
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::git_in_dir",
          "line": 84
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::stage_all_changes_in_dir",
          "line": 112
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::git_in_dir",
          "line": 84
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_commit_in_dir",
          "line": 118
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::git_in_dir",
          "line": 84
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_git_mutex_prevents_races",
          "line": 124
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "get_last_commit_message",
          "line": 35
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_is_git_repo",
          "line": 144
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_is_git_repo",
          "line": 144
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_is_git_repo",
          "line": 144
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_is_git_repo",
          "line": 144
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_is_git_repo",
          "line": 144
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_is_git_repo",
          "line": 144
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_is_git_repo",
          "line": 144
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_is_git_repo",
          "line": 144
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_is_git_repo",
          "line": 144
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_get_last_commit_message_success",
          "line": 237
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_get_last_commit_message_success",
          "line": 237
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_get_last_commit_message_success",
          "line": 237
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_get_last_commit_message_success",
          "line": 237
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::get_last_commit_message_in_dir",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_get_last_commit_message_no_commits",
          "line": 255
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_get_last_commit_message_no_commits",
          "line": 255
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::get_last_commit_message_in_dir",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_stage_all_changes_success",
          "line": 265
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_stage_all_changes_success",
          "line": 265
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_stage_all_changes_success",
          "line": 265
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::stage_all_changes_in_dir",
          "line": 112
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_stage_all_changes_success",
          "line": 265
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::check_git_status_in_dir",
          "line": 100
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_stage_all_changes_no_changes",
          "line": 286
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_stage_all_changes_no_changes",
          "line": 286
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_stage_all_changes_no_changes",
          "line": 286
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::stage_all_changes_in_dir",
          "line": 112
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_success",
          "line": 300
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_success",
          "line": 300
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_success",
          "line": 300
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::stage_all_changes_in_dir",
          "line": 112
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_success",
          "line": 300
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_commit_in_dir",
          "line": 118
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_success",
          "line": 300
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::get_last_commit_message_in_dir",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_no_staged_changes",
          "line": 323
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_no_staged_changes",
          "line": 323
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_no_staged_changes",
          "line": 323
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_commit_in_dir",
          "line": 118
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_check_git_status_success",
          "line": 338
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_check_git_status_success",
          "line": 338
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::check_git_status_in_dir",
          "line": 100
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_check_git_status_with_changes",
          "line": 348
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_check_git_status_with_changes",
          "line": 348
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::check_git_status_in_dir",
          "line": 100
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_public_api_functions_in_real_repo",
          "line": 369
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "is_git_repo",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_public_api_functions_in_real_repo",
          "line": 369
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "git_command",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_public_api_functions_in_real_repo",
          "line": 369
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "check_git_status",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_public_api_functions_in_real_repo",
          "line": 369
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "get_last_commit_message",
          "line": 35
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_mutex_synchronization",
          "line": 396
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "check_git_status",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "mock_tests::test_stage_all_changes_with_mock",
          "line": 430
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "mock_tests::test_stage_all_changes_with_mock",
          "line": 430
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::stage_all_changes_in_dir",
          "line": 112
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "mock_tests::test_create_commit_with_mock",
          "line": 450
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "mock_tests::test_create_commit_with_mock",
          "line": 450
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::stage_all_changes_in_dir",
          "line": 112
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/git_ops.rs",
          "name": "mock_tests::test_create_commit_with_mock",
          "line": 450
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_commit_in_dir",
          "line": 118
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::extract_spec_from_git",
          "line": 39
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_last_commit_message",
          "line": 194
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::git_command_exists",
          "line": 48
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::git_command_exists",
          "line": 48
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::check_for_changes",
          "line": 94
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::check_git_status",
          "line": 124
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::check_for_changes",
          "line": 94
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_load_playbook_yaml",
          "line": 152
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_load_playbook_json",
          "line": 175
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_load_playbook_invalid_format",
          "line": 195
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_load_playbook_nonexistent",
          "line": 210
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_load_playbook_without_commands_wrapper",
          "line": 217
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_run_analysis",
          "line": 247
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::run_analysis",
          "line": 33
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_run_analysis_with_coverage",
          "line": 272
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::run_analysis",
          "line": 33
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git",
          "line": 290
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git",
          "line": 290
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git",
          "line": 290
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::extract_spec_from_git",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git_no_spec",
          "line": 305
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git_no_spec",
          "line": 305
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git_no_spec",
          "line": 305
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::extract_spec_from_git",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git_error",
          "line": 315
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git_error",
          "line": 315
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_error_response",
          "line": 260
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git_error",
          "line": 315
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::extract_spec_from_git",
          "line": 39
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_validate_arguments",
          "line": 332
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::validate_arguments",
          "line": 57
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_validate_arguments",
          "line": 332
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::validate_arguments",
          "line": 57
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_ensure_mmm_directory",
          "line": 367
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::ensure_mmm_directory",
          "line": 62
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_ensure_mmm_directory",
          "line": 367
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::ensure_mmm_directory",
          "line": 62
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_create_session_state",
          "line": 386
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::create_session_state",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_create_session_state_with_focus",
          "line": 400
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::create_session_state",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_generate_session_id",
          "line": 409
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::generate_session_id",
          "line": 90
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_generate_session_id",
          "line": 409
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::generate_session_id",
          "line": 90
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_check_for_changes",
          "line": 422
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_check_for_changes",
          "line": 422
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_check_for_changes",
          "line": 422
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::check_for_changes",
          "line": 94
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_check_for_changes",
          "line": 422
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_check_for_changes",
          "line": 422
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::check_for_changes",
          "line": 94
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_update_session_metrics",
          "line": 441
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::create_session_state",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_update_session_metrics",
          "line": 441
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::update_session_metrics",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_handle_worktree_merge",
          "line": 456
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_handle_worktree_merge",
          "line": 456
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::handle_worktree_merge",
          "line": 103
        },
        "call_type": "Delegate"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_format_session_summary",
          "line": 476
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::create_session_state",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_format_session_summary",
          "line": 476
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::format_session_summary",
          "line": 112
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_run_single_iteration",
          "line": 491
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_run_single_iteration",
          "line": 491
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_should_continue_iteration",
          "line": 502
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::create_session_state",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_save_checkpoint",
          "line": 523
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::create_session_state",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_save_checkpoint",
          "line": 523
        },
        "callee": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::save_checkpoint",
          "line": 143
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_run_command_with_timeout",
          "line": 539
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::is_dir",
          "line": 100
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        "callee": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::load_with_explicit_path",
          "line": 70
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        "callee": {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "load_workflow_with_mapreduce",
          "line": 204
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::new",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        },
        "callee": {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::new",
          "line": 95
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "load_workflow_with_mapreduce",
          "line": 204
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook_with_mapreduce",
          "line": 225
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "load_workflow",
          "line": 216
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook_with_mapreduce",
          "line": 225
        },
        "callee": {
          "file": "./src/config/mapreduce.rs",
          "name": "parse_mapreduce_workflow",
          "line": 166
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "run_improvement_loop",
          "line": 386
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_create_orchestrator",
          "line": 404
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_create_orchestrator",
          "line": 404
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_load_workflow_default",
          "line": 427
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "load_workflow",
          "line": 216
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_load_mapreduce_workflow",
          "line": 465
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook_with_mapreduce",
          "line": 225
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_load_debtmap_mapreduce_workflow",
          "line": 516
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook_with_mapreduce",
          "line": 225
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_yaml_error_messages",
          "line": 626
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_yaml_error_messages",
          "line": 626
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_run_improvement_loop",
          "line": 666
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "run_improvement_loop",
          "line": 386
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::update_with_output",
          "line": 241
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::update_with_output",
          "line": 241
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::new",
          "line": 298
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::new",
          "line": 298
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::with_defaults",
          "line": 22
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::new",
          "line": 298
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::load_work_items_with_pipeline",
          "line": 354
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_map_phase",
          "line": 406
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::report_summary",
          "line": 1442
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::load_work_items_with_pipeline",
          "line": 354
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::load_work_items_with_pipeline",
          "line": 354
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::load_work_items_with_pipeline",
          "line": 354
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::load_work_items_with_pipeline",
          "line": 354
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::from_config",
          "line": 33
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::load_work_items_with_pipeline",
          "line": 354
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::load_work_items_with_pipeline",
          "line": 354
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::load_work_items_with_pipeline",
          "line": 354
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_map_phase",
          "line": 406
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "ProgressTracker::new",
          "line": 142
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_map_phase",
          "line": 406
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_map_phase",
          "line": 406
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_map_phase",
          "line": 406
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_map_phase",
          "line": 406
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::clone_executor",
          "line": 1481
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_map_phase",
          "line": 406
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::run_agent",
          "line": 467
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::run_agent",
          "line": 467
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "ProgressTracker::update_agent",
          "line": 177
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::run_agent",
          "line": 467
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "ProgressTracker::update_agent",
          "line": 177
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::run_agent",
          "line": 467
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "ProgressTracker::update_agent",
          "line": 177
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::run_agent",
          "line": 467
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::run_agent",
          "line": 467
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::run_agent",
          "line": 467
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "ProgressTracker::complete_item",
          "line": 183
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::new",
          "line": 221
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::handle_on_failure",
          "line": 1405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::update_with_output",
          "line": 241
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_worktree_commits",
          "line": 818
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_modified_files",
          "line": 840
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::create_agent_branch",
          "line": 860
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_agent_to_parent",
          "line": 881
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::interpolate_workflow_step",
          "line": 775
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::interpolate_workflow_step",
          "line": 775
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::interpolate_workflow_step",
          "line": 775
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::interpolate_workflow_step",
          "line": 775
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::interpolate_workflow_step",
          "line": 775
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::interpolate_workflow_step",
          "line": 775
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::interpolate_workflow_step",
          "line": 775
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_worktree_commits",
          "line": 818
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_worktree_commits",
          "line": 818
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_worktree_commits",
          "line": 818
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_worktree_commits",
          "line": 818
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_modified_files",
          "line": 840
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_modified_files",
          "line": 840
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_modified_files",
          "line": 840
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_modified_files",
          "line": 840
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::create_agent_branch",
          "line": 860
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::create_agent_branch",
          "line": 860
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::create_agent_branch",
          "line": 860
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::create_agent_branch",
          "line": 860
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_agent_to_parent",
          "line": 881
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::validate_parent_state",
          "line": 923
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::validate_parent_state",
          "line": 923
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::validate_parent_state",
          "line": 923
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::validate_parent_state",
          "line": 923
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::validate_parent_state",
          "line": 923
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::validate_parent_state",
          "line": 923
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::validate_parent_state",
          "line": 923
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::validate_parent_state",
          "line": 923
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::validate_parent_state",
          "line": 923
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::new",
          "line": 221
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::should_auto_merge",
          "line": 1057
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_parent_to_main",
          "line": 1064
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_parent_to_main",
          "line": 1064
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_default_branch",
          "line": 1127
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_parent_to_main",
          "line": 1064
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_parent_to_main",
          "line": 1064
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_parent_to_main",
          "line": 1064
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_parent_to_main",
          "line": 1064
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_default_branch",
          "line": 1127
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_default_branch",
          "line": 1127
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_default_branch",
          "line": 1127
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_default_branch",
          "line": 1127
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::interpolate_workflow_step",
          "line": 775
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::determine_command_type",
          "line": 1198
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_claude_command",
          "line": 1291
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_shell_command",
          "line": 1325
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_handler_command",
          "line": 1367
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_claude_command",
          "line": 1291
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_shell_command",
          "line": 1325
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::determine_command_type",
          "line": 1198
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::determine_command_type",
          "line": 1198
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::json_to_attribute_value",
          "line": 1263
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::determine_command_type",
          "line": 1198
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::determine_command_type",
          "line": 1198
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::determine_command_type",
          "line": 1198
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::determine_command_type",
          "line": 1198
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::determine_command_type",
          "line": 1198
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::determine_command_type",
          "line": 1198
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::determine_command_type",
          "line": 1198
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::json_to_attribute_value",
          "line": 1263
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::json_to_attribute_value",
          "line": 1263
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_claude_command",
          "line": 1291
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_shell_command",
          "line": 1325
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_shell_command",
          "line": 1325
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_shell_command",
          "line": 1325
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_handler_command",
          "line": 1367
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_handler_command",
          "line": 1367
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_handler_command",
          "line": 1367
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::add_env_var",
          "line": 90
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_handler_command",
          "line": 1367
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_handler_command",
          "line": 1367
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::add_env_var",
          "line": 90
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_handler_command",
          "line": 1367
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_handler_command",
          "line": 1367
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::add_env_var",
          "line": 90
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_handler_command",
          "line": 1367
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_handler_command",
          "line": 1367
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::is_success",
          "line": 84
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::handle_on_failure",
          "line": 1405
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::handle_on_failure",
          "line": 1405
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::execute_claude_command",
          "line": 55
        },
        "callee": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::handle_test_mode_execution",
          "line": 131
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::execute_claude_command",
          "line": 55
        },
        "callee": {
          "file": "./src/cook/execution/mod.rs",
          "name": "ExecutionContext::default",
          "line": 37
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::check_claude_cli",
          "line": 98
        },
        "callee": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "run_command",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::check_claude_cli",
          "line": 98
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::get_claude_version",
          "line": 115
        },
        "callee": {
          "file": "./src/testing/helpers/mod.rs",
          "name": "run_command",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::get_claude_version",
          "line": 115
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::execute",
          "line": 169
        },
        "callee": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::execute_claude_command",
          "line": 55
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_check",
          "line": 192
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_check",
          "line": 192
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::add_response",
          "line": 179
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_check",
          "line": 192
        },
        "callee": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::new",
          "line": 37
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_check",
          "line": 192
        },
        "callee": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::check_claude_cli",
          "line": 98
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_version",
          "line": 207
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_version",
          "line": 207
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::add_response",
          "line": 179
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_version",
          "line": 207
        },
        "callee": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::new",
          "line": 37
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_version",
          "line": 207
        },
        "callee": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::get_claude_version",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_command_execution",
          "line": 222
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_command_execution",
          "line": 222
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::add_response",
          "line": 179
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_command_execution",
          "line": 222
        },
        "callee": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::new",
          "line": 37
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_command_execution",
          "line": 222
        },
        "callee": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::execute_claude_command",
          "line": 55
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::from_config",
          "line": 33
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::from_config",
          "line": 33
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::compile",
          "line": 187
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::from_config",
          "line": 33
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::from_config",
          "line": 33
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::parse",
          "line": 754
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::sort",
          "line": 791
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::clear",
          "line": 86
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::apply_field_mapping",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::apply_field_mapping",
          "line": 141
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::apply_field_mapping",
          "line": 141
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::extract_field_value",
          "line": 154
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::apply_field_mapping",
          "line": 141
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::extract_field_value",
          "line": 154
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::extract_field_value",
          "line": 154
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::extract_field_value",
          "line": 154
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::compile",
          "line": 187
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::compile",
          "line": 187
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::parse_field",
          "line": 259
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::compile",
          "line": 187
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::compile",
          "line": 187
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::parse_field",
          "line": 259
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::compile",
          "line": 187
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::recursive_descent",
          "line": 325
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::evaluate_filter",
          "line": 346
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::recursive_descent",
          "line": 325
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::recursive_descent",
          "line": 325
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::recursive_descent",
          "line": 325
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::recursive_descent",
          "line": 325
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::recursive_descent",
          "line": 325
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::recursive_descent",
          "line": 325
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::evaluate_filter",
          "line": 346
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::evaluate_filter",
          "line": 346
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::evaluate_filter",
          "line": 346
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::evaluate_filter",
          "line": 346
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::evaluate_filter",
          "line": 346
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::evaluate_filter",
          "line": 346
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse_value",
          "line": 546
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse_value",
          "line": 546
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::compare",
          "line": 605
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate_function",
          "line": 676
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::compare",
          "line": 605
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::compare",
          "line": 605
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::compare",
          "line": 605
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate_function",
          "line": 676
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate_function",
          "line": 676
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate_function",
          "line": 676
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate_function",
          "line": 676
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate_function",
          "line": 676
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::parse",
          "line": 754
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::sort",
          "line": 791
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::compare_items",
          "line": 796
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::compare_items",
          "line": 796
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::compare_items",
          "line": 796
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::compare_items",
          "line": 796
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::compare_values",
          "line": 817
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::compare_values",
          "line": 817
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::compare_json_values",
          "line": 838
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_json_path_basic",
          "line": 899
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::compile",
          "line": 187
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_json_path_basic",
          "line": 899
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_json_path_nested",
          "line": 915
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::compile",
          "line": 187
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_json_path_nested",
          "line": 915
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_filter_comparison",
          "line": 933
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_filter_logical",
          "line": 944
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_filter_in_operator",
          "line": 957
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_sorter_single_field",
          "line": 970
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::parse",
          "line": 754
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_sorter_single_field",
          "line": 970
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::sort",
          "line": 791
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_sorter_multiple_fields",
          "line": 987
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::parse",
          "line": 754
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_sorter_multiple_fields",
          "line": 987
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::sort",
          "line": 791
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_pipeline_complete",
          "line": 1009
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::from_config",
          "line": 33
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_pipeline_complete",
          "line": 1009
        },
        "callee": {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::default",
          "line": 24
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_template",
          "line": 87
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::resolve_variable",
          "line": 180
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "value_to_string",
          "line": 336
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_template",
          "line": 87
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_template",
          "line": 87
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_template",
          "line": 87
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_template",
          "line": 87
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_variable_expression",
          "line": 121
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_variable_expression",
          "line": 121
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_path",
          "line": 137
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::resolve_variable",
          "line": 180
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::resolve_path",
          "line": 117
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set_path",
          "line": 237
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set_path",
          "line": 237
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_path",
          "line": 254
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_path",
          "line": 254
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_in_current",
          "line": 273
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_path",
          "line": 254
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::resolve_path",
          "line": 117
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_in_current",
          "line": 273
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_in_current",
          "line": 273
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_in_current",
          "line": 273
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_in_current",
          "line": 273
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_in_current",
          "line": 273
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_in_current",
          "line": 273
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::add_json_object",
          "line": 316
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::add_json_object",
          "line": 316
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::add_json_object",
          "line": 316
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::merge",
          "line": 328
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::merge",
          "line": 328
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "value_to_string",
          "line": 336
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "shell_escape",
          "line": 350
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_basic_interpolation",
          "line": 374
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_basic_interpolation",
          "line": 374
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_basic_interpolation",
          "line": 374
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_basic_interpolation",
          "line": 374
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_basic_interpolation",
          "line": 374
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_nested_property_access",
          "line": 387
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_nested_property_access",
          "line": 387
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_nested_property_access",
          "line": 387
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_nested_property_access",
          "line": 387
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_array_indexing",
          "line": 408
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_array_indexing",
          "line": 408
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_array_indexing",
          "line": 408
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_array_indexing",
          "line": 408
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_default_values",
          "line": 420
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_default_values",
          "line": 420
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_default_values",
          "line": 420
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_undefined_variable_strict_mode",
          "line": 431
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_undefined_variable_strict_mode",
          "line": 431
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_undefined_variable_strict_mode",
          "line": 431
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_undefined_variable_non_strict",
          "line": 440
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_undefined_variable_non_strict",
          "line": 440
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_undefined_variable_non_strict",
          "line": 440
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_context_inheritance",
          "line": 449
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_context_inheritance",
          "line": 449
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_context_inheritance",
          "line": 449
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_context_inheritance",
          "line": 449
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::child",
          "line": 224
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_context_inheritance",
          "line": 449
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::set",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_context_inheritance",
          "line": 449
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_complex_json_interpolation",
          "line": 472
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_complex_json_interpolation",
          "line": 472
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_complex_json_interpolation",
          "line": 472
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_complex_json_interpolation",
          "line": 472
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_literal_segments",
          "line": 499
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_literal_segments",
          "line": 499
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_template",
          "line": 87
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_mixed_segments",
          "line": 510
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_mixed_segments",
          "line": 510
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_template",
          "line": 87
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::new",
          "line": 31
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::default",
          "line": 45
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_command",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_command",
          "line": 52
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_command",
          "line": 52
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_command",
          "line": 52
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_command",
          "line": 52
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_command",
          "line": 52
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::env",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::timeout",
          "line": 66
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::stdin",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::execute",
          "line": 112
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_real_command_runner",
          "line": 127
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_real_command_runner",
          "line": 127
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_command",
          "line": 52
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_command_with_context",
          "line": 140
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_command_with_context",
          "line": 140
        },
        "callee": {
          "file": "./src/cook/execution/mod.rs",
          "name": "ExecutionContext::default",
          "line": 37
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_command_with_context",
          "line": 140
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::default",
          "line": 167
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_mock_command_runner",
          "line": 213
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_mock_command_runner",
          "line": 213
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::add_response",
          "line": 179
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_mock_command_runner",
          "line": 213
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::run_with_context",
          "line": 199
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_mock_command_runner",
          "line": 213
        },
        "callee": {
          "file": "./src/cook/execution/mod.rs",
          "name": "ExecutionContext::default",
          "line": 37
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_agent_context_creation",
          "line": 54
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::new",
          "line": 221
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_agent_context_update_with_output",
          "line": 78
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::new",
          "line": 221
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_agent_context_update_with_output",
          "line": 78
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::update_with_output",
          "line": 241
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_agent_context_to_interpolation_context",
          "line": 108
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::new",
          "line": 221
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_agent_context_to_interpolation_context",
          "line": 108
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_agent_context_to_interpolation_context",
          "line": 108
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_work_item",
          "line": 273
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_work_item",
          "line": 273
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_work_item",
          "line": 273
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_work_item",
          "line": 273
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_map_results",
          "line": 308
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_map_results",
          "line": 308
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_map_results",
          "line": 308
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_map_results",
          "line": 308
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_shell_output",
          "line": 329
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_shell_output",
          "line": 329
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_shell_output",
          "line": 329
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_shell_output",
          "line": 329
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_defaults",
          "line": 348
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_defaults",
          "line": 348
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_defaults",
          "line": 348
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_context_hierarchy",
          "line": 366
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_context_hierarchy",
          "line": 366
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_context_hierarchy",
          "line": 366
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_context_hierarchy",
          "line": 366
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_context_hierarchy",
          "line": 366
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::child",
          "line": 224
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_context_hierarchy",
          "line": 366
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::set",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_context_hierarchy",
          "line": 366
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::set",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_context_hierarchy",
          "line": 366
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_arrays",
          "line": 393
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_arrays",
          "line": 393
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_arrays",
          "line": 393
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_arrays",
          "line": 393
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_strict_mode",
          "line": 423
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_strict_mode",
          "line": 423
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_strict_mode",
          "line": 423
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_strict_mode",
          "line": 423
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockClaudeExecutor::get_calls",
          "line": 40
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockClaudeExecutor::execute_claude_command",
          "line": 47
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::get_updates",
          "line": 88
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::update_session",
          "line": 95
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::get_state",
          "line": 116
        },
        "callee": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::new",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockMetricsCoordinator::generate_report",
          "line": 331
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 368
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockClaudeExecutor::new",
          "line": 29
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockAnalysisCoordinator::new",
          "line": 134
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockMetricsCoordinator::new",
          "line": 277
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::new",
          "line": 202
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockClaudeExecutor::new",
          "line": 29
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockAnalysisCoordinator::new",
          "line": 134
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockMetricsCoordinator::new",
          "line": 277
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::with_test_config",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_claude",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_claude",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_shell",
          "line": 627
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_shell",
          "line": 627
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_test",
          "line": 652
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_test",
          "line": 652
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_legacy_name",
          "line": 682
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_legacy_name",
          "line": 682
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_multiple_error",
          "line": 707
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_multiple_error",
          "line": 707
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_none_error",
          "line": 736
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_none_error",
          "line": 736
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_claude",
          "line": 765
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_claude",
          "line": 765
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_shell",
          "line": 790
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_shell",
          "line": 790
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_test",
          "line": 815
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_test",
          "line": 815
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_unnamed",
          "line": 845
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_unnamed",
          "line": 845
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_handle_test_mode_execution_success",
          "line": 870
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_handle_test_mode_execution_success",
          "line": 870
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_handle_test_mode_execution_success",
          "line": 870
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_handle_test_mode_execution_success",
          "line": 870
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_handle_test_mode_execution_success",
          "line": 870
        },
        "callee": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::handle_test_mode_execution",
          "line": 131
        },
        "call_type": "Delegate"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_test_mode_no_changes_command",
          "line": 904
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_test_mode_no_changes_command",
          "line": 904
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::no_changes_commands",
          "line": 93
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_test_mode_no_changes_command",
          "line": 904
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_test_mode_no_changes_command",
          "line": 904
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_test_mode_no_changes_command",
          "line": 904
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::no_changes_commands",
          "line": 93
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::no_changes_commands",
          "line": 93
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_focus_tracking_test",
          "line": 950
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_focus_tracking_test",
          "line": 950
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_focus_tracking_test",
          "line": 950
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_focus_tracking_test",
          "line": 950
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_focus_tracking_test",
          "line": 950
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_focus_tracking_test",
          "line": 950
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::track_focus",
          "line": 113
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_focus_tracking_test",
          "line": 950
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_focus_tracking_test",
          "line": 950
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_focus_tracking_test",
          "line": 950
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_handle_no_commits_error_general_command",
          "line": 968
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_handle_no_commits_error_general_command",
          "line": 968
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::handle_no_commits_error",
          "line": 1224
        },
        "call_type": "Delegate"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_claude_command",
          "line": 995
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_claude_command",
          "line": 995
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_claude_command",
          "line": 995
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_claude_command",
          "line": 822
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_claude_command",
          "line": 995
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_calls",
          "line": 92
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_shell_command_success",
          "line": 1036
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_shell_command_success",
          "line": 1036
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_command",
          "line": 842
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_workflow_execution_single_iteration",
          "line": 1061
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_workflow_execution_single_iteration",
          "line": 1061
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_workflow_execution_single_iteration",
          "line": 1061
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::get_updates",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_workflow_execution_single_iteration",
          "line": 1061
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 368
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_step_with_capture_output",
          "line": 1122
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_step_with_capture_output",
          "line": 1122
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::execute_step",
          "line": 209
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_step_with_env_interpolation",
          "line": 1163
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_step_with_env_interpolation",
          "line": 1163
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::execute_step",
          "line": 209
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_shell_command_with_on_failure_retry",
          "line": 1209
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_shell_command_with_on_failure_retry",
          "line": 1209
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_shell_command_with_on_failure_retry",
          "line": 1209
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::execute_step",
          "line": 209
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_shell_command_with_on_failure_retry",
          "line": 1209
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_calls",
          "line": 92
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_shell_command_with_on_failure_fail_workflow",
          "line": 1278
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_shell_command_with_on_failure_fail_workflow",
          "line": 1278
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_shell_command_with_on_failure_fail_workflow",
          "line": 1278
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::execute_step",
          "line": 209
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::with_command_registry",
          "line": 196
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::with_defaults",
          "line": 22
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::new",
          "line": 202
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::new",
          "line": 21
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::with_test_config",
          "line": 219
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::new",
          "line": 21
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value",
          "line": 237
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value",
          "line": 237
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_mapreduce",
          "line": 1274
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::start_iteration",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_current_head",
          "line": 1206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::start_command",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 1397
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::complete_command",
          "line": 48
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_current_head",
          "line": 1206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::handle_no_commits_error",
          "line": 1224
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::handle_no_commits_error",
          "line": 1224
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::is_focus_tracking_test",
          "line": 1359
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::should_stop_early_in_test_mode",
          "line": 1349
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::should_continue_iterations",
          "line": 1342
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::complete_iteration",
          "line": 35
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::format_duration",
          "line": 131
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::format_duration",
          "line": 131
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::handle_test_mode_execution",
          "line": 1152
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_claude_command",
          "line": 822
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_with_retry",
          "line": 891
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_command",
          "line": 842
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_command",
          "line": 842
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_test_command",
          "line": 1020
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_claude_command",
          "line": 822
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 1397
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 1397
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 1397
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::add_env_vars",
          "line": 95
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_session_id",
          "line": 66
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_iteration",
          "line": 72
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::is_success",
          "line": 84
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_command",
          "line": 842
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_command",
          "line": 842
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_command",
          "line": 842
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_with_retry",
          "line": 891
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_with_retry",
          "line": 891
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_command",
          "line": 842
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_with_retry",
          "line": 891
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_with_retry",
          "line": 891
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_with_retry",
          "line": 891
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_with_retry",
          "line": 891
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_claude_command",
          "line": 822
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_with_retry",
          "line": 891
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_with_retry",
          "line": 891
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_test_command",
          "line": 1020
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_test_command",
          "line": 1020
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_command",
          "line": 842
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_test_command",
          "line": 1020
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_test_command",
          "line": 1020
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_test_command",
          "line": 1020
        },
        "callee": {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_test_command",
          "line": 1020
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_claude_command",
          "line": 822
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_test_command",
          "line": 1020
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_test_command",
          "line": 1020
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::handle_test_mode_execution",
          "line": 1152
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::is_test_mode_no_changes_command",
          "line": 1364
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_current_head",
          "line": 1206
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_current_head",
          "line": 1206
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_current_head",
          "line": 1206
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::handle_no_commits_error",
          "line": 1224
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::handle_no_commits_error",
          "line": 1224
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_mapreduce",
          "line": 1274
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_mapreduce",
          "line": 1274
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_mapreduce",
          "line": 1274
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::new",
          "line": 298
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_mapreduce",
          "line": 1274
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_mapreduce",
          "line": 1274
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_mapreduce",
          "line": 1274
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::format_duration",
          "line": 131
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 1388
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 1388
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 1397
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 1397
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head",
          "line": 1414
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head",
          "line": 1414
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head",
          "line": 1414
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_string",
          "line": 1431
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_integer",
          "line": 1438
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_float",
          "line": 1445
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_boolean_true",
          "line": 1452
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_boolean_false",
          "line": 1459
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_null",
          "line": 1466
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_array",
          "line": 1473
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_nested_array",
          "line": 1488
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_object",
          "line": 1507
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_nested_object",
          "line": 1531
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_nested_object",
          "line": 1531
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_nested_object",
          "line": 1531
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_large_numbers",
          "line": 1575
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_large_numbers",
          "line": 1575
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_regular_repo",
          "line": 1588
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_regular_repo",
          "line": 1588
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_regular_repo",
          "line": 1588
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_regular_repo",
          "line": 1588
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_regular_repo",
          "line": 1588
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_regular_repo",
          "line": 1588
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_regular_repo",
          "line": 1588
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_regular_repo",
          "line": 1588
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_regular_repo",
          "line": 1588
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_regular_repo",
          "line": 1588
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_regular_repo",
          "line": 1588
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head",
          "line": 1414
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head",
          "line": 1414
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head",
          "line": 1414
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_error_handling",
          "line": 1716
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head",
          "line": 1414
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_respects_working_directory",
          "line": 1730
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_respects_working_directory",
          "line": 1730
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_respects_working_directory",
          "line": 1730
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_respects_working_directory",
          "line": 1730
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_respects_working_directory",
          "line": 1730
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_respects_working_directory",
          "line": 1730
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_respects_working_directory",
          "line": 1730
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_respects_working_directory",
          "line": 1730
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_respects_working_directory",
          "line": 1730
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_respects_working_directory",
          "line": 1730
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_respects_working_directory",
          "line": 1730
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head",
          "line": 1414
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_respects_working_directory",
          "line": 1730
        },
        "callee": {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head",
          "line": 1414
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_successful_improvement_loop",
          "line": 15
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::new",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_successful_improvement_loop",
          "line": 15
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::clean_repo_git",
          "line": 201
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_successful_improvement_loop",
          "line": 15
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::successful_claude",
          "line": 223
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_claude_cli_not_available",
          "line": 50
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::new",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_claude_cli_not_available",
          "line": 50
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::unavailable_claude",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_git_operation_failures",
          "line": 64
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_git_operation_failures",
          "line": 64
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_error_response",
          "line": 260
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_git_operation_failures",
          "line": 64
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::create_commit",
          "line": 213
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_rate_limit_handling",
          "line": 81
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::rate_limited_claude",
          "line": 236
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_rate_limit_handling",
          "line": 81
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::code_review",
          "line": 464
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_worktree_creation_failure",
          "line": 91
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_worktree_creation_failure",
          "line": 91
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_error_response",
          "line": 260
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_worktree_creation_failure",
          "line": 91
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::create_worktree",
          "line": 223
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_merge_conflicts",
          "line": 105
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_merge_conflicts",
          "line": 105
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_error_response",
          "line": 260
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_merge_conflicts",
          "line": 105
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::switch_branch",
          "line": 231
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_empty_repository",
          "line": 120
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_spec_id_extraction",
          "line": 130
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_spec_id_extraction",
          "line": 130
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_spec_id_extraction",
          "line": 130
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_last_commit_message",
          "line": 194
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_multiple_iterations",
          "line": 144
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_multiple_iterations",
          "line": 144
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_multiple_iterations",
          "line": 144
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_multiple_iterations",
          "line": 144
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_success_response",
          "line": 582
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_multiple_iterations",
          "line": 144
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_multiple_iterations",
          "line": 144
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_success_response",
          "line": 582
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_multiple_iterations",
          "line": 144
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_success_response",
          "line": 582
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_focus_directive",
          "line": 164
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_focus_directive",
          "line": 164
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_success_response",
          "line": 582
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_focus_directive",
          "line": 164
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 646
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_focus_directive",
          "line": 164
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::get_called_commands",
          "line": 602
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_workflow_configuration",
          "line": 212
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::new",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_workflow_configuration",
          "line": 212
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::temp_path",
          "line": 97
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_workflow_configuration",
          "line": 212
        },
        "callee": {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::create_test_file",
          "line": 341
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_workflow_configuration",
          "line": 212
        },
        "callee": {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::temp_path",
          "line": 97
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "workflow_parsing_tests::test_parse_workflow_with_commit_required",
          "line": 370
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "workflow_parsing_tests::test_parse_workflow_with_commit_required",
          "line": 370
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "retry_tests::test_error_formatting_edge_cases",
          "line": 498
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "retry_tests::test_error_formatting_edge_cases",
          "line": 498
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "retry_tests::test_error_formatting_edge_cases",
          "line": 498
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_concurrent_git_operations",
          "line": 522
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_concurrent_git_operations",
          "line": 522
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_concurrent_git_operations",
          "line": 522
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_concurrent_git_operations",
          "line": 522
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::check_git_status",
          "line": 202
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_git_command_tracking",
          "line": 545
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_git_command_tracking",
          "line": 545
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_git_command_tracking",
          "line": 545
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_git_command_tracking",
          "line": 545
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_git_command_tracking",
          "line": 545
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::check_git_status",
          "line": 202
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_git_command_tracking",
          "line": 545
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::stage_all_changes",
          "line": 306
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_git_command_tracking",
          "line": 545
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::create_commit",
          "line": 213
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_git_command_tracking",
          "line": 545
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::get_called_commands",
          "line": 266
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::run",
          "line": 148
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::check_prerequisites",
          "line": 196
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::run",
          "line": 148
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::setup_environment",
          "line": 216
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::run",
          "line": 148
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::run",
          "line": 148
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::cleanup",
          "line": 440
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::check_prerequisites",
          "line": 196
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "check_claude_cli",
          "line": 151
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::check_prerequisites",
          "line": 196
        },
        "callee": {
          "file": "./src/cook/git_ops.rs",
          "name": "is_git_repo",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::setup_environment",
          "line": 216
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::generate_session_id",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::setup_environment",
          "line": 216
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::setup_environment",
          "line": 216
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::setup_environment",
          "line": 216
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::setup_environment",
          "line": 216
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::setup_environment",
          "line": 216
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::setup_environment",
          "line": 216
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::setup_environment",
          "line": 216
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_mapreduce_workflow",
          "line": 1065
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "apply_command_defaults",
          "line": 411
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::cleanup",
          "line": 440
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::cleanup",
          "line": 440
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::cleanup",
          "line": 440
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::cleanup",
          "line": 440
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::cleanup",
          "line": 440
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "apply_command_defaults",
          "line": 411
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::resolve",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::resolve",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::matches_glob_pattern",
          "line": 732
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::new",
          "line": 21
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::collect_workflow_inputs",
          "line": 946
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::start_iteration",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::process_workflow_input",
          "line": 1020
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::complete_iteration",
          "line": 35
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::format_duration",
          "line": 131
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::format_duration",
          "line": 131
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::collect_workflow_inputs",
          "line": 946
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::process_glob_pattern",
          "line": 971
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::collect_workflow_inputs",
          "line": 946
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::collect_workflow_inputs",
          "line": 946
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::process_glob_pattern",
          "line": 971
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::extract_input_from_path",
          "line": 1005
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::process_workflow_input",
          "line": 1020
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_mapreduce_workflow",
          "line": 1065
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_mapreduce_workflow",
          "line": 1065
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_mapreduce_workflow",
          "line": 1065
        },
        "callee": {
          "file": "./src/config/mapreduce.rs",
          "name": "MapReduceWorkflowConfig::to_map_phase",
          "line": 135
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_mapreduce_workflow",
          "line": 1065
        },
        "callee": {
          "file": "./src/config/mapreduce.rs",
          "name": "MapReduceWorkflowConfig::to_reduce_phase",
          "line": 153
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "apply_command_defaults",
          "line": 411
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::start_command",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::build_command",
          "line": 1161
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::prepare_environment_variables",
          "line": 1206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_and_validate_command",
          "line": 1231
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::complete_command",
          "line": 48
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::format_duration",
          "line": 131
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::build_command",
          "line": 1161
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::build_command",
          "line": 1161
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::resolve",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::build_command",
          "line": 1161
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::build_command",
          "line": 1161
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::is_variable",
          "line": 50
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::prepare_environment_variables",
          "line": 1206
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_and_validate_command",
          "line": 1231
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::get_current_head",
          "line": 936
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_and_validate_command",
          "line": 1231
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::get_current_head",
          "line": 936
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::git_command_in_dir",
          "line": 1566
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::git_command",
          "line": 1522
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::new",
          "line": 1509
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        "callee": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::new",
          "line": 37
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::new",
          "line": 95
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator_with_config",
          "line": 1612
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator_with_config",
          "line": 1612
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator_with_config",
          "line": 1612
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator_with_config",
          "line": 1612
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::new",
          "line": 1509
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator_with_config",
          "line": 1612
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator_with_config",
          "line": 1612
        },
        "callee": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::with_test_config",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator_with_config",
          "line": 1612
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator_with_config",
          "line": 1612
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::with_test_config",
          "line": 118
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::new",
          "line": 1509
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::add_response",
          "line": 179
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        "callee": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::new",
          "line": 37
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::new",
          "line": 95
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::check_prerequisites",
          "line": 196
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::new",
          "line": 1509
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::add_response",
          "line": 179
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        "callee": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::new",
          "line": 37
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::new",
          "line": 95
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::check_prerequisites",
          "line": 196
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_setup_environment_basic",
          "line": 1750
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_setup_environment_basic",
          "line": 1750
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::setup_environment",
          "line": 216
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_detect_structured_workflow",
          "line": 1789
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_workflow_detects_structured_commands",
          "line": 1950
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_variable_resolution_logic",
          "line": 2014
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::resolve",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_variable_resolution_logic",
          "line": 2014
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::resolve",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_file_pattern_validation",
          "line": 2041
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::new",
          "line": 1509
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::add_response",
          "line": 179
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::skip_commit_validation",
          "line": 107
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        "callee": {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        "callee": {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::with_test_config",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        "callee": {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::with_test_config",
          "line": 118
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_auto_accept_worktree_merge",
          "line": 2238
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_auto_accept_worktree_merge",
          "line": 2238
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::cleanup",
          "line": 440
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_auto_accept_worktree_merge",
          "line": 2238
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::cleanup",
          "line": 440
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_auto_accept_worktree_merge",
          "line": 2238
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 368
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_worktree_cleanup_after_merge",
          "line": 2319
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_worktree_cleanup_after_merge",
          "line": 2319
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::add_yes_no_response",
          "line": 480
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_worktree_cleanup_after_merge",
          "line": 2319
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::cleanup",
          "line": 440
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_worktree_cleanup_after_merge",
          "line": 2319
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 368
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_process_glob_pattern_matches_files",
          "line": 2411
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_process_glob_pattern_matches_files",
          "line": 2411
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::process_glob_pattern",
          "line": 971
        },
        "call_type": "Delegate"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_process_glob_pattern_recursive",
          "line": 2435
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_process_glob_pattern_recursive",
          "line": 2435
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::process_glob_pattern",
          "line": 971
        },
        "call_type": "Delegate"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "setup_interrupt_handlers",
          "line": 13
        },
        "callee": {
          "file": "./src/cook/signal_handler.rs",
          "name": "update_interrupted_state",
          "line": 48
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "setup_interrupt_handlers",
          "line": 13
        },
        "callee": {
          "file": "./src/cook/signal_handler.rs",
          "name": "update_interrupted_state",
          "line": 48
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "update_interrupted_state",
          "line": 48
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_worktree_manager",
          "line": 69
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_worktree_manager",
          "line": 69
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_worktree_manager",
          "line": 69
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::mock",
          "line": 139
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_worktree_manager",
          "line": 69
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::test_update_interrupted_state",
          "line": 122
        },
        "callee": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_worktree_manager",
          "line": 69
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::test_update_interrupted_state",
          "line": 122
        },
        "callee": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_session_state",
          "line": 87
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::test_update_interrupted_state",
          "line": 122
        },
        "callee": {
          "file": "./src/cook/signal_handler.rs",
          "name": "update_interrupted_state",
          "line": 48
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::test_termination_interrupt",
          "line": 154
        },
        "callee": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_worktree_manager",
          "line": 69
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::test_termination_interrupt",
          "line": 154
        },
        "callee": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_session_state",
          "line": 87
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::test_termination_interrupt",
          "line": 154
        },
        "callee": {
          "file": "./src/cook/signal_handler.rs",
          "name": "update_interrupted_state",
          "line": 48
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "signal_tests::test_setup_interrupt_handlers",
          "line": 185
        },
        "callee": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_worktree_manager",
          "line": 69
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "signal_tests::test_setup_interrupt_handlers",
          "line": 185
        },
        "callee": {
          "file": "./src/cook/signal_handler.rs",
          "name": "setup_interrupt_handlers",
          "line": 13
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "signal_tests::test_setup_interrupt_handlers",
          "line": 185
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "signal_tests::test_setup_interrupt_handlers",
          "line": 185
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "signal_tests::test_update_interrupted_state_error_handling",
          "line": 199
        },
        "callee": {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_worktree_manager",
          "line": 69
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/signal_handler.rs",
          "name": "signal_tests::test_update_interrupted_state_error_handling",
          "line": 199
        },
        "callee": {
          "file": "./src/cook/signal_handler.rs",
          "name": "update_interrupted_state",
          "line": 48
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::default",
          "line": 82
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::supports_unicode",
          "line": 105
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::from_args",
          "line": 99
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "VerbosityLevel::from_args",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::from_args",
          "line": 99
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::box_chars",
          "line": 122
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "BoxChars::unicode",
          "line": 158
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::box_chars",
          "line": 122
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "BoxChars::ascii",
          "line": 169
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::start_spinner",
          "line": 211
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "SimpleSpinnerHandle::new",
          "line": 302
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::iteration_start",
          "line": 218
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::box_chars",
          "line": 122
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::iteration_end",
          "line": 251
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::format_duration",
          "line": 131
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::command_output",
          "line": 278
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::get_messages",
          "line": 349
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::start_spinner",
          "line": 390
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockSpinnerHandle::new",
          "line": 450
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::start_spinner",
          "line": 390
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_display",
          "line": 479
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::new",
          "line": 342
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_display",
          "line": 479
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::info",
          "line": 355
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_display",
          "line": 479
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::warning",
          "line": 362
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_display",
          "line": 479
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::error",
          "line": 369
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_display",
          "line": 479
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::progress",
          "line": 376
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_display",
          "line": 479
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::success",
          "line": 383
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_display",
          "line": 479
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::get_messages",
          "line": 349
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_spinner",
          "line": 498
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::new",
          "line": 342
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_spinner",
          "line": 498
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::start_spinner",
          "line": 390
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_spinner",
          "line": 498
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "SimpleSpinnerHandle::update_message",
          "line": 311
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_spinner",
          "line": 498
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_spinner",
          "line": 498
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::get_messages",
          "line": 349
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_info",
          "line": 513
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_info",
          "line": 513
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::info",
          "line": 182
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_warning",
          "line": 521
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_warning",
          "line": 521
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::warning",
          "line": 188
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_error",
          "line": 529
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_error",
          "line": 529
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::error",
          "line": 194
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_spinner_lifecycle",
          "line": 536
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_spinner_lifecycle",
          "line": 536
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::start_spinner",
          "line": 211
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_spinner_lifecycle",
          "line": 536
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "SimpleSpinnerHandle::update_message",
          "line": 311
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_spinner_lifecycle",
          "line": 536
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_progress",
          "line": 546
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_progress",
          "line": 546
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::progress",
          "line": 199
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_success",
          "line": 553
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_success",
          "line": 553
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::success",
          "line": 205
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_simple_spinner_handle_fail",
          "line": 560
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_simple_spinner_handle_fail",
          "line": 560
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::start_spinner",
          "line": 211
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_simple_spinner_handle_fail",
          "line": 560
        },
        "callee": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::fail",
          "line": 82
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_verbosity_levels",
          "line": 568
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "VerbosityLevel::from_args",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_verbosity_levels",
          "line": 568
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "VerbosityLevel::from_args",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_verbosity_levels",
          "line": 568
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "VerbosityLevel::from_args",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_verbosity_levels",
          "line": 568
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "VerbosityLevel::from_args",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_verbosity_levels",
          "line": 568
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "VerbosityLevel::from_args",
          "line": 19
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_iteration_display",
          "line": 586
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::new",
          "line": 342
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_iteration_display",
          "line": 586
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::iteration_start",
          "line": 398
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_iteration_display",
          "line": 586
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::iteration_end",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_iteration_display",
          "line": 586
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::get_messages",
          "line": 349
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_step_display",
          "line": 597
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::new",
          "line": 342
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_step_display",
          "line": 597
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::step_start",
          "line": 412
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_step_display",
          "line": 597
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::step_end",
          "line": 419
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_step_display",
          "line": 597
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::get_messages",
          "line": 349
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_verbosity_filtering",
          "line": 608
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_verbosity_filtering",
          "line": 608
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::info",
          "line": 182
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_verbosity_filtering",
          "line": 608
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::error",
          "line": 194
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_verbosity_filtering",
          "line": 608
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_verbosity_filtering",
          "line": 608
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::step_start",
          "line": 265
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_command_output_display",
          "line": 620
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::new",
          "line": 342
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_command_output_display",
          "line": 620
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::command_output",
          "line": 426
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_command_output_display",
          "line": 620
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::get_messages",
          "line": 349
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_debug_output",
          "line": 629
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::new",
          "line": 342
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_debug_output",
          "line": 629
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::debug_output",
          "line": 433
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_debug_output",
          "line": 629
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::get_messages",
          "line": 349
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::default",
          "line": 24
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::new",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::read_line",
          "line": 34
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::read_line",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::validate_choice_input",
          "line": 42
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_yes_no",
          "line": 80
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::read_line",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_yes_no",
          "line": 80
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_text",
          "line": 90
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::read_line",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_text",
          "line": 90
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_choice",
          "line": 107
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_choice",
          "line": 107
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::read_line",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_choice",
          "line": 107
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::validate_choice_input",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "MockPrompter::prompt_text",
          "line": 154
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "MockPrompter::prompt_choice",
          "line": 167
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_mock_prompter_yes_no",
          "line": 183
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "MockPrompter::new",
          "line": 136
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_mock_prompter_text",
          "line": 194
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "MockPrompter::new",
          "line": 136
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_mock_prompter_choice",
          "line": 214
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "MockPrompter::new",
          "line": 136
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_mock_prompter_choice",
          "line": 214
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "MockPrompter::prompt_choice",
          "line": 167
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_format_choice_prompt",
          "line": 271
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::format_choice_prompt",
          "line": 57
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_format_choice_prompt_empty",
          "line": 281
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::format_choice_prompt",
          "line": 57
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_format_choice_prompt_single",
          "line": 288
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::format_choice_prompt",
          "line": 57
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_prompt_choice_empty_choices",
          "line": 323
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::new",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_prompt_choice_empty_choices",
          "line": 323
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_choice",
          "line": 107
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::default",
          "line": 85
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::new",
          "line": 91
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::new",
          "line": 91
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::new",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::new",
          "line": 91
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::with_verbosity",
          "line": 98
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::new",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::with_verbosity",
          "line": 98
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::prompt_yes_no",
          "line": 108
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_yes_no",
          "line": 80
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::prompt_text",
          "line": 112
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_text",
          "line": 90
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_info",
          "line": 116
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::info",
          "line": 182
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_warning",
          "line": 120
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::warning",
          "line": 188
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_error",
          "line": 124
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::error",
          "line": 194
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_progress",
          "line": 128
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::progress",
          "line": 199
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::start_spinner",
          "line": 132
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::start_spinner",
          "line": 211
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_success",
          "line": 136
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::success",
          "line": 205
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::iteration_start",
          "line": 140
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::iteration_start",
          "line": 218
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::iteration_end",
          "line": 144
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::iteration_end",
          "line": 251
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::step_start",
          "line": 148
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::step_start",
          "line": 265
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::step_end",
          "line": 152
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::step_end",
          "line": 271
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::command_output",
          "line": 156
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::command_output",
          "line": 278
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::debug_output",
          "line": 160
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::debug_output",
          "line": 284
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::verbosity",
          "line": 164
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::verbosity",
          "line": 290
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::default",
          "line": 182
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::new",
          "line": 188
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 204
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::start_spinner",
          "line": 263
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_default_user_interaction_creation",
          "line": 355
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::new",
          "line": 91
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_default_user_interaction_creation",
          "line": 355
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_info",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_user_interaction",
          "line": 362
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_user_interaction",
          "line": 362
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_info",
          "line": 519
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_user_interaction",
          "line": 362
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_warning",
          "line": 526
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_user_interaction",
          "line": 362
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_error",
          "line": 249
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_user_interaction",
          "line": 362
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_progress",
          "line": 540
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_user_interaction",
          "line": 362
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_success",
          "line": 555
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_user_interaction",
          "line": 362
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 368
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_prompts",
          "line": 382
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_prompts",
          "line": 382
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::add_yes_no_response",
          "line": 480
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_prompts",
          "line": 382
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::prompt_yes_no",
          "line": 495
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_prompts",
          "line": 382
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::add_text_response",
          "line": 484
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_prompts",
          "line": 382
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::prompt_text",
          "line": 223
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_prompts",
          "line": 382
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 368
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_spinner_handle",
          "line": 404
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_spinner_handle",
          "line": 404
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::start_spinner",
          "line": 263
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_spinner_handle",
          "line": 404
        },
        "callee": {
          "file": "./src/cook/interaction/display.rs",
          "name": "SimpleSpinnerHandle::update_message",
          "line": 311
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_spinner_handle",
          "line": 404
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_spinner_handle",
          "line": 404
        },
        "callee": {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 368
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_display_formatting",
          "line": 422
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::new",
          "line": 91
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_display_formatting",
          "line": 422
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_info",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_display_formatting",
          "line": 422
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_warning",
          "line": 120
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_display_formatting",
          "line": 422
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_error",
          "line": 124
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_display_formatting",
          "line": 422
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_progress",
          "line": 128
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_display_formatting",
          "line": 422
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_success",
          "line": 136
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_error_handling",
          "line": 436
        },
        "callee": {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_error_handling",
          "line": 436
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::prompt_yes_no",
          "line": 495
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_error_handling",
          "line": 436
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::prompt_text",
          "line": 223
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::default",
          "line": 466
        },
        "callee": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::new",
          "line": 188
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 488
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "await_retry_delay",
          "line": 76
        },
        "call_type": "Async"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "should_retry_output",
          "line": 84
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "handle_command_error",
          "line": 98
        },
        "call_type": "Delegate"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "should_retry_output",
          "line": 84
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "should_retry_output",
          "line": 84
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "is_transient_error",
          "line": 125
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "check_claude_cli",
          "line": 151
        },
        "callee": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::check_availability",
          "line": 32
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting",
          "line": 233
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting_no_exit_code",
          "line": 241
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting_with_stdout_only",
          "line": 249
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting_command_not_found",
          "line": 256
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting_rate_limit",
          "line": 262
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting_empty_outputs",
          "line": 268
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_success",
          "line": 276
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_success",
          "line": 276
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_command_not_found",
          "line": 288
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_command_not_found",
          "line": 288
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_non_transient_failure",
          "line": 298
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_non_transient_failure",
          "line": 298
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_non_transient_failure",
          "line": 298
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_exhausted_retries",
          "line": 310
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_exhausted_retries",
          "line": 310
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_exhausted_retries",
          "line": 310
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_exponential_backoff",
          "line": 325
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_exponential_backoff",
          "line": 325
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_exponential_backoff",
          "line": 325
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_check_claude_cli_when_missing",
          "line": 346
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_format_subprocess_error_all_fields",
          "line": 355
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_format_subprocess_error_unauthorized",
          "line": 371
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_format_subprocess_error_unauthorized_variations",
          "line": 380
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_max_attempts_reached",
          "line": 403
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_max_attempts_reached",
          "line": 403
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_max_attempts_reached",
          "line": 403
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_check_claude_cli_fallback",
          "line": 417
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "check_claude_cli",
          "line": 151
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_io_error_recovery",
          "line": 432
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_io_error_recovery",
          "line": 432
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_io_error_recovery",
          "line": 432
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_format_subprocess_error_all_hints",
          "line": 442
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_verbose_output",
          "line": 476
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_verbose_output",
          "line": 476
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_format_subprocess_error_with_newlines",
          "line": 488
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_network_timeout",
          "line": 502
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_network_timeout",
          "line": 502
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_signal_interruption",
          "line": 514
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_signal_interruption",
          "line": 514
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_signal_interruption",
          "line": 514
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_check_claude_cli_error_cases",
          "line": 530
        },
        "callee": {
          "file": "./src/cook/retry.rs",
          "name": "check_claude_cli",
          "line": 151
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::new",
          "line": 27
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::convert_state",
          "line": 43
        },
        "callee": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::duration",
          "line": 105
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::convert_state",
          "line": 43
        },
        "callee": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::duration",
          "line": 105
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::start_session",
          "line": 83
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::update_session",
          "line": 104
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::complete_session",
          "line": 218
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::get_state",
          "line": 234
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::get_state",
          "line": 234
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "SessionState::is_terminal",
          "line": 114
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::get_state",
          "line": 234
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_adapter_creation",
          "line": 318
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_adapter_creation",
          "line": 318
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::inner",
          "line": 37
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_start_session",
          "line": 328
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_start_session",
          "line": 328
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::start_session",
          "line": 83
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_session_lifecycle",
          "line": 341
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_session_lifecycle",
          "line": 341
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::start_session",
          "line": 83
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_session_lifecycle",
          "line": 341
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::update_session",
          "line": 104
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_session_lifecycle",
          "line": 341
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::update_session",
          "line": 104
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_session_lifecycle",
          "line": 341
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::complete_session",
          "line": 218
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_error_handling",
          "line": 366
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_error_handling",
          "line": 366
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::update_session",
          "line": 104
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_error_handling",
          "line": 366
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::complete_session",
          "line": 218
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_state_conversion",
          "line": 382
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_state_conversion",
          "line": 382
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::start_session",
          "line": 83
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_state_conversion",
          "line": 382
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::get_state",
          "line": 234
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_state_conversion",
          "line": 382
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::update_session",
          "line": 104
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_state_conversion",
          "line": 382
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::update_session",
          "line": 104
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_state_conversion",
          "line": 382
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::update_session",
          "line": 104
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_complete_session_lifecycle",
          "line": 416
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_complete_session_lifecycle",
          "line": 416
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::start_session",
          "line": 83
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_complete_session_lifecycle",
          "line": 416
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::update_session",
          "line": 104
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_complete_session_lifecycle",
          "line": 416
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::update_session",
          "line": 104
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_complete_session_lifecycle",
          "line": 416
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::update_session",
          "line": 104
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_complete_session_lifecycle",
          "line": 416
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::complete_session",
          "line": 218
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_save_and_load_state",
          "line": 448
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::new",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_save_and_load_state",
          "line": 448
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::start_session",
          "line": 83
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_save_and_load_state",
          "line": 448
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::save_state",
          "line": 290
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_save_and_load_state",
          "line": 448
        },
        "callee": {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::load_state",
          "line": 305
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/migration.rs",
          "name": "create_full_featured_manager",
          "line": 14
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::new",
          "line": 32
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/migration.rs",
          "name": "create_full_featured_manager",
          "line": 14
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/migration.rs",
          "name": "create_full_featured_manager",
          "line": 14
        },
        "callee": {
          "file": "./src/session/events.rs",
          "name": "LoggingObserver::new",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/migration.rs",
          "name": "example_migration",
          "line": 34
        },
        "callee": {
          "file": "./src/cook/session/migration.rs",
          "name": "create_full_featured_manager",
          "line": 14
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/migration.rs",
          "name": "example_migration",
          "line": 34
        },
        "callee": {
          "file": "./src/session/config.rs",
          "name": "SessionOptions::from_flags",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/migration.rs",
          "name": "example_migration",
          "line": 34
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/migration.rs",
          "name": "example_migration",
          "line": 34
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/migration.rs",
          "name": "example_migration",
          "line": 34
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/migration.rs",
          "name": "example_migration",
          "line": 34
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/migration.rs",
          "name": "example_migration",
          "line": 34
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/migration.rs",
          "name": "example_migration",
          "line": 34
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/migration.rs",
          "name": "example_migration",
          "line": 34
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/migration.rs",
          "name": "example_recovery",
          "line": 106
        },
        "callee": {
          "file": "./src/cook/session/migration.rs",
          "name": "create_full_featured_manager",
          "line": 14
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/migration.rs",
          "name": "example_recovery",
          "line": 106
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::restore_session",
          "line": 292
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/migration.rs",
          "name": "example_recovery",
          "line": 106
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::get_state",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/migration.rs",
          "name": "example_recovery",
          "line": 106
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/migration.rs",
          "name": "tests::test_migration_example",
          "line": 153
        },
        "callee": {
          "file": "./src/cook/session/migration.rs",
          "name": "create_full_featured_manager",
          "line": 14
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        "callee": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::new",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::update_session",
          "line": 38
        },
        "callee": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::increment_iteration",
          "line": 100
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::update_session",
          "line": 38
        },
        "callee": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::add_files_changed",
          "line": 95
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::complete_session",
          "line": 90
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "IterationTiming::complete",
          "line": 230
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::get_state",
          "line": 99
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::track_iteration",
          "line": 154
        },
        "callee": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::increment_iteration",
          "line": 100
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::track_iteration",
          "line": 154
        },
        "callee": {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::add_files_changed",
          "line": 95
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_tracker_basic",
          "line": 188
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_tracker_basic",
          "line": 188
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::get_state",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_tracker_basic",
          "line": 188
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::track_iteration",
          "line": 154
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_tracker_basic",
          "line": 188
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::get_state",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_tracker_basic",
          "line": 188
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::complete_session",
          "line": 90
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_tracker_basic",
          "line": 188
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::get_state",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_state_persistence",
          "line": 214
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_state_persistence",
          "line": 214
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::set_worktree",
          "line": 24
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_state_persistence",
          "line": 214
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::track_iteration",
          "line": 154
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_state_persistence",
          "line": 214
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::save_state",
          "line": 103
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_state_persistence",
          "line": 214
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_state_persistence",
          "line": 214
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::load_state",
          "line": 132
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_state_persistence",
          "line": 214
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::get_state",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_updates",
          "line": 241
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_updates",
          "line": 241
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::update_session",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_updates",
          "line": 241
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::update_session",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_updates",
          "line": 241
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::update_session",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_updates",
          "line": 241
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::get_state",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_updates",
          "line": 241
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::update_session",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_atomic_save_prevents_corruption",
          "line": 273
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_atomic_save_prevents_corruption",
          "line": 273
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_atomic_save_prevents_corruption",
          "line": 273
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::update_session",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_atomic_save_prevents_corruption",
          "line": 273
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::update_session",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_atomic_save_prevents_corruption",
          "line": 273
        },
        "callee": {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::save_state",
          "line": 103
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "main",
          "line": 119
        },
        "callee": {
          "file": "./src/simple_state/mod.rs",
          "name": "init",
          "line": 85
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "main",
          "line": 119
        },
        "callee": {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "main",
          "line": 119
        },
        "callee": {
          "file": "./src/main.rs",
          "name": "run_worktree_command",
          "line": 395
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "main",
          "line": 119
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "display_worktree_session",
          "line": 206
        },
        "callee": {
          "file": "./src/main.rs",
          "name": "display_worktree_session_legacy",
          "line": 248
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "display_worktree_session",
          "line": 206
        },
        "callee": {
          "file": "./src/main.rs",
          "name": "display_worktree_session_legacy",
          "line": 248
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_list_command",
          "line": 253
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_list_command",
          "line": 253
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_list_command",
          "line": 253
        },
        "callee": {
          "file": "./src/main.rs",
          "name": "display_worktree_session",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_merge_command",
          "line": 269
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_merge_command",
          "line": 269
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_merge_command",
          "line": 269
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_merge_command",
          "line": 269
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_merge_command",
          "line": 269
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_merge_command",
          "line": 269
        },
        "callee": {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::read_line",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_merge_command",
          "line": 269
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_merged_sessions",
          "line": 727
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_all_sessions",
          "line": 572
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_session_state",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        },
        "callee": {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "run_worktree_command",
          "line": 395
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "run_worktree_command",
          "line": 395
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "run_worktree_command",
          "line": 395
        },
        "callee": {
          "file": "./src/main.rs",
          "name": "handle_list_command",
          "line": 253
        },
        "call_type": "Delegate"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "run_worktree_command",
          "line": 395
        },
        "callee": {
          "file": "./src/main.rs",
          "name": "handle_merge_command",
          "line": 269
        },
        "call_type": "Delegate"
      },
      {
        "caller": {
          "file": "./src/main.rs",
          "name": "run_worktree_command",
          "line": 395
        },
        "callee": {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        },
        "call_type": "Delegate"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::with_defaults",
          "line": 22
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::with_defaults",
          "line": 22
        },
        "callee": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::with_defaults",
          "line": 22
        },
        "callee": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::with_defaults",
          "line": 22
        },
        "callee": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::with_defaults",
          "line": 22
        },
        "callee": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::with_defaults",
          "line": 22
        },
        "callee": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::register",
          "line": 39
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "MockHandler::name",
          "line": 94
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::register_sync",
          "line": 50
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "MockHandler::name",
          "line": 94
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::get",
          "line": 73
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::execute",
          "line": 85
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::execute",
          "line": 85
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::execute",
          "line": 85
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::validate",
          "line": 101
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::validate",
          "line": 101
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::validate",
          "line": 101
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::get_schema",
          "line": 116
        },
        "callee": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::get_schema",
          "line": 116
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::default",
          "line": 123
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "TestHandler::schema",
          "line": 153
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "TestHandler::execute",
          "line": 157
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_registration",
          "line": 171
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_registration",
          "line": 171
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::register_sync",
          "line": 50
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_registration",
          "line": 171
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::list",
          "line": 79
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_get_handler",
          "line": 187
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_get_handler",
          "line": 187
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::register_sync",
          "line": 50
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_get_handler",
          "line": 187
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_execute",
          "line": 203
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_execute",
          "line": 203
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::register_sync",
          "line": 50
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_execute",
          "line": 203
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_execute",
          "line": 203
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::execute",
          "line": 85
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::apply_defaults",
          "line": 171
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::apply_defaults",
          "line": 171
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_attribute_value_conversions",
          "line": 205
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::from",
          "line": 90
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_attribute_value_conversions",
          "line": 205
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::from",
          "line": 90
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_attribute_value_conversions",
          "line": 205
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::from",
          "line": 90
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_validation",
          "line": 217
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_validation",
          "line": 217
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_required",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_validation",
          "line": 217
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_validation",
          "line": 217
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::from",
          "line": 90
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_validation",
          "line": 217
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::from",
          "line": 90
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_validation",
          "line": 217
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::from",
          "line": 90
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_defaults",
          "line": 237
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_defaults",
          "line": 237
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_defaults",
          "line": 237
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::from",
          "line": 90
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_defaults",
          "line": 237
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::apply_defaults",
          "line": 171
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::new",
          "line": 58
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::register",
          "line": 65
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register",
          "line": 218
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::default",
          "line": 77
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::new",
          "line": 58
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/mod.rs",
          "name": "MockHandler::schema",
          "line": 98
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/mod.rs",
          "name": "MockHandler::execute",
          "line": 102
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/mod.rs",
          "name": "tests::test_command_handler_builder",
          "line": 116
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/mod.rs",
          "name": "tests::test_command_handler_builder",
          "line": 116
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/mod.rs",
          "name": "tests::test_command_handler_builder",
          "line": 116
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::register",
          "line": 65
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/mod.rs",
          "name": "tests::test_command_handler_builder",
          "line": 116
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::new",
          "line": 58
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/mod.rs",
          "name": "tests::test_handler_validation",
          "line": 131
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/mod.rs",
          "name": "tests::test_handler_validation",
          "line": 131
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_required",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::from_output",
          "line": 60
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::from_output",
          "line": 60
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/result.rs",
          "name": "CommandError::to_result",
          "line": 137
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/result.rs",
          "name": "tests::test_success_result",
          "line": 175
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/result.rs",
          "name": "tests::test_error_result",
          "line": 183
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/result.rs",
          "name": "tests::test_from_output",
          "line": 191
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::from_output",
          "line": 60
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/result.rs",
          "name": "tests::test_from_output",
          "line": 191
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::from_output",
          "line": 60
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/result.rs",
          "name": "tests::test_with_duration",
          "line": 202
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/result.rs",
          "name": "tests::test_with_duration",
          "line": 202
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/result.rs",
          "name": "tests::test_to_result",
          "line": 208
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/result.rs",
          "name": "tests::test_to_result",
          "line": 208
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_required",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_defaults",
          "line": 94
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::schema",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_number",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_number",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_number",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_array",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::resolve_path",
          "line": 117
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::full_env",
          "line": 131
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::default",
          "line": 198
        },
        "callee": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_schema",
          "line": 216
        },
        "callee": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_schema",
          "line": 216
        },
        "callee": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::schema",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_execute",
          "line": 226
        },
        "callee": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_execute",
          "line": 226
        },
        "callee": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::new",
          "line": 112
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_execute",
          "line": 226
        },
        "callee": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::expect_execute",
          "line": 118
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_execute",
          "line": 226
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_executor",
          "line": 60
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_execute",
          "line": 226
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_execute",
          "line": 226
        },
        "callee": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_dry_run",
          "line": 268
        },
        "callee": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_dry_run",
          "line": 268
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_dry_run",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_dry_run",
          "line": 268
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_dry_run",
          "line": 268
        },
        "callee": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_required",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_defaults",
          "line": 94
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::schema",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_number",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::resolve_path",
          "line": 117
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::full_env",
          "line": 131
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_object",
          "line": 52
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::from_output",
          "line": 60
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::default",
          "line": 140
        },
        "callee": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_schema",
          "line": 158
        },
        "callee": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_schema",
          "line": 158
        },
        "callee": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::schema",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_execute",
          "line": 168
        },
        "callee": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_execute",
          "line": 168
        },
        "callee": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::new",
          "line": 112
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_execute",
          "line": 168
        },
        "callee": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::expect_execute",
          "line": 118
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_execute",
          "line": 168
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_executor",
          "line": 60
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_execute",
          "line": 168
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_execute",
          "line": 168
        },
        "callee": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_dry_run",
          "line": 200
        },
        "callee": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_dry_run",
          "line": 200
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_dry_run",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_dry_run",
          "line": 200
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_dry_run",
          "line": 200
        },
        "callee": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_required",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_defaults",
          "line": 94
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_bool",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_bool",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_bool",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_bool",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_bool",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::full_env",
          "line": 131
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::default",
          "line": 226
        },
        "callee": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_handler_schema",
          "line": 244
        },
        "callee": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_handler_schema",
          "line": 244
        },
        "callee": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_build",
          "line": 254
        },
        "callee": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_build",
          "line": 254
        },
        "callee": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::new",
          "line": 112
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_build",
          "line": 254
        },
        "callee": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::expect_execute",
          "line": 118
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_build",
          "line": 254
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_executor",
          "line": 60
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_build",
          "line": 254
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_build",
          "line": 254
        },
        "callee": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_test_with_features",
          "line": 287
        },
        "callee": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_test_with_features",
          "line": 287
        },
        "callee": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::new",
          "line": 112
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_test_with_features",
          "line": 287
        },
        "callee": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::expect_execute",
          "line": 118
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_test_with_features",
          "line": 287
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_executor",
          "line": 60
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_test_with_features",
          "line": 287
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_test_with_features",
          "line": 287
        },
        "callee": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_dry_run",
          "line": 322
        },
        "callee": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_dry_run",
          "line": 322
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_dry_run",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_dry_run",
          "line": 322
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_dry_run",
          "line": 322
        },
        "callee": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_required",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::schema",
          "line": 27
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_defaults",
          "line": 94
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::schema",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_bool",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_array",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::full_env",
          "line": 131
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_array",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::full_env",
          "line": 131
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::default",
          "line": 222
        },
        "callee": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_handler_schema",
          "line": 240
        },
        "callee": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_handler_schema",
          "line": 240
        },
        "callee": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::schema",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_status",
          "line": 250
        },
        "callee": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_status",
          "line": 250
        },
        "callee": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::new",
          "line": 112
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_status",
          "line": 250
        },
        "callee": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::expect_execute",
          "line": 118
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_status",
          "line": 250
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_executor",
          "line": 60
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_status",
          "line": 250
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_status",
          "line": 250
        },
        "callee": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_commit_dry_run",
          "line": 281
        },
        "callee": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_commit_dry_run",
          "line": 281
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_dry_run",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_commit_dry_run",
          "line": 281
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_commit_dry_run",
          "line": 281
        },
        "callee": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/mod.rs",
          "name": "all_handlers",
          "line": 16
        },
        "callee": {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/mod.rs",
          "name": "all_handlers",
          "line": 16
        },
        "callee": {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/mod.rs",
          "name": "all_handlers",
          "line": 16
        },
        "callee": {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/mod.rs",
          "name": "all_handlers",
          "line": 16
        },
        "callee": {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::new",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/mod.rs",
          "name": "all_handlers",
          "line": 16
        },
        "callee": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/mod.rs",
          "name": "tests::test_all_handlers",
          "line": 31
        },
        "callee": {
          "file": "./src/commands/handlers/mod.rs",
          "name": "all_handlers",
          "line": 16
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/mod.rs",
          "name": "tests::test_all_handlers",
          "line": 31
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "MockHandler::name",
          "line": 94
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::schema",
          "line": 29
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::schema",
          "line": 29
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_required",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::schema",
          "line": 29
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_required",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::schema",
          "line": 29
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::schema",
          "line": 29
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::schema",
          "line": 29
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::schema",
          "line": 29
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::schema",
          "line": 29
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_defaults",
          "line": 94
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::schema",
          "line": 29
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::resolve_path",
          "line": 117
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_bool",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_bool",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_bool",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::resolve_path",
          "line": 117
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_bool",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::resolve_path",
          "line": 117
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_bool",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "callee": {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::default",
          "line": 297
        },
        "callee": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_handler_schema",
          "line": 309
        },
        "callee": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_handler_schema",
          "line": 309
        },
        "callee": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::schema",
          "line": 29
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_write_and_read",
          "line": 319
        },
        "callee": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_write_and_read",
          "line": 319
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_write_and_read",
          "line": 319
        },
        "callee": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_write_and_read",
          "line": 319
        },
        "callee": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_exists",
          "line": 363
        },
        "callee": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_exists",
          "line": 363
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_exists",
          "line": 363
        },
        "callee": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_dry_run",
          "line": 386
        },
        "callee": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::new",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_dry_run",
          "line": 386
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_dry_run",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_dry_run",
          "line": 386
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_dry_run",
          "line": 386
        },
        "callee": {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::test",
          "line": 55
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_context_creation",
          "line": 144
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_context_builder_pattern",
          "line": 152
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_dry_run",
          "line": 78
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_context_builder_pattern",
          "line": 152
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_iteration",
          "line": 72
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_context_builder_pattern",
          "line": 152
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_session_id",
          "line": 66
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_context_builder_pattern",
          "line": 152
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_env_vars",
          "line": 164
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_env_vars",
          "line": 164
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::add_env_var",
          "line": 90
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_metadata",
          "line": 172
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_metadata",
          "line": 172
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::add_metadata",
          "line": 100
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_path_resolution",
          "line": 180
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_path_resolution",
          "line": 180
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::resolve_path",
          "line": 117
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_path_resolution",
          "line": 180
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::resolve_path",
          "line": 117
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_with_executor",
          "line": 191
        },
        "callee": {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::new",
          "line": 112
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_with_executor",
          "line": 191
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_executor",
          "line": 60
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/commands/context.rs",
          "name": "tests::test_with_executor",
          "line": 191
        },
        "callee": {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::new",
          "line": 303
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::default",
          "line": 337
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::new",
          "line": 303
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::env",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::build",
          "line": 82
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::is_transient_error",
          "line": 316
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        "callee": {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::check_availability",
          "line": 32
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::claude",
          "line": 183
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::code_review",
          "line": 464
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::code_review",
          "line": 464
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::code_review",
          "line": 464
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::implement_spec",
          "line": 492
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::implement_spec",
          "line": 492
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::implement_spec",
          "line": 492
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::lint",
          "line": 527
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::lint",
          "line": 527
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::lint",
          "line": 527
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_success_response",
          "line": 582
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_response",
          "line": 577
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_error_response",
          "line": 592
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_response",
          "line": 577
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::get_called_commands",
          "line": 602
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::default",
          "line": 608
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 615
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 615
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::remove",
          "line": 77
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 646
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 615
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 646
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::implement_spec",
          "line": 664
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 615
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::implement_spec",
          "line": 664
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::lint",
          "line": 689
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 615
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::lint",
          "line": 689
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_client",
          "line": 709
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_client",
          "line": 709
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_success_response",
          "line": 582
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_client",
          "line": 709
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_success_response",
          "line": 582
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_client",
          "line": 709
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 646
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_client",
          "line": 709
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::implement_spec",
          "line": 664
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_client",
          "line": 709
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::get_called_commands",
          "line": 602
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_unavailable",
          "line": 732
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_unavailable",
          "line": 732
        },
        "callee": {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::check_availability",
          "line": 161
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_unavailable",
          "line": 732
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 646
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_error_response",
          "line": 746
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_error_response",
          "line": 746
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_error_response",
          "line": 592
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_error_response",
          "line": 746
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 646
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_add_error_response",
          "line": 770
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_add_error_response",
          "line": 770
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_error_response",
          "line": 592
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_add_error_response",
          "line": 770
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 615
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_add_success_response",
          "line": 783
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_add_success_response",
          "line": 783
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_success_response",
          "line": 582
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_add_success_response",
          "line": 783
        },
        "callee": {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 615
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::new",
          "line": 63
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::default",
          "line": 81
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::new",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::get_last_commit_message",
          "line": 117
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::check_git_status",
          "line": 124
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::stage_all_changes",
          "line": 131
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::create_commit",
          "line": 136
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::suppress_stderr",
          "line": 77
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command_in_dir",
          "line": 162
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command_in_dir",
          "line": 162
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command_in_dir",
          "line": 162
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command_in_dir",
          "line": 162
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command_in_dir",
          "line": 162
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command_in_dir",
          "line": 162
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command_in_dir",
          "line": 162
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command_in_dir",
          "line": 162
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::create_worktree",
          "line": 199
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::get_current_branch",
          "line": 208
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::switch_branch",
          "line": 215
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_error_response",
          "line": 260
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::get_called_commands",
          "line": 266
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::default",
          "line": 272
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::new",
          "line": 236
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::remove",
          "line": 77
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::get_last_commit_message",
          "line": 292
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::check_git_status",
          "line": 299
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::stage_all_changes",
          "line": 306
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::create_commit",
          "line": 311
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::create_worktree",
          "line": 321
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::get_current_branch",
          "line": 330
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::switch_branch",
          "line": 337
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command_in_dir",
          "line": 342
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_operations",
          "line": 358
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_operations",
          "line": 358
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_operations",
          "line": 358
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_operations",
          "line": 358
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_last_commit_message",
          "line": 194
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_operations",
          "line": 358
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::check_git_status",
          "line": 202
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_operations",
          "line": 358
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::get_called_commands",
          "line": 266
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_error",
          "line": 382
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_error",
          "line": 382
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_error_response",
          "line": 260
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_error",
          "line": 382
        },
        "callee": {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_last_commit_message",
          "line": 194
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::suppress_stderr",
          "line": 77
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        "callee": {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_git_command_success",
          "line": 442
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::new",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_git_command_success",
          "line": 442
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_git_command_failure",
          "line": 455
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::new",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_git_command_failure",
          "line": 455
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_stage_all_changes_and_commit",
          "line": 470
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::new",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_stage_all_changes_and_commit",
          "line": 470
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_stage_all_changes_and_commit",
          "line": 470
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::check_git_status",
          "line": 124
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_get_current_branch",
          "line": 489
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::new",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_get_current_branch",
          "line": 489
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_get_current_branch",
          "line": 489
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::get_current_branch",
          "line": 208
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_create_worktree_invalid_path",
          "line": 526
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::new",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_create_worktree_invalid_path",
          "line": 526
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_create_worktree_invalid_path",
          "line": 526
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::create_worktree",
          "line": 199
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::get",
          "line": 36
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::cache_path",
          "line": 121
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::get",
          "line": 36
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::set",
          "line": 63
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::cache_path",
          "line": 121
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::remove",
          "line": 77
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::cache_path",
          "line": 121
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::remove",
          "line": 77
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::exists",
          "line": 128
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::cache_path",
          "line": 121
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::exists",
          "line": 128
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::default",
          "line": 60
        },
        "callee": {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::new",
          "line": 40
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::load_or_create",
          "line": 98
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::load_or_create",
          "line": 98
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::record_session",
          "line": 74
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::save",
          "line": 50
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::load_or_create",
          "line": 98
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::load_or_create",
          "line": 98
        },
        "callee": {
          "file": "./src/simple_state/types.rs",
          "name": "State::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::load_or_create",
          "line": 98
        },
        "callee": {
          "file": "./src/simple_state/types.rs",
          "name": "State::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::load_or_create",
          "line": 98
        },
        "callee": {
          "file": "./src/simple_state/types.rs",
          "name": "State::new",
          "line": 28
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::get_history",
          "line": 141
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_manager_creation",
          "line": 10
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_persistence",
          "line": 19
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_persistence",
          "line": 19
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_persistence",
          "line": 19
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::state_mut",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_persistence",
          "line": 19
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::save",
          "line": 126
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_persistence",
          "line": 19
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_recording",
          "line": 38
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_recording",
          "line": 38
        },
        "callee": {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::new",
          "line": 40
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_recording",
          "line": 38
        },
        "callee": {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::complete",
          "line": 51
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_recording",
          "line": 38
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::record_session",
          "line": 74
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager",
          "line": 50
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::with_config",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager",
          "line": 50
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::set",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager",
          "line": 50
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager",
          "line": 50
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager",
          "line": 50
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::clear",
          "line": 86
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager",
          "line": 50
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_expiration",
          "line": 86
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::with_config",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_expiration",
          "line": 86
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::set",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_expiration",
          "line": 86
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_corruption_recovery",
          "line": 104
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_corruption_recovery",
          "line": 104
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_retrieval",
          "line": 131
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_retrieval",
          "line": 131
        },
        "callee": {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::new",
          "line": 40
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_retrieval",
          "line": 131
        },
        "callee": {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::complete",
          "line": 51
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_retrieval",
          "line": 131
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::record_session",
          "line": 74
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_retrieval",
          "line": 131
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::get_history",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_concurrent_state_access",
          "line": 148
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_concurrent_state_access",
          "line": 148
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_concurrent_state_access",
          "line": 148
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::state_mut",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_concurrent_state_access",
          "line": 148
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::save",
          "line": 126
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_concurrent_state_access",
          "line": 148
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_concurrent_state_access",
          "line": 148
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_record_edge_cases",
          "line": 189
        },
        "callee": {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::new",
          "line": 40
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_record_edge_cases",
          "line": 189
        },
        "callee": {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::complete",
          "line": 51
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_record_edge_cases",
          "line": 189
        },
        "callee": {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::new",
          "line": 40
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_record_edge_cases",
          "line": 189
        },
        "callee": {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::complete",
          "line": 51
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_record_edge_cases",
          "line": 189
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager_edge_cases",
          "line": 205
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::with_config",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager_edge_cases",
          "line": 205
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager_edge_cases",
          "line": 205
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::set",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager_edge_cases",
          "line": 205
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager_edge_cases",
          "line": 205
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::set",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager_edge_cases",
          "line": 205
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_file_permissions",
          "line": 228
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_file_permissions",
          "line": 228
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::state_mut",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_file_permissions",
          "line": 228
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::save",
          "line": 126
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_invalid_root_directory",
          "line": 247
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_sorting",
          "line": 254
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_sorting",
          "line": 254
        },
        "callee": {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::new",
          "line": 40
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_sorting",
          "line": 254
        },
        "callee": {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::complete",
          "line": 51
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_sorting",
          "line": 254
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::record_session",
          "line": 74
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_sorting",
          "line": 254
        },
        "callee": {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::get_history",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_cleanup",
          "line": 277
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::with_config",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_cleanup",
          "line": 277
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_cleanup",
          "line": 277
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::set",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_cleanup",
          "line": 277
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::clear",
          "line": 86
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_corrupted_cache_entry",
          "line": 305
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::with_config",
          "line": 27
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_corrupted_cache_entry",
          "line": 305
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_corrupted_cache_entry",
          "line": 305
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_line_entry",
          "line": 22
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_line_entry",
          "line": 22
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_header_line",
          "line": 34
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_line_entry",
          "line": 22
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_line",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_line_entry",
          "line": 22
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_renamed_line",
          "line": 101
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_line_entry",
          "line": 22
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_unmerged_line",
          "line": 119
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_line_entry",
          "line": 22
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_untracked_line",
          "line": 46
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_untracked_line",
          "line": 46
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_diff_output",
          "line": 132
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::new",
          "line": 101
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_diff_output",
          "line": 132
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_diff_output",
          "line": 132
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_diff_output",
          "line": 132
        },
        "callee": {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_worktree_list",
          "line": 172
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_worktree_list",
          "line": 172
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "finalize_worktree",
          "line": 195
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_worktree_list",
          "line": 172
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "finalize_worktree",
          "line": 195
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_worktree_list",
          "line": 172
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "create_worktree_from_line",
          "line": 201
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_worktree_list",
          "line": 172
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "update_worktree_info",
          "line": 224
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "parse_worktree_list",
          "line": 172
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "finalize_worktree",
          "line": 195
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "create_worktree_from_line",
          "line": 201
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "extract_worktree_name",
          "line": 217
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "create_worktree_from_line",
          "line": 201
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "update_worktree_info",
          "line": 224
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "update_worktree_info",
          "line": 224
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_status_output_clean",
          "line": 245
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_status_output_with_changes",
          "line": 258
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_status_output_renamed",
          "line": 279
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_status_output_conflict",
          "line": 290
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_diff_output",
          "line": 301
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_diff_output",
          "line": 132
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_worktree_list",
          "line": 324
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_worktree_list",
          "line": 172
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_git_status_helper_methods",
          "line": 358
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_git_status_helper_methods",
          "line": 358
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::all_changed_files",
          "line": 70
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_commit_id",
          "line": 374
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_commit_id",
          "line": 374
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::all_changed_files",
          "line": 70
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::default",
          "line": 83
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::default",
          "line": 121
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::new",
          "line": 101
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/types.rs",
          "name": "CommitId::from",
          "line": 212
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/types.rs",
          "name": "CommitId::from",
          "line": 218
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "callee": {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "callee": {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "callee": {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::is_repository",
          "line": 125
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::is_repository",
          "line": 125
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_status",
          "line": 132
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_status",
          "line": 132
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_status",
          "line": 132
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_current_branch",
          "line": 144
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_current_branch",
          "line": 144
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_current_branch",
          "line": 144
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_commit_message",
          "line": 161
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_commit_message",
          "line": 161
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::list_files",
          "line": 173
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::list_files",
          "line": 173
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_diff",
          "line": 187
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_diff",
          "line": 187
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_diff",
          "line": 187
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_diff_output",
          "line": 132
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_last_commit_message",
          "line": 200
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_commit_message",
          "line": 161
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::is_clean",
          "line": 204
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_status",
          "line": 132
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::is_clean",
          "line": 204
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::is_clean",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::init_repository",
          "line": 212
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::init_repository",
          "line": 212
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::stage_files",
          "line": 222
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::stage_files",
          "line": 222
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::stage_files",
          "line": 222
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::stage_files",
          "line": 222
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::stage_all",
          "line": 244
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::stage_all",
          "line": 244
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::commit",
          "line": 254
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::commit",
          "line": 254
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::commit",
          "line": 254
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::commit",
          "line": 254
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::create_branch",
          "line": 273
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::create_branch",
          "line": 273
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::switch_branch",
          "line": 286
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::switch_branch",
          "line": 286
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::delete_branch",
          "line": 302
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::delete_branch",
          "line": 302
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::create_worktree",
          "line": 318
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::create_worktree",
          "line": 318
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::remove_worktree",
          "line": 334
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::remove_worktree",
          "line": 334
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::list_worktrees",
          "line": 349
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::list_worktrees",
          "line": 349
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::list_worktrees",
          "line": 349
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_worktree_list",
          "line": 172
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::prune_worktrees",
          "line": 361
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::prune_worktrees",
          "line": 361
        },
        "callee": {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::new",
          "line": 29
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::new",
          "line": 101
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_repository_success",
          "line": 389
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_repository_success",
          "line": 389
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_repository_success",
          "line": 389
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::is_repository",
          "line": 125
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_repository_success",
          "line": 389
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_calls",
          "line": 92
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_repository_failure",
          "line": 415
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_repository_failure",
          "line": 415
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_repository_failure",
          "line": 415
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::is_repository",
          "line": 125
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_current_branch",
          "line": 435
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_current_branch",
          "line": 435
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_current_branch",
          "line": 435
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::get_current_branch",
          "line": 330
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_current_branch_detached_head",
          "line": 455
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_current_branch_detached_head",
          "line": 455
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_current_branch_detached_head",
          "line": 455
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::get_current_branch",
          "line": 330
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_stage_all",
          "line": 478
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_stage_all",
          "line": 478
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_stage_all",
          "line": 478
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::stage_all",
          "line": 450
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_stage_all",
          "line": 478
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_calls",
          "line": 92
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::commit",
          "line": 254
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_calls",
          "line": 92
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_nothing_to_commit",
          "line": 532
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_nothing_to_commit",
          "line": 532
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_nothing_to_commit",
          "line": 532
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::commit",
          "line": 254
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_status",
          "line": 555
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_status",
          "line": 555
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_status",
          "line": 555
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_status",
          "line": 374
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_list_files",
          "line": 577
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_list_files",
          "line": 577
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_list_files",
          "line": 577
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::list_files",
          "line": 173
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_clean",
          "line": 600
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_clean",
          "line": 600
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_clean",
          "line": 600
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::is_clean",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_create_branch",
          "line": 620
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_create_branch",
          "line": 620
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_create_branch",
          "line": 620
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::create_branch",
          "line": 469
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_create_branch",
          "line": 620
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_calls",
          "line": 92
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_switch_branch",
          "line": 645
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_switch_branch",
          "line": 645
        },
        "callee": {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_switch_branch",
          "line": 645
        },
        "callee": {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::switch_branch",
          "line": 286
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/mod.rs",
          "name": "tests::test_switch_branch",
          "line": 645
        },
        "callee": {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_calls",
          "line": 92
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenario::default",
          "line": 279
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_clean_repo",
          "line": 68
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_clean_repo",
          "line": 68
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_clean_repo",
          "line": 68
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::set_scenario",
          "line": 60
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_dirty_repo",
          "line": 86
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_dirty_repo",
          "line": 86
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_dirty_repo",
          "line": 86
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::set_scenario",
          "line": 60
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_merge_conflict",
          "line": 108
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_merge_conflict",
          "line": 108
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_merge_conflict",
          "line": 108
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::set_scenario",
          "line": 60
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_detached_head",
          "line": 130
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_detached_head",
          "line": 130
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_detached_head",
          "line": 130
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::set_scenario",
          "line": 60
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_non_repository",
          "line": 148
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_non_repository",
          "line": 148
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_non_repository",
          "line": 148
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::set_scenario",
          "line": 60
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_command_log",
          "line": 175
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::clear_command_log",
          "line": 180
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::clear",
          "line": 86
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_scenario",
          "line": 185
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::log_command",
          "line": 195
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_scenario",
          "line": 185
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default_response",
          "line": 224
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default_response",
          "line": 224
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_scenario",
          "line": 185
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default_response",
          "line": 224
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default_response",
          "line": 224
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default_response",
          "line": 224
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default_response",
          "line": 224
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "format_status_output",
          "line": 296
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default_response",
          "line": 224
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "CommitId::hash",
          "line": 186
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default_response",
          "line": 224
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::is_clean",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default_response",
          "line": 224
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "CommitId::hash",
          "line": 186
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default",
          "line": 273
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenario::default",
          "line": 279
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenario::default",
          "line": 279
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_repository",
          "line": 355
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_scenario",
          "line": 185
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_repository",
          "line": 355
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_repository",
          "line": 355
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_status",
          "line": 374
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_status",
          "line": 374
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_current_branch",
          "line": 381
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_current_branch",
          "line": 381
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_commit_message",
          "line": 393
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::list_files",
          "line": 400
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_diff",
          "line": 408
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_diff",
          "line": 408
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_diff_output",
          "line": 132
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_last_commit_message",
          "line": 416
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_commit_message",
          "line": 393
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_clean",
          "line": 420
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_status",
          "line": 374
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_clean",
          "line": 420
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitStatus::is_clean",
          "line": 45
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::init_repository",
          "line": 428
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::stage_files",
          "line": 433
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::stage_files",
          "line": 433
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::stage_files",
          "line": 433
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::stage_all",
          "line": 450
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::commit",
          "line": 455
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::commit",
          "line": 455
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::commit",
          "line": 455
        },
        "callee": {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::create_branch",
          "line": 469
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::switch_branch",
          "line": 474
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::delete_branch",
          "line": 479
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::create_worktree",
          "line": 487
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::remove_worktree",
          "line": 494
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::list_worktrees",
          "line": 500
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::list_worktrees",
          "line": 500
        },
        "callee": {
          "file": "./src/git/parsers.rs",
          "name": "parse_worktree_list",
          "line": 172
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::prune_worktrees",
          "line": 507
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_clean_repo",
          "line": 522
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_clean_repo",
          "line": 522
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_clean_repo",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_clean_repo",
          "line": 522
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_repository",
          "line": 355
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_clean_repo",
          "line": 522
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_status",
          "line": 374
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_clean_repo",
          "line": 522
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_current_branch",
          "line": 381
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_clean_repo",
          "line": 522
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_clean",
          "line": 420
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_dirty_repo",
          "line": 542
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_dirty_repo",
          "line": 542
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_dirty_repo",
          "line": 86
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_dirty_repo",
          "line": 542
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_status",
          "line": 374
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_dirty_repo",
          "line": 542
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_clean",
          "line": 420
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_merge_conflict",
          "line": 557
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_merge_conflict",
          "line": 557
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_merge_conflict",
          "line": 108
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_merge_conflict",
          "line": 557
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_status",
          "line": 374
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_detached_head",
          "line": 569
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_detached_head",
          "line": 569
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_detached_head",
          "line": 130
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_detached_head",
          "line": 569
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_current_branch",
          "line": 381
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_non_repository",
          "line": 582
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_non_repository",
          "line": 582
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_non_repository",
          "line": 148
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_non_repository",
          "line": 582
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_repository",
          "line": 355
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_custom_response",
          "line": 592
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_custom_response",
          "line": 592
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::when_command",
          "line": 166
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_custom_response",
          "line": 592
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_last_commit_message",
          "line": 416
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_command_logging",
          "line": 608
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_command_logging",
          "line": 608
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_clean_repo",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_command_logging",
          "line": 608
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_repository",
          "line": 355
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_command_logging",
          "line": 608
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_current_branch",
          "line": 381
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_command_logging",
          "line": 608
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_command_log",
          "line": 175
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_commit_nothing_to_commit",
          "line": 623
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_commit_nothing_to_commit",
          "line": 623
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_clean_repo",
          "line": 68
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_commit_nothing_to_commit",
          "line": 623
        },
        "callee": {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::commit",
          "line": 455
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/events.rs",
          "name": "tests::test_timestamped_event",
          "line": 149
        },
        "callee": {
          "file": "./src/session/events.rs",
          "name": "TimestampedEvent::new",
          "line": 75
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/events.rs",
          "name": "tests::test_timestamped_event",
          "line": 149
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/config.rs",
          "name": "tests::test_session_options",
          "line": 90
        },
        "callee": {
          "file": "./src/session/config.rs",
          "name": "SessionOptions::from_flags",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/persistence.rs",
          "name": "PersistedSession::is_resumable",
          "line": 43
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "SessionState::is_terminal",
          "line": 114
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/persistence.rs",
          "name": "PersistedSession::is_resumable",
          "line": 43
        },
        "callee": {
          "file": "./src/session/persistence.rs",
          "name": "PersistedSession::latest_checkpoint",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/persistence.rs",
          "name": "PersistedSession::last_iteration",
          "line": 52
        },
        "callee": {
          "file": "./src/session/persistence.rs",
          "name": "PersistedSession::latest_checkpoint",
          "line": 38
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/persistence.rs",
          "name": "tests::test_persisted_session",
          "line": 62
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::new",
          "line": 32
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/persistence.rs",
          "name": "tests::test_persisted_session",
          "line": 62
        },
        "callee": {
          "file": "./src/session/config.rs",
          "name": "SessionConfig::default",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::notify_observers",
          "line": 77
        },
        "callee": {
          "file": "./src/session/events.rs",
          "name": "LoggingObserver::on_event",
          "line": 113
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::start_workflow",
          "line": 382
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::start_iteration",
          "line": 387
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::complete_iteration",
          "line": 35
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::complete_iteration",
          "line": 35
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::get_workflow_timing",
          "line": 408
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::all_commits",
          "line": 374
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::success_rate",
          "line": 365
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "callee": {
          "file": "./src/session/events.rs",
          "name": "TimestampedEvent::new",
          "line": 75
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::create_session",
          "line": 171
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::new",
          "line": 32
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::create_session",
          "line": 171
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::new",
          "line": 332
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        "callee": {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::notify_observers",
          "line": 77
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_state",
          "line": 213
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_state",
          "line": 213
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_progress",
          "line": 221
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_progress",
          "line": 221
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::list_active_sessions",
          "line": 243
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "SessionState::is_terminal",
          "line": 114
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::list_active_sessions",
          "line": 243
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::list_active_sessions",
          "line": 243
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::list_active_sessions",
          "line": 243
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::list_active_sessions",
          "line": 243
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "SessionState::is_terminal",
          "line": 114
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::save",
          "line": 126
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::restore_session",
          "line": 292
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::load",
          "line": 134
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::restore_session",
          "line": 292
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::new",
          "line": 332
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::restore_session",
          "line": 292
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::restore_session",
          "line": 292
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::restore_session",
          "line": 292
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::restore_session",
          "line": 292
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_session_lifecycle",
          "line": 344
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_session_lifecycle",
          "line": 344
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::create_session",
          "line": 171
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_session_lifecycle",
          "line": 344
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_session_lifecycle",
          "line": 344
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_state",
          "line": 213
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_session_lifecycle",
          "line": 344
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_session_lifecycle",
          "line": 344
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_session_lifecycle",
          "line": 344
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_session_lifecycle",
          "line": 344
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_state",
          "line": 213
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_concurrent_sessions",
          "line": 393
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_concurrent_sessions",
          "line": 393
        },
        "callee": {
          "file": "./src/session/config.rs",
          "name": "SessionConfig::default",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_concurrent_sessions",
          "line": 393
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::create_session",
          "line": 171
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_concurrent_sessions",
          "line": 393
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::create_session",
          "line": 171
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_concurrent_sessions",
          "line": 393
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_concurrent_sessions",
          "line": 393
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_concurrent_sessions",
          "line": 393
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::list_active_sessions",
          "line": 243
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_concurrent_sessions",
          "line": 393
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/manager.rs",
          "name": "tests::test_concurrent_sessions",
          "line": 393
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::list_active_sessions",
          "line": 243
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::default",
          "line": 48
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::new",
          "line": 32
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::start_iteration",
          "line": 387
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "IterationTiming::new",
          "line": 219
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::complete_iteration",
          "line": 393
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "IterationTiming::complete",
          "line": 230
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::record_command_timing",
          "line": 401
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "IterationTiming::add_command_timing",
          "line": 242
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::get_workflow_timing",
          "line": 408
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "WorkflowTiming::from_iterations",
          "line": 259
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/state.rs",
          "name": "tests::test_session_progress",
          "line": 455
        },
        "callee": {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::new",
          "line": 332
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        "callee": {
          "file": "./src/session/config.rs",
          "name": "SessionConfig::default",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::create_session",
          "line": 171
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_state",
          "line": 213
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_state",
          "line": 213
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_state",
          "line": 213
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_state",
          "line": 213
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_state",
          "line": 213
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_concurrent_sessions",
          "line": 53
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_concurrent_sessions",
          "line": 53
        },
        "callee": {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_concurrent_sessions",
          "line": 53
        },
        "callee": {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_concurrent_sessions",
          "line": 53
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_concurrent_sessions",
          "line": 53
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_concurrent_sessions",
          "line": 53
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::new",
          "line": 32
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::create_session",
          "line": 171
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::restore_session",
          "line": 292
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_state",
          "line": 213
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_progress",
          "line": 221
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_progress_tracking",
          "line": 214
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_progress_tracking",
          "line": 214
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::create_session",
          "line": 171
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_progress_tracking",
          "line": 214
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_progress_tracking",
          "line": 214
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_progress_tracking",
          "line": 214
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_progress_tracking",
          "line": 214
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_session_progress_tracking",
          "line": 214
        },
        "callee": {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_progress",
          "line": 221
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::new",
          "line": 32
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::from_string",
          "line": 37
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        "callee": {
          "file": "./src/session/config.rs",
          "name": "SessionConfig::default",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        "callee": {
          "file": "./src/session/events.rs",
          "name": "TimestampedEvent::new",
          "line": 75
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        "callee": {
          "file": "./src/session/config.rs",
          "name": "SessionConfig::default",
          "line": 18
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        "callee": {
          "file": "./src/session/events.rs",
          "name": "TimestampedEvent::new",
          "line": 75
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::save",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::list",
          "line": 69
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::load",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::delete",
          "line": 90
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::list",
          "line": 69
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::save",
          "line": 44
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::session_path",
          "line": 37
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::load",
          "line": 56
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::session_path",
          "line": 37
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::load",
          "line": 56
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::list",
          "line": 69
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::from_string",
          "line": 37
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::delete",
          "line": 90
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::session_path",
          "line": 37
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::delete",
          "line": 90
        },
        "callee": {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::default",
          "line": 109
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::new",
          "line": 116
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::save",
          "line": 126
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::save",
          "line": 126
        },
        "callee": {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::load",
          "line": 134
        },
        "callee": {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::delete",
          "line": 142
        },
        "callee": {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::remove",
          "line": 77
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "tests::test_file_storage",
          "line": 154
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::new",
          "line": 32
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "tests::test_file_storage",
          "line": 154
        },
        "callee": {
          "file": "./src/session/mod.rs",
          "name": "SessionId::from_string",
          "line": 37
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "tests::test_file_storage",
          "line": 154
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::save",
          "line": 44
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "tests::test_file_storage",
          "line": 154
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::load",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "tests::test_file_storage",
          "line": 154
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::list",
          "line": 69
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "tests::test_file_storage",
          "line": 154
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::delete",
          "line": 90
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/storage.rs",
          "name": "tests::test_file_storage",
          "line": 154
        },
        "callee": {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::load",
          "line": 56
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::default",
          "line": 80
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::new",
          "line": 21
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/timing.rs",
          "name": "tests::test_timing_tracker",
          "line": 115
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::new",
          "line": 21
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/timing.rs",
          "name": "tests::test_timing_tracker",
          "line": 115
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::start_iteration",
          "line": 30
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/timing.rs",
          "name": "tests::test_timing_tracker",
          "line": 115
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::start_command",
          "line": 42
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/timing.rs",
          "name": "tests::test_timing_tracker",
          "line": 115
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::complete_command",
          "line": 48
        },
        "call_type": "Direct"
      },
      {
        "caller": {
          "file": "./src/session/timing.rs",
          "name": "tests::test_timing_tracker",
          "line": 115
        },
        "callee": {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::complete_iteration",
          "line": 35
        },
        "call_type": "Direct"
      }
    ],
    "caller_index": {
      "./src/commands/mod.rs:MockHandler::name:94": [
        {
          "file": "./src/commands/handlers/mod.rs",
          "name": "tests::test_all_handlers",
          "line": 31
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::register_sync",
          "line": 50
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::register",
          "line": 39
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystem::new:23": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::default",
          "line": 17
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_basic_operations",
          "line": 216
        }
      ],
      "./src/testing/mod.rs:TestContext::new:34": [
        {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_context_creation",
          "line": 297
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_workflow_configuration",
          "line": 212
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_create_test_file",
          "line": 303
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_claude_cli_not_available",
          "line": 50
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_successful_improvement_loop",
          "line": 15
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::warning:188": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_warning",
          "line": 120
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_warning",
          "line": 521
        }
      ],
      "./src/testing/mocks/claude.rs:MockClaudeClientBuilder::unavailable:51": [
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::unavailable_claude",
          "line": 56
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_unavailable",
          "line": 265
        }
      ],
      "./src/commands/handlers/cargo.rs:CargoHandler::new:16": [
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_handler_schema",
          "line": 244
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::with_defaults",
          "line": 22
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::default",
          "line": 226
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_test_with_features",
          "line": 287
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_dry_run",
          "line": 322
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_build",
          "line": 254
        },
        {
          "file": "./src/commands/handlers/mod.rs",
          "name": "all_handlers",
          "line": 16
        }
      ],
      "./src/testing/helpers/mod.rs:create_test_repo:10": [
        {
          "file": "./src/testing/helpers/mod.rs",
          "name": "tests::test_create_test_repo",
          "line": 153
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::cleanup_session_after_merge:766": [
        {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_merged_sessions",
          "line": 727
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_cleanup_session_after_merge_not_merged",
          "line": 969
        }
      ],
      "./src/testing/helpers/assertions.rs:assert_not_contains:115": [
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_contains",
          "line": 187
        }
      ],
      "./src/cook/coordinators/session.rs:DefaultSessionCoordinator::update_status:73": [
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::complete_session",
          "line": 86
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_session_lifecycle",
          "line": 210
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_update_status",
          "line": 48
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_get_session_info",
          "line": 151
        }
      ],
      "./src/abstractions/claude.rs:RealClaudeClient::code_review:464": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_unavailable",
          "line": 265
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_fail_after",
          "line": 275
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_builder",
          "line": 249
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_rate_limit_handling",
          "line": 81
        }
      ],
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::convert_to_workflow_step:119": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_convert_to_workflow_step_integration",
          "line": 434
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        }
      ],
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::create_default_workflow_step:100": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_create_default_workflow_step",
          "line": 414
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::convert_to_workflow_step",
          "line": 119
        }
      ],
      "./src/cook/execution/runner.rs:MockCommandRunner::new:173": [
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_command_execution",
          "line": 222
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::default",
          "line": 167
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_check",
          "line": 192
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_mock_command_runner",
          "line": 213
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_version",
          "line": 207
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator_with_config",
          "line": 1612
        }
      ],
      "./src/cook/session/migration.rs:create_full_featured_manager:14": [
        {
          "file": "./src/cook/session/migration.rs",
          "name": "example_recovery",
          "line": 106
        },
        {
          "file": "./src/cook/session/migration.rs",
          "name": "example_migration",
          "line": 34
        },
        {
          "file": "./src/cook/session/migration.rs",
          "name": "tests::test_migration_example",
          "line": 153
        }
      ],
      "./src/session/mod.rs:SessionId::new:32": [
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::default",
          "line": 48
        },
        {
          "file": "./src/session/persistence.rs",
          "name": "tests::test_persisted_session",
          "line": 62
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::create_session",
          "line": 171
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperationsBuilder::with_commit_message:77": [
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::clean_git_repo",
          "line": 17
        },
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::dirty_git_repo",
          "line": 25
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_with_classifier",
          "line": 369
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_builder",
          "line": 318
        }
      ],
      "./src/git/parsers.rs:parse_status_output:8": [
        {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_status_output_renamed",
          "line": 279
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_status",
          "line": 132
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_status_output_conflict",
          "line": 290
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_status_output_clean",
          "line": 245
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_status_output_with_changes",
          "line": 258
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_status",
          "line": 374
        }
      ],
      "./src/simple_state/types.rs:State::new:28": [
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::load_or_create",
          "line": 98
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::new:101": [
        {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        }
      ],
      "./src/git/parsers.rs:update_worktree_info:224": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_worktree_list",
          "line": 172
        }
      ],
      "./src/testing/mod.rs:MockClaudeBuilder::new:166": [
        {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::default",
          "line": 159
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::rate_limited_claude",
          "line": 236
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::successful_claude",
          "line": 223
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_mock_builders",
          "line": 315
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::process_glob_pattern:971": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_process_glob_pattern_matches_files",
          "line": 2411
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_process_glob_pattern_recursive",
          "line": 2435
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::collect_workflow_inputs",
          "line": 946
        }
      ],
      "./src/testing/config.rs:TestConfigurations::with_no_changes:153": [
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_common_configurations",
          "line": 230
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_map_phase:406": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::should_stop_early_in_test_mode:1349": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        }
      ],
      "./src/session/state.rs:SessionProgress::success_rate:365": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        }
      ],
      "./src/subprocess/mod.rs:SubprocessManager::production:119": [
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_command_failure",
          "line": 98
        },
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_claude_success",
          "line": 117
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_uuid_name",
          "line": 81
        },
        {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_success",
          "line": 14
        },
        {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_not_a_repo",
          "line": 35
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::new",
          "line": 298
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_success",
          "line": 602
        },
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_command_success",
          "line": 76
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_success",
          "line": 1046
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_empty",
          "line": 191
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_increments_iteration",
          "line": 1109
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_not_git_repo",
          "line": 550
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_error_handling",
          "line": 198
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_with_existing_commands",
          "line": 402
        },
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_with_retry",
          "line": 154
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_already_initialized",
          "line": 634
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::new",
          "line": 63
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::new",
          "line": 303
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_specific_commands",
          "line": 478
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_cleanup_session_after_merge_not_merged",
          "line": 969
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_merge_session_claude_cli_failure",
          "line": 892
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_claude_merge_command_construction",
          "line": 853
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_already_merged",
          "line": 177
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_worktree_manager_creation",
          "line": 37
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_create_commands",
          "line": 368
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_with_symlinks",
          "line": 565
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_gitignore_creation",
          "line": 106
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::new",
          "line": 31
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_updates",
          "line": 71
        },
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_claude_failure",
          "line": 137
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_merge_session_success",
          "line": 874
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_is_git_repository",
          "line": 314
        },
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_check_command_available",
          "line": 180
        },
        {
          "file": "./src/main.rs",
          "name": "run_worktree_command",
          "line": 395
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_force_overwrite",
          "line": 440
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_sessions",
          "line": 98
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_file_creation",
          "line": 38
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        }
      ],
      "./src/testing/mod.rs:MockClaudeBuilder::with_error:185": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_builder",
          "line": 249
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::rate_limited_claude",
          "line": 236
        },
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::rate_limited_claude",
          "line": 48
        },
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_builder",
          "line": 147
        }
      ],
      "./src/commands/context.rs:ExecutionContext::with_executor:60": [
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_execute",
          "line": 168
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_execute",
          "line": 226
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_test_with_features",
          "line": 287
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_status",
          "line": 250
        },
        {
          "file": "./src/commands/context.rs",
          "name": "tests::test_with_executor",
          "line": 191
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_build",
          "line": 254
        }
      ],
      "./src/testing/test_mocks.rs:GitMocks::status_clean:118": [
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        }
      ],
      "./src/git/parsers.rs:parse_header_line:34": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_line_entry",
          "line": 22
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::determine_command_type:1198": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        }
      ],
      "./src/cook/execution/data_pipeline.rs:Sorter::compare_json_values:838": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::compare_values",
          "line": 817
        }
      ],
      "./src/config/command.rs:Command::with_env:466": [
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_serialization_roundtrip",
          "line": 369
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_variable_expansion",
          "line": 320
        }
      ],
      "./src/testing/mod.rs:TestContext::temp_path:97": [
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_workflow_configuration",
          "line": 212
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_workflow_with_args:878": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute:1388": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 1388
        }
      ],
      "./src/config/command.rs:tests::debug_workflow_parsing_error:837": [
        {
          "file": "./src/config/command.rs",
          "name": "tests::parse_test_workflow_config",
          "line": 813
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::is_repository:355": [
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_clean_repo",
          "line": 522
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_command_logging",
          "line": 608
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_non_repository",
          "line": 582
        }
      ],
      "./src/git/types.rs:CommitId::new:181": [
        {
          "file": "./src/git/types.rs",
          "name": "CommitId::from",
          "line": 212
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::commit",
          "line": 455
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_dirty_repo",
          "line": 86
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::commit",
          "line": 254
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_clean_repo",
          "line": 68
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "update_worktree_info",
          "line": 224
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_detached_head",
          "line": 130
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_non_repository",
          "line": 148
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_merge_conflict",
          "line": 108
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "create_worktree_from_line",
          "line": 201
        },
        {
          "file": "./src/git/types.rs",
          "name": "CommitId::from",
          "line": 218
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_commit_id",
          "line": 374
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenario::default",
          "line": 279
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystem::add_directory:41": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_directory",
          "line": 166
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_basic_operations",
          "line": 216
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_project_structure",
          "line": 171
        }
      ],
      "./src/cook/execution/data_pipeline.rs:DataPipeline::from_config:33": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_pipeline_complete",
          "line": 1009
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::load_work_items_with_pipeline",
          "line": 354
        }
      ],
      "./src/commands/context.rs:ExecutionContext::add_metadata:100": [
        {
          "file": "./src/commands/context.rs",
          "name": "tests::test_metadata",
          "line": 172
        }
      ],
      "./src/config/command.rs:CommandArg::resolve:56": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::build_command",
          "line": 1161
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_variable_resolution_logic",
          "line": 2014
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        }
      ],
      "./src/session/state.rs:SessionProgress::new:332": [
        {
          "file": "./src/session/state.rs",
          "name": "tests::test_session_progress",
          "line": 455
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::restore_session",
          "line": 292
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::create_session",
          "line": 171
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::iteration_start:218": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::iteration_start",
          "line": 140
        }
      ],
      "./src/cook/execution/claude.rs:ClaudeExecutorImpl::get_claude_version:115": [
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_version",
          "line": 207
        }
      ],
      "./src/cook/execution/mod.rs:ExecutionContext::default:37": [
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_command_with_context",
          "line": 140
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_mock_command_runner",
          "line": 213
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::execute_claude_command",
          "line": 55
        }
      ],
      "./src/cook/execution/interpolation.rs:value_to_string:336": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        }
      ],
      "./src/testing/mocks/config.rs:MockConfigLoaderBuilder::new:21": [
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::builder",
          "line": 66
        },
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoaderBuilder::default",
          "line": 15
        }
      ],
      "./src/config/command.rs:tests::parse_test_workflow_config:813": [
        {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_config_with_new_syntax",
          "line": 804
        }
      ],
      "./src/commands/handlers/file.rs:FileHandler::execute:52": [
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_dry_run",
          "line": 386
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_write_and_read",
          "line": 319
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_exists",
          "line": 363
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::handle_test_mode_execution:1152": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        }
      ],
      "./src/config/mapreduce.rs:MapReduceWorkflowConfig::to_reduce_phase:153": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_mapreduce_workflow",
          "line": 1065
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::extract_variables_section:127": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_sections",
          "line": 66
        }
      ],
      "./src/simple_state/state.rs:StateManager::get_history:141": [
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_retrieval",
          "line": 131
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_sorting",
          "line": 254
        }
      ],
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::extract_workflow_step_command:80": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_command_string",
          "line": 69
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_workflow_step_command_shell",
          "line": 341
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_workflow_step_command_claude",
          "line": 322
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_workflow_step_command_empty",
          "line": 383
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_workflow_step_command_test",
          "line": 360
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_workflow_step_command_priority",
          "line": 447
        }
      ],
      "./src/testing/config.rs:TestConfigurations::worktree:161": [
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_common_configurations",
          "line": 230
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_step:1397": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 1397
        }
      ],
      "./src/cook/coordinators/execution.rs:DefaultExecutionCoordinator::check_command_available:188": [
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_check_command_available",
          "line": 180
        }
      ],
      "./src/subprocess/builder.rs:ProcessCommandBuilder::envs:47": [
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        }
      ],
      "./src/cook/execution/claude.rs:ClaudeExecutorImpl::new:37": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_command_execution",
          "line": 222
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_check",
          "line": 192
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_version",
          "line": 207
        }
      ],
      "./src/cook/interaction/display.rs:SimpleSpinnerHandle::update_message:311": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_spinner_lifecycle",
          "line": 536
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_spinner_handle",
          "line": 404
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_spinner",
          "line": 498
        }
      ],
      "./src/cook/coordinators/execution.rs:DefaultExecutionCoordinator::new:78": [
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_claude_failure",
          "line": 137
        },
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_command_failure",
          "line": 98
        },
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_claude_success",
          "line": 117
        },
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_check_command_available",
          "line": 180
        },
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_with_retry",
          "line": 154
        },
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_command_success",
          "line": 76
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::get_session_state:245": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::load_session_state",
          "line": 615
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_success",
          "line": 1046
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_increments_iteration",
          "line": 1109
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::generate_session_id:141": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::setup_environment",
          "line": 216
        }
      ],
      "./src/cook/coordinators/environment.rs:DefaultEnvironmentCoordinator::verify_git_repository:79": [
        {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_not_a_repo",
          "line": 35
        },
        {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_success",
          "line": 14
        },
        {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::prepare_environment",
          "line": 121
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::step_start:265": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_verbosity_filtering",
          "line": 608
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::step_start",
          "line": 148
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperations::git_command:149": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::git_command_in_dir",
          "line": 184
        }
      ],
      "./src/session/storage.rs:FileSessionStorage::delete:90": [
        {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        {
          "file": "./src/session/storage.rs",
          "name": "tests::test_file_storage",
          "line": 154
        }
      ],
      "./src/cook/execution/data_pipeline.rs:JsonPath::compile:187": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_json_path_basic",
          "line": 899
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_json_path_nested",
          "line": 915
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::from_config",
          "line": 33
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::display_progress:128": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_display_formatting",
          "line": 422
        }
      ],
      "./src/cook/interaction/display.rs:SimpleSpinnerHandle::new:302": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::start_spinner",
          "line": 211
        }
      ],
      "./src/testing/helpers/assertions.rs:assert_contains:105": [
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_contains",
          "line": 187
        }
      ],
      "./src/testing/mocks/subprocess.rs:MockSubprocessManagerBuilder::with_default_response:55": [
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_default_response",
          "line": 179
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::new:88": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_verbosity_filtering",
          "line": 608
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::default",
          "line": 82
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::new",
          "line": 91
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_success",
          "line": 553
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_warning",
          "line": 521
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_info",
          "line": 513
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::from_args",
          "line": 99
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_error",
          "line": 529
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::with_verbosity",
          "line": 98
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_spinner_lifecycle",
          "line": 536
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_simple_spinner_handle_fail",
          "line": 560
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_progress",
          "line": 546
        }
      ],
      "./src/testing/mod.rs:test_helpers::create_test_file:275": [
        {
          "file": "./src/testing/mod.rs",
          "name": "test_helpers::create_test_files",
          "line": 285
        }
      ],
      "./src/testing/config.rs:TestConfiguration::builder:44": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_focus_tracking_test",
          "line": 950
        },
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_into_arc",
          "line": 252
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::worktree",
          "line": 161
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::full_test",
          "line": 169
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_test_mode_no_changes_command",
          "line": 904
        },
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_builder_with_all_options",
          "line": 199
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_should_simulate_no_changes",
          "line": 218
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_handle_test_mode_execution_success",
          "line": 870
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::with_no_changes",
          "line": 153
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        }
      ],
      "./src/simple_state/cache.rs:CacheManager::remove:77": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 615
        },
        {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::delete",
          "line": 142
        },
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::execute",
          "line": 141
        }
      ],
      "./src/cook/retry.rs:should_retry_output:84": [
        {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        }
      ],
      "./src/git/parsers.rs:parse_worktree_list:172": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::list_worktrees",
          "line": 500
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_worktree_list",
          "line": 324
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::list_worktrees",
          "line": 349
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::with_non_repository:148": [
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_non_repository",
          "line": 582
        }
      ],
      "./src/subprocess/mock.rs:MockProcessRunner::new:29": [
        {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_parse_errors",
          "line": 270
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::mock",
          "line": 139
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::default",
          "line": 188
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_command_failure",
          "line": 249
        }
      ],
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::should_continue:169": [
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_beyond_limit",
          "line": 232
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_within_limit",
          "line": 188
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_at_limit",
          "line": 210
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_mapreduce:1274": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::get_commit_message:161": [
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_last_commit_message",
          "line": 200
        }
      ],
      "./src/main.rs:handle_list_command:253": [
        {
          "file": "./src/main.rs",
          "name": "run_worktree_command",
          "line": 395
        }
      ],
      "./src/cook/coordinators/environment.rs:DefaultEnvironmentCoordinator::load_configuration:86": [
        {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::prepare_environment",
          "line": 121
        }
      ],
      "./src/init/mod.rs:is_git_repository:76": [
        {
          "file": "./src/init/mod.rs",
          "name": "validate_project_structure",
          "line": 245
        }
      ],
      "./src/config/command_validator.rs:CommandRegistry::validate_option_value:318": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_command",
          "line": 226
        }
      ],
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::prompt_yes_no:80": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::prompt_yes_no",
          "line": 108
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_handler_command:1367": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        }
      ],
      "./src/git/types.rs:GitStatus::is_clean:45": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default_response",
          "line": 224
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_clean",
          "line": 600
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::is_clean",
          "line": 204
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_clean",
          "line": 420
        }
      ],
      "./src/commands/context.rs:ExecutionContext::add_env_var:90": [
        {
          "file": "./src/commands/context.rs",
          "name": "tests::test_env_vars",
          "line": 164
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_handler_command",
          "line": 1367
        }
      ],
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::format_choice_prompt:57": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_format_choice_prompt",
          "line": 271
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_format_choice_prompt_single",
          "line": 288
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_format_choice_prompt_empty",
          "line": 281
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperations::get_staged_files:131": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_staging",
          "line": 345
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::is_git_repo:317": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "is_git_repo",
          "line": 71
        }
      ],
      "./src/cook/session/state.rs:SessionState::fail:82": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_simple_spinner_handle_fail",
          "line": 560
        }
      ],
      "./src/commands/attributes.rs:AttributeValue::as_object:52": [
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::get_status:374": [
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_dirty_repo",
          "line": 542
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_status",
          "line": 555
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_merge_conflict",
          "line": 557
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_clean",
          "line": 420
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_clean_repo",
          "line": 522
        }
      ],
      "./src/testing/config.rs:TestConfigurationBuilder::skip_commit_validation:107": [
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_builder_with_all_options",
          "line": 199
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::full_test",
          "line": 169
        }
      ],
      "./src/session/events.rs:LoggingObserver::on_event:113": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::notify_observers",
          "line": 77
        }
      ],
      "./src/testing/mocks/config.rs:MockConfigLoader::new:59": [
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::default",
          "line": 53
        }
      ],
      "./src/subprocess/adapter.rs:create_output:67": [
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "RealSubprocessExecutor::execute",
          "line": 33
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::save_checkpoint:261": [
        {
          "file": "./src/cook/session/migration.rs",
          "name": "example_migration",
          "line": 34
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::merge_session:330": [
        {
          "file": "./src/main.rs",
          "name": "handle_merge_command",
          "line": 269
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_merge_session_success",
          "line": 874
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_merge_session_claude_cli_failure",
          "line": 892
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::cleanup",
          "line": 440
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::box_chars:122": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::iteration_start",
          "line": 218
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::success:205": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_success",
          "line": 136
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_success",
          "line": 553
        }
      ],
      "./src/cook/interaction/display.rs:MockProgressDisplay::success:383": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_display",
          "line": 479
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::determine_command_type:271": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_test",
          "line": 652
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_claude",
          "line": 602
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_legacy_name",
          "line": 682
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_shell",
          "line": 627
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_multiple_error",
          "line": 707
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::handle_no_commits_error",
          "line": 1224
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_none_error",
          "line": 736
        }
      ],
      "./src/config/command.rs:WorkflowCommand::to_command:344": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::test_commit_required_field",
          "line": 605
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_command_conversion",
          "line": 573
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_structured_workflow_config_parsing",
          "line": 187
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_mixed_workflow_config",
          "line": 217
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "workflow_parsing_tests::test_parse_workflow_with_commit_required",
          "line": 370
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        }
      ],
      "./src/commands/handlers/cargo.rs:CargoHandler::schema:27": [
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_handler_schema",
          "line": 244
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::get_schema",
          "line": 116
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::stage_all:450": [
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_stage_all",
          "line": 478
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::with_merge_conflict:108": [
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_merge_conflict",
          "line": 557
        }
      ],
      "./src/session/state.rs:IterationTiming::add_command_timing:242": [
        {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::record_command_timing",
          "line": 401
        }
      ],
      "./src/cook/coordinators/session.rs:DefaultSessionCoordinator::get_session_info:101": [
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_get_session_info",
          "line": 151
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_session_lifecycle",
          "line": 210
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session",
          "line": 12
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::generate_session_id:90": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_generate_session_id",
          "line": 409
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationEngine::interpolate:43": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_context_inheritance",
          "line": 449
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_map_results",
          "line": 308
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_complex_json_interpolation",
          "line": 472
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::interpolate_workflow_step",
          "line": 775
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_array_indexing",
          "line": 408
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_with_retry",
          "line": 891
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_basic_interpolation",
          "line": 374
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_test_command",
          "line": 1020
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_strict_mode",
          "line": 423
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_work_item",
          "line": 273
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_default_values",
          "line": 420
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_undefined_variable_non_strict",
          "line": 440
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_shell_output",
          "line": 329
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_defaults",
          "line": 348
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_undefined_variable_strict_mode",
          "line": 431
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_nested_property_access",
          "line": 387
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_context_hierarchy",
          "line": 366
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_arrays",
          "line": 393
        }
      ],
      "./src/subprocess/builder.rs:ProcessCommandBuilder::args:31": [
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_command",
          "line": 52
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command_in_dir",
          "line": 162
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_worktree_commits",
          "line": 818
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head",
          "line": 1414
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::check_availability",
          "line": 32
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_respects_working_directory",
          "line": 1730
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::add",
          "line": 121
        },
        {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_test_repo",
          "line": 10
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_is_git_repo",
          "line": 144
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::commit",
          "line": 94
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::is_branch_merged",
          "line": 669
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_default_branch",
          "line": 1127
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::git_in_dir",
          "line": 84
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_parent_to_main",
          "line": 1064
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::log",
          "line": 202
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        {
          "file": "./src/testing/helpers/mod.rs",
          "name": "run_command",
          "line": 81
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_regular_repo",
          "line": 1588
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::validate_parent_state",
          "line": 923
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::run_command",
          "line": 229
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::create_worktree",
          "line": 142
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::remove_worktree",
          "line": 166
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::current_branch",
          "line": 184
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_current_head",
          "line": 1206
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_modified_files",
          "line": 840
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::create_agent_branch",
          "line": 860
        }
      ],
      "./src/commands/context.rs:ExecutionContext::with_dry_run:78": [
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_dry_run",
          "line": 268
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_dry_run",
          "line": 322
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_commit_dry_run",
          "line": 281
        },
        {
          "file": "./src/commands/context.rs",
          "name": "tests::test_context_builder_pattern",
          "line": 152
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_dry_run",
          "line": 386
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_dry_run",
          "line": 200
        }
      ],
      "./src/cook/workflow/executor_tests.rs:MockAnalysisCoordinator::new:134": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        }
      ],
      "./src/config/command.rs:tests::debug_command_sequence:847": [
        {
          "file": "./src/config/command.rs",
          "name": "tests::debug_workflow_parsing_error",
          "line": 837
        }
      ],
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::normalize_command_string:92": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_normalize_command_string_without_slash",
          "line": 408
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_normalize_command_string_with_slash",
          "line": 402
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::convert_to_workflow_step",
          "line": 119
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::parse_sections:66": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_command_file",
          "line": 32
        }
      ],
      "./src/config/mod.rs:get_global_mmm_dir:27": [
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_global_mmm_dir_success",
          "line": 673
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_global_mmm_dir_path_structure",
          "line": 684
        },
        {
          "file": "./src/config/mod.rs",
          "name": "GlobalConfig::default",
          "line": 89
        }
      ],
      "./src/config/command_discovery.rs:CommandDiscovery::clear_cache:104": [
        {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_needs_refresh",
          "line": 196
        }
      ],
      "./src/session/storage.rs:FileSessionStorage::list:69": [
        {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        {
          "file": "./src/session/storage.rs",
          "name": "tests::test_file_storage",
          "line": 154
        }
      ],
      "./src/cook/execution/data_pipeline.rs:Sorter::compare_items:796": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::sort",
          "line": 791
        }
      ],
      "./src/cook/signal_handler.rs:tests::create_test_session_state:87": [
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::test_update_interrupted_state",
          "line": 122
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::test_termination_interrupt",
          "line": 154
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationContext::resolve_in_current:273": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_path",
          "line": 254
        }
      ],
      "./src/subprocess/builder.rs:ProcessCommandBuilder::stdin:71": [
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::format_session_summary:112": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_format_session_summary",
          "line": 476
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::get_last_commit_message:416": [
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_custom_response",
          "line": 592
        }
      ],
      "./src/testing/mocks/workflow.rs:MockWorkflowExecutor::new:28": [
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_empty_commands",
          "line": 529
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_workflow_step_commands",
          "line": 428
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_prompt_user",
          "line": 259
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_simple_commands",
          "line": 304
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_within_limit",
          "line": 188
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_at_limit",
          "line": 210
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_display_progress",
          "line": 282
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_with_variables",
          "line": 337
        },
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::default",
          "line": 21
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_stops_at_max_iterations",
          "line": 500
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_structured_commands",
          "line": 373
        },
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::failing",
          "line": 37
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_beyond_limit",
          "line": 232
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_step",
          "line": 142
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::new:63": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_git_command_success",
          "line": 442
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::default",
          "line": 81
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_get_current_branch",
          "line": 489
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_stage_all_changes_and_commit",
          "line": 470
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_create_worktree_invalid_path",
          "line": 526
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_git_command_failure",
          "line": 455
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_option_value:213": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_strict",
          "line": 118
        }
      ],
      "./src/cook/interaction/display.rs:MockProgressDisplay::iteration_start:398": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_iteration_display",
          "line": 586
        }
      ],
      "./src/cook/interaction/display.rs:MockProgressDisplay::step_end:419": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_step_display",
          "line": 597
        }
      ],
      "./src/testing/mocks/claude.rs:MockClaudeClientBuilder::fail_after:56": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_fail_after",
          "line": 275
        }
      ],
      "./src/cook/mod.rs:create_orchestrator:123": [
        {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_create_orchestrator",
          "line": 404
        }
      ],
      "./src/config/mod.rs:Config::get_claude_api_key:133": [
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_claude_api_key_from_config",
          "line": 432
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_claude_api_key_from_env",
          "line": 441
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_claude_api_key_config_precedence_over_env",
          "line": 462
        }
      ],
      "./src/commands/registry.rs:CommandRegistry::new:15": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_unknown_command",
          "line": 453
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_apply_defaults",
          "line": 461
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::with_defaults",
          "line": 22
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_missing_required_args",
          "line": 445
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_valid_command",
          "line": 431
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::default",
          "line": 123
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::new",
          "line": 58
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_get_handler",
          "line": 187
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_option_types",
          "line": 473
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_registration",
          "line": 171
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_execute",
          "line": 203
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_registry_initialization",
          "line": 420
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_validation",
          "line": 292
        }
      ],
      "./src/subprocess/claude.rs:ClaudeRunnerImpl::run_command:49": [
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_builder",
          "line": 147
        },
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_default_response",
          "line": 179
        }
      ],
      "./src/cook/coordinators/session.rs:DefaultSessionCoordinator::track_iteration:79": [
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_track_iteration",
          "line": 79
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_success",
          "line": 105
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_session_lifecycle",
          "line": 210
        }
      ],
      "./src/cook/interaction/display.rs:MockProgressDisplay::get_messages:349": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_spinner",
          "line": 498
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_command_output_display",
          "line": 620
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_display",
          "line": 479
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_step_display",
          "line": 597
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_iteration_display",
          "line": 586
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_debug_output",
          "line": 629
        }
      ],
      "./src/config/mod.rs:Config::new:103": [
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_config_new_creates_defaults",
          "line": 397
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_merge_env_vars_editor_fallback",
          "line": 601
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_spec_dir",
          "line": 519
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_claude_api_key_precedence",
          "line": 408
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_auto_commit_precedence",
          "line": 495
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_merge_env_vars",
          "line": 539
        }
      ],
      "./src/abstractions/claude.rs:MockClaudeClient::new:568": [
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_multiple_iterations",
          "line": 144
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_client",
          "line": 709
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::new",
          "line": 166
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_error_response",
          "line": 746
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_add_success_response",
          "line": 783
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::new",
          "line": 34
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::unavailable_claude",
          "line": 245
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_unavailable",
          "line": 732
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_focus_directive",
          "line": 164
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_run_single_iteration",
          "line": 491
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::default",
          "line": 608
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_add_error_response",
          "line": 770
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::with_config",
          "line": 65
        }
      ],
      "./src/worktree/tests.rs:cleanup_worktree_dir:30": [
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_empty",
          "line": 191
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_already_merged",
          "line": 177
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_worktree_manager_creation",
          "line": 37
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_uuid_name",
          "line": 81
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_sessions",
          "line": 98
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        }
      ],
      "./src/testing/mocks/subprocess.rs:MockSubprocessManager::get_call_history:124": [
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_history",
          "line": 162
        }
      ],
      "./src/cook/mod.rs:run_improvement_loop:386": [
        {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_run_improvement_loop",
          "line": 666
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_claude_command:1291": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        }
      ],
      "./src/simple_state/state.rs:StateManager::state_mut:45": [
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_persistence",
          "line": 19
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_concurrent_state_access",
          "line": 148
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_file_permissions",
          "line": 228
        }
      ],
      "./src/cook/coordinators/workflow.rs:TestCoordinator::execute_step:209": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_shell_command_with_on_failure_fail_workflow",
          "line": 1278
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_shell_command_with_on_failure_retry",
          "line": 1209
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_step_with_env_interpolation",
          "line": 1163
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_step_with_capture_output",
          "line": 1122
        }
      ],
      "./src/session/state.rs:WorkflowTiming::from_iterations:259": [
        {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::get_workflow_timing",
          "line": 408
        }
      ],
      "./src/commands/registry.rs:CommandRegistry::with_defaults:22": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::with_command_registry",
          "line": 196
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::new",
          "line": 298
        }
      ],
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::prompt_user:183": [
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_prompt_user",
          "line": 259
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::new:91": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::default",
          "line": 85
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_default_user_interaction_creation",
          "line": 355
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_display_formatting",
          "line": 422
        }
      ],
      "./src/session/timing.rs:TimingTracker::start_iteration:30": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        },
        {
          "file": "./src/session/timing.rs",
          "name": "tests::test_timing_tracker",
          "line": 115
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::new:236": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::default",
          "line": 272
        }
      ],
      "./src/cook/interaction/mod.rs:MockUserInteraction::display_progress:540": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_user_interaction",
          "line": 362
        }
      ],
      "./src/session/state.rs:SessionProgress::all_commits:374": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::with_project_structure:171": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_project_structure",
          "line": 273
        },
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::complex_project_fs",
          "line": 73
        },
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::rust_project_fs",
          "line": 68
        }
      ],
      "./src/init/mod.rs:install_command:222": [
        {
          "file": "./src/init/mod.rs",
          "name": "install_templates",
          "line": 178
        }
      ],
      "./src/config/command.rs:tests::verify_coverage_command:865": [
        {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_config_with_new_syntax",
          "line": 804
        }
      ],
      "./src/cook/session/tracker.rs:SessionTrackerImpl::track_iteration:154": [
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_state_persistence",
          "line": 214
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_tracker_basic",
          "line": 188
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperations::get_commits:135": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_commits",
          "line": 356
        }
      ],
      "./src/cook/git_ops.rs:check_git_status:43": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_public_api_functions_in_real_repo",
          "line": 369
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_mutex_synchronization",
          "line": 396
        }
      ],
      "./src/testing/config.rs:TestConfiguration::new:39": [
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_default_configuration",
          "line": 188
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::should_auto_merge:1057": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        }
      ],
      "./src/testing/helpers/assertions.rs:assert_in_range:134": [
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_in_range",
          "line": 194
        }
      ],
      "./src/cook/retry.rs:is_transient_error:125": [
        {
          "file": "./src/cook/retry.rs",
          "name": "should_retry_output",
          "line": 84
        }
      ],
      "./src/worktree/test_state.rs:cleanup_worktree_dir:30": [
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_error_handling",
          "line": 198
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_updates",
          "line": 71
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_gitignore_creation",
          "line": 106
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_file_creation",
          "line": 38
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        }
      ],
      "./src/simple_state/state.rs:StateManager::with_root:31": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_corruption_recovery",
          "line": 104
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_recording",
          "line": 38
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator_with_config",
          "line": 1612
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_file_permissions",
          "line": 228
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_sorting",
          "line": 254
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_manager_creation",
          "line": 10
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_retrieval",
          "line": 131
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_concurrent_state_access",
          "line": 148
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_persistence",
          "line": 19
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_invalid_root_directory",
          "line": 247
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperations::switch_branch:231": [
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_merge_conflicts",
          "line": 105
        }
      ],
      "./src/commands/attributes.rs:AttributeSchema::add_optional_with_default:130": [
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::schema",
          "line": 29
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::schema",
          "line": 27
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_defaults",
          "line": 237
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::schema",
          "line": 27
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::schema",
          "line": 27
        }
      ],
      "./src/commands/context.rs:ExecutionContext::new:38": [
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_build",
          "line": 254
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_handler_command",
          "line": 1367
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_dry_run",
          "line": 268
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_write_and_read",
          "line": 319
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_execute",
          "line": 203
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_exists",
          "line": 363
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::test",
          "line": 55
        },
        {
          "file": "./src/commands/context.rs",
          "name": "tests::test_metadata",
          "line": 172
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_commit_dry_run",
          "line": 281
        },
        {
          "file": "./src/commands/context.rs",
          "name": "tests::test_env_vars",
          "line": 164
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_execute",
          "line": 168
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_status",
          "line": 250
        },
        {
          "file": "./src/commands/context.rs",
          "name": "tests::test_context_builder_pattern",
          "line": 152
        },
        {
          "file": "./src/commands/context.rs",
          "name": "tests::test_with_executor",
          "line": 191
        },
        {
          "file": "./src/commands/context.rs",
          "name": "tests::test_path_resolution",
          "line": 180
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_execute",
          "line": 226
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        {
          "file": "./src/commands/context.rs",
          "name": "tests::test_context_creation",
          "line": 144
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_dry_run",
          "line": 322
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_dry_run",
          "line": 200
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_dry_run",
          "line": 386
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_test_with_features",
          "line": 287
        }
      ],
      "./src/session/storage.rs:FileSessionStorage::load:56": [
        {
          "file": "./src/session/storage.rs",
          "name": "tests::test_file_storage",
          "line": 154
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        }
      ],
      "./src/config/command.rs:Command::new:405": [
        {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_signal_interruption",
          "line": 514
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::create_agent_branch",
          "line": 860
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_options_already_set",
          "line": 936
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_metadata_already_set",
          "line": 808
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_partial_metadata",
          "line": 849
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_variable_expansion",
          "line": 320
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_io_error_recovery",
          "line": 432
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_command_discovery_and_validation",
          "line": 351
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_unknown_command",
          "line": 453
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_worktree_commits",
          "line": 818
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_option_types",
          "line": 473
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_valid_command",
          "line": 431
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_exhausted_retries",
          "line": 310
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_missing_required_args",
          "line": 445
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_command_not_found",
          "line": 288
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_serialization",
          "line": 593
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_verbose_output",
          "line": 476
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_options_with_defaults",
          "line": 889
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_shell_command",
          "line": 1325
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_default_branch",
          "line": 1127
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_apply_defaults",
          "line": 461
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_check_claude_cli_when_missing",
          "line": 346
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_network_timeout",
          "line": 502
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_parent_to_main",
          "line": 1064
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_non_transient_failure",
          "line": 298
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_mixed_options",
          "line": 988
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_command_conversion",
          "line": 573
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_success",
          "line": 276
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::test_commit_required_field",
          "line": 605
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::git_in_dir",
          "line": 84
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_expand_variables",
          "line": 159
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_max_attempts_reached",
          "line": 403
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_permissive_validation",
          "line": 389
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_metadata_defaults",
          "line": 350
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_serialization_roundtrip",
          "line": 369
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_no_defaults",
          "line": 1044
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_with_analysis_config",
          "line": 698
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_is_git_repo",
          "line": 144
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_command",
          "line": 842
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_exponential_backoff",
          "line": 325
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::from_string",
          "line": 419
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_validation",
          "line": 292
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_modified_files",
          "line": 840
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_creation",
          "line": 527
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_all_metadata_unset",
          "line": 767
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::validate_parent_state",
          "line": 923
        }
      ],
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::execute_step:128": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_step",
          "line": 142
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_command:78": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "validate_command",
          "line": 406
        }
      ],
      "./src/cook/interaction/mod.rs:MockUserInteraction::add_yes_no_response:480": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_prompts",
          "line": 382
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_worktree_cleanup_after_merge",
          "line": 2319
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::with_directory:166": [
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::complex_project_fs",
          "line": 73
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_builder",
          "line": 236
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_list_dir",
          "line": 289
        }
      ],
      "./src/commands/handlers/file.rs:FileHandler::new:18": [
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_write_and_read",
          "line": 319
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::with_defaults",
          "line": 22
        },
        {
          "file": "./src/commands/handlers/mod.rs",
          "name": "all_handlers",
          "line": 16
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_dry_run",
          "line": 386
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_exists",
          "line": 363
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::default",
          "line": 297
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_handler_schema",
          "line": 309
        }
      ],
      "./src/cook/execution/runner.rs:MockCommandRunner::run_with_context:199": [
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_mock_command_runner",
          "line": 213
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystem::set_read_error:46": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_read_error",
          "line": 196
        }
      ],
      "./src/subprocess/builder.rs:ProcessCommandBuilder::arg:26": [
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_timeout",
          "line": 43
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_success",
          "line": 602
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_force_overwrite",
          "line": 440
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_create_commands",
          "line": 368
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::create_worktree",
          "line": 142
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_exponential_backoff",
          "line": 325
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_worktree_manager",
          "line": 69
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_max_attempts_reached",
          "line": 403
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_exhausted_retries",
          "line": 310
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_signal_interruption",
          "line": 514
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_success",
          "line": 7
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::git_command_exists",
          "line": 48
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_specific_commands",
          "line": 478
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_with_existing_commands",
          "line": 402
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_already_initialized",
          "line": 634
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_with_symlinks",
          "line": 565
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_is_git_repository",
          "line": 314
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_io_error_recovery",
          "line": 432
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_non_transient_failure",
          "line": 298
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_run_command_with_timeout",
          "line": 539
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperations::next_response:139": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 149
        }
      ],
      "./src/cook/interaction/display.rs:MockProgressDisplay::info:355": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_display",
          "line": 479
        }
      ],
      "./src/session/events.rs:TimestampedEvent::new:75": [
        {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        {
          "file": "./src/session/events.rs",
          "name": "tests::test_timestamped_event",
          "line": 149
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::create_test_executor_with_config:513": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_focus_tracking_test",
          "line": 950
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_test_mode_no_changes_command",
          "line": 904
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_handle_test_mode_execution_success",
          "line": 870
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::get_current_branch:330": [
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_current_branch_detached_head",
          "line": 455
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_current_branch",
          "line": 435
        }
      ],
      "./src/cook/interaction/display.rs:MockProgressDisplay::warning:362": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_display",
          "line": 479
        }
      ],
      "./src/config/command.rs:tests::try_parse_as:855": [
        {
          "file": "./src/config/command.rs",
          "name": "tests::debug_command_sequence",
          "line": 847
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::create_test_executor:479": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_test",
          "line": 652
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_shell",
          "line": 627
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_claude_command",
          "line": 995
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_legacy_name",
          "line": 682
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_test",
          "line": 815
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_none_error",
          "line": 736
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_step_with_env_interpolation",
          "line": 1163
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_shell",
          "line": 790
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_unnamed",
          "line": 845
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_claude",
          "line": 765
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_handle_no_commits_error_general_command",
          "line": 968
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_step_with_capture_output",
          "line": 1122
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_shell_command_success",
          "line": 1036
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_shell_command_with_on_failure_fail_workflow",
          "line": 1278
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_claude",
          "line": 602
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_shell_command_with_on_failure_retry",
          "line": 1209
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_determine_command_type_multiple_error",
          "line": 707
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_workflow_execution_single_iteration",
          "line": 1061
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::collect_workflow_inputs:946": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::run_agent:467": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_map_phase",
          "line": 406
        }
      ],
      "./src/subprocess/mock.rs:MockCommandConfig::returns_stdout:149": [
        {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_parse_errors",
          "line": 270
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_git_runner",
          "line": 124
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_claude_runner",
          "line": 142
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::parse_variables_to_args:165": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_sections",
          "line": 66
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::should_continue_iterations:1342": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        }
      ],
      "./src/cook/coordinators/environment.rs:DefaultEnvironmentCoordinator::setup_worktree:103": [
        {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::prepare_environment",
          "line": 121
        }
      ],
      "./src/cook/execution/mapreduce.rs:ProgressTracker::new:142": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_map_phase",
          "line": 406
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::cleanup_all_sessions:572": [
        {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationEngine::parse_path:137": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_variable_expression",
          "line": 121
        }
      ],
      "./src/cook/interaction/mod.rs:MockUserInteraction::start_spinner:263": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_spinner_handle",
          "line": 404
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::merge_parent_to_main:1064": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        }
      ],
      "./src/cook/orchestrator.rs:TestMockGitOperations::new:1509": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator_with_config",
          "line": 1612
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationEngine::parse_template:87": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_literal_segments",
          "line": 499
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_mixed_segments",
          "line": 510
        }
      ],
      "./src/cook/retry.rs:format_subprocess_error:168": [
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting",
          "line": 233
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "retry_tests::test_error_formatting_edge_cases",
          "line": 498
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting_rate_limit",
          "line": 262
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting_command_not_found",
          "line": 256
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_format_subprocess_error_with_newlines",
          "line": 488
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_format_subprocess_error_all_hints",
          "line": 442
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting_with_stdout_only",
          "line": 249
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting_no_exit_code",
          "line": 241
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_format_subprocess_error_all_fields",
          "line": 355
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_format_subprocess_error_unauthorized_variations",
          "line": 380
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_format_subprocess_error_unauthorized",
          "line": 371
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_error_formatting_empty_outputs",
          "line": 268
        }
      ],
      "./src/cook/coordinators/session.rs:DefaultSessionCoordinator::complete_session:86": [
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_success",
          "line": 105
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_failure",
          "line": 129
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_session_lifecycle",
          "line": 210
        }
      ],
      "./src/cook/interaction/display.rs:MockProgressDisplay::new:342": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_step_display",
          "line": 597
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_command_output_display",
          "line": 620
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_spinner",
          "line": 498
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_display",
          "line": 479
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_debug_output",
          "line": 629
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_iteration_display",
          "line": 586
        }
      ],
      "./src/cook/interaction/display.rs:MockSpinnerHandle::new:450": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::start_spinner",
          "line": 390
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::get_worktree_commits:818": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperations::create_commit:213": [
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_git_operation_failures",
          "line": 64
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_git_command_tracking",
          "line": 545
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "create_commit",
          "line": 62
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_commits",
          "line": 356
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::run_git_command:106": [
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::create_branch",
          "line": 273
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::prune_worktrees",
          "line": 361
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_current_branch",
          "line": 144
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::create_worktree",
          "line": 318
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::remove_worktree",
          "line": 334
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::delete_branch",
          "line": 302
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::list_files",
          "line": 173
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::switch_branch",
          "line": 286
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_commit_message",
          "line": 161
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::stage_all",
          "line": 244
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_diff",
          "line": 187
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::stage_files",
          "line": 222
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::list_worktrees",
          "line": 349
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::is_repository",
          "line": 125
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::init_repository",
          "line": 212
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_status",
          "line": 132
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::commit",
          "line": 254
        }
      ],
      "./src/cook/session/tracker.rs:SessionTrackerImpl::update_session:38": [
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_updates",
          "line": 241
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_atomic_save_prevents_corruption",
          "line": 273
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::extract_description:93": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::convert_frontmatter_to_definition",
          "line": 232
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_sections",
          "line": 66
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::create_minimal_definition",
          "line": 81
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_extract_description_multiline",
          "line": 448
        }
      ],
      "./src/simple_state/state.rs:StateManager::save:50": [
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::record_session",
          "line": 74
        }
      ],
      "./src/testing/mod.rs:TestFixtures::dirty_repo_git:212": [
        {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_fixtures",
          "line": 334
        }
      ],
      "./src/simple_state/mod.rs:init:85": [
        {
          "file": "./src/main.rs",
          "name": "main",
          "line": 119
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::new:95": [
        {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        }
      ],
      "./src/commands/registry.rs:CommandRegistry::register_sync:50": [
        {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_execute",
          "line": 203
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_registration",
          "line": 171
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_get_handler",
          "line": 187
        }
      ],
      "./src/session/timing.rs:TimingTracker::start_command:42": [
        {
          "file": "./src/session/timing.rs",
          "name": "tests::test_timing_tracker",
          "line": 115
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::create_session_state:68": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_create_session_state",
          "line": 386
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_should_continue_iteration",
          "line": 502
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_update_session_metrics",
          "line": 441
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_format_session_summary",
          "line": 476
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_save_checkpoint",
          "line": 523
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_create_session_state_with_focus",
          "line": 400
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::iteration_end:251": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::iteration_end",
          "line": 144
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::default_response:224": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        }
      ],
      "./src/init/templates.rs:get_templates_by_names:52": [
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_get_templates",
          "line": 340
        },
        {
          "file": "./src/init/mod.rs",
          "name": "select_templates",
          "line": 107
        },
        {
          "file": "./src/init/templates.rs",
          "name": "tests::test_get_templates_by_names",
          "line": 89
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::extract_spec_from_git:39": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git_no_spec",
          "line": 305
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git",
          "line": 290
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git_error",
          "line": 315
        }
      ],
      "./src/commands/attributes.rs:AttributeValue::from:90": [
        {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_validation",
          "line": 217
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_defaults",
          "line": 237
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_attribute_value_conversions",
          "line": 205
        }
      ],
      "./src/cook/interaction/mod.rs:MockUserInteraction::prompt_yes_no:495": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_prompts",
          "line": 382
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_error_handling",
          "line": 436
        }
      ],
      "./src/commands/context.rs:ExecutionContext::with_iteration:72": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        {
          "file": "./src/commands/context.rs",
          "name": "tests::test_context_builder_pattern",
          "line": 152
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::interpolate_workflow_step:775": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::get_current_head:936": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_and_validate_command",
          "line": 1231
        }
      ],
      "./src/commands/handlers/mod.rs:all_handlers:16": [
        {
          "file": "./src/commands/handlers/mod.rs",
          "name": "tests::test_all_handlers",
          "line": 31
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::command_output:278": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::command_output",
          "line": 156
        }
      ],
      "./src/init/mod.rs:select_templates:107": [
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        }
      ],
      "./src/config/loader.rs:ConfigLoader::new:19": [
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_from_path_unsupported_format",
          "line": 290
        },
        {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_not_a_repo",
          "line": 35
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_project_config",
          "line": 257
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_explicit_path_nested_workflow",
          "line": 187
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_from_path_nonexistent_file",
          "line": 320
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_default_path",
          "line": 215
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_explicit_path_yaml",
          "line": 161
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_from_path_invalid_yaml",
          "line": 307
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_no_config_uses_defaults",
          "line": 242
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_new_creates_default_config",
          "line": 147
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_concurrent_access",
          "line": 336
        },
        {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_success",
          "line": 14
        }
      ],
      "./src/cook/execution/data_pipeline.rs:FilterExpression::parse:452": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_filter_logical",
          "line": 944
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::from_config",
          "line": 33
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_filter_in_operator",
          "line": 957
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_filter_comparison",
          "line": 933
        }
      ],
      "./src/cook/execution/claude.rs:ClaudeExecutorImpl::with_test_config:45": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator_with_config",
          "line": 1612
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::get_called_commands:266": [
        {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_git_command_tracking",
          "line": 545
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_operations",
          "line": 358
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_shell_command:1325": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        }
      ],
      "./src/cook/session/adapter.rs:SessionManagerAdapter::update_session:104": [
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_state_conversion",
          "line": 382
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_session_lifecycle",
          "line": 341
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_error_handling",
          "line": 366
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_complete_session_lifecycle",
          "line": 416
        }
      ],
      "./src/cook/mod.rs:load_workflow_with_mapreduce:204": [
        {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        }
      ],
      "./src/session/storage.rs:InMemoryStorage::load:134": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::restore_session",
          "line": 292
        }
      ],
      "./src/cook/session/adapter.rs:SessionManagerAdapter::new:27": [
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_session_lifecycle",
          "line": 341
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_save_and_load_state",
          "line": 448
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_start_session",
          "line": 328
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_state_conversion",
          "line": 382
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_adapter_creation",
          "line": 318
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_error_handling",
          "line": 366
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_complete_session_lifecycle",
          "line": 416
        }
      ],
      "./src/session/state.rs:SessionState::is_terminal:114": [
        {
          "file": "./src/init/mod.rs",
          "name": "handle_existing_commands",
          "line": 126
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::get_state",
          "line": 234
        },
        {
          "file": "./src/session/persistence.rs",
          "name": "PersistedSession::is_resumable",
          "line": 43
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::list_active_sessions",
          "line": 243
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::validate_parent_state:923": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_agent_to_parent",
          "line": 881
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystem::is_dir:100": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::list_dir",
          "line": 105
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::json_to_attribute_value:237": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        }
      ],
      "./src/commands/registry.rs:CommandRegistry::clone:129": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_command_string",
          "line": 69
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::get_config",
          "line": 131
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::get_updates",
          "line": 88
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::from_output",
          "line": 60
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::add_json_object",
          "line": 316
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_atomic_save_prevents_corruption",
          "line": 273
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        },
        {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::save",
          "line": 126
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::prepare_environment_variables",
          "line": 1206
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::write_file",
          "line": 73
        },
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::resolve",
          "line": 56
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::read_file",
          "line": 56
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set_path",
          "line": 237
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::save_session_state",
          "line": 184
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 113
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_step",
          "line": 142
        },
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_handler_command",
          "line": 1367
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::get_all_files",
          "line": 138
        },
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::get_call_history",
          "line": 124
        },
        {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::update_session",
          "line": 80
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::create_session",
          "line": 96
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "expand_variables",
          "line": 77
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 204
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::apply_field_mapping",
          "line": 141
        },
        {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::get_update_calls",
          "line": 49
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::restore_session",
          "line": 292
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_sections",
          "line": 66
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_update_status",
          "line": 48
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::execute_step",
          "line": 55
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::update_session",
          "line": 104
        },
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::execute",
          "line": 103
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockMetricsCoordinator::generate_report",
          "line": 331
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_corrupted_cache_entry",
          "line": 305
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_enum",
          "line": 560
        },
        {
          "file": "./src/config/mapreduce.rs",
          "name": "MapReduceWorkflowConfig::to_reduce_phase",
          "line": 153
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_test_command",
          "line": 1020
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "value_to_string",
          "line": 336
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::determine_command_type",
          "line": 1198
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_from_path",
          "line": 54
        },
        {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        },
        {
          "file": "./src/config/command.rs",
          "name": "WorkflowStepCommand::deserialize",
          "line": 277
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockClaudeExecutor::execute_claude_command",
          "line": 47
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register",
          "line": 218
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::extract_field_value",
          "line": 154
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_workflow_step_command",
          "line": 80
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::start_spinner",
          "line": 390
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_claude_command",
          "line": 1291
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::cleanup",
          "line": 440
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 488
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::load_work_items_with_pipeline",
          "line": 354
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_in_current",
          "line": 273
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "TokioProcessRunner::run",
          "line": 85
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::run_agent",
          "line": 467
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 35
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::merge",
          "line": 328
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::restore_session",
          "line": 620
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_persistence",
          "line": 19
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_state",
          "line": 213
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::start_spinner",
          "line": 263
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_mapreduce_workflow",
          "line": 1065
        },
        {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::setup_worktree",
          "line": 103
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_filter_sessions_by_status",
          "line": 316
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::setup_environment",
          "line": 216
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 368
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "MockHandler::schema",
          "line": 98
        },
        {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::load_configuration",
          "line": 86
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_staged_files",
          "line": 131
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockClaudeExecutor::get_calls",
          "line": 40
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_progress",
          "line": 221
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_commits",
          "line": 135
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::deserialize",
          "line": 474
        },
        {
          "file": "./src/config/mod.rs",
          "name": "Config::get_spec_dir",
          "line": 148
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_cleanup",
          "line": 277
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::handle_on_failure",
          "line": 1405
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::refresh",
          "line": 44
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::get_session",
          "line": 134
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_mapreduce",
          "line": 1274
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::convert_frontmatter_to_definition",
          "line": 232
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::get_called_commands",
          "line": 266
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitStatus::all_changed_files",
          "line": 70
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_call_history",
          "line": 60
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::apply_defaults",
          "line": 171
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_with_retry",
          "line": 891
        },
        {
          "file": "./src/session/events.rs",
          "name": "tests::test_timestamped_event",
          "line": 149
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_cache_behavior",
          "line": 165
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::get_executed_steps",
          "line": 50
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_command_log",
          "line": 175
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_concurrent_state_access",
          "line": 148
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::get_messages",
          "line": 349
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::start_session",
          "line": 83
        },
        {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_with_retry",
          "line": 159
        },
        {
          "file": "./src/init/mod.rs",
          "name": "validate_project_structure",
          "line": 245
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::list_sessions",
          "line": 126
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::get_called_commands",
          "line": 602
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::get_state",
          "line": 234
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::collect_workflow_inputs",
          "line": 946
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::list_dir",
          "line": 105
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::recursive_descent",
          "line": 325
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::update_with_output",
          "line": 241
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_map_phase",
          "line": 406
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::complete_session",
          "line": 218
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::update_session",
          "line": 95
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_record_edge_cases",
          "line": 189
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default_response",
          "line": 224
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::scan_commands",
          "line": 34
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_all",
          "line": 138
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::create_minimal_definition",
          "line": 81
        },
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::load_with_explicit_path",
          "line": 70
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::try_parse_as",
          "line": 855
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::list_active_sessions",
          "line": 243
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::interpolate_workflow_step",
          "line": 775
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "signal_tests::test_setup_interrupt_handlers",
          "line": 185
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        },
        {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::get_state",
          "line": 119
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::get_session_info",
          "line": 101
        },
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::execute_step",
          "line": 120
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::apply_defaults",
          "line": 366
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_corruption_recovery",
          "line": 104
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::get_state",
          "line": 99
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        }
      ],
      "./src/testing/mocks/claude.rs:MockClaudeClient::check_availability:161": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_unavailable",
          "line": 732
        }
      ],
      "./src/commands/attributes.rs:AttributeValue::as_bool:36": [
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        }
      ],
      "./src/testing/mocks/config.rs:MockConfigLoader::load_with_explicit_path:70": [
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_explicit_path_nested_workflow",
          "line": 187
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_explicit_path_yaml",
          "line": 161
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_default_path",
          "line": 215
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_no_config_uses_defaults",
          "line": 242
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        }
      ],
      "./src/cook/execution/data_pipeline.rs:DataPipeline::apply_field_mapping:141": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        }
      ],
      "./src/commands/result.rs:CommandResult::with_duration:78": [
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        {
          "file": "./src/commands/result.rs",
          "name": "tests::test_with_duration",
          "line": 202
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        }
      ],
      "./src/session/config.rs:SessionConfig::default:18": [
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        {
          "file": "./src/session/manager.rs",
          "name": "tests::test_concurrent_sessions",
          "line": 393
        },
        {
          "file": "./src/session/persistence.rs",
          "name": "tests::test_persisted_session",
          "line": 62
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_json_value_type:222": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_integer",
          "line": 471
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_enum",
          "line": 560
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_boolean",
          "line": 498
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_string",
          "line": 444
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_option_value",
          "line": 213
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_validate_json_value_type_path",
          "line": 531
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_edge_cases_json_values",
          "line": 716
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::step_end:271": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::step_end",
          "line": 152
        }
      ],
      "./src/cook/execution/data_pipeline.rs:Sorter::compare_values:817": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::compare_items",
          "line": 796
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::validate_arguments:57": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_validate_arguments",
          "line": 332
        }
      ],
      "./src/init/templates.rs:get_all_templates:17": [
        {
          "file": "./src/init/templates.rs",
          "name": "get_templates_by_names",
          "line": 52
        },
        {
          "file": "./src/init/templates.rs",
          "name": "tests::test_get_all_templates_success",
          "line": 67
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_get_templates",
          "line": 340
        },
        {
          "file": "./src/init/mod.rs",
          "name": "select_templates",
          "line": 107
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystem::read_file:56": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_errors",
          "line": 252
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_basic_operations",
          "line": 216
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_project_structure",
          "line": 273
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_builder",
          "line": 236
        }
      ],
      "./src/subprocess/claude.rs:ClaudeRunnerImpl::check_availability:32": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "check_claude_cli",
          "line": 151
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_claude_runner",
          "line": 142
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::get_commit_message:393": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_last_commit_message",
          "line": 416
        }
      ],
      "./src/git/types.rs:GitStatus::all_changed_files:70": [
        {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_git_status_helper_methods",
          "line": 358
        }
      ],
      "./src/subprocess/mod.rs:SubprocessManager::claude:183": [
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_claude_runner",
          "line": 142
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationEngine::new:31": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_undefined_variable_strict_mode",
          "line": 431
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_shell_output",
          "line": 329
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_agent_context_to_interpolation_context",
          "line": 108
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_nested_property_access",
          "line": 387
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_map_results",
          "line": 308
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_literal_segments",
          "line": 499
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_context_inheritance",
          "line": 449
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_complex_json_interpolation",
          "line": 472
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_basic_interpolation",
          "line": 374
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_work_item",
          "line": 273
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_strict_mode",
          "line": 423
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::default",
          "line": 24
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_context_hierarchy",
          "line": 366
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_default_values",
          "line": 420
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_array_indexing",
          "line": 408
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_mixed_segments",
          "line": 510
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::new",
          "line": 298
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_defaults",
          "line": 348
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_arrays",
          "line": 393
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_undefined_variable_non_strict",
          "line": 440
        }
      ],
      "./src/testing/mocks/claude.rs:MockClaudeClient::new:88": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::default",
          "line": 82
        }
      ],
      "./src/subprocess/mock.rs:MockCommandConfig::returns_exit_code:159": [
        {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_command_failure",
          "line": 249
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        }
      ],
      "./src/cook/session/state.rs:SessionState::new:56": [
        {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::new",
          "line": 28
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::get_state",
          "line": 116
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_structured_workflow:507": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::with_dirty_repo:86": [
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_dirty_repo",
          "line": 542
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::add_success_response:250": [
        {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_git_command_tracking",
          "line": 545
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::with_success",
          "line": 136
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_multiple_iterations",
          "line": 144
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git",
          "line": 290
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_check_for_changes",
          "line": 422
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_concurrent_git_operations",
          "line": 522
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_operations",
          "line": 358
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_spec_id_extraction",
          "line": 130
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git_no_spec",
          "line": 305
        }
      ],
      "./src/cook/execution/data_pipeline.rs:FilterExpression::parse_value:546": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::get_scenario:185": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default_response",
          "line": 224
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_repository",
          "line": 355
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::get_cleanup_config:828": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_get_cleanup_config_from_env",
          "line": 951
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        }
      ],
      "./src/cook/execution/mapreduce.rs:ProgressTracker::update_agent:177": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::run_agent",
          "line": 467
        }
      ],
      "./src/session/storage.rs:FileSessionStorage::session_path:37": [
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::save",
          "line": 44
        },
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::delete",
          "line": 90
        },
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::load",
          "line": 56
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::parse_command_file:32": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_parse_frontmatter",
          "line": 351
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::refresh",
          "line": 44
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_parse_sections",
          "line": 390
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_minimal_definition",
          "line": 426
        }
      ],
      "./src/cook/execution/runner.rs:RealCommandRunner::run_command:52": [
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_real_command_runner",
          "line": 127
        }
      ],
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::new:72": [
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::default",
          "line": 66
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::load_session_state:615": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::restore_session",
          "line": 620
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_last_successful_command",
          "line": 658
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::list_files:173": [
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_list_files",
          "line": 577
        }
      ],
      "./src/init/mod.rs:handle_existing_commands:126": [
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_handle_existing_commands_no_tty",
          "line": 513
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_handle_existing_commands_with_conflicts",
          "line": 530
        },
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::cleanup_merged_sessions:727": [
        {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        }
      ],
      "./src/cook/interaction/display.rs:VerbosityLevel::from_args:19": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_verbosity_levels",
          "line": 568
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::from_args",
          "line": 99
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::save_checkpoint:143": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_save_checkpoint",
          "line": 523
        }
      ],
      "./src/simple_state/state.rs:StateManager::new:18": [
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session",
          "line": 12
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_session_lifecycle",
          "line": 210
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session_failure",
          "line": 32
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_error_propagation",
          "line": 246
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_get_session_info",
          "line": 151
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_success",
          "line": 105
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_failure",
          "line": 129
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_track_iteration",
          "line": 79
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_update_status",
          "line": 48
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationContext::set:232": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_nested_property_access",
          "line": 387
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_work_item",
          "line": 273
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_shell_output",
          "line": 329
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_basic_interpolation",
          "line": 374
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_map_results",
          "line": 308
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_arrays",
          "line": 393
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_context_hierarchy",
          "line": 366
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_array_indexing",
          "line": 408
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_context_inheritance",
          "line": 449
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_complex_json_interpolation",
          "line": 472
        }
      ],
      "./src/cook/signal_handler.rs:tests::create_test_worktree_manager:69": [
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::test_update_interrupted_state",
          "line": 122
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "signal_tests::test_update_interrupted_state_error_handling",
          "line": 199
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::test_termination_interrupt",
          "line": 154
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "signal_tests::test_setup_interrupt_handlers",
          "line": 185
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::log_command:195": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::get_current_branch:381": [
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_clean_repo",
          "line": 522
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_detached_head",
          "line": 569
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_command_logging",
          "line": 608
        }
      ],
      "./src/config/command.rs:Command::from_string:419": [
        {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_from_string",
          "line": 546
        }
      ],
      "./src/git/parsers.rs:parse_untracked_line:46": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_line_entry",
          "line": 22
        }
      ],
      "./src/session/config.rs:SessionOptions::from_flags:63": [
        {
          "file": "./src/session/config.rs",
          "name": "tests::test_session_options",
          "line": 90
        },
        {
          "file": "./src/cook/session/migration.rs",
          "name": "example_migration",
          "line": 34
        }
      ],
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::new:27": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_empty_commands",
          "line": 529
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_user_interaction",
          "line": 362
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_with_variables",
          "line": 337
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_stops_at_max_iterations",
          "line": 500
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_simple_commands",
          "line": 304
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_spinner_handle",
          "line": 404
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_display_progress",
          "line": 282
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_beyond_limit",
          "line": 232
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator_with_config",
          "line": 1612
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_error_handling",
          "line": 436
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_prompts",
          "line": 382
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_at_limit",
          "line": 210
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_prompt_user",
          "line": 259
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_within_limit",
          "line": 188
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_structured_commands",
          "line": 373
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_workflow_step_commands",
          "line": 428
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_step",
          "line": 142
        }
      ],
      "./src/subprocess/builder.rs:ProcessCommandBuilder::suppress_stderr:77": [
        {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        }
      ],
      "./src/config/command_discovery.rs:CommandDiscovery::scan_commands:34": [
        {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_scan_empty_directory",
          "line": 126
        },
        {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_scan_commands_filters_correctly",
          "line": 138
        },
        {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_cache_behavior",
          "line": 165
        },
        {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_needs_refresh",
          "line": 196
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::refresh",
          "line": 44
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_single_step:1144": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::handle_on_failure",
          "line": 1405
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        }
      ],
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::execute_workflow:145": [
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_structured_commands",
          "line": 373
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_workflow_step_commands",
          "line": 428
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_simple_commands",
          "line": 304
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_with_variables",
          "line": 337
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_empty_commands",
          "line": 529
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_stops_at_max_iterations",
          "line": 500
        }
      ],
      "./src/testing/helpers/mod.rs:create_file:34": [
        {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_rust_project",
          "line": 44
        }
      ],
      "./src/simple_state/types.rs:SessionRecord::complete:51": [
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_sorting",
          "line": 254
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_retrieval",
          "line": 131
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_record_edge_cases",
          "line": 189
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_recording",
          "line": 38
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperations::new:116": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_commits",
          "line": 356
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_error",
          "line": 382
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_multiple_iterations",
          "line": 144
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git_error",
          "line": 315
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_merge_conflicts",
          "line": 105
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_operations",
          "line": 358
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_git_operation_failures",
          "line": 64
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_staging",
          "line": 345
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_check_for_changes",
          "line": 422
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::with_config",
          "line": 65
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::new",
          "line": 34
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::new",
          "line": 123
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_worktree_creation_failure",
          "line": 91
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git",
          "line": 290
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_spec_id_extraction",
          "line": 130
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git_no_spec",
          "line": 305
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_empty_repository",
          "line": 120
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_git_command_tracking",
          "line": 545
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_run_single_iteration",
          "line": 491
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_concurrent_git_operations",
          "line": 522
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::default",
          "line": 110
        }
      ],
      "./src/testing/mocks/git.rs:GitCommandType::classify:21": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 149
        }
      ],
      "./src/init/mod.rs:install_templates:178": [
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        }
      ],
      "./src/config/mapreduce.rs:parse_mapreduce_workflow:166": [
        {
          "file": "./src/config/mapreduce.rs",
          "name": "tests::test_parse_timeout_formats",
          "line": 208
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook_with_mapreduce",
          "line": 225
        },
        {
          "file": "./src/config/mapreduce.rs",
          "name": "tests::test_parse_basic_mapreduce_workflow",
          "line": 177
        }
      ],
      "./src/abstractions/claude.rs:RealClaudeClient::lint:527": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_call_counting",
          "line": 291
        }
      ],
      "./src/cook/session/state.rs:SessionState::add_files_changed:95": [
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::track_iteration",
          "line": 154
        },
        {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::update_session",
          "line": 80
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::update_session",
          "line": 38
        }
      ],
      "./src/subprocess/mock.rs:MockProcessRunner::get_call_history:60": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_calls",
          "line": 92
        }
      ],
      "./src/commands/attributes.rs:AttributeValue::as_number:28": [
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        }
      ],
      "./src/cook/interaction/mod.rs:MockUserInteraction::new:188": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::default",
          "line": 466
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::default",
          "line": 182
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperationsBuilder::new:47": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_builder",
          "line": 318
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_dirty_status",
          "line": 334
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_with_classifier",
          "line": 369
        },
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::dirty_git_repo",
          "line": 25
        },
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::clean_git_repo",
          "line": 17
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::default",
          "line": 41
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::builder",
          "line": 127
        }
      ],
      "./src/subprocess/git.rs:GitRunnerImpl::log:202": [
        {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_parse_errors",
          "line": 270
        }
      ],
      "./src/subprocess/mock.rs:MockCommandConfig::with_args:141": [
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_git_runner",
          "line": 124
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_claude_runner",
          "line": 142
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_parse_errors",
          "line": 270
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_command_failure",
          "line": 249
        }
      ],
      "./src/cook/retry.rs:execute_with_retry:30": [
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_non_transient_failure",
          "line": 298
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_signal_interruption",
          "line": 514
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_exponential_backoff",
          "line": 325
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_exhausted_retries",
          "line": 310
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_io_error_recovery",
          "line": 432
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_success",
          "line": 276
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_max_attempts_reached",
          "line": 403
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_network_timeout",
          "line": 502
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_execute_with_retry_verbose_output",
          "line": 476
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_execute_with_retry_command_not_found",
          "line": 288
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperationsBuilder::with_clean_status:66": [
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::clean_git_repo",
          "line": 17
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_builder",
          "line": 318
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_with_classifier",
          "line": 369
        }
      ],
      "./src/cook/session/state.rs:SessionState::duration:105": [
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::convert_state",
          "line": 43
        }
      ],
      "./src/git/scenario.rs:GitScenario::default:279": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::prepare_environment_variables:1206": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        }
      ],
      "./src/cook/coordinators/execution.rs:DefaultExecutionCoordinator::execute_command:93": [
        {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_with_retry",
          "line": 159
        },
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_command_success",
          "line": 76
        },
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_command_failure",
          "line": 98
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperations::builder:127": [
        {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_not_a_repo",
          "line": 35
        },
        {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_success",
          "line": 14
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::get_progress:221": [
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_progress_tracking",
          "line": 214
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::git_command:88": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "git_command",
          "line": 27
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::stage_all_changes",
          "line": 131
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::create_commit",
          "line": 136
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::switch_branch",
          "line": 215
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::check_git_status",
          "line": 124
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_git_command_failure",
          "line": 455
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_git_command_success",
          "line": 442
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_with_classifier",
          "line": 369
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::get_last_commit_message",
          "line": 117
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::create_worktree",
          "line": 199
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::get_current_branch",
          "line": 208
        }
      ],
      "./src/cook/workflow/executor_tests.rs:MockClaudeExecutor::new:29": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        }
      ],
      "./src/subprocess/git.rs:GitRunnerImpl::new:45": [
        {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_parse_errors",
          "line": 270
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_command_failure",
          "line": 249
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::get_status:132": [
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::is_clean",
          "line": 204
        }
      ],
      "./src/cook/coordinators/execution.rs:DefaultExecutionCoordinator::execute_claude:125": [
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_claude_failure",
          "line": 137
        },
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_claude_success",
          "line": 117
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::error:194": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_error",
          "line": 124
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_error",
          "line": 529
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_verbosity_filtering",
          "line": 608
        }
      ],
      "./src/cook/interaction/display.rs:MockProgressDisplay::iteration_end:405": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_iteration_display",
          "line": 586
        }
      ],
      "./src/cook/execution/data_pipeline.rs:JsonPath::parse_field:259": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::compile",
          "line": 187
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::with_file:161": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_errors",
          "line": 252
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_list_dir",
          "line": 289
        },
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::complex_project_fs",
          "line": 73
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_builder",
          "line": 236
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::commit:455": [
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_commit_nothing_to_commit",
          "line": 623
        }
      ],
      "./src/commands/handlers/claude.rs:ClaudeHandler::execute:43": [
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_dry_run",
          "line": 268
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_execute",
          "line": 226
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::save_session_state:184": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        }
      ],
      "./src/simple_state/cache.rs:CacheManager::with_config:27": [
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager",
          "line": 50
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager_edge_cases",
          "line": 205
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_expiration",
          "line": 86
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_cleanup",
          "line": 277
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_corrupted_cache_entry",
          "line": 305
        }
      ],
      "./src/session/state.rs:SessionProgress::start_iteration:387": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        }
      ],
      "./src/cook/interaction/display.rs:MockProgressDisplay::debug_output:433": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_debug_output",
          "line": 629
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::with_test_config:118": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator_with_config",
          "line": 1612
        }
      ],
      "./src/session/storage.rs:FileSessionStorage::save:44": [
        {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        {
          "file": "./src/session/storage.rs",
          "name": "tests::test_file_storage",
          "line": 154
        }
      ],
      "./src/cook/git_ops.rs:tests::stage_all_changes_in_dir:112": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_stage_all_changes_no_changes",
          "line": 286
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_stage_all_changes_success",
          "line": 265
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "mock_tests::test_create_commit_with_mock",
          "line": 450
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "mock_tests::test_stage_all_changes_with_mock",
          "line": 430
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_success",
          "line": 300
        }
      ],
      "./src/cook/signal_handler.rs:setup_interrupt_handlers:13": [
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "signal_tests::test_setup_interrupt_handlers",
          "line": 185
        }
      ],
      "./src/commands/attributes.rs:AttributeSchema::apply_defaults:171": [
        {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_defaults",
          "line": 237
        }
      ],
      "./src/abstractions/claude.rs:MockClaudeClient::add_success_response:582": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_client",
          "line": 709
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::with_success",
          "line": 179
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_multiple_iterations",
          "line": 144
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_add_success_response",
          "line": 783
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_focus_directive",
          "line": 164
        }
      ],
      "./src/config/command.rs:tests::verify_lint_command:890": [
        {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_config_with_new_syntax",
          "line": 804
        }
      ],
      "./src/testing/helpers/mod.rs:run_command:81": [
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::get_claude_version",
          "line": 115
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::check_claude_cli",
          "line": 98
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_shell_command:842": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_shell_command_success",
          "line": 1036
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_test_command",
          "line": 1020
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_with_retry",
          "line": 891
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        }
      ],
      "./src/subprocess/mod.rs:SubprocessManager::new:102": [
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::mock",
          "line": 139
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        }
      ],
      "./src/config/metadata_parser.rs:tests::create_test_file:341": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_parse_sections",
          "line": 390
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_minimal_definition",
          "line": 426
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_parse_frontmatter",
          "line": 351
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_create_test_file",
          "line": 303
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_workflow_configuration",
          "line": 212
        }
      ],
      "./src/cook/execution/data_pipeline.rs:DataPipeline::process:72": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::load_work_items_with_pipeline",
          "line": 354
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_pipeline_complete",
          "line": 1009
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_workflow_command:1096": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::process_workflow_input",
          "line": 1020
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::load_work_items_with_pipeline:354": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::create_branch:469": [
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_create_branch",
          "line": 620
        }
      ],
      "./src/testing/test_mocks.rs:CargoMocks::clippy_output:25": [
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        }
      ],
      "./src/testing/mod.rs:TestFixtures::clean_repo_git:201": [
        {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_fixtures",
          "line": 334
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_successful_improvement_loop",
          "line": 15
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_test_command:1020": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::apply_definition_defaults:274": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_all_metadata_unset",
          "line": 767
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_metadata_already_set",
          "line": 808
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_partial_metadata",
          "line": 849
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_defaults",
          "line": 94
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_no_defaults",
          "line": 1044
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_options_already_set",
          "line": 936
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_mixed_options",
          "line": 988
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_options_with_defaults",
          "line": 889
        }
      ],
      "./src/cook/execution/data_pipeline.rs:FilterExpression::compare:605": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        }
      ],
      "./src/cook/interaction/prompts.rs:MockPrompter::prompt_choice:167": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_mock_prompter_choice",
          "line": 214
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::with_detached_head:130": [
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_detached_head",
          "line": 569
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::report_summary:1442": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        }
      ],
      "./src/abstractions/claude.rs:MockClaudeClient::add_error_response:592": [
        {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::with_error",
          "line": 185
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_error_response",
          "line": 746
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_add_error_response",
          "line": 770
        }
      ],
      "./src/config/loader.rs:ConfigLoader::load_from_path:54": [
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_from_path_nonexistent_file",
          "line": 320
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_with_explicit_path",
          "line": 31
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_from_path_invalid_yaml",
          "line": 307
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_from_path_unsupported_format",
          "line": 290
        }
      ],
      "./src/commands/mod.rs:CommandHandlerBuilder::new:58": [
        {
          "file": "./src/commands/mod.rs",
          "name": "tests::test_command_handler_builder",
          "line": 116
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::default",
          "line": 77
        }
      ],
      "./src/config/command_validator.rs:apply_command_defaults:411": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_metadata_defaults",
          "line": 350
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::check_value_type:256": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        }
      ],
      "./src/commands/context.rs:ExecutionContext::add_env_vars:95": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        }
      ],
      "./src/subprocess/mock.rs:MockProcessRunner::run:99": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command_in_dir",
          "line": 162
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_timeout",
          "line": 43
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_command_not_found",
          "line": 30
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_with_symlinks",
          "line": 565
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_already_initialized",
          "line": 634
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_create_commands",
          "line": 368
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_specific_commands",
          "line": 478
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_success",
          "line": 602
        },
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "RealSubprocessExecutor::execute",
          "line": 33
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_failure",
          "line": 20
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_force_overwrite",
          "line": 440
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_with_existing_commands",
          "line": 402
        },
        {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_command",
          "line": 52
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_is_git_repository",
          "line": 314
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::is_branch_merged",
          "line": 669
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_success",
          "line": 7
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        }
      ],
      "./src/cook/execution/data_pipeline.rs:JsonPath::select:275": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_json_path_nested",
          "line": 915
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_json_path_basic",
          "line": 899
        }
      ],
      "./src/subprocess/runner.rs:ExitStatusHelper::success:56": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::code_review",
          "line": 464
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command_in_dir",
          "line": 162
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::add",
          "line": 121
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::commit",
          "line": 254
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::remove_worktree",
          "line": 166
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::implement_spec",
          "line": 664
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::create_worktree",
          "line": 318
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "TokioProcessRunner::run",
          "line": 85
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::lint",
          "line": 689
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_diff",
          "line": 187
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::is_branch_merged",
          "line": 669
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::git_in_dir",
          "line": 84
        },
        {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::git_command_exists",
          "line": 48
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 646
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::is_repository",
          "line": 125
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::validate_parent_state",
          "line": 923
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_commit_message",
          "line": 161
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::prune_worktrees",
          "line": 361
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_default_branch",
          "line": 1127
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_spinner_lifecycle",
          "line": 536
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_modified_files",
          "line": 840
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::create_worktree",
          "line": 142
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::delete_branch",
          "line": 302
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::switch_branch",
          "line": 286
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::list_files",
          "line": 173
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::get_claude_version",
          "line": 115
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_spinner",
          "line": 498
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "should_retry_output",
          "line": 84
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_worktree_commits",
          "line": 818
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::create_branch",
          "line": 273
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::current_branch",
          "line": 184
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_current_head",
          "line": 1206
        },
        {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_current_branch",
          "line": 144
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::log",
          "line": 202
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_spinner_handle",
          "line": 404
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::list_worktrees",
          "line": 349
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::check_availability",
          "line": 32
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::create_agent_branch",
          "line": 860
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_status",
          "line": 132
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::stage_all",
          "line": 244
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::lint",
          "line": 527
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_command",
          "line": 842
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head",
          "line": 1414
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::stage_files",
          "line": 222
        },
        {
          "file": "./src/testing/helpers/mod.rs",
          "name": "run_command",
          "line": 81
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_parent_to_main",
          "line": 1064
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::remove_worktree",
          "line": 334
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_shell_command",
          "line": 1325
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::commit",
          "line": 94
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::init_repository",
          "line": 212
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::check_claude_cli",
          "line": 98
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::implement_spec",
          "line": 492
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::display_warning:120": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_display_formatting",
          "line": 422
        }
      ],
      "./src/commands/attributes.rs:AttributeSchema::new:106": [
        {
          "file": "./src/commands/mod.rs",
          "name": "tests::test_handler_validation",
          "line": 131
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::schema",
          "line": 29
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::schema",
          "line": 27
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "TestHandler::schema",
          "line": 153
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::schema",
          "line": 27
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_defaults",
          "line": 237
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "tests::test_command_handler_builder",
          "line": 116
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::schema",
          "line": 27
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_validation",
          "line": 217
        }
      ],
      "./src/git/types.rs:GitStatus::new:30": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_detached_head",
          "line": 130
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitStatus::default",
          "line": 83
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_dirty_repo",
          "line": 86
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_git_status_helper_methods",
          "line": 358
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenario::default",
          "line": 279
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_clean_repo",
          "line": 68
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_non_repository",
          "line": 148
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_merge_conflict",
          "line": 108
        }
      ],
      "./src/testing/test_mocks.rs:CargoMocks::check_success:13": [
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        }
      ],
      "./src/git/parsers.rs:finalize_worktree:195": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_worktree_list",
          "line": 172
        }
      ],
      "./src/cook/execution/claude.rs:ClaudeExecutorImpl::handle_test_mode_execution:131": [
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::execute_claude_command",
          "line": 55
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_handle_test_mode_execution_success",
          "line": 870
        }
      ],
      "./src/cook/mod.rs:load_playbook:320": [
        {
          "file": "./src/cook/mod.rs",
          "name": "load_workflow",
          "line": 216
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_yaml_error_messages",
          "line": 626
        },
        {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::load_configuration",
          "line": 86
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_load_playbook_without_commands_wrapper",
          "line": 217
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_load_playbook_nonexistent",
          "line": 210
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_load_playbook_yaml",
          "line": 152
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_load_playbook_invalid_format",
          "line": 195
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_load_playbook_json",
          "line": 175
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_strict:118": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_against_definition",
          "line": 103
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperationsBuilder::with_dirty_status:71": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_dirty_status",
          "line": 334
        },
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::dirty_git_repo",
          "line": 25
        }
      ],
      "./src/worktree/manager.rs:CleanupConfig::default:20": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_cleanup_config_defaults",
          "line": 942
        }
      ],
      "./src/testing/helpers/assertions.rs:assert_file_exists:45": [
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_file_exists_panic",
          "line": 173
        },
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_file_exists",
          "line": 163
        },
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_not_contains",
          "line": 76
        },
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_files_equal",
          "line": 89
        },
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_contains",
          "line": 63
        }
      ],
      "./src/cook/workflow/executor_tests.rs:MockMetricsCoordinator::new:277": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::display_success:136": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_display_formatting",
          "line": 422
        }
      ],
      "./src/cook/execution/data_pipeline.rs:DataPipeline::extract_field_value:154": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::apply_field_mapping",
          "line": 141
        }
      ],
      "./src/main.rs:display_worktree_session:206": [
        {
          "file": "./src/main.rs",
          "name": "handle_list_command",
          "line": 253
        }
      ],
      "./src/abstractions/claude.rs:MockClaudeClient::implement_spec:664": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_builder",
          "line": 249
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_client",
          "line": 709
        }
      ],
      "./src/session/state.rs:SessionProgress::get_workflow_timing:408": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        }
      ],
      "./src/commands/result.rs:CommandResult::from_output:60": [
        {
          "file": "./src/commands/result.rs",
          "name": "tests::test_from_output",
          "line": 191
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::extract_section:137": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_options_section",
          "line": 132
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_variables_section",
          "line": 127
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::update_session_state:222": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_checkpoint",
          "line": 603
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_updates",
          "line": 71
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_error_handling",
          "line": 198
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "update_interrupted_state",
          "line": 48
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::mark_session_abandoned",
          "line": 650
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_checkpoint",
          "line": 591
        }
      ],
      "./src/config/command.rs:Command::with_retries:446": [
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_serialization_roundtrip",
          "line": 369
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_creation",
          "line": 527
        }
      ],
      "./src/commands/context.rs:ExecutionContext::full_env:131": [
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        }
      ],
      "./src/testing/mocks/claude.rs:MockClaudeClientBuilder::with_success:39": [
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::git_subprocess",
          "line": 61
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_call_counting",
          "line": 291
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_mock_builders",
          "line": 315
        },
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::successful_claude",
          "line": 37
        },
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_builder",
          "line": 147
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::successful_claude",
          "line": 223
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_builder",
          "line": 249
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::dirty_repo_git",
          "line": 212
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_fail_after",
          "line": 275
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::clean_repo_git",
          "line": 201
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystem::is_file:95": [
        {
          "file": "./src/testing/helpers/mod.rs",
          "name": "count_files",
          "line": 103
        },
        {
          "file": "./src/testing/helpers/mod.rs",
          "name": "dirs_equal",
          "line": 115
        }
      ],
      "./src/cook/session/adapter.rs:SessionManagerAdapter::start_session:83": [
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_save_and_load_state",
          "line": 448
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_complete_session_lifecycle",
          "line": 416
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_session_lifecycle",
          "line": 341
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_start_session",
          "line": 328
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_state_conversion",
          "line": 382
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::clone_executor:1481": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_map_phase",
          "line": 406
        }
      ],
      "./src/config/command_discovery.rs:CommandDiscovery::new:19": [
        {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_scan_commands_filters_correctly",
          "line": 138
        },
        {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_needs_refresh",
          "line": 196
        },
        {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_cache_behavior",
          "line": 165
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::default",
          "line": 315
        },
        {
          "file": "./src/config/command_discovery.rs",
          "name": "tests::test_scan_empty_directory",
          "line": 126
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::with_read_error:196": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_errors",
          "line": 252
        }
      ],
      "./src/cook/interaction/display.rs:MockProgressDisplay::step_start:412": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_step_display",
          "line": 597
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperations::get_last_commit_message:194": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_error",
          "line": 382
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_operations",
          "line": 358
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "get_last_commit_message",
          "line": 35
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::extract_spec_from_git",
          "line": 39
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_spec_id_extraction",
          "line": 130
        }
      ],
      "./src/testing/mod.rs:TestFixtures::successful_claude:223": [
        {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_fixtures",
          "line": 334
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_successful_improvement_loop",
          "line": 15
        }
      ],
      "./src/session/events.rs:LoggingObserver::new:106": [
        {
          "file": "./src/cook/session/migration.rs",
          "name": "create_full_featured_manager",
          "line": 14
        }
      ],
      "./src/git/parsers.rs:parse_unmerged_line:119": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_line_entry",
          "line": 22
        }
      ],
      "./src/init/mod.rs:initialize_directories:272": [
        {
          "file": "./src/init/mod.rs",
          "name": "validate_project_structure",
          "line": 245
        }
      ],
      "./src/testing/mod.rs:TestFixtures::rate_limited_claude:236": [
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_rate_limit_handling",
          "line": 81
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystem::exists:88": [
        {
          "file": "./src/init/mod.rs",
          "name": "install_command",
          "line": 222
        },
        {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::get",
          "line": 36
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::exists",
          "line": 128
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::collect_all_states",
          "line": 72
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::get_history",
          "line": 141
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_with_explicit_path",
          "line": 31
        },
        {
          "file": "./src/init/mod.rs",
          "name": "handle_existing_commands",
          "line": 126
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::remove",
          "line": 77
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::validate_parent_state",
          "line": 923
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        {
          "file": "./src/init/mod.rs",
          "name": "initialize_directories",
          "line": 272
        },
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::delete",
          "line": 90
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::load_or_create",
          "line": 98
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::restore_session",
          "line": 620
        },
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::load",
          "line": 56
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_project",
          "line": 115
        }
      ],
      "./src/testing/helpers/mod.rs:create_rust_project:44": [
        {
          "file": "./src/testing/helpers/mod.rs",
          "name": "tests::test_create_rust_project",
          "line": 159
        }
      ],
      "./src/commands/handlers/claude.rs:ClaudeHandler::schema:27": [
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_schema",
          "line": 216
        }
      ],
      "./src/commands/result.rs:CommandResult::error:47": [
        {
          "file": "./src/commands/result.rs",
          "name": "tests::test_error_result",
          "line": 183
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandError::to_result",
          "line": 137
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::execute",
          "line": 85
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        {
          "file": "./src/commands/result.rs",
          "name": "tests::test_to_result",
          "line": 208
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        }
      ],
      "./src/cook/mod.rs:load_playbook_with_mapreduce:225": [
        {
          "file": "./src/cook/mod.rs",
          "name": "load_workflow_with_mapreduce",
          "line": 204
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_load_debtmap_mapreduce_workflow",
          "line": 516
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_load_mapreduce_workflow",
          "line": 465
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::create_worktree:199": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_create_worktree_invalid_path",
          "line": 526
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_against_definition:103": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_command",
          "line": 78
        }
      ],
      "./src/cook/interaction/mod.rs:MockUserInteraction::display_info:519": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_user_interaction",
          "line": 362
        }
      ],
      "./src/testing/config.rs:TestConfigurationBuilder::add_arg:125": [
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_builder_with_all_options",
          "line": 199
        }
      ],
      "./src/config/command_parser.rs:parse_command_string:14": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::from_string",
          "line": 419
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_simple_command",
          "line": 116
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_with_options",
          "line": 141
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_string_empty",
          "line": 231
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_string_with_variables",
          "line": 219
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_string_parsing",
          "line": 244
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_with_slash",
          "line": 124
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_with_variable",
          "line": 152
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_string_simple",
          "line": 207
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_command_with_args",
          "line": 130
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_parse_complex_command",
          "line": 185
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::when_command:166": [
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_custom_response",
          "line": 592
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::apply_event:85": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        }
      ],
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::new:30": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::default",
          "line": 24
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_prompt_choice_empty_choices",
          "line": 323
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::new",
          "line": 91
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::with_verbosity",
          "line": 98
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::list_interrupted_sessions:640": [
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_empty",
          "line": 191
        }
      ],
      "./src/cook/git_ops.rs:tests::check_git_status_in_dir:100": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_stage_all_changes_success",
          "line": 265
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_check_git_status_with_changes",
          "line": 348
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_check_git_status_success",
          "line": 338
        }
      ],
      "./src/cook/execution/claude.rs:ClaudeExecutorImpl::check_claude_cli:98": [
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_check",
          "line": 192
        }
      ],
      "./src/subprocess/builder.rs:ProcessCommandBuilder::current_dir:61": [
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::add",
          "line": 121
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::validate_parent_state",
          "line": 923
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_default_branch",
          "line": 1127
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_force_overwrite",
          "line": 440
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::current_branch",
          "line": 184
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_with_symlinks",
          "line": 565
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_with_existing_commands",
          "line": 402
        },
        {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_test_repo",
          "line": 10
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_specific_commands",
          "line": 478
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::git_in_dir",
          "line": 84
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head",
          "line": 1414
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command_in_dir",
          "line": 162
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_respects_working_directory",
          "line": 1730
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_current_head",
          "line": 1206
        },
        {
          "file": "./src/testing/helpers/mod.rs",
          "name": "run_command",
          "line": 81
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_worktree_manager",
          "line": 69
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_parent_to_main",
          "line": 1064
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::is_branch_merged",
          "line": 669
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_is_git_repo",
          "line": 144
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::create_agent_branch",
          "line": 860
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::remove_worktree",
          "line": 166
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::log",
          "line": 202
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_create_commands",
          "line": 368
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_modified_files",
          "line": 840
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::commit",
          "line": 94
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::create_worktree",
          "line": 142
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_already_initialized",
          "line": 634
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_worktree_commits",
          "line": 818
        },
        {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_regular_repo",
          "line": 1588
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_success",
          "line": 602
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_is_git_repository",
          "line": 314
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::list_sessions:259": [
        {
          "file": "./src/main.rs",
          "name": "handle_merge_command",
          "line": 269
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_all_sessions",
          "line": 572
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        {
          "file": "./src/main.rs",
          "name": "handle_list_command",
          "line": 253
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_worktree_for_branch",
          "line": 582
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_sessions",
          "line": 98
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::ensure_mmm_directory:62": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_ensure_mmm_directory",
          "line": 367
        }
      ],
      "./src/commands/handlers/file.rs:FileHandler::schema:29": [
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "tests::test_file_handler_schema",
          "line": 309
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::get_modified_files:840": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        }
      ],
      "./src/cook/execution/mapreduce.rs:AgentContext::new:221": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_agent_context_update_with_output",
          "line": 78
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_agent_context_to_interpolation_context",
          "line": 108
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_agent_context_creation",
          "line": 54
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        }
      ],
      "./src/testing/config.rs:TestConfigurations::full_test:169": [
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_common_configurations",
          "line": 230
        }
      ],
      "./src/commands/handlers/claude.rs:ClaudeHandler::new:16": [
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_schema",
          "line": 216
        },
        {
          "file": "./src/commands/handlers/mod.rs",
          "name": "all_handlers",
          "line": 16
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::default",
          "line": 198
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_execute",
          "line": 226
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::with_defaults",
          "line": 22
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_dry_run",
          "line": 268
        }
      ],
      "./src/simple_state/state.rs:StateManager::load_or_create:98": [
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        }
      ],
      "./src/abstractions/claude.rs:RealClaudeClient::new:303": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::default",
          "line": 337
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::get_current_head:1206": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        }
      ],
      "./src/commands/result.rs:CommandResult::is_success:84": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_handler_command",
          "line": 1367
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::add_error_response:260": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_extract_spec_from_git_error",
          "line": 315
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_git_operation_failures",
          "line": 64
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_error",
          "line": 382
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_worktree_creation_failure",
          "line": 91
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::with_error",
          "line": 142
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_merge_conflicts",
          "line": 105
        }
      ],
      "./src/worktree/test_state.rs:setup_test_repo:7": [
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_updates",
          "line": 71
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_error_handling",
          "line": 198
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_file_creation",
          "line": 38
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_gitignore_creation",
          "line": 106
        }
      ],
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::read_line:34": [
        {
          "file": "./src/init/mod.rs",
          "name": "handle_existing_commands",
          "line": 126
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_yes_no",
          "line": 80
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::read_line",
          "line": 34
        },
        {
          "file": "./src/main.rs",
          "name": "handle_merge_command",
          "line": 269
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_choice",
          "line": 107
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_text",
          "line": 90
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::cleanup_session:508": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_all_sessions",
          "line": 572
        }
      ],
      "./src/testing/config.rs:TestConfiguration::into_arc:64": [
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_into_arc",
          "line": 252
        }
      ],
      "./src/subprocess/mod.rs:SubprocessManager::runner:149": [
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_success",
          "line": 602
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_already_initialized",
          "line": 634
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_with_existing_commands",
          "line": 402
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_command",
          "line": 52
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_create_commands",
          "line": 368
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_specific_commands",
          "line": 478
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_with_symlinks",
          "line": 565
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::is_branch_merged",
          "line": 669
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_force_overwrite",
          "line": 440
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command_in_dir",
          "line": 162
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_is_git_repository",
          "line": 314
        }
      ],
      "./src/cook/coordinators/session.rs:DefaultSessionCoordinator::start_session:61": [
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session",
          "line": 12
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_track_iteration",
          "line": 79
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_update_status",
          "line": 48
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_session_lifecycle",
          "line": 210
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session_failure",
          "line": 32
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_success",
          "line": 105
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_failure",
          "line": 129
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_concurrent_sessions",
          "line": 53
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_get_session_info",
          "line": 151
        },
        {
          "file": "./src/cook/session/migration.rs",
          "name": "example_migration",
          "line": 34
        }
      ],
      "./src/init/mod.rs:display_installation_summary:201": [
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        }
      ],
      "./src/subprocess/mock.rs:MockCommandConfig::returns_stderr:154": [
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_command_failure",
          "line": 249
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        }
      ],
      "./src/cook/session/adapter.rs:SessionManagerAdapter::inner:37": [
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_adapter_creation",
          "line": 318
        }
      ],
      "./src/cook/execution/runner.rs:RealCommandRunner::run_with_context:69": [
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_command_with_context",
          "line": 140
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::execute",
          "line": 112
        }
      ],
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::cleanup_session:116": [
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_uuid_name",
          "line": 81
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_already_merged",
          "line": 177
        },
        {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_sessions",
          "line": 98
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_file_creation",
          "line": 38
        },
        {
          "file": "./src/main.rs",
          "name": "handle_merge_command",
          "line": 269
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_updates",
          "line": 71
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::cleanup",
          "line": 440
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::list_active_sessions:243": [
        {
          "file": "./src/session/manager.rs",
          "name": "tests::test_concurrent_sessions",
          "line": 393
        }
      ],
      "./src/cook/mod.rs:cook:35": [
        {
          "file": "./src/cook/mod.rs",
          "name": "run_improvement_loop",
          "line": 386
        },
        {
          "file": "./src/main.rs",
          "name": "main",
          "line": 119
        }
      ],
      "./src/config/command.rs:CommandArg::is_variable:50": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::build_command",
          "line": 1161
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_command",
          "line": 226
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_strict",
          "line": 118
        }
      ],
      "./src/cook/session/tracker.rs:SessionTrackerImpl::get_state:99": [
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_tracker_basic",
          "line": 188
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_updates",
          "line": 241
        },
        {
          "file": "./src/cook/session/migration.rs",
          "name": "example_recovery",
          "line": 106
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_state_persistence",
          "line": 214
        }
      ],
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::prompt_text:90": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::prompt_text",
          "line": 112
        }
      ],
      "./src/cook/interaction/mod.rs:MockUserInteraction::display_warning:526": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_user_interaction",
          "line": 362
        }
      ],
      "./src/cook/git_ops.rs:tests::create_temp_git_repo:182": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_get_last_commit_message_success",
          "line": 237
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_get_last_commit_message_no_commits",
          "line": 255
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "mock_tests::test_stage_all_changes_with_mock",
          "line": 430
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_check_git_status_success",
          "line": 338
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_stage_all_changes_success",
          "line": 265
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_no_staged_changes",
          "line": 323
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_stage_all_changes_no_changes",
          "line": 286
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_check_git_status_with_changes",
          "line": 348
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "mock_tests::test_create_commit_with_mock",
          "line": 450
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_success",
          "line": 300
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::notify_observers:77": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        }
      ],
      "./src/cook/interaction/display.rs:BoxChars::unicode:158": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::box_chars",
          "line": 122
        }
      ],
      "./src/testing/mod.rs:MockClaudeBuilder::is_available:173": [
        {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_mock_builders",
          "line": 315
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::rate_limited_claude",
          "line": 236
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::successful_claude",
          "line": 223
        }
      ],
      "./src/worktree/mod.rs:WorktreeSession::new:144": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::restore_session",
          "line": 620
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        }
      ],
      "./src/cook/git_ops.rs:is_git_repo:71": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::check_prerequisites",
          "line": 196
        },
        {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::verify_git_repository",
          "line": 79
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_public_api_functions_in_real_repo",
          "line": 369
        }
      ],
      "./src/testing/mocks/subprocess.rs:MockSubprocessManagerBuilder::new:20": [
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_default_response",
          "line": 179
        },
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::git_subprocess",
          "line": 61
        },
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::builder",
          "line": 93
        },
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::default",
          "line": 14
        },
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_builder",
          "line": 147
        }
      ],
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::extract_command_string:69": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_command_string_simple_object",
          "line": 309
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_command_string_structured",
          "line": 293
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "tests::test_extract_command_string_simple",
          "line": 286
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::convert_to_workflow_step",
          "line": 119
        }
      ],
      "./src/cook/coordinators/environment.rs:DefaultEnvironmentCoordinator::new:64": [
        {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_not_a_repo",
          "line": 35
        },
        {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_success",
          "line": 14
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::verbosity:290": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::verbosity",
          "line": 164
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::complete_session:229": [
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        {
          "file": "./src/session/manager.rs",
          "name": "tests::test_concurrent_sessions",
          "line": 393
        },
        {
          "file": "./src/session/manager.rs",
          "name": "tests::test_session_lifecycle",
          "line": 344
        },
        {
          "file": "./src/cook/session/migration.rs",
          "name": "example_migration",
          "line": 34
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_concurrent_sessions",
          "line": 53
        }
      ],
      "./src/cook/session/adapter.rs:SessionManagerAdapter::load_state:305": [
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_save_and_load_state",
          "line": 448
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::get_state:213": [
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        {
          "file": "./src/session/manager.rs",
          "name": "tests::test_session_lifecycle",
          "line": 344
        }
      ],
      "./src/cook/interaction/display.rs:MockProgressDisplay::error:369": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_display",
          "line": 479
        }
      ],
      "./src/commands/result.rs:CommandResult::success:34": [
        {
          "file": "./src/commands/result.rs",
          "name": "tests::test_success_result",
          "line": 175
        },
        {
          "file": "./src/commands/result.rs",
          "name": "tests::test_to_result",
          "line": 208
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "TestHandler::execute",
          "line": 157
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        {
          "file": "./src/commands/result.rs",
          "name": "tests::test_with_duration",
          "line": 202
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "MockHandler::execute",
          "line": 102
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        }
      ],
      "./src/session/storage.rs:InMemoryStorage::save:126": [
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_persistence",
          "line": 19
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_state_file_permissions",
          "line": 228
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_concurrent_state_access",
          "line": 148
        }
      ],
      "./src/main.rs:handle_clean_command:324": [
        {
          "file": "./src/main.rs",
          "name": "run_worktree_command",
          "line": 395
        }
      ],
      "./src/subprocess/mock.rs:MockCommandConfig::finish:178": [
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_command_failure",
          "line": 249
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_parse_errors",
          "line": 270
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_claude_runner",
          "line": 142
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_git_runner",
          "line": 124
        }
      ],
      "./src/testing/mocks/session.rs:MockSessionManager::new:28": [
        {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::default",
          "line": 21
        },
        {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::failing",
          "line": 42
        }
      ],
      "./src/testing/mocks/subprocess.rs:MockSubprocessManager::new:85": [
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_history",
          "line": 162
        },
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::default",
          "line": 79
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::is_repository:125": [
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_repository_failure",
          "line": 415
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_repository_success",
          "line": 389
        }
      ],
      "./src/simple_state/types.rs:SessionRecord::new:40": [
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_recording",
          "line": 38
        },
        {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::default",
          "line": 60
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_sorting",
          "line": 254
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_record_edge_cases",
          "line": 189
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_retrieval",
          "line": 131
        }
      ],
      "./src/cook/execution/mapreduce.rs:ProgressTracker::complete_item:183": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::run_agent",
          "line": 467
        }
      ],
      "./src/commands/mod.rs:CommandHandlerBuilder::build:71": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_test_mode_no_changes_command",
          "line": 904
        },
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_should_simulate_no_changes",
          "line": 218
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_unavailable",
          "line": 265
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command_in_dir",
          "line": 162
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_command_not_found",
          "line": 30
        },
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_builder",
          "line": 147
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_git_command_with_classifier",
          "line": 369
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::dirty_repo_git",
          "line": 212
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_builder",
          "line": 236
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_list_dir",
          "line": 289
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_failure",
          "line": 20
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_is_git_repository",
          "line": 314
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_command",
          "line": 52
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::rate_limited_claude",
          "line": 236
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_with_existing_commands",
          "line": 402
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_builder",
          "line": 249
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_force_overwrite",
          "line": 440
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_call_counting",
          "line": 291
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::with_no_changes",
          "line": 153
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::worktree",
          "line": 161
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::clean_repo_git",
          "line": 201
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::is_branch_merged",
          "line": 669
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_create_commands",
          "line": 368
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::create_worktree",
          "line": 142
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_builder_with_all_options",
          "line": 199
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_handle_test_mode_execution_success",
          "line": 870
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_into_arc",
          "line": 252
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_fail_after",
          "line": 275
        },
        {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::run_command",
          "line": 229
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_focus_tracking_test",
          "line": 950
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::current_branch",
          "line": 184
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_mock_builders",
          "line": 315
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_builder",
          "line": 318
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::commit",
          "line": 94
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::full_test",
          "line": 169
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::add",
          "line": 121
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::remove_worktree",
          "line": 166
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_specific_commands",
          "line": 478
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_timeout",
          "line": 43
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_errors",
          "line": 252
        },
        {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::check_availability",
          "line": 32
        },
        {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_not_a_repo",
          "line": 35
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_with_symlinks",
          "line": 565
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_success",
          "line": 7
        },
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_default_response",
          "line": 179
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_already_initialized",
          "line": 634
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "tests::test_command_handler_builder",
          "line": 116
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        },
        {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_success",
          "line": 14
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_dirty_status",
          "line": 334
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_project_structure",
          "line": 273
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_success",
          "line": 602
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::log",
          "line": 202
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::successful_claude",
          "line": 223
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        }
      ],
      "./src/cook/execution/data_pipeline.rs:Sorter::sort:791": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_sorter_single_field",
          "line": 970
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::list_commands",
          "line": 299
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_sorter_multiple_fields",
          "line": 987
        }
      ],
      "./src/testing/helpers/assertions.rs:assert_approx_eq:145": [
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_approx_eq",
          "line": 200
        }
      ],
      "./src/subprocess/runner.rs:ExitStatus::code:42": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "TokioProcessRunner::run",
          "line": 85
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_command",
          "line": 52
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::remove_worktree",
          "line": 166
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::add",
          "line": 121
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::create_worktree",
          "line": 142
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::commit",
          "line": 94
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command_in_dir",
          "line": 162
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::run_command",
          "line": 229
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_command",
          "line": 842
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::current_branch",
          "line": 184
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::log",
          "line": 202
        },
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "RealSubprocessExecutor::execute",
          "line": 33
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_shell_command",
          "line": 1325
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::json_to_attribute_value:1263": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::determine_command_type",
          "line": 1198
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::json_to_attribute_value",
          "line": 1263
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::parse_options:196": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_sections",
          "line": 66
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::is_git_repo:142": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_get_current_branch",
          "line": 489
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_create_worktree_invalid_path",
          "line": 526
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_stage_all_changes_and_commit",
          "line": 470
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_handler_command:765": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_reduce_phase:955": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        }
      ],
      "./src/testing/test_mocks.rs:CargoMocks::build_success:31": [
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::cleanup:440": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_auto_accept_worktree_merge",
          "line": 2238
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::run",
          "line": 148
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_worktree_cleanup_after_merge",
          "line": 2319
        }
      ],
      "./src/subprocess/adapter.rs:MockSubprocessExecutor::new:112": [
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::default",
          "line": 105
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_test_with_features",
          "line": 287
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_build",
          "line": 254
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_status",
          "line": 250
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_execute",
          "line": 168
        },
        {
          "file": "./src/commands/context.rs",
          "name": "tests::test_with_executor",
          "line": 191
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_execute",
          "line": 226
        }
      ],
      "./src/session/mod.rs:SessionId::from_string:37": [
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::list",
          "line": 69
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        {
          "file": "./src/session/storage.rs",
          "name": "tests::test_file_storage",
          "line": 154
        }
      ],
      "./src/main.rs:handle_merge_command:269": [
        {
          "file": "./src/main.rs",
          "name": "run_worktree_command",
          "line": 395
        }
      ],
      "./src/cook/git_ops.rs:git_command:27": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_public_api_functions_in_real_repo",
          "line": 369
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::new:19": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_extract_description_multiline",
          "line": 448
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_minimal_definition",
          "line": 426
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::default",
          "line": 315
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::default",
          "line": 269
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_parse_frontmatter",
          "line": 351
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::test_parse_sections",
          "line": 390
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::new:155": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_project_structure",
          "line": 273
        },
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::rust_project_fs",
          "line": 68
        },
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::complex_project_fs",
          "line": 73
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::builder",
          "line": 32
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_errors",
          "line": 252
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::default",
          "line": 149
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_builder",
          "line": 236
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_list_dir",
          "line": 289
        }
      ],
      "./src/testing/mocks/claude.rs:MockClaudeClient::reset_call_count:106": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_call_counting",
          "line": 291
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_argument_type:171": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_strict",
          "line": 118
        }
      ],
      "./src/cook/session/tracker.rs:SessionTrackerImpl::save_state:103": [
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_state_persistence",
          "line": 214
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_atomic_save_prevents_corruption",
          "line": 273
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::check_prerequisites:196": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::run",
          "line": 148
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        }
      ],
      "./src/cook/interaction/display.rs:BoxChars::ascii:169": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::box_chars",
          "line": 122
        }
      ],
      "./src/subprocess/builder.rs:ProcessCommandBuilder::env:42": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        },
        {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::new:298": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_mapreduce",
          "line": 1274
        }
      ],
      "./src/cook/session/tracker.rs:SessionTrackerImpl::complete_session:90": [
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_tracker_basic",
          "line": 188
        }
      ],
      "./src/config/command_validator.rs:CommandRegistry::get:222": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 113
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_scenario",
          "line": 185
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_template",
          "line": 87
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::extract_field_value",
          "line": 154
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_state",
          "line": 213
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::execute",
          "line": 85
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::resolve",
          "line": 56
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::get",
          "line": 73
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate_function",
          "line": 676
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 169
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::read_file",
          "line": 56
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_variables_to_args",
          "line": 165
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_in_current",
          "line": 273
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "expand_string",
          "line": 95
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_frontmatter",
          "line": 48
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_progress",
          "line": 221
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::prompt_yes_no",
          "line": 42
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_command",
          "line": 226
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::apply_defaults",
          "line": 366
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_from_path",
          "line": 54
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager_edge_cases",
          "line": 205
        },
        {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::load",
          "line": 134
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_corrupted_cache_entry",
          "line": 305
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::implement_spec",
          "line": 201
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::evaluate_filter",
          "line": 346
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_nested_object",
          "line": 1531
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 149
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_get_handler",
          "line": 187
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_expiration",
          "line": 86
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::debug_workflow_parsing_error",
          "line": 837
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager",
          "line": 50
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "GitCommandType::classify",
          "line": 21
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::write_file",
          "line": 73
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::validate",
          "line": 101
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::lint",
          "line": 222
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::compare_items",
          "line": 796
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::recursive_descent",
          "line": 325
        },
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::run_command",
          "line": 97
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::get_schema",
          "line": 116
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        }
      ],
      "./src/commands/registry.rs:CommandRegistry::list:79": [
        {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_registration",
          "line": 171
        }
      ],
      "./src/subprocess/adapter.rs:create_exit_status:83": [
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "create_output",
          "line": 67
        }
      ],
      "./src/commands/attributes.rs:AttributeValue::as_string:20": [
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        }
      ],
      "./src/testing/test_mocks.rs:TarpaulinMocks::coverage_report_poor:76": [
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        }
      ],
      "./src/simple_state/cache.rs:CacheManager::cache_path:121": [
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::exists",
          "line": 128
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::set",
          "line": 63
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::get",
          "line": 36
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::remove",
          "line": 77
        }
      ],
      "./src/cook/coordinators/execution.rs:DefaultExecutionCoordinator::execute_with_retry:159": [
        {
          "file": "./src/cook/coordinators/execution_tests.rs",
          "name": "tests::test_execute_with_retry",
          "line": 154
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::extract_options_section:132": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_sections",
          "line": 66
        }
      ],
      "./src/cook/interaction/mod.rs:MockUserInteraction::prompt_text:223": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_prompts",
          "line": 382
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_error_handling",
          "line": 436
        }
      ],
      "./src/abstractions/claude.rs:MockClaudeClient::add_response:577": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_success_response",
          "line": 582
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_error_response",
          "line": 592
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::progress:199": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_progress",
          "line": 128
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_progress",
          "line": 546
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::is_branch_merged:669": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        }
      ],
      "./src/commands/handlers/shell.rs:ShellHandler::new:16": [
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_execute",
          "line": 168
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::with_defaults",
          "line": 22
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_schema",
          "line": 158
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::default",
          "line": 140
        },
        {
          "file": "./src/commands/handlers/mod.rs",
          "name": "all_handlers",
          "line": 16
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_dry_run",
          "line": 200
        }
      ],
      "./src/testing/config.rs:TestConfigurationBuilder::no_changes_commands:93": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_builder_with_all_options",
          "line": 199
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_test_mode_no_changes_command",
          "line": 904
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::with_no_changes",
          "line": 153
        }
      ],
      "./src/cook/session/tracker.rs:SessionTrackerImpl::load_state:132": [
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_state_persistence",
          "line": 214
        }
      ],
      "./src/session/timing.rs:TimingTracker::complete_command:48": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        {
          "file": "./src/session/timing.rs",
          "name": "tests::test_timing_tracker",
          "line": 115
        }
      ],
      "./src/cook/interaction/display.rs:MockProgressDisplay::progress:376": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_display",
          "line": 479
        }
      ],
      "./src/cook/workflow/executor_tests.rs:MockSessionManager::get_updates:88": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_workflow_execution_single_iteration",
          "line": 1061
        }
      ],
      "./src/abstractions/claude.rs:MockClaudeClient::execute_command:615": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 646
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_add_success_response",
          "line": 783
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::lint",
          "line": 689
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_add_error_response",
          "line": 770
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::implement_spec",
          "line": 664
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::new:26": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_all_metadata_unset",
          "line": 767
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_options_with_defaults",
          "line": 889
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_mixed_options",
          "line": 988
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_metadata_already_set",
          "line": 808
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_options_already_set",
          "line": 936
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_list_commands",
          "line": 419
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_dynamic_registry_creation",
          "line": 336
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_partial_metadata",
          "line": 849
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_apply_definition_defaults_no_defaults",
          "line": 1044
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_permissive_validation",
          "line": 389
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_command_discovery_and_validation",
          "line": 351
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::with_write_error:201": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_errors",
          "line": 252
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::check_for_changes:94": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_check_for_changes",
          "line": 422
        }
      ],
      "./src/config/mod.rs:Config::merge_env_vars:111": [
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_merge_env_vars",
          "line": 539
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_claude_api_key_config_precedence_over_env",
          "line": 462
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_get_claude_api_key_from_env",
          "line": 441
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_merge_env_vars_editor_fallback",
          "line": 601
        }
      ],
      "./src/cook/git_ops.rs:tests::create_test_commit:209": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_stage_all_changes_success",
          "line": 265
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_stage_all_changes_no_changes",
          "line": 286
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_success",
          "line": 300
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_get_last_commit_message_success",
          "line": 237
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_no_staged_changes",
          "line": 323
        }
      ],
      "./src/cook/execution/runner.rs:MockCommandRunner::add_response:179": [
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_version",
          "line": 207
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_command_execution",
          "line": 222
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_executor_check",
          "line": 192
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_mock_command_runner",
          "line": 213
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        }
      ],
      "./src/config/command_validator.rs:validate_command:406": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_command_empty_command",
          "line": 527
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_command_invalid_name",
          "line": 508
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_command",
          "line": 78
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_validate_command_valid",
          "line": 491
        }
      ],
      "./src/cook/workflow/executor.rs:tests::test_get_current_head:1414": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_error_handling",
          "line": 1716
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_regular_repo",
          "line": 1588
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_in_worktree",
          "line": 1633
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head_respects_working_directory",
          "line": 1730
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::add_response:245": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_shell_command_with_on_failure_fail_workflow",
          "line": 1278
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_list_files",
          "line": 577
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_current_branch_detached_head",
          "line": 455
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_repository_success",
          "line": 389
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_error_response",
          "line": 260
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_claude_command",
          "line": 995
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_repository_failure",
          "line": 415
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_switch_branch",
          "line": 645
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_clean",
          "line": 600
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_current_branch",
          "line": 435
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_nothing_to_commit",
          "line": 532
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_status",
          "line": 555
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_stage_all",
          "line": 478
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_create_branch",
          "line": 620
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_shell_command_with_on_failure_retry",
          "line": 1209
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        }
      ],
      "./src/cook/session/tracker.rs:SessionTrackerImpl::new:17": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_state_persistence",
          "line": 214
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_updates",
          "line": 241
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator_with_config",
          "line": 1612
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_claude_unavailable",
          "line": 1704
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_atomic_save_prevents_corruption",
          "line": 273
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_tracker_basic",
          "line": 188
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_prerequisites_check_no_git",
          "line": 1656
        }
      ],
      "./src/subprocess/mock.rs:MockCommandConfig::returns_success:168": [
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_git_runner",
          "line": 124
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_claude_runner",
          "line": 142
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_parse_errors",
          "line": 270
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::parse_frontmatter:48": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_command_file",
          "line": 32
        }
      ],
      "./src/testing/mocks/claude.rs:MockClaudeClientBuilder::new:25": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_fail_after",
          "line": 275
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_builder",
          "line": 249
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::builder",
          "line": 98
        },
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::successful_claude",
          "line": 37
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_call_counting",
          "line": 291
        },
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::rate_limited_claude",
          "line": 48
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::default",
          "line": 19
        },
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::unavailable_claude",
          "line": 56
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "tests::test_mock_claude_unavailable",
          "line": 265
        }
      ],
      "./src/subprocess/mod.rs:SubprocessManager::mock:139": [
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_claude_runner",
          "line": 142
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_worktree_manager",
          "line": 69
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_git_runner",
          "line": 124
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::handle_worktree_merge:103": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_handle_worktree_merge",
          "line": 456
        }
      ],
      "./src/cook/workflow/executor_tests.rs:MockSessionManager::new:81": [
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_failure",
          "line": 129
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_success",
          "line": 105
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session",
          "line": 12
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_update_status",
          "line": 48
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_get_session_info",
          "line": 151
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_session_lifecycle",
          "line": 210
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_track_iteration",
          "line": 79
        }
      ],
      "./src/abstractions/claude.rs:RealClaudeClient::is_transient_error:316": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::collect_all_states:72": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_interrupted_sessions",
          "line": 640
        }
      ],
      "./src/testing/test_mocks.rs:TarpaulinMocks::coverage_report_good:59": [
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        }
      ],
      "./src/session/state.rs:IterationTiming::complete:230": [
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::complete_session",
          "line": 90
        },
        {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::complete_session",
          "line": 106
        },
        {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::complete_iteration",
          "line": 393
        }
      ],
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::get_messages:368": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_user_interaction",
          "line": 362
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_worktree_cleanup_after_merge",
          "line": 2319
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_spinner_handle",
          "line": 404
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_auto_accept_worktree_merge",
          "line": 2238
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_workflow_execution_single_iteration",
          "line": 1061
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_prompts",
          "line": 382
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::format_duration:131": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_mapreduce",
          "line": 1274
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::iteration_end",
          "line": 251
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        }
      ],
      "./src/init/mod.rs:validate_project_structure:245": [
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_not_git_repo",
          "line": 550
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_with_symlinks",
          "line": 565
        },
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        }
      ],
      "./src/testing/mod.rs:TestFixtures::unavailable_claude:245": [
        {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_fixtures",
          "line": 334
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_claude_cli_not_available",
          "line": 50
        }
      ],
      "./src/git/parsers.rs:extract_worktree_name:217": [
        {
          "file": "./src/git/parsers.rs",
          "name": "create_worktree_from_line",
          "line": 201
        }
      ],
      "./src/cook/interaction/mod.rs:MockUserInteraction::display_success:555": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_user_interaction",
          "line": 362
        }
      ],
      "./src/git/types.rs:GitDiff::is_empty:115": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::stage_files",
          "line": 433
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_untracked_line",
          "line": 46
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::build_command",
          "line": 1161
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::load_work_items_with_pipeline",
          "line": 354
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::add_json_object",
          "line": 316
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::from_config",
          "line": 33
        },
        {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_text",
          "line": 90
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_worktree_list",
          "line": 172
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_diff_output",
          "line": 132
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "update_worktree_info",
          "line": 224
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_argument_type",
          "line": 283
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_section",
          "line": 137
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_path",
          "line": 254
        },
        {
          "file": "./src/main.rs",
          "name": "handle_merge_command",
          "line": 269
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::code_review",
          "line": 464
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::collect_workflow_inputs",
          "line": 946
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_file_pattern_validation",
          "line": 2041
        },
        {
          "file": "./src/main.rs",
          "name": "handle_list_command",
          "line": 253
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::compile",
          "line": 187
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set_path",
          "line": 237
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_yes_no",
          "line": 80
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "shell_escape",
          "line": 350
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_against_definition",
          "line": 103
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::check_for_changes",
          "line": 94
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_argument_type",
          "line": 171
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "MockPrompter::prompt_text",
          "line": 154
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        {
          "file": "./src/init/mod.rs",
          "name": "select_templates",
          "line": 107
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::stage_files",
          "line": 222
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_description",
          "line": 93
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "TokioProcessRunner::run",
          "line": 85
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_choice",
          "line": 107
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::command_output",
          "line": 278
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::lint",
          "line": 527
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_current_branch",
          "line": 144
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::implement_spec",
          "line": 492
        },
        {
          "file": "./src/init/mod.rs",
          "name": "handle_existing_commands",
          "line": 126
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_current_branch",
          "line": 381
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 615
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        }
      ],
      "./src/simple_state/cache.rs:CacheManager::clear:86": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::clear_command_log",
          "line": 180
        },
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::reset_history",
          "line": 137
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_cleanup",
          "line": 277
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager",
          "line": 50
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::reset",
          "line": 64
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        }
      ],
      "./src/subprocess/mock.rs:MockCommandConfig::times:173": [
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        }
      ],
      "./src/config/command.rs:Command::with_arg:432": [
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_validation",
          "line": 292
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_expand_variables",
          "line": 159
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_variable_expansion",
          "line": 320
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_creation",
          "line": 527
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_serialization_roundtrip",
          "line": 369
        }
      ],
      "./src/git/parsers.rs:parse_diff_output:132": [
        {
          "file": "./src/git/parsers.rs",
          "name": "tests::test_parse_diff_output",
          "line": 301
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_diff",
          "line": 187
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_diff",
          "line": 408
        }
      ],
      "./src/commands/handlers/cargo.rs:CargoHandler::execute:62": [
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_test_with_features",
          "line": 287
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_dry_run",
          "line": 322
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_build",
          "line": 254
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationContext::child:224": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_context_inheritance",
          "line": 449
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_context_hierarchy",
          "line": 366
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::create_session:150": [
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_already_merged",
          "line": 177
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_updates",
          "line": 71
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_concurrent_sessions",
          "line": 53
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_uuid_name",
          "line": 81
        },
        {
          "file": "./src/cook/session/migration.rs",
          "name": "example_migration",
          "line": 34
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::setup_environment",
          "line": 216
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_sessions",
          "line": 98
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_file_creation",
          "line": 38
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::apply_defaults:94": [
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "apply_command_defaults",
          "line": 411
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::with_test_config:219": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        }
      ],
      "./src/commands/attributes.rs:AttributeValue::as_array:44": [
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationEngine::resolve_variable:180": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        }
      ],
      "./src/git/scenario.rs:format_status_output:296": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default_response",
          "line": 224
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::display_info:116": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_default_user_interaction_creation",
          "line": 355
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_display_formatting",
          "line": 422
        }
      ],
      "./src/git/parsers.rs:parse_status_line:56": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_line_entry",
          "line": 22
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::handle_on_failure:1405": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        }
      ],
      "./src/cook/retry.rs:handle_command_error:98": [
        {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::create_session:171": [
        {
          "file": "./src/session/manager.rs",
          "name": "tests::test_concurrent_sessions",
          "line": 393
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        {
          "file": "./src/session/manager.rs",
          "name": "tests::test_session_lifecycle",
          "line": 344
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_progress_tracking",
          "line": 214
        }
      ],
      "./src/git/types.rs:GitDiff::new:101": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::default",
          "line": 121
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_diff_output",
          "line": 132
        }
      ],
      "./src/config/mod.rs:GlobalConfig::default:89": [
        {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_global_config_default",
          "line": 659
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::run_analysis:33": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_run_analysis",
          "line": 247
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_run_analysis_with_coverage",
          "line": 272
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystem::add_file:36": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_basic_operations",
          "line": 216
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_file",
          "line": 161
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_project_structure",
          "line": 171
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationContext::new:219": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_default_values",
          "line": 420
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_map_results",
          "line": 308
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_work_item",
          "line": 273
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_complex_json_interpolation",
          "line": 472
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_undefined_variable_strict_mode",
          "line": 431
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_shell_output",
          "line": 329
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_context_hierarchy",
          "line": 366
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_undefined_variable_non_strict",
          "line": 440
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_arrays",
          "line": 393
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_strict_mode",
          "line": 423
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_context_inheritance",
          "line": 449
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_basic_interpolation",
          "line": 374
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_array_indexing",
          "line": 408
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_with_defaults",
          "line": 348
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_nested_property_access",
          "line": 387
        }
      ],
      "./src/commands/context.rs:ExecutionContext::resolve_path:117": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_path",
          "line": 254
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        {
          "file": "./src/commands/context.rs",
          "name": "tests::test_path_resolution",
          "line": 180
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::resolve_variable",
          "line": 180
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperations::create_worktree:223": [
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_worktree_creation_failure",
          "line": 91
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::update_session_metrics:99": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_update_session_metrics",
          "line": 441
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::json_to_attribute_value_static:241": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_float",
          "line": 1445
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_boolean_true",
          "line": 1452
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_string",
          "line": 1431
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_integer",
          "line": 1438
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_nested_object",
          "line": 1531
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_object",
          "line": 1507
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_array",
          "line": 1473
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_nested_array",
          "line": 1488
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value",
          "line": 237
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_null",
          "line": 1466
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_large_numbers",
          "line": 1575
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_json_to_attribute_value_static_boolean_false",
          "line": 1459
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::with_clean_repo:68": [
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_command_logging",
          "line": 608
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_commit_nothing_to_commit",
          "line": 623
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_clean_repo",
          "line": 522
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystem::list_dir:105": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_list_dir",
          "line": 289
        }
      ],
      "./src/testing/config.rs:TestConfigurations::production:178": [
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_common_configurations",
          "line": 230
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::is_clean:420": [
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_dirty_repo",
          "line": 542
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_clean_repo",
          "line": 522
        }
      ],
      "./src/main.rs:run_worktree_command:395": [
        {
          "file": "./src/main.rs",
          "name": "main",
          "line": 119
        }
      ],
      "./src/cook/session/adapter.rs:SessionManagerAdapter::get_state:234": [
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_state_conversion",
          "line": 382
        }
      ],
      "./src/cook/interaction/prompts.rs:MockPrompter::new:136": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_mock_prompter_text",
          "line": 194
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_mock_prompter_yes_no",
          "line": 183
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_mock_prompter_choice",
          "line": 214
        }
      ],
      "./src/cook/execution/runner.rs:RealCommandRunner::new:31": [
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_command_with_context",
          "line": 140
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "tests::test_real_command_runner",
          "line": 127
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::default",
          "line": 45
        }
      ],
      "./src/cook/git_ops.rs:tests::create_commit_in_dir:118": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "mock_tests::test_create_commit_with_mock",
          "line": 450
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_success",
          "line": 300
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_no_staged_changes",
          "line": 323
        }
      ],
      "./src/testing/mocks/subprocess.rs:MockSubprocessManager::run_command:97": [
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "tests::test_mock_subprocess_history",
          "line": 162
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::new:102": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_merge_session_claude_cli_failure",
          "line": 892
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_already_merged",
          "line": 177
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_updates",
          "line": 71
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_merge_updates_state",
          "line": 155
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::cleanup",
          "line": 440
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_worktree_manager",
          "line": 69
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_empty",
          "line": 191
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_success",
          "line": 1046
        },
        {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_success",
          "line": 14
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_file_creation",
          "line": 38
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_gitignore_creation",
          "line": 106
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_not_a_repo",
          "line": 35
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_sessions",
          "line": 98
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_state_error_handling",
          "line": 198
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_cleanup_session_after_merge_not_merged",
          "line": 969
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_increments_iteration",
          "line": 1109
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_worktree_manager_creation",
          "line": 37
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::test_handle_worktree_merge",
          "line": 456
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::setup_environment",
          "line": 216
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_uuid_name",
          "line": 81
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_claude_merge_command_construction",
          "line": 853
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_merge_session_success",
          "line": 874
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "test_list_sessions_with_state",
          "line": 124
        },
        {
          "file": "./src/main.rs",
          "name": "run_worktree_command",
          "line": 395
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_mapreduce",
          "line": 1274
        }
      ],
      "./src/session/state.rs:IterationTiming::new:219": [
        {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::start_iteration",
          "line": 387
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_claude_command:822": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_with_retry",
          "line": 891
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_claude_command",
          "line": 995
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_test_command",
          "line": 1020
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        }
      ],
      "./src/config/mapreduce.rs:MapReduceWorkflowConfig::to_map_phase:135": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_mapreduce_workflow",
          "line": 1065
        }
      ],
      "./src/testing/config.rs:TestConfigurationBuilder::track_focus:113": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_focus_tracking_test",
          "line": 950
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::full_test",
          "line": 169
        },
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_builder_with_all_options",
          "line": 199
        }
      ],
      "./src/session/timing.rs:TimingTracker::complete_iteration:35": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        },
        {
          "file": "./src/session/timing.rs",
          "name": "tests::test_timing_tracker",
          "line": 115
        }
      ],
      "./src/config/command.rs:Command::with_option:439": [
        {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_expand_variables",
          "line": 159
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_creation",
          "line": 527
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_serialization_roundtrip",
          "line": 369
        },
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_variable_expansion",
          "line": 320
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_serialization",
          "line": 593
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::execute_command:206": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::stage_files",
          "line": 433
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::list_worktrees",
          "line": 500
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_current_branch",
          "line": 381
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::stage_all",
          "line": 450
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_commit_message",
          "line": 393
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::delete_branch",
          "line": 479
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::create_worktree",
          "line": 487
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_diff",
          "line": 408
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_status",
          "line": 374
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::commit",
          "line": 455
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_repository",
          "line": 355
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::prune_worktrees",
          "line": 507
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::list_files",
          "line": 400
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::remove_worktree",
          "line": 494
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::init_repository",
          "line": 428
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::switch_branch",
          "line": 474
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::create_branch",
          "line": 469
        }
      ],
      "./src/commands/mod.rs:CommandHandlerBuilder::register:65": [
        {
          "file": "./src/commands/mod.rs",
          "name": "tests::test_command_handler_builder",
          "line": 116
        }
      ],
      "./src/cook/execution/data_pipeline.rs:JsonPath::recursive_descent:325": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::recursive_descent",
          "line": 325
        }
      ],
      "./src/session/timing.rs:TimingTracker::new:21": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::new",
          "line": 202
        },
        {
          "file": "./src/session/timing.rs",
          "name": "tests::test_timing_tracker",
          "line": 115
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::with_test_config",
          "line": 219
        },
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::default",
          "line": 80
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::setup_environment:216": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_setup_environment_basic",
          "line": 1750
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::run",
          "line": 148
        }
      ],
      "./src/subprocess/git.rs:GitRunnerImpl::status:52": [
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_git_runner",
          "line": 124
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_command_failure",
          "line": 249
        }
      ],
      "./src/session/storage.rs:FileSessionStorage::new:32": [
        {
          "file": "./src/session/tests.rs",
          "name": "test_storage_operations",
          "line": 275
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        {
          "file": "./src/cook/session/migration.rs",
          "name": "create_full_featured_manager",
          "line": 14
        },
        {
          "file": "./src/session/storage.rs",
          "name": "tests::test_file_storage",
          "line": 154
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::debug_output:284": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::debug_output",
          "line": 160
        }
      ],
      "./src/worktree/tests.rs:setup_test_repo:6": [
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_already_merged",
          "line": 177
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_uuid_name",
          "line": 81
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_sessions",
          "line": 98
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_empty",
          "line": 191
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_merge_session",
          "line": 149
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_with_mixed_states",
          "line": 205
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_all_interrupted",
          "line": 247
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_list_interrupted_sessions_none_interrupted",
          "line": 287
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_create_session_with_generated_name",
          "line": 55
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_cleanup_session",
          "line": 119
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_worktree_manager_creation",
          "line": 37
        }
      ],
      "./src/cook/interaction/mod.rs:MockUserInteraction::display_error:249": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_user_interaction",
          "line": 362
        }
      ],
      "./src/cook/git_ops.rs:tests::git_in_dir:84": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::stage_all_changes_in_dir",
          "line": 112
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::get_last_commit_message_in_dir",
          "line": 106
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_commit_in_dir",
          "line": 118
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::check_git_status_in_dir",
          "line": 100
        }
      ],
      "./src/cook/orchestrator.rs:TestMockGitOperations::git_command:1522": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::git_command_in_dir",
          "line": 1566
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::handle_no_commits_error:1224": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_handle_no_commits_error_general_command",
          "line": 968
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        }
      ],
      "./src/commands/handlers/git.rs:GitHandler::execute:46": [
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_status",
          "line": 250
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_commit_dry_run",
          "line": 281
        }
      ],
      "./src/git/parsers.rs:parse_renamed_line:101": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_line_entry",
          "line": 22
        }
      ],
      "./src/commands/handlers/shell.rs:ShellHandler::schema:27": [
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_schema",
          "line": 158
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        }
      ],
      "./src/subprocess/mod.rs:SubprocessManager::git:166": [
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_git_runner",
          "line": 124
        }
      ],
      "./src/init/mod.rs:run:286": [
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_with_existing_commands",
          "line": 402
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_already_initialized",
          "line": 634
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_specific_commands",
          "line": 478
        },
        {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::check_availability",
          "line": 32
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::create_worktree",
          "line": 142
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_success",
          "line": 602
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::log",
          "line": 202
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::run_command",
          "line": 229
        },
        {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_force_overwrite",
          "line": 440
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::add",
          "line": 121
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::current_branch",
          "line": 184
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        {
          "file": "./src/main.rs",
          "name": "main",
          "line": 119
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::commit",
          "line": 94
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::remove_worktree",
          "line": 166
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_create_commands",
          "line": 368
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_not_git_repo",
          "line": 351
        }
      ],
      "./src/testing/mocks/worktree.rs:MockWorktreeManagerBuilder::new:22": [
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::builder",
          "line": 82
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManagerBuilder::default",
          "line": 16
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_workflow:242": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::run",
          "line": 148
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_arg_resolution_only_for_commands_with_args",
          "line": 2060
        }
      ],
      "./src/config/command_validator.rs:CommandRegistry::apply_defaults:366": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "tests::test_apply_defaults",
          "line": 461
        }
      ],
      "./src/cook/git_ops.rs:get_last_commit_message:35": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_public_api_functions_in_real_repo",
          "line": 369
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_git_mutex_prevents_races",
          "line": 124
        }
      ],
      "./src/config/command_validator.rs:CommandRegistry::list_commands:397": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "tests::test_list_commands",
          "line": 419
        }
      ],
      "./src/config/command.rs:Command::with_timeout:453": [
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_serialization_roundtrip",
          "line": 369
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::test_command_creation",
          "line": 527
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute:318": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::execute",
          "line": 85
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_mapreduce",
          "line": 1274
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_workflow_execution_single_iteration",
          "line": 1061
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        }
      ],
      "./src/session/config.rs:ExecutionMode::worktree_name:45": [
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::worktree",
          "line": 161
        },
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_builder_with_all_options",
          "line": 199
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::matches_glob_pattern:732": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        }
      ],
      "./src/cook/retry.rs:check_claude_cli:151": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::check_prerequisites",
          "line": 196
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "tests::test_check_claude_cli_fallback",
          "line": 417
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "additional_tests::test_check_claude_cli_error_cases",
          "line": 530
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::set_scenario:60": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_non_repository",
          "line": 148
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_merge_conflict",
          "line": 108
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_clean_repo",
          "line": 68
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_dirty_repo",
          "line": 86
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_detached_head",
          "line": 130
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_shell_with_retry:891": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::restore_session:292": [
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        {
          "file": "./src/cook/session/migration.rs",
          "name": "example_recovery",
          "line": 106
        }
      ],
      "./src/commands/registry.rs:CommandRegistry::validate:101": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::validate",
          "line": 101
        }
      ],
      "./src/git/types.rs:CommitId::hash:186": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default_response",
          "line": 224
        }
      ],
      "./src/cook/orchestrator.rs:tests::create_test_orchestrator:1577": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_workflow_detects_structured_commands",
          "line": 1950
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_auto_accept_worktree_merge",
          "line": 2238
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_worktree_cleanup_after_merge",
          "line": 2319
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_process_glob_pattern_recursive",
          "line": 2435
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_setup_environment_basic",
          "line": 1750
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_process_glob_pattern_matches_files",
          "line": 2411
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_detect_structured_workflow",
          "line": 1789
        }
      ],
      "./src/testing/mod.rs:MockGitBuilder::new:123": [
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::clean_repo_git",
          "line": 201
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::default",
          "line": 116
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_mock_builders",
          "line": 315
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::dirty_repo_git",
          "line": 212
        }
      ],
      "./src/abstractions/claude.rs:MockClaudeClient::code_review:646": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_unavailable",
          "line": 732
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_focus_directive",
          "line": 164
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_error_response",
          "line": 746
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_client",
          "line": 709
        }
      ],
      "./src/subprocess/builder.rs:ProcessCommandBuilder::timeout:66": [
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_timeout",
          "line": 43
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        }
      ],
      "./src/cook/interaction/display.rs:MockProgressDisplay::command_output:426": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_command_output_display",
          "line": 620
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationEngine::parse_variable_expression:121": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_template",
          "line": 87
        }
      ],
      "./src/cook/interaction/display.rs:MockProgressDisplay::start_spinner:390": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_mock_spinner",
          "line": 498
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::supports_unicode:105": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::is_test_mode_no_changes_command:1364": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::handle_test_mode_execution",
          "line": 1152
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::display_error:124": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_display_formatting",
          "line": 422
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::record_event:197": [
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_progress_tracking",
          "line": 214
        },
        {
          "file": "./src/cook/session/migration.rs",
          "name": "example_migration",
          "line": 34
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        {
          "file": "./src/session/manager.rs",
          "name": "tests::test_session_lifecycle",
          "line": 344
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        {
          "file": "./src/cook/session/migration.rs",
          "name": "example_recovery",
          "line": 106
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_concurrent_sessions",
          "line": 53
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::get_type_name:243": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        }
      ],
      "./src/testing/mod.rs:MockGitBuilder::is_repo:130": [
        {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_success",
          "line": 14
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::dirty_repo_git",
          "line": 212
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::clean_repo_git",
          "line": 201
        },
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::clean_git_repo",
          "line": 17
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "tests::test_mock_builders",
          "line": 315
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_builder",
          "line": 318
        },
        {
          "file": "./src/cook/coordinators/environment_tests.rs",
          "name": "tests::test_verify_git_repository_not_a_repo",
          "line": 35
        },
        {
          "file": "./src/testing/fixtures/mod.rs",
          "name": "Fixtures::dirty_git_repo",
          "line": 25
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::get_current_branch:208": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_get_current_branch",
          "line": 489
        }
      ],
      "./src/cook/retry.rs:await_retry_delay:76": [
        {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        }
      ],
      "./src/config/command_validator.rs:CommandRegistry::register:218": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register_built_in_commands",
          "line": 78
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::register",
          "line": 65
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::is_focus_tracking_test:1359": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        }
      ],
      "./src/main.rs:display_worktree_session_legacy:248": [
        {
          "file": "./src/main.rs",
          "name": "display_worktree_session",
          "line": 206
        }
      ],
      "./src/commands/attributes.rs:AttributeSchema::add_required:116": [
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::schema",
          "line": 29
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::schema",
          "line": 27
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::schema",
          "line": 27
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::schema",
          "line": 27
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "tests::test_handler_validation",
          "line": 131
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_validation",
          "line": 217
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::create_agent_branch:860": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::new:51": [
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_clean_repo",
          "line": 522
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_merge_conflict",
          "line": 557
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_custom_response",
          "line": 592
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_dirty_repo",
          "line": 542
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_detached_head",
          "line": 569
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_commit_nothing_to_commit",
          "line": 623
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_non_repository",
          "line": 582
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_command_logging",
          "line": 608
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default",
          "line": 273
        }
      ],
      "./src/abstractions/claude.rs:MockClaudeClient::get_called_commands:602": [
        {
          "file": "./src/cook/tests.rs",
          "name": "cook_tests::test_focus_directive",
          "line": 164
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "tests::test_mock_claude_client",
          "line": 709
        }
      ],
      "./src/git/parsers.rs:create_worktree_from_line:201": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_worktree_list",
          "line": 172
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::find_files_matching_pattern:670": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::test_find_files_matching_pattern",
          "line": 1870
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        }
      ],
      "./src/cook/git_ops.rs:tests::get_last_commit_message_in_dir:106": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_get_last_commit_message_success",
          "line": 237
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_create_commit_success",
          "line": 300
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::test_get_last_commit_message_no_commits",
          "line": 255
        }
      ],
      "./src/testing/test_mocks.rs:CargoMocks::check_with_warnings:19": [
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        }
      ],
      "./src/testing/config.rs:TestConfigurations::test_mode:148": [
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_common_configurations",
          "line": 230
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::full_test",
          "line": 169
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_should_stop_early_in_test_mode",
          "line": 924
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::with_no_changes",
          "line": 153
        },
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_builder_with_all_options",
          "line": 199
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_handle_test_mode_execution_success",
          "line": 870
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::worktree",
          "line": 161
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_test_mode_no_changes_command",
          "line": 904
        },
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_into_arc",
          "line": 252
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_is_focus_tracking_test",
          "line": 950
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::get_default_branch:1127": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_parent_to_main",
          "line": 1064
        }
      ],
      "./src/session/storage.rs:InMemoryStorage::new:116": [
        {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::default",
          "line": 109
        }
      ],
      "./src/cook/execution/data_pipeline.rs:FilterExpression::evaluate_function:676": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        }
      ],
      "./src/cook/orchestrator.rs:DirGuard::drop:2482": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 113
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_create_orchestrator",
          "line": 404
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 169
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::lint",
          "line": 222
        },
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::run_command",
          "line": 97
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_map_phase",
          "line": 406
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_test_command",
          "line": 1020
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_with_retry",
          "line": 891
        }
      ],
      "./src/cook/coordinators/session.rs:DefaultSessionCoordinator::new:50": [
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session_failure",
          "line": 32
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_session_lifecycle",
          "line": 210
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_track_iteration",
          "line": 79
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_get_session_info",
          "line": 151
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_error_propagation",
          "line": 246
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_failure",
          "line": 129
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_update_status",
          "line": 48
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_complete_session_success",
          "line": 105
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session",
          "line": 12
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::convert_frontmatter_to_definition:232": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_frontmatter",
          "line": 48
        }
      ],
      "./src/subprocess/adapter.rs:MockSubprocessExecutor::expect_execute:118": [
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "tests::test_claude_handler_execute",
          "line": 226
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_build",
          "line": 254
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "tests::test_cargo_test_with_features",
          "line": 287
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_execute",
          "line": 168
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_status",
          "line": 250
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::create_minimal_definition:81": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_command_file",
          "line": 32
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::refresh",
          "line": 44
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_and_validate_command:1231": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        }
      ],
      "./src/testing/test_mocks.rs:CargoMocks::test_success:38": [
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_agent_commands:547": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::run_agent",
          "line": 467
        }
      ],
      "./src/commands/handlers/git.rs:GitHandler::new:16": [
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_status",
          "line": 250
        },
        {
          "file": "./src/commands/handlers/mod.rs",
          "name": "all_handlers",
          "line": 16
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_handler_schema",
          "line": 240
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::default",
          "line": 222
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::with_defaults",
          "line": 22
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_commit_dry_run",
          "line": 281
        }
      ],
      "./src/cook/session/adapter.rs:SessionManagerAdapter::save_state:290": [
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_save_and_load_state",
          "line": 448
        }
      ],
      "./src/config/command_parser.rs:expand_string:95": [
        {
          "file": "./src/config/command_parser.rs",
          "name": "expand_variables",
          "line": 77
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::merge_agent_to_parent:881": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        }
      ],
      "./src/testing/config.rs:TestConfigurationBuilder::add_no_changes_command:99": [
        {
          "file": "./src/testing/config.rs",
          "name": "tests::test_should_simulate_no_changes",
          "line": 218
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_mapreduce_workflow:1065": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        }
      ],
      "./src/simple_state/state.rs:StateManager::record_session:74": [
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_retrieval",
          "line": 131
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_session_recording",
          "line": 38
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_history_sorting",
          "line": 254
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::start_spinner:211": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_simple_spinner_handle_fail",
          "line": 560
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::start_spinner",
          "line": 132
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_spinner_lifecycle",
          "line": 536
        }
      ],
      "./src/cook/execution/mapreduce.rs:AgentContext::update_with_output:241": [
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_agent_context_update_with_output",
          "line": 78
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        }
      ],
      "./src/config/loader.rs:ConfigLoader::load_project:115": [
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_project_config",
          "line": 257
        }
      ],
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::prompt_choice:107": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "tests::test_prompt_choice_empty_choices",
          "line": 323
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::git_command:279": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::get_last_commit_message",
          "line": 292
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::create_commit",
          "line": 311
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::check_git_status",
          "line": 299
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::switch_branch",
          "line": 337
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command_in_dir",
          "line": 342
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::get_current_branch",
          "line": 330
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::stage_all_changes",
          "line": 306
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::create_worktree",
          "line": 321
        }
      ],
      "./src/subprocess/builder.rs:ProcessCommandBuilder::new:12": [
        {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command_in_dir",
          "line": 162
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_success",
          "line": 602
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::run_command",
          "line": 229
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_real_git_operations_is_git_repo",
          "line": 398
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::is_branch_merged",
          "line": 669
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_specific_commands",
          "line": 478
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_success",
          "line": 7
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_force_overwrite",
          "line": 440
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_validate_project_structure_with_symlinks",
          "line": 565
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_init_run_already_initialized",
          "line": 634
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::log",
          "line": 202
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_command_not_found",
          "line": 30
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::add",
          "line": 121
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_failure",
          "line": 20
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_is_git_repository",
          "line": 314
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_command",
          "line": 52
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::create_worktree",
          "line": 142
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::check_availability",
          "line": 436
        },
        {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::check_availability",
          "line": 32
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::commit",
          "line": 94
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_process_command_builder",
          "line": 158
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::remove_worktree",
          "line": 166
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::current_branch",
          "line": 184
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_with_existing_commands",
          "line": 402
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_production_runner_timeout",
          "line": 43
        },
        {
          "file": "./src/init/mod.rs",
          "name": "tests::test_run_init_create_commands",
          "line": 368
        },
        {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        }
      ],
      "./src/cook/mod.rs:load_workflow:216": [
        {
          "file": "./src/cook/mod.rs",
          "name": "cook_tests::test_load_workflow_default",
          "line": 427
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::extract_input_from_path:1005": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::process_glob_pattern",
          "line": 971
        }
      ],
      "./src/cook/execution/data_pipeline.rs:JsonPath::evaluate_filter:346": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        }
      ],
      "./src/cook/execution/mapreduce.rs:AgentContext::to_interpolation_context:251": [
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_agent_context_to_interpolation_context",
          "line": 108
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        }
      ],
      "./src/config/command_validator.rs:CommandRegistry::validate_argument_type:283": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_command",
          "line": 226
        }
      ],
      "./src/cook/coordinators/session.rs:DefaultSessionCoordinator::resume_session:118": [
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_resume_session",
          "line": 176
        }
      ],
      "./src/cook/session/state.rs:SessionState::increment_iteration:100": [
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::update_session",
          "line": 38
        },
        {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::update_session",
          "line": 80
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::track_iteration",
          "line": 154
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperations::check_git_status:202": [
        {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_git_command_tracking",
          "line": 545
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "tests::test_mock_git_operations",
          "line": 358
        },
        {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_concurrent_git_operations",
          "line": 522
        }
      ],
      "./src/config/command.rs:tests::verify_implement_spec_command:878": [
        {
          "file": "./src/config/command.rs",
          "name": "tests::test_workflow_config_with_new_syntax",
          "line": 804
        }
      ],
      "./src/git/parsers.rs:parse_status_line_entry:22": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        }
      ],
      "./src/subprocess/builder.rs:ProcessCommandBuilder::build:82": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        }
      ],
      "./src/cook/execution/data_pipeline.rs:Sorter::parse:754": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_sorter_single_field",
          "line": 970
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "tests::test_sorter_multiple_fields",
          "line": 987
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::from_config",
          "line": 33
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::detect_mergeable_sessions:690": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_detect_mergeable_sessions_empty",
          "line": 1018
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_merged_sessions",
          "line": 727
        },
        {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        }
      ],
      "./src/subprocess/mock.rs:MockProcessRunner::get_calls:92": [
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_shell_command_with_on_failure_retry",
          "line": 1209
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_switch_branch",
          "line": 645
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_execute_claude_command",
          "line": 995
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_stage_all",
          "line": 478
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_create_branch",
          "line": 620
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_repository_success",
          "line": 389
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystem::write_file:73": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "tests::test_mock_fs_errors",
          "line": 252
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::switch_branch:286": [
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_switch_branch",
          "line": 645
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::stage_all_changes:306": [
        {
          "file": "./src/cook/tests.rs",
          "name": "git_ops_tests::test_git_command_tracking",
          "line": 545
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_staging",
          "line": 345
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "stage_all_changes",
          "line": 51
        }
      ],
      "./src/git/mod.rs:tests::create_test_runner:382": [
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_list_files",
          "line": 577
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_stage_all",
          "line": 478
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_current_branch_detached_head",
          "line": 455
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_switch_branch",
          "line": 645
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_clean",
          "line": 600
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_status",
          "line": 555
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_nothing_to_commit",
          "line": 532
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_create_branch",
          "line": 620
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_repository_failure",
          "line": 415
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_get_current_branch",
          "line": 435
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_is_repository_success",
          "line": 389
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::load_state_from_file:61": [
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_load_state_from_file",
          "line": 410
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::collect_all_states",
          "line": 72
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::get_command_log:175": [
        {
          "file": "./src/git/scenario.rs",
          "name": "tests::test_scenario_mock_command_logging",
          "line": 608
        }
      ],
      "./src/session/mod.rs:SessionId::as_str:42": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_option_value",
          "line": 318
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::stage_files",
          "line": 433
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "expand_variables",
          "line": 77
        },
        {
          "file": "./src/init/templates.rs",
          "name": "get_templates_by_names",
          "line": 52
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::parse",
          "line": 754
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::compare",
          "line": 605
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_variables_to_args",
          "line": 165
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_frontmatter",
          "line": 48
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_template",
          "line": 87
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::stage_files",
          "line": 222
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::build_command",
          "line": 1161
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::check_value_type",
          "line": 256
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "expand_string",
          "line": 95
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::filter_sessions_by_status:48": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_interrupted_sessions",
          "line": 640
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "test_filter_sessions_by_status",
          "line": 316
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::build_command:1161": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::process_workflow_input:1020": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        }
      ],
      "./src/subprocess/mock.rs:MockProcessRunner::expect_command:36": [
        {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_parse_errors",
          "line": 270
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_claude_runner",
          "line": 142
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_metrics_collection",
          "line": 264
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_successful_analysis",
          "line": 180
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_basic",
          "line": 56
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "git_error_tests::test_git_command_failure",
          "line": 249
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TestMockSetup::setup_analysis_with_failures",
          "line": 237
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_mock_runner_multiple_calls",
          "line": 76
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_subprocess_manager",
          "line": 105
        },
        {
          "file": "./src/subprocess/tests.rs",
          "name": "subprocess_tests::test_git_runner",
          "line": 124
        }
      ],
      "./src/commands/context.rs:ExecutionContext::with_session_id:66": [
        {
          "file": "./src/commands/context.rs",
          "name": "tests::test_context_builder_pattern",
          "line": 152
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::check_git_status:124": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::check_for_changes",
          "line": 94
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "check_git_status",
          "line": 43
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "tests::test_mock_git_dirty_status",
          "line": 334
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "real_git_tests::test_stage_all_changes_and_commit",
          "line": 470
        }
      ],
      "./src/commands/handlers/git.rs:GitHandler::schema:27": [
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "tests::test_git_handler_schema",
          "line": 240
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::get_step_display_name:336": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_test",
          "line": 815
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_unnamed",
          "line": 845
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::handle_no_commits_error",
          "line": 1224
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_claude",
          "line": 765
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::test_get_step_display_name_shell",
          "line": 790
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 602
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 355
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystem::set_write_error:51": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_write_error",
          "line": 201
        }
      ],
      "./src/abstractions/claude.rs:RealClaudeClient::execute_command:344": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::lint",
          "line": 527
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::code_review",
          "line": 464
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::implement_spec",
          "line": 492
        }
      ],
      "./src/config/command_parser.rs:expand_variables:77": [
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_variable_expansion",
          "line": 320
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "tests::test_expand_variables",
          "line": 159
        }
      ],
      "./src/session/state.rs:SessionProgress::start_workflow:382": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        }
      ],
      "./src/testing/mocks/session.rs:MockSessionManager::failing:42": [
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_start_session_failure",
          "line": 32
        },
        {
          "file": "./src/cook/coordinators/session_tests.rs",
          "name": "tests::test_error_propagation",
          "line": 246
        }
      ],
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::validate_choice_input:42": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_choice",
          "line": 107
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::start_session:185": [
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        {
          "file": "./src/session/manager.rs",
          "name": "tests::test_concurrent_sessions",
          "line": 393
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_progress_tracking",
          "line": 214
        },
        {
          "file": "./src/session/manager.rs",
          "name": "tests::test_session_lifecycle",
          "line": 344
        }
      ],
      "./src/config/command.rs:Command::with_continue_on_error:460": [
        {
          "file": "./src/config/mod.rs",
          "name": "tests::test_command_serialization_roundtrip",
          "line": 369
        }
      ],
      "./src/commands/attributes.rs:AttributeSchema::add_optional:123": [
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::schema",
          "line": 27
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "tests::test_schema_validation",
          "line": 217
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::schema",
          "line": 27
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::schema",
          "line": 29
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::schema",
          "line": 27
        }
      ],
      "./src/commands/registry.rs:CommandRegistry::execute:85": [
        {
          "file": "./src/commands/registry.rs",
          "name": "tests::test_registry_execute",
          "line": 203
        }
      ],
      "./src/cook/signal_handler.rs:update_interrupted_state:48": [
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::test_termination_interrupt",
          "line": 154
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::test_update_interrupted_state",
          "line": 122
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "signal_tests::test_update_interrupted_state_error_handling",
          "line": 199
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "setup_interrupt_handlers",
          "line": 13
        }
      ],
      "./src/config/command_validator.rs:CommandRegistry::new:70": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::default",
          "line": 64
        }
      ],
      "./src/commands/handlers/shell.rs:ShellHandler::execute:45": [
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_execute",
          "line": 168
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "tests::test_shell_handler_dry_run",
          "line": 200
        }
      ],
      "./src/config/command.rs:CommandArg::parse:68": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_in_current",
          "line": 273
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_argument_type",
          "line": 283
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::compile",
          "line": 187
        },
        {
          "file": "./src/config/mapreduce.rs",
          "name": "deserialize_timeout",
          "line": 97
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_diff_output",
          "line": 132
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse_value",
          "line": 546
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::validate_choice_input",
          "line": 42
        },
        {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "MockPrompter::prompt_choice",
          "line": 167
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_argument_type",
          "line": 171
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_cleanup_config",
          "line": 828
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_arg",
          "line": 432
        },
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::deserialize",
          "line": 38
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        {
          "file": "./src/config/mod.rs",
          "name": "Config::merge_env_vars",
          "line": 111
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::evaluate_filter",
          "line": 346
        }
      ],
      "./src/cook/session/tracker.rs:SessionTrackerImpl::set_worktree:24": [
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "tests::test_session_state_persistence",
          "line": 214
        }
      ],
      "./src/cook/execution/data_pipeline.rs:FilterExpression::evaluate:582": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        }
      ],
      "./src/simple_state/cache.rs:CacheManager::set:63": [
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_expiration",
          "line": 86
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager_edge_cases",
          "line": 205
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "tests::test_context_inheritance",
          "line": 449
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_manager",
          "line": 50
        },
        {
          "file": "./src/cook/execution/mapreduce_tests.rs",
          "name": "test_interpolation_context_hierarchy",
          "line": 366
        },
        {
          "file": "./src/simple_state/tests.rs",
          "name": "test::test_cache_cleanup",
          "line": 277
        }
      ],
      "./src/cook/interaction/mod.rs:MockUserInteraction::add_text_response:484": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "tests::test_mock_prompts",
          "line": 382
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::info:182": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_info",
          "line": 116
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_verbosity_filtering",
          "line": 608
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "tests::test_progress_display_info",
          "line": 513
        }
      ],
      "./src/session/persistence.rs:PersistedSession::latest_checkpoint:38": [
        {
          "file": "./src/session/persistence.rs",
          "name": "PersistedSession::is_resumable",
          "line": 43
        },
        {
          "file": "./src/session/persistence.rs",
          "name": "PersistedSession::last_iteration",
          "line": 52
        }
      ],
      "./src/testing/helpers/assertions.rs:assert_file_contains:63": [
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "tests::test_assert_file_contains",
          "line": 178
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::commit:254": [
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_success",
          "line": 501
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::test_commit_nothing_to_commit",
          "line": 532
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::update_checkpoint:603": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_increments_iteration",
          "line": 1109
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "tests::test_update_checkpoint_success",
          "line": 1046
        }
      ],
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::display_progress:187": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_step",
          "line": 128
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::should_continue",
          "line": 169
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_display_progress",
          "line": 282
        }
      ],
      "./src/cook/session/adapter.rs:SessionManagerAdapter::complete_session:218": [
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_session_lifecycle",
          "line": 341
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "adapter_tests::test_complete_session_lifecycle",
          "line": 416
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "tests::test_error_handling",
          "line": 366
        }
      ],
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::new:59": [
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_structured_commands",
          "line": 373
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_simple_commands",
          "line": 304
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_at_limit",
          "line": 210
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_stops_at_max_iterations",
          "line": 500
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_step",
          "line": 142
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_within_limit",
          "line": 188
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_workflow_step_commands",
          "line": 428
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_empty_commands",
          "line": 529
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_prompt_user",
          "line": 259
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_should_continue_beyond_limit",
          "line": 232
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_display_progress",
          "line": 282
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "tests::test_execute_workflow_with_variables",
          "line": 337
        }
      ],
      "./src/testing/mocks/config.rs:MockConfigLoader::get_config:81": [
        {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_no_config_uses_defaults",
          "line": 242
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_explicit_path_yaml",
          "line": 161
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_concurrent_access",
          "line": 336
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_new_creates_default_config",
          "line": 147
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_explicit_path_nested_workflow",
          "line": 187
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_with_default_path",
          "line": 215
        },
        {
          "file": "./src/config/loader.rs",
          "name": "tests::test_load_project_config",
          "line": 257
        }
      ],
      "./src/cook/execution/claude.rs:ClaudeExecutorImpl::execute_claude_command:55": [
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "tests::test_claude_command_execution",
          "line": 222
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::execute",
          "line": 169
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::new:202": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::new:63": [
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_state_machine",
          "line": 10
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_progress_tracking",
          "line": 214
        },
        {
          "file": "./src/session/manager.rs",
          "name": "tests::test_concurrent_sessions",
          "line": 393
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_concurrent_sessions",
          "line": 53
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::new",
          "line": 27
        },
        {
          "file": "./src/session/tests.rs",
          "name": "test_session_persistence_and_recovery",
          "line": 105
        },
        {
          "file": "./src/cook/session/migration.rs",
          "name": "create_full_featured_manager",
          "line": 14
        },
        {
          "file": "./src/session/manager.rs",
          "name": "tests::test_session_lifecycle",
          "line": 344
        }
      ]
    },
    "callee_index": {
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_determine_command_type_legacy_name:682": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        }
      ],
      "./src/simple_state/tests.rs:test::test_history_retrieval:131": [
        {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::new",
          "line": 40
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::get_history",
          "line": 141
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::record_session",
          "line": 74
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::complete",
          "line": 51
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::with_directory:166": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_directory",
          "line": 41
        }
      ],
      "./src/cook/coordinators/environment_tests.rs:tests::test_verify_git_repository_success:14": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::builder",
          "line": 127
        },
        {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::new",
          "line": 64
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::is_repo",
          "line": 130
        },
        {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::verify_git_repository",
          "line": 79
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_handle_no_commits_error_general_command:968": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::handle_no_commits_error",
          "line": 1224
        }
      ],
      "./src/cook/execution/claude.rs:tests::test_claude_executor_check:192": [
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::add_response",
          "line": 179
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::check_claude_cli",
          "line": 98
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::new",
          "line": 37
        }
      ],
      "./src/testing/mocks/claude.rs:MockClaudeClient::implement_spec:201": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/cook/session/adapter.rs:SessionManagerAdapter::convert_state:43": [
        {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::duration",
          "line": 105
        }
      ],
      "./src/testing/mocks/subprocess.rs:MockSubprocessManager::run_command:97": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/session/manager.rs:tests::test_session_lifecycle:344": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::create_session",
          "line": 171
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_state",
          "line": 213
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        }
      ],
      "./src/cook/workflow/executor.rs:tests::test_get_current_head:1414": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        }
      ],
      "./src/testing/mocks/workflow.rs:MockWorkflowExecutor::execute_step:55": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::iteration_end:144": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::iteration_end",
          "line": 251
        }
      ],
      "./src/commands/mod.rs:MockHandler::schema:98": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/git_ops.rs:tests::test_git_mutex_prevents_races:124": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "get_last_commit_message",
          "line": 35
        }
      ],
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_boolean_true:1452": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        }
      ],
      "./src/cook/tests.rs:git_ops_tests::test_concurrent_git_operations:522": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::check_git_status",
          "line": 202
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::convert_frontmatter_to_definition:232": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_description",
          "line": 93
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/testing/mocks/fs.rs:tests::test_mock_fs_builder:236": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_file",
          "line": 161
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_directory",
          "line": 166
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::read_file",
          "line": 56
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_shell_command:1325": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/abstractions/git.rs:real_git_tests::test_stage_all_changes_and_commit:470": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::new",
          "line": 63
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::check_git_status",
          "line": 124
        }
      ],
      "./src/cook/session/tracker.rs:tests::test_session_updates:241": [
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::update_session",
          "line": 38
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::get_state",
          "line": 99
        }
      ],
      "./src/subprocess/git.rs:GitRunnerImpl::status:52": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        }
      ],
      "./src/commands/handlers/file.rs:tests::test_file_exists:363": [
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::new",
          "line": 18
        }
      ],
      "./src/testing/test_mocks.rs:TestMockSetup::setup_successful_analysis:180": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::check_success",
          "line": 13
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "GitMocks::status_clean",
          "line": 118
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TarpaulinMocks::coverage_report_good",
          "line": 59
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::test_success",
          "line": 38
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::clippy_output",
          "line": 25
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::build_success",
          "line": 31
        }
      ],
      "./src/worktree/tests.rs:test_cleanup_session:119": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::init_repository:428": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        }
      ],
      "./src/config/command_parser.rs:parse_command_string:14": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::merge_agent_to_parent:881": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::validate_parent_state",
          "line": 923
        }
      ],
      "./src/cook/retry.rs:additional_tests::test_format_subprocess_error_all_hints:442": [
        {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        }
      ],
      "./src/abstractions/claude.rs:tests::test_add_error_response:770": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 615
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_error_response",
          "line": 592
        }
      ],
      "./src/abstractions/claude.rs:RealClaudeClient::code_review:464": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        }
      ],
      "./src/config/loader.rs:ConfigLoader::get_config:131": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/workflow/executor_tests.rs:MockSessionManager::get_updates:88": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/worktree/test_state.rs:test_state_file_creation:38": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        }
      ],
      "./src/cook/git_ops.rs:mock_tests::test_create_commit_with_mock:450": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::stage_all_changes_in_dir",
          "line": 112
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_commit_in_dir",
          "line": 118
        }
      ],
      "./src/cook/execution/data_pipeline.rs:tests::test_json_path_basic:899": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::compile",
          "line": 187
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        }
      ],
      "./src/testing/mod.rs:test_helpers::create_test_files:285": [
        {
          "file": "./src/testing/mod.rs",
          "name": "test_helpers::create_test_file",
          "line": 275
        }
      ],
      "./src/cook/orchestrator.rs:tests::test_process_glob_pattern_recursive:2435": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::process_glob_pattern",
          "line": 971
        }
      ],
      "./src/commands/result.rs:tests::test_to_result:208": [
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        }
      ],
      "./src/cook/retry.rs:tests::test_check_claude_cli_when_missing:346": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/cook/git_ops.rs:create_commit:62": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::create_commit",
          "line": 213
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_update_session_metrics:441": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::update_session_metrics",
          "line": 99
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::create_session_state",
          "line": 68
        }
      ],
      "./src/cook/execution/data_pipeline.rs:DataPipeline::process:72": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::sort",
          "line": 791
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::apply_field_mapping",
          "line": 141
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::clear",
          "line": 86
        }
      ],
      "./src/config/metadata_parser.rs:tests::test_extract_description_multiline:448": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_description",
          "line": 93
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::new",
          "line": 19
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperations::git_command_in_dir:184": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 149
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystem::builder:32": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        }
      ],
      "./src/abstractions/git.rs:real_git_tests::test_get_current_branch:489": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::get_current_branch",
          "line": 208
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::new",
          "line": 63
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        }
      ],
      "./src/cook/coordinators/workflow_tests.rs:tests::test_display_progress:282": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::display_progress",
          "line": 187
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::get_cleanup_config:828": [
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        }
      ],
      "./src/cook/interaction/prompts.rs:MockPrompter::prompt_choice:167": [
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        }
      ],
      "./src/worktree/tests.rs:test_worktree_manager_creation:37": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        }
      ],
      "./src/cook/session/tracker.rs:tests::test_atomic_save_prevents_corruption:273": [
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::save_state",
          "line": 103
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::update_session",
          "line": 38
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_execute_claude_command:995": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_calls",
          "line": 92
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_claude_command",
          "line": 822
        }
      ],
      "./src/cook/mod.rs:run_improvement_loop:386": [
        {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_shell_command_with_on_failure_fail_workflow:1278": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::execute_step",
          "line": 209
        }
      ],
      "./src/cook/tests.rs:cook_tests::test_multiple_iterations:144": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_success_response",
          "line": 582
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::parse_variables_to_args:165": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        }
      ],
      "./src/commands/registry.rs:CommandRegistry::execute:85": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        }
      ],
      "./src/config/command_validator.rs:CommandRegistry::validate_option_value:318": [
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        }
      ],
      "./src/subprocess/adapter.rs:MockSubprocessExecutor::execute:141": [
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::remove",
          "line": 77
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::remove_worktree:334": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        }
      ],
      "./src/subprocess/adapter.rs:MockSubprocessExecutor::default:105": [
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::new",
          "line": 112
        }
      ],
      "./src/init/mod.rs:tests::test_init_run_success:602": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        }
      ],
      "./src/subprocess/mock.rs:MockProcessRunner::reset:64": [
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::clear",
          "line": 86
        }
      ],
      "./src/testing/mod.rs:MockClaudeBuilder::with_success:179": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_success_response",
          "line": 582
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::start_session:185": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        }
      ],
      "./src/cook/execution/data_pipeline.rs:FilterExpression::evaluate:582": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate",
          "line": 582
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::compare",
          "line": 605
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::evaluate_function",
          "line": 676
        }
      ],
      "./src/session/storage.rs:InMemoryStorage::save:126": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/worktree/manager.rs:tests::test_cleanup_config_defaults:942": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "CleanupConfig::default",
          "line": 20
        }
      ],
      "./src/config/mod.rs:Config::new:103": [
        {
          "file": "./src/config/mod.rs",
          "name": "GlobalConfig::default",
          "line": 89
        }
      ],
      "./src/config/command.rs:tests::try_parse_as:855": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::apply_defaults:94": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        }
      ],
      "./src/config/mapreduce.rs:MapReduceWorkflowConfig::to_reduce_phase:153": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/subprocess/tests.rs:subprocess_tests::test_process_command_builder:158": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::envs",
          "line": 47
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::env",
          "line": 42
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::stdin",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::timeout",
          "line": 66
        }
      ],
      "./src/cook/retry.rs:tests::test_error_formatting_rate_limit:262": [
        {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        }
      ],
      "./src/simple_state/tests.rs:test::test_cache_manager:50": [
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::set",
          "line": 63
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::clear",
          "line": 86
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::with_config",
          "line": 27
        }
      ],
      "./src/abstractions/claude.rs:RealClaudeClient::check_availability:436": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::claude",
          "line": 183
        },
        {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::check_availability",
          "line": 32
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        }
      ],
      "./src/commands/context.rs:tests::test_metadata:172": [
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::add_metadata",
          "line": 100
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::detect_mergeable_sessions:690": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_session_state",
          "line": 245
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::is_branch_merged",
          "line": 669
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        }
      ],
      "./src/git/scenario.rs:tests::test_scenario_mock_commit_nothing_to_commit:623": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::commit",
          "line": 455
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_clean_repo",
          "line": 68
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_format_session_summary:476": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::create_session_state",
          "line": 68
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::format_session_summary",
          "line": 112
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::default:82": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute:355": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_current_head",
          "line": 1206
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::should_continue_iterations",
          "line": 1342
        },
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::start_iteration",
          "line": 30
        },
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::complete_iteration",
          "line": 35
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_mapreduce",
          "line": 1274
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::should_stop_early_in_test_mode",
          "line": 1349
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::format_duration",
          "line": 131
        },
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::complete_command",
          "line": 48
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 1397
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::is_focus_tracking_test",
          "line": 1359
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::handle_no_commits_error",
          "line": 1224
        },
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::start_command",
          "line": 42
        }
      ],
      "./src/cook/session/adapter.rs:SessionManagerAdapter::get_state:234": [
        {
          "file": "./src/session/state.rs",
          "name": "SessionState::is_terminal",
          "line": 114
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/testing/mocks/config.rs:MockConfigLoader::default:53": [
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::new",
          "line": 59
        }
      ],
      "./src/testing/fixtures/mod.rs:Fixtures::rust_project_fs:68": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_project_structure",
          "line": 171
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        }
      ],
      "./src/commands/attributes.rs:tests::test_attribute_value_conversions:205": [
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::from",
          "line": 90
        }
      ],
      "./src/config/command_discovery.rs:tests::test_scan_commands_filters_correctly:138": [
        {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::scan_commands",
          "line": 34
        },
        {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::new",
          "line": 19
        }
      ],
      "./src/init/mod.rs:tests::test_run_init_specific_commands:478": [
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        }
      ],
      "./src/cook/execution/runner.rs:RealCommandRunner::run_command:52": [
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        }
      ],
      "./src/git/parsers.rs:tests::test_parse_status_output_conflict:290": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        }
      ],
      "./src/cook/execution/data_pipeline.rs:JsonPath::select:275": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::evaluate_filter",
          "line": 346
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::recursive_descent",
          "line": 325
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/subprocess/tests.rs:subprocess_tests::test_production_runner_timeout:43": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::timeout",
          "line": 66
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        }
      ],
      "./src/session/tests.rs:test_session_progress_tracking:214": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_progress",
          "line": 221
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::create_session",
          "line": 171
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        }
      ],
      "./src/cook/mod.rs:cook_tests::test_load_mapreduce_workflow:465": [
        {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook_with_mapreduce",
          "line": 225
        }
      ],
      "./src/cook/git_ops.rs:tests::get_last_commit_message_in_dir:106": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::git_in_dir",
          "line": 84
        }
      ],
      "./src/simple_state/state.rs:StateManager::new:18": [
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::load_or_create",
          "line": 98
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::default:272": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::new",
          "line": 236
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_load_playbook_nonexistent:210": [
        {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        }
      ],
      "./src/cook/interaction/display.rs:tests::test_command_output_display:620": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::get_messages",
          "line": 349
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::command_output",
          "line": 426
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::new",
          "line": 342
        }
      ],
      "./src/testing/mocks/claude.rs:tests::test_mock_claude_unavailable:265": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::code_review",
          "line": 464
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::unavailable",
          "line": 51
        }
      ],
      "./src/cook/git_ops.rs:tests::check_git_status_in_dir:100": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::git_in_dir",
          "line": 84
        }
      ],
      "./src/git/scenario.rs:tests::test_scenario_mock_detached_head:569": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_current_branch",
          "line": 381
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_detached_head",
          "line": 130
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        }
      ],
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::default:24": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::new",
          "line": 30
        }
      ],
      "./src/config/mod.rs:tests::test_get_spec_dir:519": [
        {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        }
      ],
      "./src/testing/helpers/assertions.rs:tests::test_assert_approx_eq:200": [
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_approx_eq",
          "line": 145
        }
      ],
      "./src/cook/execution/mapreduce_tests.rs:test_interpolation_context_hierarchy:366": [
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::set",
          "line": 63
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::child",
          "line": 224
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        }
      ],
      "./src/cook/interaction/display.rs:tests::test_step_display:597": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::step_start",
          "line": 412
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::step_end",
          "line": 419
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::get_messages",
          "line": 349
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::new",
          "line": 342
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::is_clean:204": [
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_status",
          "line": 132
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitStatus::is_clean",
          "line": 45
        }
      ],
      "./src/commands/result.rs:CommandError::to_result:137": [
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        }
      ],
      "./src/cook/execution/runner.rs:tests::test_real_command_runner:127": [
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_command",
          "line": 52
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::new",
          "line": 31
        }
      ],
      "./src/simple_state/tests.rs:test::test_session_record_edge_cases:189": [
        {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::complete",
          "line": 51
        },
        {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::new",
          "line": 40
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_shell_with_retry:891": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_claude_command",
          "line": 822
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_command",
          "line": 842
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/tests.rs:cook_tests::test_worktree_creation_failure:91": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::create_worktree",
          "line": 223
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_error_response",
          "line": 260
        }
      ],
      "./src/init/mod.rs:handle_existing_commands:126": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/session/state.rs",
          "name": "SessionState::is_terminal",
          "line": 114
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::read_line",
          "line": 34
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        }
      ],
      "./src/commands/result.rs:tests::test_success_result:175": [
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::merge_session:330": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_cleanup_config",
          "line": 828
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::env",
          "line": 42
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        }
      ],
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_float:1445": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        }
      ],
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::prompt_text:90": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::read_line",
          "line": 34
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/cook/coordinators/workflow_tests.rs:tests::test_should_continue_within_limit:188": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::should_continue",
          "line": 169
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        }
      ],
      "./src/config/command_parser.rs:tests::test_parse_command_with_options:141": [
        {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        }
      ],
      "./src/simple_state/tests.rs:test::test_invalid_root_directory:247": [
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        }
      ],
      "./src/session/mod.rs:SessionId::default:48": [
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::new",
          "line": 32
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::with_merge_conflict:108": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::set_scenario",
          "line": 60
        },
        {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        }
      ],
      "./src/cook/tests.rs:cook_tests::test_workflow_configuration:212": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::create_test_file",
          "line": 341
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::new",
          "line": 34
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::temp_path",
          "line": 97
        }
      ],
      "./src/cook/interaction/mod.rs:tests::test_error_handling:436": [
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::prompt_yes_no",
          "line": 495
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::prompt_text",
          "line": 223
        }
      ],
      "./src/commands/handlers/git.rs:GitHandler::schema:27": [
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_required",
          "line": 116
        }
      ],
      "./src/testing/mocks/fs.rs:tests::test_mock_fs_errors:252": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::write_file",
          "line": 73
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::read_file",
          "line": 56
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_write_error",
          "line": 201
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_read_error",
          "line": 196
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_file",
          "line": 161
        }
      ],
      "./src/config/command_discovery.rs:CommandDiscovery::scan_commands:34": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/coordinators/workflow.rs:tests::test_extract_workflow_step_command_claude:322": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_workflow_step_command",
          "line": 80
        }
      ],
      "./src/cook/execution/data_pipeline.rs:FilterExpression::parse:452": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse_value",
          "line": 546
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/session/tests.rs:test_session_state_machine:10": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_state",
          "line": 213
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        },
        {
          "file": "./src/session/config.rs",
          "name": "SessionConfig::default",
          "line": 18
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::create_session",
          "line": 171
        }
      ],
      "./src/cook/execution/interpolation.rs:shell_escape:350": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/worktree/test_state.rs:test_state_error_handling:198": [
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        }
      ],
      "./src/git/types.rs:GitDiff::default:121": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::new",
          "line": 101
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::check_git_status:124": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        }
      ],
      "./src/cook/interaction/prompts.rs:tests::test_mock_prompter_yes_no:183": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "MockPrompter::new",
          "line": 136
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_reduce_phase:955": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_parent_to_main",
          "line": 1064
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::new",
          "line": 221
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::should_auto_merge",
          "line": 1057
        }
      ],
      "./src/cook/retry.rs:tests::test_error_formatting:233": [
        {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        }
      ],
      "./src/config/command.rs:tests::test_command_serialization:593": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_option",
          "line": 439
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/worktree/tests.rs:test_merge_already_merged:177": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        }
      ],
      "./src/testing/mod.rs:TestFixtures::clean_repo_git:201": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::new",
          "line": 123
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::is_repo",
          "line": 130
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::command_output:278": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/simple_state/tests.rs:test::test_state_persistence:19": [
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::state_mut",
          "line": 45
        },
        {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::save",
          "line": 126
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::with_read_error:196": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::set_read_error",
          "line": 46
        }
      ],
      "./src/cook/interaction/display.rs:tests::test_debug_output:629": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::debug_output",
          "line": 433
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::get_messages",
          "line": 349
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::new",
          "line": 342
        }
      ],
      "./src/cook/execution/data_pipeline.rs:tests::test_sorter_single_field:970": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::sort",
          "line": 791
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::parse",
          "line": 754
        }
      ],
      "./src/cook/git_ops.rs:tests::test_get_last_commit_message_no_commits:255": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::get_last_commit_message_in_dir",
          "line": 106
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_and_validate_command:1231": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::get_current_head",
          "line": 936
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::collect_all_states:72": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::load_state_from_file",
          "line": 61
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::extract_options_section:132": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_section",
          "line": 137
        }
      ],
      "./src/git/scenario.rs:tests::test_scenario_mock_non_repository:582": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_non_repository",
          "line": 148
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_repository",
          "line": 355
        }
      ],
      "./src/config/command.rs:WorkflowStepCommand::deserialize:277": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/session/timing.rs:tests::test_timing_tracker:115": [
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::complete_command",
          "line": 48
        },
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::complete_iteration",
          "line": 35
        },
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::start_iteration",
          "line": 30
        },
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::new",
          "line": 21
        },
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::start_command",
          "line": 42
        }
      ],
      "./src/testing/mocks/claude.rs:MockClaudeClient::default:82": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 88
        }
      ],
      "./src/config/loader.rs:tests::test_load_with_explicit_path_nested_workflow:187": [
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::load_with_explicit_path",
          "line": 70
        },
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        }
      ],
      "./src/abstractions/claude.rs:RealClaudeClient::execute_command:344": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::is_transient_error",
          "line": 316
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::env",
          "line": 42
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::build",
          "line": 82
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        }
      ],
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::create_session:96": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/git/parsers.rs:tests::test_parse_status_output_renamed:279": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        }
      ],
      "./src/init/mod.rs:install_templates:178": [
        {
          "file": "./src/init/mod.rs",
          "name": "install_command",
          "line": 222
        }
      ],
      "./src/cook/git_ops.rs:tests::test_create_commit_no_staged_changes:323": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_commit_in_dir",
          "line": 118
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_is_test_mode_no_changes_command:904": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::no_changes_commands",
          "line": 93
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_handler_command:765": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_session_id",
          "line": 66
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::add_env_vars",
          "line": 95
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_iteration",
          "line": 72
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::is_success",
          "line": 84
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        }
      ],
      "./src/git/parsers.rs:parse_status_line_entry:22": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_header_line",
          "line": 34
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_renamed_line",
          "line": 101
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_untracked_line",
          "line": 46
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_unmerged_line",
          "line": 119
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_line",
          "line": 56
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_json_value_type:222": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::check_value_type",
          "line": 256
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::get_type_name",
          "line": 243
        }
      ],
      "./src/cook/coordinators/workflow.rs:tests::test_extract_workflow_step_command_empty:383": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_workflow_step_command",
          "line": 80
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_ensure_mmm_directory:367": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::ensure_mmm_directory",
          "line": 62
        }
      ],
      "./src/testing/config.rs:tests::test_should_simulate_no_changes:218": [
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::add_no_changes_command",
          "line": 99
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        }
      ],
      "./src/testing/config.rs:tests::test_default_configuration:188": [
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::new",
          "line": 39
        }
      ],
      "./src/main.rs:handle_clean_command:324": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_session_state",
          "line": 245
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_all_sessions",
          "line": 572
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_merged_sessions",
          "line": 727
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        }
      ],
      "./src/cook/session/tracker.rs:SessionTrackerImpl::track_iteration:154": [
        {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::increment_iteration",
          "line": 100
        },
        {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::add_files_changed",
          "line": 95
        }
      ],
      "./src/subprocess/git.rs:git_error_tests::test_git_command_failure:249": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stderr",
          "line": 154
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::new",
          "line": 29
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::new",
          "line": 45
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::delete_branch:479": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::start_spinner:211": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "SimpleSpinnerHandle::new",
          "line": 302
        }
      ],
      "./src/commands/handlers/shell.rs:ShellHandler::default:140": [
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::new",
          "line": 16
        }
      ],
      "./src/subprocess/mock.rs:MockProcessRunner::default:188": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::new",
          "line": 29
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::with_clean_repo:68": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::set_scenario",
          "line": 60
        },
        {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        }
      ],
      "./src/config/mod.rs:tests::test_variable_expansion:320": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_option",
          "line": 439
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_env",
          "line": 466
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "expand_variables",
          "line": 77
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_arg",
          "line": 432
        }
      ],
      "./src/testing/mocks/subprocess.rs:tests::test_mock_subprocess_history:162": [
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::new",
          "line": 85
        },
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::get_call_history",
          "line": 124
        },
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::run_command",
          "line": 97
        }
      ],
      "./src/config/command_parser.rs:tests::test_parse_command_string_empty:231": [
        {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::determine_command_type:1198": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::json_to_attribute_value",
          "line": 1263
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/simple_state/cache.rs:CacheManager::exists:128": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::cache_path",
          "line": 121
        }
      ],
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::read_line:34": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::read_line",
          "line": 34
        }
      ],
      "./src/cook/orchestrator.rs:tests::test_worktree_cleanup_after_merge:2319": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::add_yes_no_response",
          "line": 480
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::cleanup",
          "line": 440
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 368
        }
      ],
      "./src/cook/coordinators/workflow_tests.rs:tests::test_execute_workflow_workflow_step_commands:428": [
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        }
      ],
      "./src/cook/execution/mapreduce_tests.rs:test_interpolation_with_map_results:308": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        }
      ],
      "./src/config/dynamic_registry.rs:tests::test_dynamic_registry_creation:336": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::save_checkpoint:261": [
        {
          "file": "./src/session/state.rs",
          "name": "SessionState::is_terminal",
          "line": 114
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::save",
          "line": 126
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::setup_environment:216": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::generate_session_id",
          "line": 141
        }
      ],
      "./src/abstractions/git.rs:real_git_tests::test_git_command_success:442": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::new",
          "line": 63
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::prompt_yes_no:108": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_yes_no",
          "line": 80
        }
      ],
      "./src/cook/orchestrator.rs:tests::test_prerequisites_check_claude_unavailable:1704": [
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::add_response",
          "line": 179
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::new",
          "line": 95
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::new",
          "line": 37
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::new",
          "line": 1509
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::check_prerequisites",
          "line": 196
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_determine_command_type_shell:627": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        }
      ],
      "./src/git/mod.rs:tests::test_list_files:577": [
        {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::list_files",
          "line": 173
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        }
      ],
      "./src/commands/registry.rs:CommandRegistry::validate:101": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::validate",
          "line": 101
        }
      ],
      "./src/git/mod.rs:tests::test_is_clean:600": [
        {
          "file": "./src/git/types.rs",
          "name": "GitStatus::is_clean",
          "line": 45
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::create_commit:311": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        }
      ],
      "./src/cook/workflow/executor.rs:tests::test_get_current_head_in_regular_repo:1588": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head",
          "line": 1414
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        }
      ],
      "./src/commands/handlers/claude.rs:ClaudeHandler::default:198": [
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::new",
          "line": 16
        }
      ],
      "./src/commands/handlers/file.rs:tests::test_file_handler_schema:309": [
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::new",
          "line": 18
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::schema",
          "line": 29
        }
      ],
      "./src/cook/interaction/display.rs:MockProgressDisplay::start_spinner:390": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockSpinnerHandle::new",
          "line": 450
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationEngine::interpolate:43": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_template",
          "line": 87
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "value_to_string",
          "line": 336
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::resolve_variable",
          "line": 180
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::default:81": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::new",
          "line": 63
        }
      ],
      "./src/abstractions/claude.rs:tests::test_mock_claude_unavailable:732": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 646
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::check_availability",
          "line": 161
        }
      ],
      "./src/cook/retry.rs:tests::test_check_claude_cli_fallback:417": [
        {
          "file": "./src/cook/retry.rs",
          "name": "check_claude_cli",
          "line": 151
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::get_commit_message:393": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        }
      ],
      "./src/cook/signal_handler.rs:update_interrupted_state:48": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        }
      ],
      "./src/cook/coordinators/environment_tests.rs:tests::test_verify_git_repository_not_a_repo:35": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::new",
          "line": 64
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::is_repo",
          "line": 130
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::builder",
          "line": 127
        },
        {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::verify_git_repository",
          "line": 79
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_create_session_state:386": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::create_session_state",
          "line": 68
        }
      ],
      "./src/config/command_discovery.rs:tests::test_scan_empty_directory:126": [
        {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::scan_commands",
          "line": 34
        },
        {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::new",
          "line": 19
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_handle_worktree_merge:456": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::handle_worktree_merge",
          "line": 103
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_claude_command:1291": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/git/mod.rs:tests::test_get_status:555": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_status",
          "line": 374
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        }
      ],
      "./src/cook/execution/interpolation.rs:tests::test_context_inheritance:449": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::set",
          "line": 63
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::child",
          "line": 224
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::validate_parent_state:923": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::box_chars:122": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "BoxChars::ascii",
          "line": 169
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "BoxChars::unicode",
          "line": 158
        }
      ],
      "./src/worktree/test_state.rs:setup_test_repo:7": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/cook/execution/interpolation.rs:tests::test_undefined_variable_non_strict:440": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::check_git_status:299": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        }
      ],
      "./src/cook/tests.rs:cook_tests::test_spec_id_extraction:130": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_last_commit_message",
          "line": 194
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        }
      ],
      "./src/cook/coordinators/workflow.rs:tests::test_create_default_workflow_step:414": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::create_default_workflow_step",
          "line": 100
        }
      ],
      "./src/testing/mod.rs:tests::test_mock_builders:315": [
        {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::new",
          "line": 123
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::is_available",
          "line": 173
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::new",
          "line": 166
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::is_repo",
          "line": 130
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        }
      ],
      "./src/commands/handlers/git.rs:GitHandler::default:222": [
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::new",
          "line": 16
        }
      ],
      "./src/init/mod.rs:run:286": [
        {
          "file": "./src/init/mod.rs",
          "name": "install_templates",
          "line": 178
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/init/mod.rs",
          "name": "validate_project_structure",
          "line": 245
        },
        {
          "file": "./src/init/mod.rs",
          "name": "display_installation_summary",
          "line": 201
        },
        {
          "file": "./src/init/mod.rs",
          "name": "select_templates",
          "line": 107
        },
        {
          "file": "./src/init/mod.rs",
          "name": "handle_existing_commands",
          "line": 126
        }
      ],
      "./src/git/parsers.rs:tests::test_parse_worktree_list:324": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_worktree_list",
          "line": 172
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::iteration_start:218": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::box_chars",
          "line": 122
        }
      ],
      "./src/main.rs:handle_merge_command:269": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::read_line",
          "line": 34
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        }
      ],
      "./src/testing/mocks/claude.rs:MockClaudeClient::lint:222": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_extract_spec_from_git_error:315": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_error_response",
          "line": 260
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::extract_spec_from_git",
          "line": 39
        }
      ],
      "./src/config/command_parser.rs:expand_string:95": [
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/config/command_discovery.rs:tests::test_cache_behavior:165": [
        {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::scan_commands",
          "line": 34
        },
        {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::new",
          "line": 19
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_determine_command_type_none_error:736": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        }
      ],
      "./src/cook/session/tracker.rs:SessionTrackerImpl::complete_session:90": [
        {
          "file": "./src/session/state.rs",
          "name": "IterationTiming::complete",
          "line": 230
        }
      ],
      "./src/session/storage.rs:tests::test_file_storage:154": [
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::load",
          "line": 56
        },
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::from_string",
          "line": 37
        },
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::save",
          "line": 44
        },
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::list",
          "line": 69
        },
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::delete",
          "line": 90
        },
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::new",
          "line": 32
        }
      ],
      "./src/cook/session/tracker.rs:SessionTrackerImpl::update_session:38": [
        {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::add_files_changed",
          "line": 95
        },
        {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::increment_iteration",
          "line": 100
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::prompt_text:112": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_text",
          "line": 90
        }
      ],
      "./src/testing/mod.rs:MockClaudeBuilder::new:166": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        }
      ],
      "./src/cook/retry.rs:check_claude_cli:151": [
        {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::check_availability",
          "line": 32
        }
      ],
      "./src/cook/signal_handler.rs:signal_tests::test_update_interrupted_state_error_handling:199": [
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "update_interrupted_state",
          "line": 48
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_worktree_manager",
          "line": 69
        }
      ],
      "./src/cook/workflow/executor_tests.rs:MockSessionManager::get_state:116": [
        {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::new",
          "line": 56
        }
      ],
      "./src/cook/orchestrator.rs:tests::test_detect_structured_workflow:1789": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        }
      ],
      "./src/cook/execution/data_pipeline.rs:FilterExpression::compare:605": [
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        }
      ],
      "./src/subprocess/runner.rs:TokioProcessRunner::run:85": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_determine_command_type_claude:602": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        }
      ],
      "./src/cook/session/tracker.rs:tests::test_session_state_persistence:214": [
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::track_iteration",
          "line": 154
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::save_state",
          "line": 103
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::set_worktree",
          "line": 24
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::get_state",
          "line": 99
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::load_state",
          "line": 132
        }
      ],
      "./src/config/dynamic_registry.rs:tests::test_edge_cases_json_values:716": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        }
      ],
      "./src/testing/mod.rs:MockClaudeBuilder::default:159": [
        {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::new",
          "line": 166
        }
      ],
      "./src/cook/git_ops.rs:git_command:27": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        }
      ],
      "./src/commands/handlers/claude.rs:ClaudeHandler::execute:43": [
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::resolve_path",
          "line": 117
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_defaults",
          "line": 94
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_array",
          "line": 44
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::full_env",
          "line": 131
        },
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::schema",
          "line": 27
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_number",
          "line": 28
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        }
      ],
      "./src/commands/registry.rs:CommandRegistry::get_schema:116": [
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/cook/session/tracker.rs:SessionTrackerImpl::get_state:99": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/config/command.rs:WorkflowCommand::to_command:344": [
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::from_string",
          "line": 419
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::get_worktree_for_branch:582": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_should_stop_early_in_test_mode:924": [
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::no_changes_commands",
          "line": 93
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        }
      ],
      "./src/abstractions/claude.rs:MockClaudeClient::add_success_response:582": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_response",
          "line": 577
        }
      ],
      "./src/testing/helpers/assertions.rs:tests::test_assert_file_contains:178": [
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_contains",
          "line": 63
        }
      ],
      "./src/commands/context.rs:tests::test_context_creation:144": [
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_step:1397": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 1397
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::create_session:150": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::save_session_state",
          "line": 184
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/worktree/mod.rs",
          "name": "WorktreeSession::new",
          "line": 144
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::create_session:171": [
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::new",
          "line": 32
        },
        {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::new",
          "line": 332
        }
      ],
      "./src/testing/config.rs:tests::test_common_configurations:230": [
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::worktree",
          "line": 161
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::production",
          "line": 178
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::full_test",
          "line": 169
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::with_no_changes",
          "line": 153
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        }
      ],
      "./src/cook/interaction/display.rs:tests::test_progress_display_info:513": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::info",
          "line": 182
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::default:149": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        }
      ],
      "./src/cook/git_ops.rs:tests::test_check_git_status_with_changes:348": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::check_git_status_in_dir",
          "line": 100
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_agent_commands:547": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::handle_on_failure",
          "line": 1405
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_modified_files",
          "line": 840
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::merge_agent_to_parent",
          "line": 881
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::create_agent_branch",
          "line": 860
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::new",
          "line": 221
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_worktree_commits",
          "line": 818
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::update_with_output",
          "line": 241
        }
      ],
      "./src/testing/fixtures/mod.rs:Fixtures::rate_limited_claude:48": [
        {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::with_error",
          "line": 185
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::add_error_response:260": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        }
      ],
      "./src/testing/mocks/config.rs:MockConfigLoader::get_config:81": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/coordinators/workflow_tests.rs:tests::test_prompt_user:259": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::prompt_user",
          "line": 183
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        }
      ],
      "./src/cook/interaction/mod.rs:MockUserInteraction::default:182": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::new",
          "line": 188
        }
      ],
      "./src/commands/registry.rs:TestHandler::execute:157": [
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::get_last_successful_command:658": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::load_session_state",
          "line": 615
        }
      ],
      "./src/testing/fixtures/mod.rs:Fixtures::successful_claude:37": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        }
      ],
      "./src/testing/helpers/assertions.rs:tests::test_assert_in_range:194": [
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_in_range",
          "line": 134
        }
      ],
      "./src/cook/orchestrator.rs:tests::test_arg_resolution_only_for_commands_with_args:2060": [
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::add_response",
          "line": 179
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::with_test_config",
          "line": 118
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::with_test_config",
          "line": 45
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::skip_commit_validation",
          "line": 107
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::new",
          "line": 1509
        }
      ],
      "./src/testing/fixtures/mod.rs:Fixtures::unavailable_claude:56": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::unavailable",
          "line": 51
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_check_for_changes:422": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::check_for_changes",
          "line": 94
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        }
      ],
      "./src/cook/execution/data_pipeline.rs:tests::test_filter_logical:944": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        }
      ],
      "./src/git/mod.rs:tests::test_get_current_branch_detached_head:455": [
        {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::get_current_branch",
          "line": 330
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        }
      ],
      "./src/cook/interaction/mod.rs:tests::test_mock_prompts:382": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 368
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::add_yes_no_response",
          "line": 480
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::prompt_yes_no",
          "line": 495
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::add_text_response",
          "line": 484
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::prompt_text",
          "line": 223
        }
      ],
      "./src/testing/mocks/session.rs:MockSessionManager::new:28": [
        {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::new",
          "line": 56
        }
      ],
      "./src/cook/coordinators/workflow.rs:tests::test_convert_to_workflow_step_integration:434": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::convert_to_workflow_step",
          "line": 119
        }
      ],
      "./src/cook/execution/mapreduce_tests.rs:test_interpolation_strict_mode:423": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        }
      ],
      "./src/cook/git_ops.rs:tests::test_get_last_commit_message_success:237": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::get_last_commit_message_in_dir",
          "line": 106
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        }
      ],
      "./src/cook/coordinators/session_tests.rs:tests::test_resume_session:176": [
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::track_iteration",
          "line": 79
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::resume_session",
          "line": 118
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::complete_session",
          "line": 86
        }
      ],
      "./src/cook/execution/claude.rs:ClaudeExecutorImpl::get_claude_version:115": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/testing/helpers/mod.rs",
          "name": "run_command",
          "line": 81
        }
      ],
      "./src/commands/handlers/file.rs:FileHandler::schema:29": [
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_required",
          "line": 116
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::build_command:1161": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::resolve",
          "line": 56
        },
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::is_variable",
          "line": 50
        },
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::list_worktrees:500": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_worktree_list",
          "line": 172
        }
      ],
      "./src/config/dynamic_registry.rs:tests::test_validate_json_value_type_string:444": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::commit:455": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::switch_branch:286": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        }
      ],
      "./src/worktree/test_state.rs:test_gitignore_creation:106": [
        {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        }
      ],
      "./src/config/mapreduce.rs:tests::test_parse_basic_mapreduce_workflow:177": [
        {
          "file": "./src/config/mapreduce.rs",
          "name": "parse_mapreduce_workflow",
          "line": 166
        }
      ],
      "./src/config/mod.rs:tests::test_get_auto_commit_precedence:495": [
        {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        }
      ],
      "./src/cook/tests.rs:cook_tests::test_successful_improvement_loop:15": [
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::clean_repo_git",
          "line": 201
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::new",
          "line": 34
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::successful_claude",
          "line": 223
        }
      ],
      "./src/cook/execution/data_pipeline.rs:tests::test_filter_in_operator:957": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        }
      ],
      "./src/cook/execution/data_pipeline.rs:DataPipeline::from_config:33": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::parse",
          "line": 754
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::compile",
          "line": 187
        }
      ],
      "./src/commands/mod.rs:CommandHandlerBuilder::register:65": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register",
          "line": 218
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_structured_workflow:507": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "apply_command_defaults",
          "line": 411
        },
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::resolve",
          "line": 56
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        }
      ],
      "./src/session/tests.rs:test_storage_operations:275": [
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::delete",
          "line": 90
        },
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::new",
          "line": 32
        },
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::from_string",
          "line": 37
        },
        {
          "file": "./src/session/events.rs",
          "name": "TimestampedEvent::new",
          "line": 75
        },
        {
          "file": "./src/session/config.rs",
          "name": "SessionConfig::default",
          "line": 18
        },
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::save",
          "line": 44
        },
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::list",
          "line": 69
        },
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::load",
          "line": 56
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::new:155": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::new",
          "line": 23
        }
      ],
      "./src/config/dynamic_registry.rs:tests::test_apply_definition_defaults_options_with_defaults:889": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        }
      ],
      "./src/cook/execution/claude.rs:ClaudeExecutorImpl::execute_claude_command:55": [
        {
          "file": "./src/cook/execution/mod.rs",
          "name": "ExecutionContext::default",
          "line": 37
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::handle_test_mode_execution",
          "line": 131
        }
      ],
      "./src/commands/registry.rs:CommandRegistry::register_sync:50": [
        {
          "file": "./src/commands/mod.rs",
          "name": "MockHandler::name",
          "line": 94
        }
      ],
      "./src/cook/execution/interpolation.rs:tests::test_undefined_variable_strict_mode:431": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        }
      ],
      "./src/cook/execution/runner.rs:RealCommandRunner::new:31": [
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        }
      ],
      "./src/config/mod.rs:tests::test_structured_workflow_config_parsing:187": [
        {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        }
      ],
      "./src/cook/interaction/display.rs:tests::test_progress_display_progress:546": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::progress",
          "line": 199
        }
      ],
      "./src/git/mod.rs:tests::test_stage_all:478": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::stage_all",
          "line": 450
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_calls",
          "line": 92
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        }
      ],
      "./src/main.rs:main:119": [
        {
          "file": "./src/simple_state/mod.rs",
          "name": "init",
          "line": 85
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "cook",
          "line": 35
        },
        {
          "file": "./src/main.rs",
          "name": "run_worktree_command",
          "line": 395
        },
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::find_files_matching_pattern:670": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::matches_glob_pattern",
          "line": 732
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::get_commit_message:161": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        }
      ],
      "./src/cook/coordinators/workflow.rs:tests::test_normalize_command_string_with_slash:402": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::normalize_command_string",
          "line": 92
        }
      ],
      "./src/config/command_validator.rs:apply_command_defaults:411": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_defaults",
          "line": 94
        }
      ],
      "./src/testing/helpers/assertions.rs:tests::test_assert_file_exists:163": [
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_exists",
          "line": 45
        }
      ],
      "./src/commands/handlers/claude.rs:tests::test_claude_handler_schema:216": [
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::schema",
          "line": 27
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::new",
          "line": 16
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::list_files:400": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        }
      ],
      "./src/cook/workflow/executor.rs:tests::test_get_current_head_respects_working_directory:1730": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head",
          "line": 1414
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::with_command_registry:196": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::with_defaults",
          "line": 22
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_mapreduce:1274": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::new",
          "line": 298
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::format_duration",
          "line": 131
        }
      ],
      "./src/testing/mocks/claude.rs:MockClaudeClient::builder:98": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        }
      ],
      "./src/testing/mocks/workflow.rs:MockWorkflowExecutor::default:21": [
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        }
      ],
      "./src/cook/orchestrator.rs:tests::test_prerequisites_check_no_git:1656": [
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::new",
          "line": 37
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::new",
          "line": 95
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::new",
          "line": 1509
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::check_prerequisites",
          "line": 196
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::add_response",
          "line": 179
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        }
      ],
      "./src/cook/execution/mapreduce_tests.rs:test_interpolation_with_shell_output:329": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        }
      ],
      "./src/cook/signal_handler.rs:tests::test_update_interrupted_state:122": [
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "update_interrupted_state",
          "line": 48
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_session_state",
          "line": 87
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_worktree_manager",
          "line": 69
        }
      ],
      "./src/subprocess/claude.rs:ClaudeRunnerImpl::run_command:49": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::env",
          "line": 42
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::cleanup_session_after_merge:766": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_session_state",
          "line": 245
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::record_event:197": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::notify_observers",
          "line": 77
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::apply_event",
          "line": 85
        }
      ],
      "./src/cook/git_ops.rs:tests::git_in_dir:84": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        }
      ],
      "./src/worktree/tests.rs:test_filter_sessions_by_status:316": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::filter_sessions_by_status",
          "line": 48
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::json_to_attribute_value_static:241": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        }
      ],
      "./src/config/mapreduce.rs:deserialize_timeout:97": [
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        }
      ],
      "./src/config/dynamic_registry.rs:tests::test_list_commands:419": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::list_commands",
          "line": 397
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        }
      ],
      "./src/session/storage.rs:FileSessionStorage::load:56": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::session_path",
          "line": 37
        }
      ],
      "./src/simple_state/cache.rs:CacheManager::get:36": [
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::cache_path",
          "line": 121
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        }
      ],
      "./src/git/scenario.rs:tests::test_scenario_mock_custom_response:592": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::when_command",
          "line": 166
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_last_commit_message",
          "line": 416
        }
      ],
      "./src/git/types.rs:CommitId::from:212": [
        {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        }
      ],
      "./src/config/mod.rs:tests::test_command_metadata_defaults:350": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "apply_command_defaults",
          "line": 411
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/cook/execution/mapreduce_tests.rs:test_agent_context_creation:54": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::new",
          "line": 221
        }
      ],
      "./src/cook/interaction/display.rs:tests::test_progress_display_warning:521": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::warning",
          "line": 188
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_load_playbook_json:175": [
        {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_validate_arguments:332": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::validate_arguments",
          "line": 57
        }
      ],
      "./src/cook/execution/data_pipeline.rs:FilterExpression::evaluate_function:676": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/cook/session/tracker.rs:tests::test_session_tracker_basic:188": [
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::track_iteration",
          "line": 154
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::get_state",
          "line": 99
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::complete_session",
          "line": 90
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystem::list_dir:105": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::is_dir",
          "line": 100
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::create_branch:469": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        }
      ],
      "./src/cook/orchestrator.rs:tests::test_find_files_matching_pattern:1870": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::find_files_matching_pattern",
          "line": 670
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        }
      ],
      "./src/init/templates.rs:get_templates_by_names:52": [
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        {
          "file": "./src/init/templates.rs",
          "name": "get_all_templates",
          "line": 17
        }
      ],
      "./src/cook/coordinators/workflow_tests.rs:tests::test_execute_workflow_stops_at_max_iterations:500": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        }
      ],
      "./src/testing/mocks/claude.rs:MockClaudeClient::execute_command:113": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/testing/mod.rs:TestFixtures::successful_claude:223": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::is_available",
          "line": 173
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::new",
          "line": 166
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::collect_workflow_inputs:946": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::process_glob_pattern",
          "line": 971
        }
      ],
      "./src/init/templates.rs:tests::test_get_templates_by_names:89": [
        {
          "file": "./src/init/templates.rs",
          "name": "get_templates_by_names",
          "line": 52
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::git_command:279": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::remove",
          "line": 77
        }
      ],
      "./src/subprocess/git.rs:GitRunnerImpl::remove_worktree:166": [
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        }
      ],
      "./src/git/scenario.rs:tests::test_scenario_mock_merge_conflict:557": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_status",
          "line": 374
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_merge_conflict",
          "line": 108
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_execute_step_with_capture_output:1122": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::execute_step",
          "line": 209
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::handle_no_commits_error:1224": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        }
      ],
      "./src/cook/mod.rs:cook_tests::test_yaml_error_messages:626": [
        {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_load_playbook_invalid_format:195": [
        {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        }
      ],
      "./src/cook/execution/mapreduce_tests.rs:test_interpolation_with_defaults:348": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        }
      ],
      "./src/cook/session/adapter.rs:tests::test_session_lifecycle:341": [
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::start_session",
          "line": 83
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::update_session",
          "line": 104
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::complete_session",
          "line": 218
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::new",
          "line": 27
        }
      ],
      "./src/cook/git_ops.rs:is_git_repo:71": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::is_git_repo",
          "line": 317
        }
      ],
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_boolean_false:1459": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        }
      ],
      "./src/config/command.rs:tests::test_command_with_analysis_config:698": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/cook/session/adapter.rs:tests::test_state_conversion:382": [
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::get_state",
          "line": 234
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::new",
          "line": 27
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::start_session",
          "line": 83
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::update_session",
          "line": 104
        }
      ],
      "./src/cook/tests.rs:cook_tests::test_merge_conflicts:105": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::switch_branch",
          "line": 231
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_error_response",
          "line": 260
        }
      ],
      "./src/testing/mocks/subprocess.rs:tests::test_mock_subprocess_builder:147": [
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::new",
          "line": 20
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::with_error",
          "line": 185
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        }
      ],
      "./src/config/loader.rs:tests::test_load_project_config:257": [
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_project",
          "line": 115
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::start_spinner:132": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::start_spinner",
          "line": 211
        }
      ],
      "./src/config/dynamic_registry.rs:tests::test_command_discovery_and_validation:351": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/subprocess/mock.rs:MockProcessRunner::run:99": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/testing/mocks/session.rs:MockSessionManager::complete_session:106": [
        {
          "file": "./src/session/state.rs",
          "name": "IterationTiming::complete",
          "line": 230
        }
      ],
      "./src/init/mod.rs:initialize_directories:272": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        }
      ],
      "./src/config/loader.rs:ConfigLoader::load_project:115": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        }
      ],
      "./src/worktree/manager.rs:tests::test_merge_session_success:874": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        }
      ],
      "./src/commands/result.rs:tests::test_with_duration:202": [
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::get_last_commit_message:117": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        }
      ],
      "./src/config/mod.rs:tests::test_command_validation:292": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_arg",
          "line": 432
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/abstractions/claude.rs:RealClaudeClient::new:303": [
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        }
      ],
      "./src/commands/attributes.rs:tests::test_schema_defaults:237": [
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::from",
          "line": 90
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::apply_defaults",
          "line": 171
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        }
      ],
      "./src/init/mod.rs:tests::test_get_templates:340": [
        {
          "file": "./src/init/templates.rs",
          "name": "get_templates_by_names",
          "line": 52
        },
        {
          "file": "./src/init/templates.rs",
          "name": "get_all_templates",
          "line": 17
        }
      ],
      "./src/commands/handlers/mod.rs:tests::test_all_handlers:31": [
        {
          "file": "./src/commands/handlers/mod.rs",
          "name": "all_handlers",
          "line": 16
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "MockHandler::name",
          "line": 94
        }
      ],
      "./src/subprocess/mod.rs:SubprocessManager::mock:139": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::new",
          "line": 29
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::new",
          "line": 102
        }
      ],
      "./src/cook/execution/mapreduce_tests.rs:test_interpolation_with_work_item:273": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        }
      ],
      "./src/cook/execution/mapreduce.rs:AgentContext::to_interpolation_context:251": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/testing/mocks/workflow.rs:MockWorkflowExecutor::failing:37": [
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        }
      ],
      "./src/init/mod.rs:tests::test_validate_project_structure_with_symlinks:565": [
        {
          "file": "./src/init/mod.rs",
          "name": "validate_project_structure",
          "line": 245
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        }
      ],
      "./src/commands/registry.rs:tests::test_registry_registration:171": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::list",
          "line": 79
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::register_sync",
          "line": 50
        }
      ],
      "./src/simple_state/tests.rs:test::test_cache_cleanup:277": [
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::set",
          "line": 63
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::with_config",
          "line": 27
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::clear",
          "line": 86
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/testing/mod.rs:TestFixtures::dirty_repo_git:212": [
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::is_repo",
          "line": 130
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::new",
          "line": 123
        }
      ],
      "./src/cook/interaction/prompts.rs:tests::test_format_choice_prompt_single:288": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::format_choice_prompt",
          "line": 57
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::get_current_head:1206": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        }
      ],
      "./src/testing/mocks/workflow.rs:MockWorkflowExecutor::execute_step:120": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/git/parsers.rs:tests::test_parse_status_output_clean:245": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        }
      ],
      "./src/git/mod.rs:tests::create_test_runner:382": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::new",
          "line": 29
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::new",
          "line": 101
        }
      ],
      "./src/cook/retry.rs:tests::test_execute_with_retry_exhausted_retries:310": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        }
      ],
      "./src/subprocess/tests.rs:subprocess_tests::test_mock_runner_multiple_calls:76": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::new",
          "line": 29
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_success",
          "line": 168
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::times",
          "line": 173
        }
      ],
      "./src/commands/handlers/git.rs:tests::test_git_status:250": [
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::new",
          "line": 112
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::expect_execute",
          "line": 118
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_executor",
          "line": 60
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::new",
          "line": 16
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        }
      ],
      "./src/cook/git_ops.rs:get_last_commit_message:35": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_last_commit_message",
          "line": 194
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::new:298": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::with_defaults",
          "line": 22
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::run_git_command:106": [
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        }
      ],
      "./src/cook/retry.rs:additional_tests::test_execute_with_retry_signal_interruption:514": [
        {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/subprocess/tests.rs:subprocess_tests::test_production_runner_failure:20": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        }
      ],
      "./src/subprocess/git.rs:GitRunnerImpl::add:121": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        }
      ],
      "./src/config/command_parser.rs:tests::test_parse_simple_command:116": [
        {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        }
      ],
      "./src/cook/session/adapter.rs:tests::test_error_handling:366": [
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::update_session",
          "line": 104
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::new",
          "line": 27
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::complete_session",
          "line": 218
        }
      ],
      "./src/git/types.rs:CommitId::from:218": [
        {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        }
      ],
      "./src/config/command_parser.rs:tests::test_parse_complex_command:185": [
        {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        }
      ],
      "./src/cook/coordinators/environment.rs:DefaultEnvironmentCoordinator::load_configuration:86": [
        {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/commands/mod.rs:tests::test_handler_validation:131": [
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_required",
          "line": 116
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        }
      ],
      "./src/testing/test_mocks.rs:TestMockSetup::setup_analysis_with_failures:237": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::check_with_warnings",
          "line": 19
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "TarpaulinMocks::coverage_report_poor",
          "line": 76
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stderr",
          "line": 154
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        }
      ],
      "./src/cook/execution/claude.rs:tests::test_claude_command_execution:222": [
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::add_response",
          "line": 179
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::execute_claude_command",
          "line": 55
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::new",
          "line": 37
        }
      ],
      "./src/config/loader.rs:ConfigLoader::load_from_path:54": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::commit:254": [
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        }
      ],
      "./src/init/mod.rs:tests::test_run_init_with_existing_commands:402": [
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        }
      ],
      "./src/git/scenario.rs:GitScenario::default:279": [
        {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::stage_files:433": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/cook/retry.rs:tests::test_format_subprocess_error_unauthorized:371": [
        {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        }
      ],
      "./src/subprocess/tests.rs:subprocess_tests::test_claude_runner:142": [
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::claude",
          "line": 183
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::check_availability",
          "line": 32
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_success",
          "line": 168
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::mock",
          "line": 139
        }
      ],
      "./src/cook/retry.rs:additional_tests::test_execute_with_retry_io_error_recovery:432": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        }
      ],
      "./src/testing/mocks/subprocess.rs:MockSubprocessManager::default:79": [
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManager::new",
          "line": 85
        }
      ],
      "./src/testing/mocks/session.rs:MockSessionManager::default:21": [
        {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::new",
          "line": 28
        }
      ],
      "./src/simple_state/tests.rs:test::test_history_sorting:254": [
        {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::new",
          "line": 40
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::record_session",
          "line": 74
        },
        {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::complete",
          "line": 51
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::get_history",
          "line": 141
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::restore_session:620": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/worktree/mod.rs",
          "name": "WorktreeSession::new",
          "line": 144
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::load_session_state",
          "line": 615
        }
      ],
      "./src/commands/context.rs:tests::test_with_executor:191": [
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_executor",
          "line": 60
        },
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::new",
          "line": 112
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::load_work_items_with_pipeline:354": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::from_config",
          "line": 33
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        }
      ],
      "./src/cook/orchestrator.rs:tests::test_file_pattern_validation:2041": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/git/parsers.rs:update_worktree_info:224": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        }
      ],
      "./src/commands/attributes.rs:tests::test_schema_validation:217": [
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::from",
          "line": 90
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_required",
          "line": 116
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        }
      ],
      "./src/commands/registry.rs:CommandRegistry::register:39": [
        {
          "file": "./src/commands/mod.rs",
          "name": "MockHandler::name",
          "line": 94
        }
      ],
      "./src/commands/handlers/shell.rs:tests::test_shell_handler_dry_run:200": [
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_dry_run",
          "line": 78
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::new",
          "line": 16
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        }
      ],
      "./src/simple_state/tests.rs:test::test_cache_manager_edge_cases:205": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::set",
          "line": 63
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::with_config",
          "line": 27
        }
      ],
      "./src/worktree/tests.rs:setup_test_repo:6": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/git/mod.rs:tests::test_is_repository_failure:415": [
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::is_repository",
          "line": 125
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        }
      ],
      "./src/cook/coordinators/environment.rs:DefaultEnvironmentCoordinator::prepare_environment:121": [
        {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::setup_worktree",
          "line": 103
        },
        {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::verify_git_repository",
          "line": 79
        },
        {
          "file": "./src/cook/coordinators/environment.rs",
          "name": "DefaultEnvironmentCoordinator::load_configuration",
          "line": 86
        }
      ],
      "./src/worktree/tests.rs:test_list_interrupted_sessions_empty:191": [
        {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_interrupted_sessions",
          "line": 640
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        }
      ],
      "./src/cook/interaction/mod.rs:tests::test_default_user_interaction_creation:355": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::new",
          "line": 91
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_info",
          "line": 116
        }
      ],
      "./src/subprocess/tests.rs:subprocess_tests::test_mock_runner_basic:56": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_success",
          "line": 168
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::new",
          "line": 29
        }
      ],
      "./src/cook/orchestrator.rs:tests::test_workflow_detects_structured_commands:1950": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::create_branch:273": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        }
      ],
      "./src/testing/mocks/config.rs:MockConfigLoader::builder:66": [
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoaderBuilder::new",
          "line": 21
        }
      ],
      "./src/cook/interaction/prompts.rs:tests::test_mock_prompter_text:194": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "MockPrompter::new",
          "line": 136
        }
      ],
      "./src/testing/mocks/claude.rs:tests::test_mock_claude_fail_after:275": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::fail_after",
          "line": 56
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::code_review",
          "line": 464
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::execute_command:206": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_scenario",
          "line": 185
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::default_response",
          "line": 224
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::log_command",
          "line": 195
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::default_response:224": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_scenario",
          "line": 185
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitStatus::is_clean",
          "line": 45
        },
        {
          "file": "./src/git/types.rs",
          "name": "CommitId::hash",
          "line": 186
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "format_status_output",
          "line": 296
        }
      ],
      "./src/simple_state/cache.rs:CacheManager::set:63": [
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::cache_path",
          "line": 121
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_single_step:1144": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::determine_command_type",
          "line": 1198
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_claude_command",
          "line": 1291
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_handler_command",
          "line": 1367
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::interpolate_workflow_step",
          "line": 775
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_shell_command",
          "line": 1325
        }
      ],
      "./src/cook/session/adapter.rs:SessionManagerAdapter::new:27": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        }
      ],
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::list_sessions:126": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/testing/fixtures/mod.rs:Fixtures::git_subprocess:61": [
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::new",
          "line": 20
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        }
      ],
      "./src/cook/coordinators/session_tests.rs:tests::test_start_session_failure:32": [
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::failing",
          "line": 42
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        }
      ],
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::convert_to_workflow_step:119": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_command_string",
          "line": 69
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::create_default_workflow_step",
          "line": 100
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::normalize_command_string",
          "line": 92
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::load_session_state:615": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_session_state",
          "line": 245
        }
      ],
      "./src/git/parsers.rs:create_worktree_from_line:201": [
        {
          "file": "./src/git/parsers.rs",
          "name": "extract_worktree_name",
          "line": 217
        },
        {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        }
      ],
      "./src/cook/signal_handler.rs:signal_tests::test_setup_interrupt_handlers:185": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_worktree_manager",
          "line": 69
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "setup_interrupt_handlers",
          "line": 13
        }
      ],
      "./src/cook/execution/claude.rs:tests::test_claude_executor_version:207": [
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::get_claude_version",
          "line": 115
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::add_response",
          "line": 179
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::new",
          "line": 37
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        }
      ],
      "./src/config/dynamic_registry.rs:tests::test_apply_definition_defaults_all_metadata_unset:767": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        }
      ],
      "./src/config/metadata_parser.rs:tests::test_minimal_definition:426": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::create_test_file",
          "line": 341
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::new",
          "line": 19
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_command_file",
          "line": 32
        }
      ],
      "./src/session/state.rs:SessionProgress::get_workflow_timing:408": [
        {
          "file": "./src/session/state.rs",
          "name": "WorkflowTiming::from_iterations",
          "line": 259
        }
      ],
      "./src/git/mod.rs:tests::test_is_repository_success:389": [
        {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_calls",
          "line": 92
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::is_repository",
          "line": 125
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        }
      ],
      "./src/testing/config.rs:TestConfigurations::test_mode:148": [
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::json_to_attribute_value:237": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        }
      ],
      "./src/git/mod.rs:tests::test_commit_nothing_to_commit:532": [
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::commit",
          "line": 254
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        }
      ],
      "./src/init/mod.rs:tests::test_run_init_create_commands:368": [
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        }
      ],
      "./src/cook/interaction/prompts.rs:tests::test_format_choice_prompt_empty:281": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::format_choice_prompt",
          "line": 57
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::get_worktree_commits:818": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/cook/git_ops.rs:tests::test_stage_all_changes_no_changes:286": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::stage_all_changes_in_dir",
          "line": 112
        }
      ],
      "./src/config/loader.rs:tests::test_load_from_path_unsupported_format:290": [
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_from_path",
          "line": 54
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        }
      ],
      "./src/config/command_validator.rs:tests::test_registry_initialization:420": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        }
      ],
      "./src/testing/config.rs:TestConfigurations::full_test:169": [
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::track_focus",
          "line": 113
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::skip_commit_validation",
          "line": 107
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        }
      ],
      "./src/config/command_validator.rs:tests::test_validate_missing_required_args:445": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        }
      ],
      "./src/testing/mod.rs:MockGitBuilder::default:116": [
        {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::new",
          "line": 123
        }
      ],
      "./src/subprocess/git.rs:GitRunnerImpl::run_command:229": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        }
      ],
      "./src/git/parsers.rs:tests::test_git_status_helper_methods:358": [
        {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitStatus::all_changed_files",
          "line": 70
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_get_step_display_name_test:815": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::delete_branch:302": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::is_git_repo:142": [
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::suppress_stderr",
          "line": 77
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::new:202": [
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::new",
          "line": 21
        }
      ],
      "./src/cook/retry.rs:tests::test_execute_with_retry_non_transient_failure:298": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        }
      ],
      "./src/worktree/tests.rs:cleanup_worktree_dir:30": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        }
      ],
      "./src/session/persistence.rs:tests::test_persisted_session:62": [
        {
          "file": "./src/session/config.rs",
          "name": "SessionConfig::default",
          "line": 18
        },
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::new",
          "line": 32
        }
      ],
      "./src/config/command_parser.rs:tests::test_parse_command_string_with_variables:219": [
        {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        }
      ],
      "./src/git/parsers.rs:parse_worktree_list:172": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "finalize_worktree",
          "line": 195
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "create_worktree_from_line",
          "line": 201
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "update_worktree_info",
          "line": 224
        }
      ],
      "./src/commands/handlers/shell.rs:ShellHandler::execute:45": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::from_output",
          "line": 60
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_object",
          "line": 52
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::schema",
          "line": 27
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::resolve_path",
          "line": 117
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_defaults",
          "line": 94
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_number",
          "line": 28
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::full_env",
          "line": 131
        }
      ],
      "./src/testing/fixtures/mod.rs:Fixtures::clean_git_repo:17": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_commit_message",
          "line": 77
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::is_repo",
          "line": 130
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_clean_status",
          "line": 66
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::new",
          "line": 47
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::parse_command_file:32": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_frontmatter",
          "line": 48
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::create_minimal_definition",
          "line": 81
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_sections",
          "line": 66
        }
      ],
      "./src/git/parsers.rs:parse_untracked_line:46": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/config/command_validator.rs:tests::test_validate_command_empty_command:527": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "validate_command",
          "line": 406
        }
      ],
      "./src/cook/coordinators/workflow_tests.rs:tests::test_execute_workflow_empty_commands:529": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        },
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        }
      ],
      "./src/cook/git_ops.rs:tests::test_check_git_status_success:338": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::check_git_status_in_dir",
          "line": 100
        }
      ],
      "./src/simple_state/state.rs:StateManager::load_or_create:98": [
        {
          "file": "./src/simple_state/types.rs",
          "name": "State::new",
          "line": 28
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::list_commands:299": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::sort",
          "line": 791
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::cleanup_merged_sessions:727": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        }
      ],
      "./src/config/mod.rs:tests::test_get_claude_api_key_from_config:432": [
        {
          "file": "./src/config/mod.rs",
          "name": "Config::get_claude_api_key",
          "line": 133
        }
      ],
      "./src/git/parsers.rs:tests::test_parse_diff_output:301": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_diff_output",
          "line": 132
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::create_minimal_definition:81": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_description",
          "line": 93
        }
      ],
      "./src/simple_state/tests.rs:test::test_state_file_permissions:228": [
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::state_mut",
          "line": 45
        },
        {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::save",
          "line": 126
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        }
      ],
      "./src/cook/execution/data_pipeline.rs:JsonPath::recursive_descent:325": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::recursive_descent",
          "line": 325
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/commands/handlers/mod.rs:all_handlers:16": [
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::new",
          "line": 18
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::new",
          "line": 16
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::new",
          "line": 16
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::new",
          "line": 16
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::new",
          "line": 16
        }
      ],
      "./src/commands/mod.rs:CommandHandlerBuilder::default:77": [
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::new",
          "line": 58
        }
      ],
      "./src/testing/helpers/mod.rs:tests::test_create_test_repo:153": [
        {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_test_repo",
          "line": 10
        }
      ],
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::prompt_yes_no:80": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::read_line",
          "line": 34
        }
      ],
      "./src/subprocess/tests.rs:subprocess_tests::test_subprocess_manager:105": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_success",
          "line": 168
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::mock",
          "line": 139
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        }
      ],
      "./src/cook/retry.rs:tests::test_error_formatting_command_not_found:256": [
        {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::update_checkpoint:603": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        }
      ],
      "./src/cook/orchestrator.rs:tests::test_process_glob_pattern_matches_files:2411": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::process_glob_pattern",
          "line": 971
        }
      ],
      "./src/cook/execution/interpolation.rs:tests::test_default_values:420": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_save_checkpoint:523": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::save_checkpoint",
          "line": 143
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::create_session_state",
          "line": 68
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::default:85": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::new",
          "line": 91
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_workflow_command:1096": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::prepare_environment_variables",
          "line": 1206
        },
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::complete_command",
          "line": 48
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::format_duration",
          "line": 131
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::build_command",
          "line": 1161
        },
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::start_command",
          "line": 42
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "apply_command_defaults",
          "line": 411
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_and_validate_command",
          "line": 1231
        },
        {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        }
      ],
      "./src/commands/handlers/git.rs:GitHandler::execute:46": [
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_bool",
          "line": 36
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::schema",
          "line": 27
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_defaults",
          "line": 94
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::full_env",
          "line": 131
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_array",
          "line": 44
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        }
      ],
      "./src/worktree/manager.rs:tests::test_merge_session_claude_cli_failure:892": [
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        }
      ],
      "./src/commands/registry.rs:TestHandler::schema:153": [
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        }
      ],
      "./src/git/mod.rs:tests::test_switch_branch:645": [
        {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::switch_branch",
          "line": 286
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_calls",
          "line": 92
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        }
      ],
      "./src/cook/execution/claude.rs:ClaudeExecutorImpl::check_claude_cli:98": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/testing/helpers/mod.rs",
          "name": "run_command",
          "line": 81
        }
      ],
      "./src/cook/retry.rs:additional_tests::test_check_claude_cli_error_cases:530": [
        {
          "file": "./src/cook/retry.rs",
          "name": "check_claude_cli",
          "line": 151
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::verbosity:164": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::verbosity",
          "line": 290
        }
      ],
      "./src/cook/workflow/executor.rs:tests::test_get_current_head_error_handling:1716": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head",
          "line": 1414
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_workflow_with_args:878": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::format_duration",
          "line": 131
        },
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::new",
          "line": 21
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::process_workflow_input",
          "line": 1020
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::start_iteration",
          "line": 30
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::collect_workflow_inputs",
          "line": 946
        },
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::complete_iteration",
          "line": 35
        }
      ],
      "./src/commands/handlers/cargo.rs:tests::test_cargo_dry_run:322": [
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::new",
          "line": 16
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_dry_run",
          "line": 78
        }
      ],
      "./src/commands/attributes.rs:AttributeSchema::apply_defaults:171": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/subprocess/adapter.rs:RealSubprocessExecutor::execute:33": [
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "create_output",
          "line": 67
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::get_command_log:175": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::new:63": [
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        }
      ],
      "./src/init/mod.rs:tests::test_validate_project_structure_not_git_repo:550": [
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/init/mod.rs",
          "name": "validate_project_structure",
          "line": 245
        }
      ],
      "./src/testing/fixtures/mod.rs:Fixtures::dirty_git_repo:25": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::new",
          "line": 47
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_commit_message",
          "line": 77
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::is_repo",
          "line": 130
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_dirty_status",
          "line": 71
        }
      ],
      "./src/cook/execution/interpolation.rs:value_to_string:336": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/init/mod.rs:install_command:222": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystem::write_file:73": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::get_current_branch:330": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        }
      ],
      "./src/cook/mod.rs:cook_tests::test_load_workflow_default:427": [
        {
          "file": "./src/cook/mod.rs",
          "name": "load_workflow",
          "line": 216
        }
      ],
      "./src/testing/helpers/assertions.rs:tests::test_assert_file_exists_panic:173": [
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_exists",
          "line": 45
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationContext::add_json_object:316": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/git/parsers.rs:tests::test_parse_status_output_with_changes:258": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::new:91": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::new",
          "line": 30
        }
      ],
      "./src/cook/tests.rs:workflow_parsing_tests::test_parse_workflow_with_commit_required:370": [
        {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        }
      ],
      "./src/testing/mocks/git.rs:tests::test_mock_git_commits:356": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_commits",
          "line": 135
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::create_commit",
          "line": 213
        }
      ],
      "./src/config/mod.rs:tests::test_get_global_mmm_dir_success:673": [
        {
          "file": "./src/config/mod.rs",
          "name": "get_global_mmm_dir",
          "line": 27
        }
      ],
      "./src/config/loader.rs:tests::test_load_with_no_config_uses_defaults:242": [
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::load_with_explicit_path",
          "line": 70
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        }
      ],
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::default:66": [
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::new",
          "line": 72
        }
      ],
      "./src/cook/execution/data_pipeline.rs:Sorter::parse:754": [
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        }
      ],
      "./src/config/mod.rs:GlobalConfig::default:89": [
        {
          "file": "./src/config/mod.rs",
          "name": "get_global_mmm_dir",
          "line": 27
        }
      ],
      "./src/cook/interaction/mod.rs:MockUserInteraction::get_messages:488": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/config/command_parser.rs:tests::test_expand_variables:159": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_arg",
          "line": 432
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "expand_variables",
          "line": 77
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_option",
          "line": 439
        }
      ],
      "./src/abstractions/claude.rs:MockClaudeClient::code_review:646": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 615
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        }
      ],
      "./src/testing/mod.rs:TestContext::new:34": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        }
      ],
      "./src/worktree/tests.rs:test_create_session_with_uuid_name:81": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        }
      ],
      "./src/commands/handlers/shell.rs:ShellHandler::schema:27": [
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_required",
          "line": 116
        }
      ],
      "./src/cook/orchestrator.rs:tests::create_test_orchestrator_with_config:1612": [
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::with_test_config",
          "line": 118
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::new",
          "line": 1509
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::with_test_config",
          "line": 45
        }
      ],
      "./src/testing/config.rs:TestConfigurations::with_no_changes:153": [
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::no_changes_commands",
          "line": 93
        }
      ],
      "./src/cook/retry.rs:execute_with_retry:30": [
        {
          "file": "./src/cook/retry.rs",
          "name": "await_retry_delay",
          "line": 76
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "should_retry_output",
          "line": 84
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "handle_command_error",
          "line": 98
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::display_warning:120": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::warning",
          "line": 188
        }
      ],
      "./src/commands/handlers/shell.rs:tests::test_shell_handler_execute:168": [
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::new",
          "line": 112
        },
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::expect_execute",
          "line": 118
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_executor",
          "line": 60
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::execute",
          "line": 45
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::new",
          "line": 16
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_run_analysis:247": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::run_analysis",
          "line": 33
        }
      ],
      "./src/cook/coordinators/workflow_tests.rs:tests::test_should_continue_beyond_limit:232": [
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::should_continue",
          "line": 169
        }
      ],
      "./src/cook/interaction/mod.rs:MockUserInteraction::start_spinner:263": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/testing/mocks/session.rs:MockSessionManager::update_session:80": [
        {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::add_files_changed",
          "line": 95
        },
        {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::increment_iteration",
          "line": 100
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute:318": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_reduce_phase",
          "line": 955
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::report_summary",
          "line": 1442
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::load_work_items_with_pipeline",
          "line": 354
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_map_phase",
          "line": 406
        }
      ],
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::execute_workflow:145": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_step",
          "line": 128
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::should_continue",
          "line": 169
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::convert_to_workflow_step",
          "line": 119
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::add_success_response:250": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::stage_all:244": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::handle_on_failure:1405": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_single_step",
          "line": 1144
        }
      ],
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_string:1431": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        }
      ],
      "./src/config/mod.rs:tests::test_get_claude_api_key_precedence:408": [
        {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        }
      ],
      "./src/testing/mod.rs:tests::test_create_test_file:303": [
        {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::new",
          "line": 34
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::create_test_file",
          "line": 341
        }
      ],
      "./src/git/mod.rs:tests::test_get_current_branch:435": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::get_current_branch",
          "line": 330
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        }
      ],
      "./src/config/command.rs:tests::test_workflow_command_conversion:573": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        }
      ],
      "./src/session/state.rs:SessionProgress::complete_iteration:393": [
        {
          "file": "./src/session/state.rs",
          "name": "IterationTiming::complete",
          "line": 230
        }
      ],
      "./src/commands/handlers/shell.rs:tests::test_shell_handler_schema:158": [
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::new",
          "line": 16
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::schema",
          "line": 27
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::display_progress:128": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::progress",
          "line": 199
        }
      ],
      "./src/cook/coordinators/workflow_tests.rs:tests::test_should_continue_at_limit:210": [
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::should_continue",
          "line": 169
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        }
      ],
      "./src/cook/tests.rs:cook_tests::test_claude_cli_not_available:50": [
        {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::new",
          "line": 34
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::unavailable_claude",
          "line": 245
        }
      ],
      "./src/commands/handlers/file.rs:tests::test_file_write_and_read:319": [
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::new",
          "line": 18
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        }
      ],
      "./src/abstractions/claude.rs:MockClaudeClient::lint:689": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 615
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        }
      ],
      "./src/config/command_validator.rs:tests::test_validate_unknown_command:453": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        }
      ],
      "./src/cook/execution/runner.rs:MockCommandRunner::default:167": [
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        }
      ],
      "./src/abstractions/claude.rs:MockClaudeClient::execute_command:615": [
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::remove",
          "line": 77
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/cook/coordinators/workflow_tests.rs:tests::test_execute_workflow_simple_commands:304": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        }
      ],
      "./src/commands/handlers/claude.rs:ClaudeHandler::schema:27": [
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_required",
          "line": 116
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        }
      ],
      "./src/cook/coordinators/session_tests.rs:tests::test_session_lifecycle:210": [
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::get_session_info",
          "line": 101
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::update_status",
          "line": 73
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::complete_session",
          "line": 86
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::track_iteration",
          "line": 79
        }
      ],
      "./src/simple_state/tests.rs:test::test_state_manager_creation:10": [
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::cleanup_session:508": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        }
      ],
      "./src/testing/helpers/mod.rs:create_test_repo:10": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        }
      ],
      "./src/cook/git_ops.rs:stage_all_changes:51": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::stage_all_changes",
          "line": 306
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_shell_command:842": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        }
      ],
      "./src/cook/interaction/display.rs:tests::test_verbosity_levels:568": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "VerbosityLevel::from_args",
          "line": 19
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperations::default:110": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        }
      ],
      "./src/worktree/manager.rs:tests::test_update_checkpoint_increments_iteration:1109": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_checkpoint",
          "line": 603
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_session_state",
          "line": 245
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::interpolate_workflow_step:775": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_workflow_execution_single_iteration:1061": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 368
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::get_updates",
          "line": 88
        }
      ],
      "./src/commands/handlers/cargo.rs:tests::test_cargo_handler_schema:244": [
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::new",
          "line": 16
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        }
      ],
      "./src/commands/result.rs:tests::test_from_output:191": [
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::from_output",
          "line": 60
        }
      ],
      "./src/testing/test_mocks.rs:TestMockSetup::setup_metrics_collection:264": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stderr",
          "line": 154
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::build_success",
          "line": 31
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_exit_code",
          "line": 159
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::clippy_output",
          "line": 25
        },
        {
          "file": "./src/testing/test_mocks.rs",
          "name": "CargoMocks::check_success",
          "line": 13
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        }
      ],
      "./src/testing/mocks/config.rs:MockConfigLoaderBuilder::default:15": [
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoaderBuilder::new",
          "line": 21
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::create_worktree:321": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        }
      ],
      "./src/init/mod.rs:tests::test_handle_existing_commands_no_tty:513": [
        {
          "file": "./src/init/mod.rs",
          "name": "handle_existing_commands",
          "line": 126
        }
      ],
      "./src/commands/handlers/git.rs:tests::test_git_commit_dry_run:281": [
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::new",
          "line": 16
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::execute",
          "line": 46
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_dry_run",
          "line": 78
        }
      ],
      "./src/abstractions/claude.rs:RealClaudeClient::default:337": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::new",
          "line": 303
        }
      ],
      "./src/session/persistence.rs:PersistedSession::is_resumable:43": [
        {
          "file": "./src/session/state.rs",
          "name": "SessionState::is_terminal",
          "line": 114
        },
        {
          "file": "./src/session/persistence.rs",
          "name": "PersistedSession::latest_checkpoint",
          "line": 38
        }
      ],
      "./src/cook/retry.rs:tests::test_format_subprocess_error_all_fields:355": [
        {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        }
      ],
      "./src/config/command_validator.rs:tests::test_validate_command_invalid_name:508": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "validate_command",
          "line": 406
        }
      ],
      "./src/abstractions/claude.rs:MockClaudeClient::implement_spec:664": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 615
        }
      ],
      "./src/testing/helpers/assertions.rs:assert_file_not_contains:76": [
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_exists",
          "line": 45
        }
      ],
      "./src/subprocess/mod.rs:SubprocessManager::production:119": [
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::new",
          "line": 102
        }
      ],
      "./src/cook/execution/interpolation.rs:tests::test_complex_json_interpolation:472": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        }
      ],
      "./src/cook/coordinators/workflow.rs:tests::test_extract_workflow_step_command_test:360": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_workflow_step_command",
          "line": 80
        }
      ],
      "./src/cook/session/migration.rs:example_recovery:106": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        {
          "file": "./src/cook/session/migration.rs",
          "name": "create_full_featured_manager",
          "line": 14
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::restore_session",
          "line": 292
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::get_state",
          "line": 99
        }
      ],
      "./src/testing/mocks/subprocess.rs:tests::test_mock_subprocess_default_response:179": [
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::new",
          "line": 20
        },
        {
          "file": "./src/subprocess/claude.rs",
          "name": "ClaudeRunnerImpl::run_command",
          "line": 49
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::with_default_response",
          "line": 55
        }
      ],
      "./src/cook/mod.rs:load_workflow:216": [
        {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::create_agent_branch:860": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        }
      ],
      "./src/abstractions/git.rs:tests::test_mock_git_operations:358": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::get_called_commands",
          "line": 266
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::check_git_status",
          "line": 202
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_last_commit_message",
          "line": 194
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        }
      ],
      "./src/cook/git_ops.rs:tests::test_stage_all_changes_success:265": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::check_git_status_in_dir",
          "line": 100
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::stage_all_changes_in_dir",
          "line": 112
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        }
      ],
      "./src/cook/execution/data_pipeline.rs:tests::test_pipeline_complete:1009": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::from_config",
          "line": 33
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::process",
          "line": 72
        }
      ],
      "./src/cook/signal_handler.rs:tests::create_test_worktree_manager:69": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::mock",
          "line": 139
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::mark_session_abandoned:650": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        }
      ],
      "./src/cook/coordinators/workflow.rs:tests::test_extract_command_string_structured:293": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_command_string",
          "line": 69
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::cleanup:440": [
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::merge_session",
          "line": 330
        }
      ],
      "./src/config/command.rs:tests::debug_command_sequence:847": [
        {
          "file": "./src/config/command.rs",
          "name": "tests::try_parse_as",
          "line": 855
        }
      ],
      "./src/worktree/tests.rs:test_merge_session:149": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        }
      ],
      "./src/cook/tests.rs:cook_tests::test_rate_limit_handling:81": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::code_review",
          "line": 464
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::rate_limited_claude",
          "line": 236
        }
      ],
      "./src/testing/helpers/mod.rs:dirs_equal:115": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::is_file",
          "line": 95
        }
      ],
      "./src/testing/mocks/git.rs:tests::test_git_command_with_classifier:369": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::new",
          "line": 47
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_clean_status",
          "line": 66
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_commit_message",
          "line": 77
        }
      ],
      "./src/commands/handlers/git.rs:tests::test_git_handler_schema:240": [
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::new",
          "line": 16
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::schema",
          "line": 27
        }
      ],
      "./src/cook/coordinators/session_tests.rs:tests::test_complete_session_failure:129": [
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::complete_session",
          "line": 86
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        }
      ],
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::builder:82": [
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManagerBuilder::new",
          "line": 22
        }
      ],
      "./src/config/dynamic_registry.rs:tests::test_validate_json_value_type_path:531": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        }
      ],
      "./src/testing/mod.rs:TestFixtures::rate_limited_claude:236": [
        {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::is_available",
          "line": 173
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::with_error",
          "line": 185
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::new",
          "line": 166
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        }
      ],
      "./src/config/dynamic_registry.rs:tests::test_apply_definition_defaults_partial_metadata:849": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/cook/coordinators/session.rs:DefaultSessionCoordinator::complete_session:86": [
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::update_status",
          "line": 73
        }
      ],
      "./src/commands/context.rs:tests::test_path_resolution:180": [
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::resolve_path",
          "line": 117
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        }
      ],
      "./src/testing/mocks/subprocess.rs:MockSubprocessManager::reset_history:137": [
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::clear",
          "line": 86
        }
      ],
      "./src/cook/orchestrator.rs:tests::test_setup_environment_basic:1750": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::setup_environment",
          "line": 216
        }
      ],
      "./src/config/mod.rs:tests::test_merge_env_vars:539": [
        {
          "file": "./src/config/mod.rs",
          "name": "Config::merge_env_vars",
          "line": 111
        },
        {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        }
      ],
      "./src/commands/registry.rs:CommandRegistry::with_defaults:22": [
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::new",
          "line": 16
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::new",
          "line": 18
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::new",
          "line": 16
        },
        {
          "file": "./src/commands/handlers/git.rs",
          "name": "GitHandler::new",
          "line": 16
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        {
          "file": "./src/commands/handlers/shell.rs",
          "name": "ShellHandler::new",
          "line": 16
        }
      ],
      "./src/config/dynamic_registry.rs:tests::test_apply_definition_defaults_no_defaults:1044": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        }
      ],
      "./src/cook/coordinators/execution_tests.rs:tests::test_execute_command_success:76": [
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::new",
          "line": 78
        },
        {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_command",
          "line": 93
        }
      ],
      "./src/commands/handlers/file.rs:FileHandler::default:297": [
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::new",
          "line": 18
        }
      ],
      "./src/init/mod.rs:tests::test_run_init_not_git_repo:351": [
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        }
      ],
      "./src/cook/interaction/mod.rs:tests::test_mock_user_interaction:362": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_progress",
          "line": 540
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_success",
          "line": 555
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_warning",
          "line": 526
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_error",
          "line": 249
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::display_info",
          "line": 519
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 368
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        }
      ],
      "./src/session/state.rs:tests::test_session_progress:455": [
        {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::new",
          "line": 332
        }
      ],
      "./src/init/mod.rs:tests::test_run_init_force_overwrite:440": [
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        }
      ],
      "./src/session/timing.rs:TimingTracker::default:80": [
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::new",
          "line": 21
        }
      ],
      "./src/testing/mocks/session.rs:MockSessionManager::get_update_calls:49": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/testing/mocks/git.rs:tests::test_mock_git_dirty_status:334": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::check_git_status",
          "line": 124
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_dirty_status",
          "line": 71
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::new",
          "line": 47
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_get_step_display_name_shell:790": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::notify_observers:77": [
        {
          "file": "./src/session/events.rs",
          "name": "LoggingObserver::on_event",
          "line": 113
        }
      ],
      "./src/testing/config.rs:tests::test_into_arc:252": [
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::into_arc",
          "line": 64
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        }
      ],
      "./src/config/command_validator.rs:tests::test_validate_valid_command:431": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        }
      ],
      "./src/config/command.rs:Command::with_arg:432": [
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        }
      ],
      "./src/cook/mod.rs:load_workflow_with_mapreduce:204": [
        {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook_with_mapreduce",
          "line": 225
        }
      ],
      "./src/cook/interaction/display.rs:tests::test_mock_spinner:498": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::new",
          "line": 342
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::get_messages",
          "line": 349
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::start_spinner",
          "line": 390
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "SimpleSpinnerHandle::update_message",
          "line": 311
        }
      ],
      "./src/subprocess/tests.rs:subprocess_tests::test_production_runner_success:7": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        }
      ],
      "./src/commands/registry.rs:tests::test_registry_execute:203": [
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::execute",
          "line": 85
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::register_sync",
          "line": 50
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        }
      ],
      "./src/testing/mocks/session.rs:MockSessionManager::get_state:119": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/testing/config.rs:tests::test_builder_with_all_options:199": [
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::track_focus",
          "line": 113
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::add_arg",
          "line": 125
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::no_changes_commands",
          "line": 93
        },
        {
          "file": "./src/session/config.rs",
          "name": "ExecutionMode::worktree_name",
          "line": 45
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::skip_commit_validation",
          "line": 107
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        }
      ],
      "./src/cook/workflow/executor_tests.rs:MockClaudeExecutor::execute_claude_command:47": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/tests.rs:cook_tests::test_empty_repository:120": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        }
      ],
      "./src/cook/workflow/executor.rs:tests::test_get_current_head_in_worktree:1633": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "tests::test_get_current_head",
          "line": 1414
        }
      ],
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::get_messages:35": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/execution/mapreduce.rs:AgentContext::update_with_output:241": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/testing/mod.rs:MockGitBuilder::new:123": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_create_session_state_with_focus:400": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::create_session_state",
          "line": 68
        }
      ],
      "./src/cook/session/adapter.rs:tests::test_adapter_creation:318": [
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::new",
          "line": 27
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::inner",
          "line": 37
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::get_diff:408": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_diff_output",
          "line": 132
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::stage_files:222": [
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        }
      ],
      "./src/testing/mod.rs:tests::test_fixtures:334": [
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::successful_claude",
          "line": 223
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::clean_repo_git",
          "line": 201
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::dirty_repo_git",
          "line": 212
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "TestFixtures::unavailable_claude",
          "line": 245
        }
      ],
      "./src/cook/mod.rs:cook_tests::test_create_orchestrator:404": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        }
      ],
      "./src/testing/helpers/mod.rs:tests::test_create_rust_project:159": [
        {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_rust_project",
          "line": 44
        }
      ],
      "./src/subprocess/git.rs:GitRunnerImpl::commit:94": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        }
      ],
      "./src/commands/handlers/file.rs:tests::test_file_dry_run:386": [
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_dry_run",
          "line": 78
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::new",
          "line": 18
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::execute",
          "line": 52
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_load_playbook_yaml:152": [
        {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        }
      ],
      "./src/session/tests.rs:test_concurrent_sessions:53": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        }
      ],
      "./src/cook/retry.rs:tests::test_format_subprocess_error_unauthorized_variations:380": [
        {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        }
      ],
      "./src/config/command_validator.rs:CommandRegistry::register:218": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/config/loader.rs:tests::test_new_creates_default_config:147": [
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        }
      ],
      "./src/session/storage.rs:FileSessionStorage::delete:90": [
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::session_path",
          "line": 37
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        }
      ],
      "./src/commands/registry.rs:tests::test_registry_get_handler:187": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::register_sync",
          "line": 50
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        }
      ],
      "./src/cook/execution/data_pipeline.rs:JsonPath::compile:187": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::parse_field",
          "line": 259
        }
      ],
      "./src/abstractions/claude.rs:tests::test_mock_claude_client:709": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 646
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_success_response",
          "line": 582
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::implement_spec",
          "line": 664
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::get_called_commands",
          "line": 602
        }
      ],
      "./src/testing/mocks/workflow.rs:MockWorkflowExecutor::get_executed_steps:50": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/execution/data_pipeline.rs:tests::test_json_path_nested:915": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::select",
          "line": 275
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "JsonPath::compile",
          "line": 187
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::get_step_display_name:336": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/workflow/executor_tests.rs:MockSessionManager::update_session:95": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/git_ops.rs:tests::test_is_git_repo:144": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::init_repository:212": [
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        }
      ],
      "./src/testing/mocks/claude.rs:tests::test_mock_claude_builder:249": [
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::implement_spec",
          "line": 664
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockClaudeBuilder::with_error",
          "line": 185
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::code_review",
          "line": 464
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        }
      ],
      "./src/commands/handlers/claude.rs:tests::test_claude_handler_execute:226": [
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::new",
          "line": 16
        },
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::expect_execute",
          "line": 118
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_executor",
          "line": 60
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::new",
          "line": 112
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        }
      ],
      "./src/cook/coordinators/execution_tests.rs:tests::test_execute_claude_failure:137": [
        {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_claude",
          "line": 125
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::new",
          "line": 78
        }
      ],
      "./src/cook/workflow/executor_tests.rs:MockClaudeExecutor::get_calls:40": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/retry.rs:tests::test_execute_with_retry_command_not_found:288": [
        {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::get_last_commit_message:416": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_commit_message",
          "line": 393
        }
      ],
      "./src/cook/tests.rs:cook_tests::test_focus_directive:164": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::get_called_commands",
          "line": 602
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_success_response",
          "line": 582
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 646
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::get_status:374": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        }
      ],
      "./src/testing/mocks/claude.rs:MockClaudeClient::code_review:169": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        }
      ],
      "./src/cook/git_ops.rs:tests::create_temp_git_repo:182": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/cook/orchestrator.rs:tests::test_auto_accept_worktree_merge:2238": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::cleanup",
          "line": 440
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 368
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "tests::create_test_orchestrator",
          "line": 1577
        }
      ],
      "./src/cook/interaction/display.rs:tests::test_verbosity_filtering:608": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::info",
          "line": 182
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::error",
          "line": 194
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::step_start",
          "line": 265
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::create_commit:136": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        }
      ],
      "./src/cook/retry.rs:additional_tests::test_format_subprocess_error_with_newlines:488": [
        {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        }
      ],
      "./src/commands/handlers/cargo.rs:tests::test_cargo_build:254": [
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_executor",
          "line": 60
        },
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::expect_execute",
          "line": 118
        },
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::new",
          "line": 112
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::new",
          "line": 16
        }
      ],
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_array:1473": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::run_agent:467": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute_agent_commands",
          "line": 547
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "ProgressTracker::update_agent",
          "line": 177
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "ProgressTracker::complete_item",
          "line": 183
        }
      ],
      "./src/simple_state/types.rs:SessionRecord::default:60": [
        {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::new",
          "line": 40
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::switch_branch:337": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        }
      ],
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_object:1507": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        }
      ],
      "./src/config/command.rs:tests::parse_test_workflow_config:813": [
        {
          "file": "./src/config/command.rs",
          "name": "tests::debug_workflow_parsing_error",
          "line": 837
        }
      ],
      "./src/config/mod.rs:tests::test_command_serialization_roundtrip:369": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_continue_on_error",
          "line": 460
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_arg",
          "line": 432
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_timeout",
          "line": 453
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_retries",
          "line": 446
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_env",
          "line": 466
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_option",
          "line": 439
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_nested_array:1488": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        }
      ],
      "./src/cook/coordinators/execution_tests.rs:tests::test_execute_command_failure:98": [
        {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_command",
          "line": 93
        },
        {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::new",
          "line": 78
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        }
      ],
      "./src/worktree/test_state.rs:test_list_sessions_with_state:124": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        }
      ],
      "./src/git/scenario.rs:tests::test_scenario_mock_clean_repo:522": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_status",
          "line": 374
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_repository",
          "line": 355
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_current_branch",
          "line": 381
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_clean_repo",
          "line": 68
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_clean",
          "line": 420
        }
      ],
      "./src/cook/execution/interpolation.rs:tests::test_mixed_segments:510": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_template",
          "line": 87
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::extract_variables_section:127": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_section",
          "line": 137
        }
      ],
      "./src/cook/interaction/display.rs:tests::test_progress_display_success:553": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::success",
          "line": 205
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        }
      ],
      "./src/cook/signal_handler.rs:setup_interrupt_handlers:13": [
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "update_interrupted_state",
          "line": 48
        }
      ],
      "./src/main.rs:display_worktree_session:206": [
        {
          "file": "./src/main.rs",
          "name": "display_worktree_session_legacy",
          "line": 248
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::extract_description:93": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/simple_state/tests.rs:test::test_state_corruption_recovery:104": [
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/git/scenario.rs:tests::test_scenario_mock_command_logging:608": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_command_log",
          "line": 175
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_current_branch",
          "line": 381
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_clean_repo",
          "line": 68
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_repository",
          "line": 355
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::apply_definition_defaults:274": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/config/command.rs:Command::deserialize:474": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/session/storage.rs:FileSessionStorage::list:69": [
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::from_string",
          "line": 37
        }
      ],
      "./src/cook/coordinators/session_tests.rs:tests::test_start_session:12": [
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::get_session_info",
          "line": 101
        }
      ],
      "./src/cook/workflow/executor_tests.rs:MockMetricsCoordinator::generate_report:331": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_extract_spec_from_git:290": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::extract_spec_from_git",
          "line": 39
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_run_single_iteration:491": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        }
      ],
      "./src/commands/registry.rs:CommandRegistry::get:73": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/cook/session/adapter.rs:SessionManagerAdapter::update_session:104": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/worktree/manager.rs:tests::test_detect_mergeable_sessions_empty:1018": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::detect_mergeable_sessions",
          "line": 690
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::with_dirty_repo:86": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::set_scenario",
          "line": 60
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        },
        {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        }
      ],
      "./src/cook/execution/runner.rs:tests::test_command_with_context:140": [
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::new",
          "line": 31
        },
        {
          "file": "./src/cook/execution/mod.rs",
          "name": "ExecutionContext::default",
          "line": 37
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        }
      ],
      "./src/commands/handlers/file.rs:FileHandler::execute:52": [
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_defaults",
          "line": 94
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_bool",
          "line": 36
        },
        {
          "file": "./src/commands/handlers/file.rs",
          "name": "FileHandler::schema",
          "line": 29
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::resolve_path",
          "line": 117
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::create_checkpoint:591": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        }
      ],
      "./src/testing/mocks/workflow.rs:MockWorkflowExecutor::execute:103": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/config/command.rs:Command::from_string:419": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::get_status:132": [
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_output",
          "line": 8
        }
      ],
      "./src/abstractions/git.rs:real_git_tests::test_create_worktree_invalid_path:526": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::is_git_repo",
          "line": 142
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::new",
          "line": 63
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::create_worktree",
          "line": 199
        }
      ],
      "./src/simple_state/state.rs:StateManager::with_root:31": [
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::load_or_create",
          "line": 98
        }
      ],
      "./src/cook/session/migration.rs:tests::test_migration_example:153": [
        {
          "file": "./src/cook/session/migration.rs",
          "name": "create_full_featured_manager",
          "line": 14
        }
      ],
      "./src/config/command_validator.rs:CommandRegistry::validate_argument_type:283": [
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::default:269": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::new",
          "line": 19
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::display_info:116": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::info",
          "line": 182
        }
      ],
      "./src/worktree/tests.rs:test_list_sessions:98": [
        {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        }
      ],
      "./src/testing/helpers/mod.rs:count_files:103": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::is_file",
          "line": 95
        }
      ],
      "./src/subprocess/git.rs:GitRunnerImpl::log:202": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        }
      ],
      "./src/cook/coordinators/workflow_tests.rs:tests::test_execute_step:142": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_step",
          "line": 128
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_map_phase:406": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::run_agent",
          "line": 467
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "ProgressTracker::new",
          "line": 142
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::clone_executor",
          "line": 1481
        }
      ],
      "./src/config/command.rs:CommandArg::resolve:56": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/config/command_parser.rs:expand_variables:77": [
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        {
          "file": "./src/config/command_parser.rs",
          "name": "expand_string",
          "line": 95
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/worktree/test_state.rs:cleanup_worktree_dir:30": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperations::get_staged_files:131": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/coordinators/execution_tests.rs:tests::test_execute_claude_success:117": [
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::new",
          "line": 78
        },
        {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_claude",
          "line": 125
        }
      ],
      "./src/cook/coordinators/workflow.rs:tests::test_extract_workflow_step_command_shell:341": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_workflow_step_command",
          "line": 80
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::parse_sections:66": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_options_section",
          "line": 132
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_options",
          "line": 196
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_description",
          "line": 93
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_variables_to_args",
          "line": 165
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::extract_variables_section",
          "line": 127
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::get_progress:221": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/abstractions/git.rs:tests::test_real_git_operations_is_git_repo:398": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::suppress_stderr",
          "line": 77
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        }
      ],
      "./src/cook/interaction/display.rs:tests::test_iteration_display:586": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::get_messages",
          "line": 349
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::iteration_end",
          "line": 405
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::new",
          "line": 342
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::iteration_start",
          "line": 398
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::create_worktree:199": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::with_file:161": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_file",
          "line": 36
        }
      ],
      "./src/config/loader.rs:tests::test_load_with_explicit_path_yaml:161": [
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::load_with_explicit_path",
          "line": 70
        },
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_mapreduce_workflow:1065": [
        {
          "file": "./src/config/mapreduce.rs",
          "name": "MapReduceWorkflowConfig::to_map_phase",
          "line": 135
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/config/mapreduce.rs",
          "name": "MapReduceWorkflowConfig::to_reduce_phase",
          "line": 153
        }
      ],
      "./src/session/storage.rs:InMemoryStorage::default:109": [
        {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::new",
          "line": 116
        }
      ],
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_large_numbers:1575": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_get_step_display_name_claude:765": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        }
      ],
      "./src/cook/execution/interpolation.rs:tests::test_basic_interpolation:374": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_generate_session_id:409": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::generate_session_id",
          "line": 90
        }
      ],
      "./src/cook/mod.rs:create_orchestrator:123": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::new",
          "line": 95
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::new",
          "line": 63
        }
      ],
      "./src/cook/coordinators/session.rs:DefaultSessionCoordinator::get_session_info:101": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/commands/mod.rs:tests::test_command_handler_builder:116": [
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::new",
          "line": 58
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::register",
          "line": 65
        }
      ],
      "./src/subprocess/tests.rs:subprocess_tests::test_production_runner_command_not_found:30": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::command_output:156": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::command_output",
          "line": 278
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::is_repository:125": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        }
      ],
      "./src/git/mod.rs:tests::test_create_branch:620": [
        {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_calls",
          "line": 92
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::create_branch",
          "line": 469
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        }
      ],
      "./src/cook/retry.rs:tests::test_error_formatting_empty_outputs:268": [
        {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        }
      ],
      "./src/testing/mocks/git.rs:GitCommandType::classify:21": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::execute_step:128": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::display_progress",
          "line": 187
        }
      ],
      "./src/cook/tests.rs:git_ops_tests::test_git_command_tracking:545": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::get_called_commands",
          "line": 266
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::stage_all_changes",
          "line": 306
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::check_git_status",
          "line": 202
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::create_commit",
          "line": 213
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::handle_test_mode_execution:1152": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::is_test_mode_no_changes_command",
          "line": 1364
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationEngine::default:24": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        }
      ],
      "./src/config/command_validator.rs:tests::test_validate_command_valid:491": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "validate_command",
          "line": 406
        }
      ],
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::should_continue:169": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::display_progress",
          "line": 187
        }
      ],
      "./src/cook/interaction/mod.rs:tests::test_display_formatting:422": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::new",
          "line": 91
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_info",
          "line": 116
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_success",
          "line": 136
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_error",
          "line": 124
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_progress",
          "line": 128
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "DefaultUserInteraction::display_warning",
          "line": 120
        }
      ],
      "./src/commands/handlers/cargo.rs:CargoHandler::schema:27": [
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::new",
          "line": 106
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional_with_default",
          "line": 130
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_optional",
          "line": 123
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeSchema::add_required",
          "line": 116
        }
      ],
      "./src/cook/coordinators/workflow.rs:tests::test_extract_workflow_step_command_priority:447": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_workflow_step_command",
          "line": 80
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::prune_worktrees:507": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperations::git_command:149": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::next_response",
          "line": 139
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "GitCommandType::classify",
          "line": 21
        }
      ],
      "./src/cook/workflow/executor_tests.rs:MockUserInteraction::get_messages:368": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/worktree/tests.rs:test_list_interrupted_sessions_with_mixed_states:205": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_interrupted_sessions",
          "line": 640
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        }
      ],
      "./src/worktree/manager.rs:tests::test_cleanup_session_after_merge_not_merged:969": [
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session_after_merge",
          "line": 766
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        }
      ],
      "./src/cook/interaction/prompts.rs:tests::test_format_choice_prompt:271": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::format_choice_prompt",
          "line": 57
        }
      ],
      "./src/cook/retry.rs:format_subprocess_error:168": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/subprocess/mock.rs:MockProcessRunner::get_call_history:60": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/subprocess/mock.rs:MockProcessRunner::get_calls:92": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_call_history",
          "line": 60
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::default:315": [
        {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::new",
          "line": 19
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::new",
          "line": 19
        }
      ],
      "./src/config/command.rs:tests::test_command_creation:527": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_arg",
          "line": 432
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_option",
          "line": 439
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_retries",
          "line": 446
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::with_timeout",
          "line": 453
        }
      ],
      "./src/testing/mocks/git.rs:tests::test_mock_git_builder:318": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_commit_message",
          "line": 77
        },
        {
          "file": "./src/testing/mod.rs",
          "name": "MockGitBuilder::is_repo",
          "line": 130
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::new",
          "line": 47
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::with_clean_status",
          "line": 66
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::determine_command_type:271": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value",
          "line": 237
        }
      ],
      "./src/testing/mocks/subprocess.rs:MockSubprocessManagerBuilder::default:14": [
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::new",
          "line": 20
        }
      ],
      "./src/simple_state/tests.rs:test::test_concurrent_state_access:148": [
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::state_mut",
          "line": 45
        },
        {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::save",
          "line": 126
        }
      ],
      "./src/session/state.rs:SessionProgress::start_iteration:387": [
        {
          "file": "./src/session/state.rs",
          "name": "IterationTiming::new",
          "line": 219
        }
      ],
      "./src/config/dynamic_registry.rs:tests::test_validate_json_value_type_integer:471": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_run_command_with_timeout:539": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        }
      ],
      "./src/simple_state/cache.rs:CacheManager::remove:77": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::cache_path",
          "line": 121
        }
      ],
      "./src/config/dynamic_registry.rs:tests::test_apply_definition_defaults_metadata_already_set:808": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/commands/context.rs:tests::test_env_vars:164": [
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::add_env_var",
          "line": 90
        }
      ],
      "./src/cook/execution/data_pipeline.rs:JsonPath::evaluate_filter:346": [
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::create_test_executor:479": [
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::new",
          "line": 202
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockMetricsCoordinator::new",
          "line": 277
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockAnalysisCoordinator::new",
          "line": 134
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockClaudeExecutor::new",
          "line": 29
        }
      ],
      "./src/config/loader.rs:ConfigLoader::new:19": [
        {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        }
      ],
      "./src/cook/git_ops.rs:tests::stage_all_changes_in_dir:112": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::git_in_dir",
          "line": 84
        }
      ],
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::validate_choice_input:42": [
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        }
      ],
      "./src/commands/context.rs:tests::test_context_builder_pattern:152": [
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_iteration",
          "line": 72
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_session_id",
          "line": 66
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_dry_run",
          "line": 78
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::stage_all_changes:306": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        }
      ],
      "./src/testing/mod.rs:MockClaudeBuilder::with_error:185": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_error_response",
          "line": 592
        }
      ],
      "./src/cook/interaction/prompts.rs:tests::test_prompt_choice_empty_choices:323": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::prompt_choice",
          "line": 107
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::new",
          "line": 30
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::from_args:99": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "VerbosityLevel::from_args",
          "line": 19
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystem::default:17": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::new",
          "line": 23
        }
      ],
      "./src/config/command_discovery.rs:tests::test_needs_refresh:196": [
        {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::scan_commands",
          "line": 34
        },
        {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::new",
          "line": 19
        },
        {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::clear_cache",
          "line": 104
        }
      ],
      "./src/cook/retry.rs:tests::test_execute_with_retry_success:276": [
        {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::switch_branch:474": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::git_command_in_dir:342": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        }
      ],
      "./src/testing/helpers/assertions.rs:tests::test_assert_contains:187": [
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_contains",
          "line": 105
        },
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_not_contains",
          "line": 115
        }
      ],
      "./src/cook/execution/data_pipeline.rs:Sorter::compare_values:817": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::compare_json_values",
          "line": 838
        }
      ],
      "./src/cook/execution/runner.rs:RealCommandRunner::default:45": [
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::new",
          "line": 31
        }
      ],
      "./src/testing/mocks/claude.rs:tests::test_call_counting:291": [
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClient::reset_call_count",
          "line": 106
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        },
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::with_success",
          "line": 39
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::lint",
          "line": 527
        }
      ],
      "./src/config/mapreduce.rs:tests::test_parse_timeout_formats:208": [
        {
          "file": "./src/config/mapreduce.rs",
          "name": "parse_mapreduce_workflow",
          "line": 166
        }
      ],
      "./src/config/command_parser.rs:tests::test_parse_command_string_simple:207": [
        {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationContext::merge:328": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/git_ops.rs:tests::test_mutex_synchronization:396": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "check_git_status",
          "line": 43
        }
      ],
      "./src/testing/mocks/fs.rs:tests::test_mock_fs_list_dir:289": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_directory",
          "line": 166
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::list_dir",
          "line": 105
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_file",
          "line": 161
        }
      ],
      "./src/commands/mod.rs:MockHandler::execute:102": [
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        }
      ],
      "./src/commands/context.rs:ExecutionContext::test:55": [
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        }
      ],
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::cleanup_session:116": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/execution/data_pipeline.rs:Sorter::sort:791": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::compare_items",
          "line": 796
        }
      ],
      "./src/cook/git_ops.rs:tests::test_public_api_functions_in_real_repo:369": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "git_command",
          "line": 27
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "is_git_repo",
          "line": 71
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "get_last_commit_message",
          "line": 35
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "check_git_status",
          "line": 43
        }
      ],
      "./src/cook/orchestrator.rs:tests::create_test_orchestrator:1577": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::new",
          "line": 1509
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::new",
          "line": 95
        },
        {
          "file": "./src/cook/session/tracker.rs",
          "name": "SessionTrackerImpl::new",
          "line": 17
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::new",
          "line": 37
        }
      ],
      "./src/abstractions/git.rs:real_git_tests::test_git_command_failure:455": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::new",
          "line": 63
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperationsBuilder::default:41": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::new",
          "line": 47
        }
      ],
      "./src/config/command.rs:CommandArg::deserialize:38": [
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        }
      ],
      "./src/cook/execution/runner.rs:tests::test_mock_command_runner:213": [
        {
          "file": "./src/cook/execution/mod.rs",
          "name": "ExecutionContext::default",
          "line": 37
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::run_with_context",
          "line": 199
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::add_response",
          "line": 179
        },
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "MockCommandRunner::new",
          "line": 173
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationEngine::parse_template:87": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_variable_expression",
          "line": 121
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::create_test_executor_with_config:513": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockClaudeExecutor::new",
          "line": 29
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockMetricsCoordinator::new",
          "line": 277
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockAnalysisCoordinator::new",
          "line": 134
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::with_test_config",
          "line": 219
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        }
      ],
      "./src/config/command.rs:tests::test_command_from_string:546": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::from_string",
          "line": 419
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystem::read_file:56": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::with_project_structure:171": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_directory",
          "line": 41
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_file",
          "line": 36
        }
      ],
      "./src/config/dynamic_registry.rs:tests::test_validate_json_value_type_boolean:498": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::extract_spec_from_git:39": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_last_commit_message",
          "line": 194
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::json_to_attribute_value:1263": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::json_to_attribute_value",
          "line": 1263
        }
      ],
      "./src/cook/orchestrator.rs:TestMockGitOperations::git_command_in_dir:1566": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "TestMockGitOperations::git_command",
          "line": 1522
        }
      ],
      "./src/cook/coordinators/workflow.rs:tests::test_extract_command_string_simple_object:309": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_command_string",
          "line": 69
        }
      ],
      "./src/cook/execution/mapreduce_tests.rs:test_agent_context_update_with_output:78": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::new",
          "line": 221
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::update_with_output",
          "line": 241
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationEngine::resolve_variable:180": [
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::resolve_path",
          "line": 117
        }
      ],
      "./src/cook/mod.rs:load_playbook_with_mapreduce:225": [
        {
          "file": "./src/config/mapreduce.rs",
          "name": "parse_mapreduce_workflow",
          "line": 166
        }
      ],
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::get_session:134": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/config/command.rs:tests::test_commit_required_field:605": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::with_detached_head:130": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::set_scenario",
          "line": 60
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        },
        {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::get_last_commit_message:200": [
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::get_commit_message",
          "line": 161
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_load_playbook_without_commands_wrapper:217": [
        {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook",
          "line": 320
        }
      ],
      "./src/cook/retry.rs:additional_tests::test_execute_with_retry_verbose_output:476": [
        {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/cook/interaction/prompts.rs:UserPrompterImpl::prompt_choice:107": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::validate_choice_input",
          "line": 42
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::read_line",
          "line": 34
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::parse_frontmatter:48": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::convert_frontmatter_to_definition",
          "line": 232
        },
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        }
      ],
      "./src/cook/execution/data_pipeline.rs:FilterExpression::parse_value:546": [
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::apply_event:85": [
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::complete_iteration",
          "line": 35
        },
        {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::success_rate",
          "line": 365
        },
        {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::get_workflow_timing",
          "line": 408
        },
        {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::all_commits",
          "line": 374
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::start_workflow",
          "line": 382
        },
        {
          "file": "./src/session/events.rs",
          "name": "TimestampedEvent::new",
          "line": 75
        },
        {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::start_iteration",
          "line": 387
        }
      ],
      "./src/cook/execution/runner.rs:RealCommandRunner::execute:112": [
        {
          "file": "./src/cook/execution/runner.rs",
          "name": "RealCommandRunner::run_with_context",
          "line": 69
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::step_end:152": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::step_end",
          "line": 271
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::iteration_end:251": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::format_duration",
          "line": 131
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::list_active_sessions:243": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/session/state.rs",
          "name": "SessionState::is_terminal",
          "line": 114
        }
      ],
      "./src/testing/mocks/git.rs:tests::test_mock_git_staging:345": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::stage_all_changes",
          "line": 306
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_staged_files",
          "line": 131
        }
      ],
      "./src/commands/handlers/cargo.rs:CargoHandler::default:226": [
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::new",
          "line": 16
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::get_default_branch:1127": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_shell_command_with_on_failure_retry:1209": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_response",
          "line": 245
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::execute_step",
          "line": 209
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_calls",
          "line": 92
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::list_sessions:259": [
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/worktree/mod.rs",
          "name": "WorktreeSession::new",
          "line": 144
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::clear_command_log:180": [
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::clear",
          "line": 86
        }
      ],
      "./src/config/command_validator.rs:CommandRegistry::apply_defaults:366": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/git/parsers.rs:tests::test_commit_id:374": [
        {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        }
      ],
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_null:1466": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        }
      ],
      "./src/config/dynamic_registry.rs:tests::test_apply_definition_defaults_mixed_options:988": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        }
      ],
      "./src/worktree/tests.rs:test_load_state_from_file:410": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::load_state_from_file",
          "line": 61
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::display_success:136": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::success",
          "line": 205
        }
      ],
      "./src/cook/git_ops.rs:check_git_status:43": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::check_git_status",
          "line": 124
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::default:273": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        }
      ],
      "./src/init/mod.rs:tests::test_is_git_repository:314": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        }
      ],
      "./src/commands/result.rs:CommandResult::from_output:60": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/git/parsers.rs:parse_status_output:8": [
        {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_status_line_entry",
          "line": 22
        }
      ],
      "./src/cook/coordinators/session_tests.rs:tests::test_error_propagation:246": [
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::failing",
          "line": 42
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::process_glob_pattern:971": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::extract_input_from_path",
          "line": 1005
        }
      ],
      "./src/cook/retry.rs:should_retry_output:84": [
        {
          "file": "./src/cook/retry.rs",
          "name": "is_transient_error",
          "line": 125
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        }
      ],
      "./src/cook/coordinators/execution.rs:DefaultExecutionCoordinator::execute_with_retry:159": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_command",
          "line": 93
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::create_worktree:318": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        }
      ],
      "./src/cook/session/adapter.rs:adapter_tests::test_complete_session_lifecycle:416": [
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::complete_session",
          "line": 218
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::update_session",
          "line": 104
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::start_session",
          "line": 83
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::new",
          "line": 27
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_argument_type:171": [
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/config/metadata_parser.rs:MetadataParser::extract_section:137": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/cook/interaction/prompts.rs:tests::test_mock_prompter_choice:214": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "MockPrompter::prompt_choice",
          "line": 167
        },
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "MockPrompter::new",
          "line": 136
        }
      ],
      "./src/cook/execution/mapreduce_tests.rs:test_interpolation_with_arrays:393": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        }
      ],
      "./src/cook/orchestrator.rs:tests::test_variable_resolution_logic:2014": [
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::resolve",
          "line": 56
        }
      ],
      "./src/cook/mod.rs:cook_tests::test_load_debtmap_mapreduce_workflow:516": [
        {
          "file": "./src/cook/mod.rs",
          "name": "load_playbook_with_mapreduce",
          "line": 225
        }
      ],
      "./src/cook/coordinators/session_tests.rs:tests::test_track_iteration:79": [
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::track_iteration",
          "line": 79
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        }
      ],
      "./src/testing/mod.rs:tests::test_context_creation:297": [
        {
          "file": "./src/testing/mod.rs",
          "name": "TestContext::new",
          "line": 34
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::list_worktrees:349": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_worktree_list",
          "line": 172
        }
      ],
      "./src/cook/git_ops.rs:mock_tests::test_stage_all_changes_with_mock:430": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::stage_all_changes_in_dir",
          "line": 112
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        }
      ],
      "./src/abstractions/claude.rs:tests::test_mock_claude_error_response:746": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_error_response",
          "line": 592
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::code_review",
          "line": 646
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        }
      ],
      "./src/cook/git_ops.rs:tests::create_commit_in_dir:118": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::git_in_dir",
          "line": 84
        }
      ],
      "./src/cook/signal_handler.rs:tests::test_termination_interrupt:154": [
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "update_interrupted_state",
          "line": 48
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_session_state",
          "line": 87
        },
        {
          "file": "./src/cook/signal_handler.rs",
          "name": "tests::create_test_worktree_manager",
          "line": 69
        }
      ],
      "./src/config/metadata_parser.rs:tests::test_parse_sections:390": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::new",
          "line": 19
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_command_file",
          "line": 32
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::create_test_file",
          "line": 341
        }
      ],
      "./src/config/loader.rs:tests::test_load_with_default_path:215": [
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        },
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::load_with_explicit_path",
          "line": 70
        }
      ],
      "./src/subprocess/adapter.rs:create_output:67": [
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "create_exit_status",
          "line": 83
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::switch_branch:215": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        }
      ],
      "./src/commands/result.rs:tests::test_error_result:183": [
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        }
      ],
      "./src/worktree/manager.rs:tests::test_claude_merge_command_construction:853": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_test_command:1020": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DirGuard::drop",
          "line": 2482
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_command",
          "line": 842
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_claude_command",
          "line": 822
        }
      ],
      "./src/cook/coordinators/workflow.rs:tests::test_normalize_command_string_without_slash:408": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::normalize_command_string",
          "line": 92
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_against_definition:103": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_strict",
          "line": 118
        }
      ],
      "./src/config/command_validator.rs:CommandRegistry::default:64": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::new",
          "line": 70
        }
      ],
      "./src/testing/mocks/fs.rs:tests::test_mock_fs_project_structure:273": [
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_project_structure",
          "line": 171
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::read_file",
          "line": 56
        }
      ],
      "./src/commands/registry.rs:CommandRegistry::default:123": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        }
      ],
      "./src/cook/session/adapter.rs:SessionManagerAdapter::complete_session:218": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_handle_test_mode_execution_success:870": [
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::handle_test_mode_execution",
          "line": 131
        }
      ],
      "./src/cook/interaction/mod.rs:MockUserInteraction::default:466": [
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::new",
          "line": 188
        }
      ],
      "./src/simple_state/state.rs:StateManager::get_history:141": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationEngine::parse_variable_expression:121": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_path",
          "line": 137
        }
      ],
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_integer:1438": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::iteration_start:140": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::iteration_start",
          "line": 218
        }
      ],
      "./src/cook/coordinators/execution_tests.rs:tests::test_check_command_available:180": [
        {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::check_command_available",
          "line": 188
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::new",
          "line": 78
        }
      ],
      "./src/cook/session/tracker.rs:SessionTrackerImpl::new:17": [
        {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::new",
          "line": 56
        }
      ],
      "./src/cook/interaction/display.rs:tests::test_simple_spinner_handle_fail:560": [
        {
          "file": "./src/cook/session/state.rs",
          "name": "SessionState::fail",
          "line": 82
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::start_spinner",
          "line": 211
        }
      ],
      "./src/abstractions/claude.rs:tests::test_add_success_response:783": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_success_response",
          "line": 582
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::execute_command",
          "line": 615
        }
      ],
      "./src/testing/mocks/subprocess.rs:MockSubprocessManager::get_call_history:124": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/execution/interpolation.rs:tests::test_nested_property_access:387": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_run_analysis_with_coverage:272": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::run_analysis",
          "line": 33
        }
      ],
      "./src/config/mod.rs:tests::test_mixed_workflow_config:217": [
        {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        }
      ],
      "./src/cook/interaction/display.rs:MockProgressDisplay::get_messages:349": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/init/templates.rs:tests::test_get_all_templates_success:67": [
        {
          "file": "./src/init/templates.rs",
          "name": "get_all_templates",
          "line": 17
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_is_focus_tracking_test:950": [
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor_with_config",
          "line": 513
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurationBuilder::track_focus",
          "line": 113
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::process_workflow_input:1020": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_command",
          "line": 1096
        }
      ],
      "./src/session/persistence.rs:PersistedSession::last_iteration:52": [
        {
          "file": "./src/session/persistence.rs",
          "name": "PersistedSession::latest_checkpoint",
          "line": 38
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::get_modified_files:840": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        }
      ],
      "./src/worktree/tests.rs:test_list_interrupted_sessions_none_interrupted:287": [
        {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_interrupted_sessions",
          "line": 640
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::execute_workflow:242": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_mapreduce_workflow",
          "line": 1065
        },
        {
          "file": "./src/config/command.rs",
          "name": "WorkflowCommand::to_command",
          "line": 344
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_structured_workflow",
          "line": 507
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow_with_args",
          "line": 878
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "apply_command_defaults",
          "line": 411
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::get_scenario:185": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::new:102": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::prune_worktrees:361": [
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::stage_all:450": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        }
      ],
      "./src/config/command_validator.rs:tests::test_apply_defaults:461": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::apply_defaults",
          "line": 366
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::get_current_branch:381": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/testing/mocks/claude.rs:MockClaudeClientBuilder::default:19": [
        {
          "file": "./src/testing/mocks/claude.rs",
          "name": "MockClaudeClientBuilder::new",
          "line": 25
        }
      ],
      "./src/cook/session/adapter.rs:tests::test_start_session:328": [
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::new",
          "line": 27
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::start_session",
          "line": 83
        }
      ],
      "./src/config/mod.rs:tests::test_get_claude_api_key_from_env:441": [
        {
          "file": "./src/config/mod.rs",
          "name": "Config::get_claude_api_key",
          "line": 133
        },
        {
          "file": "./src/config/mod.rs",
          "name": "Config::merge_env_vars",
          "line": 111
        }
      ],
      "./src/cook/coordinators/environment.rs:DefaultEnvironmentCoordinator::verify_git_repository:79": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "is_git_repo",
          "line": 71
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::refresh:44": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::create_minimal_definition",
          "line": 81
        },
        {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::scan_commands",
          "line": 34
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_command_file",
          "line": 32
        }
      ],
      "./src/config/loader.rs:tests::test_concurrent_access:336": [
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        }
      ],
      "./src/config/command_validator.rs:tests::test_validate_option_types:473": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/abstractions/git.rs:tests::test_mock_git_error:382": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_error_response",
          "line": 260
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::get_last_commit_message",
          "line": 194
        }
      ],
      "./src/cook/session/migration.rs:example_migration:34": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        {
          "file": "./src/cook/session/migration.rs",
          "name": "create_full_featured_manager",
          "line": 14
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        },
        {
          "file": "./src/session/config.rs",
          "name": "SessionOptions::from_flags",
          "line": 63
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::new:51": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenario::default",
          "line": 279
        }
      ],
      "./src/worktree/test_state.rs:test_state_updates:71": [
        {
          "file": "./src/worktree/test_state.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        }
      ],
      "./src/config/mod.rs:Config::merge_env_vars:111": [
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        }
      ],
      "./src/worktree/tests.rs:test_list_interrupted_sessions_all_interrupted:247": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_interrupted_sessions",
          "line": 640
        }
      ],
      "./src/config/mod.rs:tests::test_config_new_creates_defaults:397": [
        {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::get_diff:187": [
        {
          "file": "./src/git/parsers.rs",
          "name": "parse_diff_output",
          "line": 132
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        }
      ],
      "./src/config/command_parser.rs:tests::test_parse_command_with_args:130": [
        {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        }
      ],
      "./src/cook/tests.rs:retry_tests::test_error_formatting_edge_cases:498": [
        {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_should_continue_iteration:502": [
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::create_session_state",
          "line": 68
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperations::get_commits:135": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/testing/mocks/config.rs:MockConfigLoader::load_with_explicit_path:70": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute:1388": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute",
          "line": 1388
        }
      ],
      "./src/session/storage.rs:InMemoryStorage::load:134": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::extract_workflow_step_command:80": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::get_current_branch:144": [
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_command:78": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_against_definition",
          "line": 103
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "validate_command",
          "line": 406
        }
      ],
      "./src/abstractions/claude.rs:MockClaudeClient::default:608": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        }
      ],
      "./src/init/mod.rs:select_templates:107": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/init/templates.rs",
          "name": "get_all_templates",
          "line": 17
        },
        {
          "file": "./src/init/templates.rs",
          "name": "get_templates_by_names",
          "line": 52
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_determine_command_type_multiple_error:707": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        }
      ],
      "./src/testing/mod.rs:MockGitBuilder::with_error:142": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_error_response",
          "line": 260
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::save_session_state:184": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/retry.rs:tests::test_execute_with_retry_max_attempts_reached:403": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        }
      ],
      "./src/cook/execution/data_pipeline.rs:tests::test_filter_comparison:933": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "FilterExpression::parse",
          "line": 452
        }
      ],
      "./src/abstractions/claude.rs:RealClaudeClient::implement_spec:492": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        }
      ],
      "./src/config/command.rs:tests::debug_workflow_parsing_error:837": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::debug_command_sequence",
          "line": 847
        }
      ],
      "./src/subprocess/git.rs:GitRunnerImpl::current_branch:184": [
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        }
      ],
      "./src/config/command_validator.rs:CommandRegistry::get:222": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/cook/coordinators/session_tests.rs:tests::test_get_session_info:151": [
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::update_status",
          "line": 73
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::get_session_info",
          "line": 101
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::run:148": [
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::check_prerequisites",
          "line": 196
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::cleanup",
          "line": 440
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::execute_workflow",
          "line": 242
        },
        {
          "file": "./src/cook/orchestrator.rs",
          "name": "DefaultCookOrchestrator::setup_environment",
          "line": 216
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::execute_handler_command:1367": [
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::is_success",
          "line": 84
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::add_env_var",
          "line": 90
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        }
      ],
      "./src/cook/execution/data_pipeline.rs:tests::test_sorter_multiple_fields:987": [
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::parse",
          "line": 754
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::sort",
          "line": 791
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_execute_step_with_env_interpolation:1163": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "TestCoordinator::execute_step",
          "line": 209
        }
      ],
      "./src/cook/tests.rs:cook_tests::test_git_operation_failures:64": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_error_response",
          "line": 260
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::create_commit",
          "line": 213
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        }
      ],
      "./src/testing/mocks/fs.rs:tests::test_mock_fs_basic_operations:216": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_directory",
          "line": 41
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::new",
          "line": 23
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::read_file",
          "line": 56
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::add_file",
          "line": 36
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::remove_worktree:494": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::get_state:213": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/session/config.rs:tests::test_session_options:90": [
        {
          "file": "./src/session/config.rs",
          "name": "SessionOptions::from_flags",
          "line": 63
        }
      ],
      "./src/cook/execution/data_pipeline.rs:DataPipeline::extract_field_value:154": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::list_interrupted_sessions:640": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::filter_sessions_by_status",
          "line": 48
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::collect_all_states",
          "line": 72
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::get_last_commit_message:292": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::git_command",
          "line": 279
        }
      ],
      "./src/cook/execution/interpolation.rs:tests::test_array_indexing:408": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::new",
          "line": 219
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::set",
          "line": 232
        }
      ],
      "./src/cook/execution/runner.rs:RealCommandRunner::run_with_context:69": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::env",
          "line": 42
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::stdin",
          "line": 71
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::timeout",
          "line": 66
        }
      ],
      "./src/cook/coordinators/environment.rs:DefaultEnvironmentCoordinator::setup_worktree:103": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/simple_state/state.rs:StateManager::record_session:74": [
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::save",
          "line": 50
        }
      ],
      "./src/testing/helpers/assertions.rs:assert_files_equal:89": [
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_exists",
          "line": 45
        }
      ],
      "./src/cook/execution/data_pipeline.rs:Sorter::compare_items:796": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "Sorter::compare_values",
          "line": 817
        }
      ],
      "./src/cook/coordinators/workflow_tests.rs:MockUserInteraction::prompt_yes_no:42": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/config/metadata_parser.rs:tests::test_parse_frontmatter:351": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::parse_command_file",
          "line": 32
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::new",
          "line": 19
        },
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "tests::create_test_file",
          "line": 341
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::check_prerequisites:196": [
        {
          "file": "./src/cook/retry.rs",
          "name": "check_claude_cli",
          "line": 151
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "is_git_repo",
          "line": 71
        }
      ],
      "./src/config/mod.rs:tests::test_get_claude_api_key_config_precedence_over_env:462": [
        {
          "file": "./src/config/mod.rs",
          "name": "Config::merge_env_vars",
          "line": 111
        },
        {
          "file": "./src/config/mod.rs",
          "name": "Config::get_claude_api_key",
          "line": 133
        }
      ],
      "./src/abstractions/claude.rs:RealClaudeClient::lint:527": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/abstractions/claude.rs",
          "name": "RealClaudeClient::execute_command",
          "line": 344
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::step_start:148": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::step_start",
          "line": 265
        }
      ],
      "./src/session/manager.rs:tests::test_concurrent_sessions:393": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::list_active_sessions",
          "line": 243
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        },
        {
          "file": "./src/session/config.rs",
          "name": "SessionConfig::default",
          "line": 18
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::create_session",
          "line": 171
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        }
      ],
      "./src/subprocess/git.rs:git_error_tests::test_git_parse_errors:270": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::new",
          "line": 29
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::log",
          "line": 202
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_success",
          "line": 168
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::new",
          "line": 45
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        }
      ],
      "./src/session/storage.rs:InMemoryStorage::delete:142": [
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::remove",
          "line": 77
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_get_step_display_name_unnamed:845": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        }
      ],
      "./src/simple_state/tests.rs:test::test_cache_expiration:86": [
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::set",
          "line": 63
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::with_config",
          "line": 27
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/cook/coordinators/session_tests.rs:tests::test_update_status:48": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::update_status",
          "line": 73
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        }
      ],
      "./src/config/dynamic_registry.rs:tests::test_validate_json_value_type_enum:560": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/coordinators/execution_tests.rs:tests::test_execute_with_retry:154": [
        {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::new",
          "line": 78
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/cook/coordinators/execution.rs",
          "name": "DefaultExecutionCoordinator::execute_with_retry",
          "line": 159
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_determine_command_type_test:652": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        }
      ],
      "./src/cook/execution/mapreduce.rs:MapReduceExecutor::merge_parent_to_main:1064": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::get_default_branch",
          "line": 1127
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystem::get_all_files:138": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/interaction/display.rs:ProgressDisplayImpl::new:88": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::supports_unicode",
          "line": 105
        }
      ],
      "./src/cook/execution/interpolation.rs:tests::test_literal_segments:499": [
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::parse_template",
          "line": 87
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        }
      ],
      "./src/cook/coordinators/workflow_tests.rs:tests::test_execute_workflow_with_variables:337": [
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        },
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        }
      ],
      "./src/abstractions/git.rs:MockGitOperations::get_called_commands:266": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::restore_session:292": [
        {
          "file": "./src/session/state.rs",
          "name": "SessionProgress::new",
          "line": 332
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/session/storage.rs",
          "name": "InMemoryStorage::load",
          "line": 134
        }
      ],
      "./src/cook/interaction/mod.rs:MockUserInteraction::get_messages:204": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::check_value_type:256": [
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        }
      ],
      "./src/simple_state/tests.rs:test::test_corrupted_cache_entry:305": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/simple_state/cache.rs",
          "name": "CacheManager::with_config",
          "line": 27
        }
      ],
      "./src/cook/session/migration.rs:create_full_featured_manager:14": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        },
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::new",
          "line": 32
        },
        {
          "file": "./src/session/events.rs",
          "name": "LoggingObserver::new",
          "line": 106
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::display_error:124": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::error",
          "line": 194
        }
      ],
      "./src/config/loader.rs:tests::test_load_from_path_nonexistent_file:320": [
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_from_path",
          "line": 54
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        }
      ],
      "./src/testing/mod.rs:MockGitBuilder::with_success:136": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        }
      ],
      "./src/cook/retry.rs:additional_tests::test_execute_with_retry_network_timeout:502": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        }
      ],
      "./src/cook/retry.rs:tests::test_error_formatting_no_exit_code:241": [
        {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        }
      ],
      "./src/cook/git_ops.rs:tests::create_test_commit:209": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        }
      ],
      "./src/subprocess/claude.rs:ClaudeRunnerImpl::check_availability:32": [
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        }
      ],
      "./src/session/state.rs:SessionProgress::record_command_timing:401": [
        {
          "file": "./src/session/state.rs",
          "name": "IterationTiming::add_command_timing",
          "line": 242
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::is_branch_merged:669": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        }
      ],
      "./src/session/tests.rs:test_session_persistence_and_recovery:105": [
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::save_checkpoint",
          "line": 261
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::complete_session",
          "line": 229
        },
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::new",
          "line": 32
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::restore_session",
          "line": 292
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::start_session",
          "line": 185
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_state",
          "line": 213
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::new",
          "line": 63
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::create_session",
          "line": 171
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::get_progress",
          "line": 221
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::check_for_changes:94": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::check_git_status",
          "line": 124
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/testing/mocks/subprocess.rs:MockSubprocessManager::builder:93": [
        {
          "file": "./src/testing/mocks/subprocess.rs",
          "name": "MockSubprocessManagerBuilder::new",
          "line": 20
        }
      ],
      "./src/testing/fixtures/mod.rs:Fixtures::complex_project_fs:73": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_directory",
          "line": 166
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::new",
          "line": 155
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_project_structure",
          "line": 171
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystemBuilder::with_file",
          "line": 161
        }
      ],
      "./src/worktree/manager.rs:tests::test_update_checkpoint_success:1046": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_session_state",
          "line": 245
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_checkpoint",
          "line": 603
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        }
      ],
      "./src/testing/mod.rs:TestFixtures::unavailable_claude:245": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        }
      ],
      "./src/config/dynamic_registry.rs:tests::test_permissive_validation:389": [
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        }
      ],
      "./src/cook/session/adapter.rs:adapter_tests::test_save_and_load_state:448": [
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::start_session",
          "line": 83
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::load_state",
          "line": 305
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::new",
          "line": 27
        },
        {
          "file": "./src/cook/session/adapter.rs",
          "name": "SessionManagerAdapter::save_state",
          "line": 290
        }
      ],
      "./src/worktree/manager.rs:WorktreeManager::cleanup_all_sessions:572": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::cleanup_session",
          "line": 508
        }
      ],
      "./src/cook/coordinators/workflow_tests.rs:tests::test_execute_workflow_structured_commands:373": [
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/testing/mocks/workflow.rs",
          "name": "MockWorkflowExecutor::new",
          "line": 28
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::new",
          "line": 59
        },
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::execute_workflow",
          "line": 145
        }
      ],
      "./src/testing/mocks/session.rs:MockSessionManager::failing:42": [
        {
          "file": "./src/testing/mocks/session.rs",
          "name": "MockSessionManager::new",
          "line": 28
        }
      ],
      "./src/init/mod.rs:is_git_repository:76": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::suppress_stderr",
          "line": 77
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        }
      ],
      "./src/config/mod.rs:Config::get_spec_dir:148": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/mod.rs:cook:35": [
        {
          "file": "./src/cook/mod.rs",
          "name": "load_workflow_with_mapreduce",
          "line": 204
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        },
        {
          "file": "./src/cook/mod.rs",
          "name": "create_orchestrator",
          "line": 123
        },
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::load_with_explicit_path",
          "line": 70
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/testing/mocks/config.rs",
          "name": "MockConfigLoader::get_config",
          "line": 81
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::is_dir",
          "line": 100
        }
      ],
      "./src/abstractions/claude.rs:MockClaudeClient::add_error_response:592": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::add_response",
          "line": 577
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::create_worktree:487": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        }
      ],
      "./src/cook/git_ops.rs:tests::test_create_commit_success:300": [
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_commit_in_dir",
          "line": 118
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_temp_git_repo",
          "line": 182
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::stage_all_changes_in_dir",
          "line": 112
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::get_last_commit_message_in_dir",
          "line": 106
        },
        {
          "file": "./src/cook/git_ops.rs",
          "name": "tests::create_test_commit",
          "line": 209
        }
      ],
      "./src/subprocess/tests.rs:subprocess_tests::test_git_runner:124": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_success",
          "line": 168
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::mock",
          "line": 139
        },
        {
          "file": "./src/subprocess/git.rs",
          "name": "GitRunnerImpl::status",
          "line": 52
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::git",
          "line": 166
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        }
      ],
      "./src/config/dynamic_registry.rs:tests::test_apply_definition_defaults_options_already_set:936": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::new",
          "line": 26
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_definition_defaults",
          "line": 274
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::execute_step:602": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_command",
          "line": 842
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::get_step_display_name",
          "line": 336
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_handler_command",
          "line": 765
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::determine_command_type",
          "line": 271
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_with_retry",
          "line": 891
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::handle_test_mode_execution",
          "line": 1152
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_test_command",
          "line": 1020
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::interpolate",
          "line": 43
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_step",
          "line": 1397
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_claude_command",
          "line": 822
        }
      ],
      "./src/commands/handlers/cargo.rs:tests::test_cargo_test_with_features:287": [
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_executor",
          "line": 60
        },
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::new",
          "line": 112
        },
        {
          "file": "./src/subprocess/adapter.rs",
          "name": "MockSubprocessExecutor::expect_execute",
          "line": 118
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::new",
          "line": 16
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::execute",
          "line": 62
        }
      ],
      "./src/cook/interaction/prompts.rs:MockPrompter::prompt_text:154": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/git/scenario.rs:tests::test_scenario_mock_dirty_repo:542": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::new",
          "line": 51
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::with_dirty_repo",
          "line": 86
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_status",
          "line": 374
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::is_clean",
          "line": 420
        }
      ],
      "./src/worktree/test_state.rs:test_merge_updates_state:155": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "setup_test_repo",
          "line": 7
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::update_session_state",
          "line": 222
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/worktree/test_state.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        }
      ],
      "./src/cook/interaction/mod.rs:tests::test_spinner_handle:404": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "SimpleSpinnerHandle::update_message",
          "line": 311
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockUserInteraction::get_messages",
          "line": 368
        },
        {
          "file": "./src/cook/coordinators/workflow_tests.rs",
          "name": "MockUserInteraction::new",
          "line": 27
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/cook/interaction/mod.rs",
          "name": "MockUserInteraction::start_spinner",
          "line": 263
        }
      ],
      "./src/cook/retry.rs:tests::test_error_formatting_with_stdout_only:249": [
        {
          "file": "./src/cook/retry.rs",
          "name": "format_subprocess_error",
          "line": 168
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_option_value:213": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_json_value_type",
          "line": 222
        }
      ],
      "./src/cook/coordinators/session_tests.rs:tests::test_complete_session_success:105": [
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "MockSessionManager::new",
          "line": 81
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::start_session",
          "line": 61
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::complete_session",
          "line": 86
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::track_iteration",
          "line": 79
        },
        {
          "file": "./src/cook/coordinators/session.rs",
          "name": "DefaultSessionCoordinator::new",
          "line": 50
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::new",
          "line": 18
        }
      ],
      "./src/config/command_validator.rs:validate_command:406": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_command",
          "line": 78
        }
      ],
      "./src/commands/mod.rs:CommandHandlerBuilder::new:58": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::new",
          "line": 15
        }
      ],
      "./src/config/mod.rs:tests::test_get_global_mmm_dir_path_structure:684": [
        {
          "file": "./src/config/mod.rs",
          "name": "get_global_mmm_dir",
          "line": 27
        }
      ],
      "./src/git/mod.rs:tests::test_commit_success:501": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::expect_command",
          "line": 36
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::with_args",
          "line": 141
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::finish",
          "line": 178
        },
        {
          "file": "./src/git/mod.rs",
          "name": "tests::create_test_runner",
          "line": 382
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::get_calls",
          "line": 92
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockCommandConfig::returns_stdout",
          "line": 149
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::commit",
          "line": 254
        }
      ],
      "./src/subprocess/git.rs:GitRunnerImpl::create_worktree:142": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        }
      ],
      "./src/testing/helpers/assertions.rs:assert_file_contains:63": [
        {
          "file": "./src/testing/helpers/assertions.rs",
          "name": "assert_file_exists",
          "line": 45
        }
      ],
      "./src/config/command_validator.rs:CommandRegistry::validate_command:226": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_argument_type",
          "line": 283
        },
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::is_variable",
          "line": 50
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::validate_option_value",
          "line": 318
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::get_current_branch:208": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::with_verbosity:98": [
        {
          "file": "./src/cook/interaction/prompts.rs",
          "name": "UserPrompterImpl::new",
          "line": 30
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        }
      ],
      "./src/git/parsers.rs:parse_diff_output:132": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::new",
          "line": 101
        },
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        }
      ],
      "./src/main.rs:handle_list_command:253": [
        {
          "file": "./src/main.rs",
          "name": "display_worktree_session",
          "line": 206
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::list_sessions",
          "line": 259
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        }
      ],
      "./src/config/loader.rs:ConfigLoader::load_with_explicit_path:31": [
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_from_path",
          "line": 54
        },
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::exists",
          "line": 88
        }
      ],
      "./src/cook/orchestrator.rs:DefaultCookOrchestrator::prepare_environment_variables:1206": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/config/loader.rs:tests::test_load_from_path_invalid_yaml:307": [
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::new",
          "line": 19
        },
        {
          "file": "./src/config/loader.rs",
          "name": "ConfigLoader::load_from_path",
          "line": 54
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::is_clean:420": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_status",
          "line": 374
        },
        {
          "file": "./src/git/types.rs",
          "name": "GitStatus::is_clean",
          "line": 45
        }
      ],
      "./src/cook/interaction/display.rs:tests::test_mock_display:479": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::error",
          "line": 369
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::success",
          "line": 383
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::info",
          "line": 355
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::new",
          "line": 342
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::progress",
          "line": 376
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::warning",
          "line": 362
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "MockProgressDisplay::get_messages",
          "line": 349
        }
      ],
      "./src/cook/interaction/mod.rs:DefaultUserInteraction::debug_output:160": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::debug_output",
          "line": 284
        }
      ],
      "./src/cook/execution/claude.rs:ClaudeExecutorImpl::execute:169": [
        {
          "file": "./src/cook/execution/claude.rs",
          "name": "ClaudeExecutorImpl::execute_claude_command",
          "line": 55
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::test_extract_spec_from_git_no_spec:305": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        },
        {
          "file": "./src/abstractions/git.rs",
          "name": "MockGitOperations::add_success_response",
          "line": 250
        },
        {
          "file": "./src/cook/mod_tests.rs",
          "name": "core_tests::extract_spec_from_git",
          "line": 39
        }
      ],
      "./src/testing/mocks/fs.rs:MockFileSystemBuilder::with_write_error:201": [
        {
          "file": "./src/testing/mocks/fs.rs",
          "name": "MockFileSystem::set_write_error",
          "line": 51
        }
      ],
      "./src/cook/execution/data_pipeline.rs:DataPipeline::apply_field_mapping:141": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/cook/execution/data_pipeline.rs",
          "name": "DataPipeline::extract_field_value",
          "line": 154
        }
      ],
      "./src/abstractions/claude.rs:MockClaudeClient::get_called_commands:602": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/worktree/manager.rs:tests::test_get_cleanup_config_from_env:951": [
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::get_cleanup_config",
          "line": 828
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationContext::set_path:237": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/testing/helpers/mod.rs:run_command:81": [
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::git_command:88": [
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::stage_all_changes:131": [
        {
          "file": "./src/abstractions/git.rs",
          "name": "RealGitOperations::git_command",
          "line": 88
        }
      ],
      "./src/testing/helpers/mod.rs:create_rust_project:44": [
        {
          "file": "./src/testing/helpers/mod.rs",
          "name": "create_file",
          "line": 34
        }
      ],
      "./src/cook/session/adapter.rs:SessionManagerAdapter::start_session:83": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/workflow/executor_tests.rs:disabled_tests::test_execute_shell_command_success:1036": [
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::execute_shell_command",
          "line": 842
        },
        {
          "file": "./src/cook/workflow/executor_tests.rs",
          "name": "disabled_tests::create_test_executor",
          "line": 479
        }
      ],
      "./src/config/command_parser.rs:tests::test_parse_command_with_variable:152": [
        {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        }
      ],
      "./src/testing/mocks/git.rs:MockGitOperations::builder:127": [
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperationsBuilder::new",
          "line": 47
        }
      ],
      "./src/testing/mod.rs:TestContext::with_config:65": [
        {
          "file": "./src/abstractions/claude.rs",
          "name": "MockClaudeClient::new",
          "line": 568
        },
        {
          "file": "./src/testing/mocks/git.rs",
          "name": "MockGitOperations::new",
          "line": 116
        }
      ],
      "./src/config/mod.rs:tests::test_merge_env_vars_editor_fallback:601": [
        {
          "file": "./src/config/mod.rs",
          "name": "Config::merge_env_vars",
          "line": 111
        },
        {
          "file": "./src/config/mod.rs",
          "name": "Config::new",
          "line": 103
        }
      ],
      "./src/git/types.rs:GitStatus::default:83": [
        {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        }
      ],
      "./src/init/mod.rs:validate_project_structure:245": [
        {
          "file": "./src/init/mod.rs",
          "name": "is_git_repository",
          "line": 76
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/init/mod.rs",
          "name": "initialize_directories",
          "line": 272
        }
      ],
      "./src/cook/mod.rs:cook_tests::test_run_improvement_loop:666": [
        {
          "file": "./src/cook/mod.rs",
          "name": "run_improvement_loop",
          "line": 386
        }
      ],
      "./src/cook/coordinators/workflow.rs:DefaultWorkflowCoordinator::extract_command_string:69": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_workflow_step_command",
          "line": 80
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/cook/mod_tests.rs:core_tests::git_command_exists:48": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        }
      ],
      "./src/config/command.rs:tests::test_workflow_config_with_new_syntax:804": [
        {
          "file": "./src/config/command.rs",
          "name": "tests::verify_lint_command",
          "line": 890
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::verify_implement_spec_command",
          "line": 878
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::parse_test_workflow_config",
          "line": 813
        },
        {
          "file": "./src/config/command.rs",
          "name": "tests::verify_coverage_command",
          "line": 865
        }
      ],
      "./src/session/manager.rs:InMemorySessionManager::complete_session:229": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/session/manager.rs",
          "name": "InMemorySessionManager::record_event",
          "line": 197
        }
      ],
      "./src/abstractions/git.rs:RealGitOperations::git_command_in_dir:162": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatus::code",
          "line": 42
        }
      ],
      "./src/cook/retry.rs:tests::test_execute_with_retry_exponential_backoff:325": [
        {
          "file": "./src/cook/retry.rs",
          "name": "execute_with_retry",
          "line": 30
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        }
      ],
      "./src/git/mod.rs:GitCommandRunner::list_files:173": [
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/git/mod.rs",
          "name": "GitCommandRunner::run_git_command",
          "line": 106
        }
      ],
      "./src/testing/mocks/worktree.rs:MockWorktreeManagerBuilder::default:16": [
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManagerBuilder::new",
          "line": 22
        }
      ],
      "./src/commands/handlers/cargo.rs:CargoHandler::execute:62": [
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::error",
          "line": 47
        },
        {
          "file": "./src/session/mod.rs",
          "name": "SessionId::as_str",
          "line": 42
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_bool",
          "line": 36
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::apply_defaults",
          "line": 94
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::full_env",
          "line": 131
        },
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::with_duration",
          "line": 78
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "MapReduceExecutor::execute",
          "line": 318
        },
        {
          "file": "./src/commands/result.rs",
          "name": "CommandResult::success",
          "line": 34
        },
        {
          "file": "./src/commands/attributes.rs",
          "name": "AttributeValue::as_string",
          "line": 20
        },
        {
          "file": "./src/commands/handlers/cargo.rs",
          "name": "CargoHandler::schema",
          "line": 27
        }
      ],
      "./src/main.rs:run_worktree_command:395": [
        {
          "file": "./src/main.rs",
          "name": "handle_list_command",
          "line": 253
        },
        {
          "file": "./src/main.rs",
          "name": "handle_clean_command",
          "line": 324
        },
        {
          "file": "./src/main.rs",
          "name": "handle_merge_command",
          "line": 269
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        }
      ],
      "./src/cook/coordinators/workflow.rs:tests::test_extract_command_string_simple:286": [
        {
          "file": "./src/cook/coordinators/workflow.rs",
          "name": "DefaultWorkflowCoordinator::extract_command_string",
          "line": 69
        }
      ],
      "./src/testing/config.rs:TestConfigurations::worktree:161": [
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfiguration::builder",
          "line": 44
        },
        {
          "file": "./src/testing/config.rs",
          "name": "TestConfigurations::test_mode",
          "line": 148
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/session/config.rs",
          "name": "ExecutionMode::worktree_name",
          "line": 45
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::is_repository:355": [
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::execute_command",
          "line": 206
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::get_scenario",
          "line": 185
        }
      ],
      "./src/cook/interaction/display.rs:tests::test_spinner_lifecycle:536": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        {
          "file": "./src/subprocess/runner.rs",
          "name": "ExitStatusHelper::success",
          "line": 56
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "SimpleSpinnerHandle::update_message",
          "line": 311
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::start_spinner",
          "line": 211
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationContext::resolve_in_current:273": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::parse",
          "line": 68
        }
      ],
      "./src/config/mod.rs:tests::test_command_string_parsing:244": [
        {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        }
      ],
      "./src/session/storage.rs:FileSessionStorage::save:44": [
        {
          "file": "./src/session/storage.rs",
          "name": "FileSessionStorage::session_path",
          "line": 37
        }
      ],
      "./src/config/command_validator.rs:CommandRegistry::register_built_in_commands:78": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::register",
          "line": 218
        }
      ],
      "./src/config/mod.rs:tests::test_global_config_default:659": [
        {
          "file": "./src/config/mod.rs",
          "name": "GlobalConfig::default",
          "line": 89
        }
      ],
      "./src/session/events.rs:tests::test_timestamped_event:149": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        },
        {
          "file": "./src/session/events.rs",
          "name": "TimestampedEvent::new",
          "line": 75
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::new:26": [
        {
          "file": "./src/config/metadata_parser.rs",
          "name": "MetadataParser::new",
          "line": 19
        },
        {
          "file": "./src/config/command_discovery.rs",
          "name": "CommandDiscovery::new",
          "line": 19
        }
      ],
      "./src/git/types.rs:GitStatus::all_changed_files:70": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/git/scenario.rs:GitScenarioMock::with_non_repository:148": [
        {
          "file": "./src/git/types.rs",
          "name": "GitStatus::new",
          "line": 30
        },
        {
          "file": "./src/git/scenario.rs",
          "name": "GitScenarioMock::set_scenario",
          "line": 60
        },
        {
          "file": "./src/git/types.rs",
          "name": "CommitId::new",
          "line": 181
        }
      ],
      "./src/testing/mocks/worktree.rs:MockWorktreeManager::cleanup_all:138": [
        {
          "file": "./src/commands/registry.rs",
          "name": "CommandRegistry::clone",
          "line": 129
        }
      ],
      "./src/config/command_parser.rs:tests::test_parse_command_with_slash:124": [
        {
          "file": "./src/config/command_parser.rs",
          "name": "parse_command_string",
          "line": 14
        }
      ],
      "./src/cook/execution/mapreduce_tests.rs:test_agent_context_to_interpolation_context:108": [
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::to_interpolation_context",
          "line": 251
        },
        {
          "file": "./src/cook/execution/mapreduce.rs",
          "name": "AgentContext::new",
          "line": 221
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationEngine::new",
          "line": 31
        }
      ],
      "./src/simple_state/tests.rs:test::test_session_recording:38": [
        {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::new",
          "line": 40
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::record_session",
          "line": 74
        },
        {
          "file": "./src/simple_state/types.rs",
          "name": "SessionRecord::complete",
          "line": 51
        },
        {
          "file": "./src/simple_state/state.rs",
          "name": "StateManager::with_root",
          "line": 31
        }
      ],
      "./src/config/dynamic_registry.rs:DynamicCommandRegistry::validate_strict:118": [
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_argument_type",
          "line": 171
        },
        {
          "file": "./src/config/dynamic_registry.rs",
          "name": "DynamicCommandRegistry::validate_option_value",
          "line": 213
        },
        {
          "file": "./src/config/command.rs",
          "name": "CommandArg::is_variable",
          "line": 50
        }
      ],
      "./src/init/mod.rs:tests::test_handle_existing_commands_with_conflicts:530": [
        {
          "file": "./src/init/mod.rs",
          "name": "handle_existing_commands",
          "line": 126
        }
      ],
      "./src/commands/handlers/claude.rs:tests::test_claude_handler_dry_run:268": [
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::with_dry_run",
          "line": 78
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::new",
          "line": 38
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::execute",
          "line": 43
        },
        {
          "file": "./src/commands/handlers/claude.rs",
          "name": "ClaudeHandler::new",
          "line": 16
        }
      ],
      "./src/cook/execution/interpolation.rs:InterpolationContext::resolve_path:254": [
        {
          "file": "./src/git/types.rs",
          "name": "GitDiff::is_empty",
          "line": 115
        },
        {
          "file": "./src/commands/context.rs",
          "name": "ExecutionContext::resolve_path",
          "line": 117
        },
        {
          "file": "./src/cook/execution/interpolation.rs",
          "name": "InterpolationContext::resolve_in_current",
          "line": 273
        }
      ],
      "./src/worktree/tests.rs:test_create_session_with_generated_name:55": [
        {
          "file": "./src/testing/mocks/worktree.rs",
          "name": "MockWorktreeManager::cleanup_session",
          "line": 116
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::new",
          "line": 102
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::args",
          "line": 31
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "setup_test_repo",
          "line": 6
        },
        {
          "file": "./src/worktree/manager.rs",
          "name": "WorktreeManager::create_session",
          "line": 150
        },
        {
          "file": "./src/config/command.rs",
          "name": "Command::new",
          "line": 405
        },
        {
          "file": "./src/worktree/tests.rs",
          "name": "cleanup_worktree_dir",
          "line": 30
        }
      ],
      "./src/cook/interaction/display.rs:tests::test_progress_display_error:529": [
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::new",
          "line": 88
        },
        {
          "file": "./src/cook/interaction/display.rs",
          "name": "ProgressDisplayImpl::error",
          "line": 194
        }
      ],
      "./src/init/mod.rs:tests::test_init_run_already_initialized:634": [
        {
          "file": "./src/subprocess/mock.rs",
          "name": "MockProcessRunner::run",
          "line": 99
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::runner",
          "line": 149
        },
        {
          "file": "./src/init/mod.rs",
          "name": "run",
          "line": 286
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::arg",
          "line": 26
        },
        {
          "file": "./src/subprocess/mod.rs",
          "name": "SubprocessManager::production",
          "line": 119
        },
        {
          "file": "./src/commands/mod.rs",
          "name": "CommandHandlerBuilder::build",
          "line": 71
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::new",
          "line": 12
        },
        {
          "file": "./src/subprocess/builder.rs",
          "name": "ProcessCommandBuilder::current_dir",
          "line": 61
        }
      ],
      "./src/cook/workflow/executor.rs:WorkflowExecutor::with_test_config:219": [
        {
          "file": "./src/session/timing.rs",
          "name": "TimingTracker::new",
          "line": 21
        }
      ],
      "./src/cook/workflow/executor.rs:tests::test_json_to_attribute_value_static_nested_object:1531": [
        {
          "file": "./src/config/command_validator.rs",
          "name": "CommandRegistry::get",
          "line": 222
        },
        {
          "file": "./src/cook/workflow/executor.rs",
          "name": "WorkflowExecutor::json_to_attribute_value_static",
          "line": 241
        }
      ]
    }
  },
  "overall_coverage": 50.834246742175125
}